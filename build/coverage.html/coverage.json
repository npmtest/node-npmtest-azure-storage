{"/home/travis/build/npmtest/node-npmtest-azure-storage/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_azure_storage */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/lib.npmtest_azure_storage.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/lib.npmtest_azure_storage.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":58}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":64}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_azure_storage */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_azure_storage = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_azure_storage = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":57}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":71},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-azure-storage && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_azure_storage */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_azure_storage","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_azure_storage.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_azure_storage.rollup.js'] =","            local.assetsDict['/assets.npmtest_azure_storage.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_azure_storage.__dirname + '/lib.npmtest_azure_storage.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/azure-storage.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/azure-storage.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":1,"15":0,"16":1,"17":1,"18":1,"19":1,"20":0,"21":1,"22":0,"23":1,"24":0,"25":1,"26":1,"27":1,"28":1,"29":0,"30":1,"31":0,"32":1,"33":1,"34":1,"35":1,"36":1,"37":0,"38":1,"39":0,"40":1,"41":1,"42":1,"43":1,"44":0,"45":0,"46":0,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":29,"loc":{"start":{"line":29,"column":48},"end":{"line":29,"column":68}}},"2":{"name":"(anonymous_2)","line":61,"loc":{"start":{"line":61,"column":29},"end":{"line":61,"column":97}}},"3":{"name":"(anonymous_3)","line":73,"loc":{"start":{"line":73,"column":36},"end":{"line":73,"column":65}}},"4":{"name":"(anonymous_4)","line":97,"loc":{"start":{"line":97,"column":28},"end":{"line":97,"column":96}}},"5":{"name":"(anonymous_5)","line":109,"loc":{"start":{"line":109,"column":35},"end":{"line":109,"column":61}}},"6":{"name":"(anonymous_6)","line":120,"loc":{"start":{"line":120,"column":37},"end":{"line":120,"column":53}}},"7":{"name":"(anonymous_7)","line":144,"loc":{"start":{"line":144,"column":28},"end":{"line":144,"column":96}}},"8":{"name":"(anonymous_8)","line":156,"loc":{"start":{"line":156,"column":35},"end":{"line":156,"column":64}}},"9":{"name":"(anonymous_9)","line":181,"loc":{"start":{"line":181,"column":29},"end":{"line":181,"column":97}}},"10":{"name":"(anonymous_10)","line":193,"loc":{"start":{"line":193,"column":36},"end":{"line":193,"column":64}}},"11":{"name":"(anonymous_11)","line":223,"loc":{"start":{"line":223,"column":47},"end":{"line":224,"column":0}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":29}},"2":{"start":{"line":29,"column":0},"end":{"line":36,"column":2}},"3":{"start":{"line":30,"column":2},"end":{"line":30,"column":47}},"4":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"5":{"start":{"line":32,"column":4},"end":{"line":32,"column":57}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":18}},"7":{"start":{"line":42,"column":0},"end":{"line":42,"column":60}},"8":{"start":{"line":44,"column":0},"end":{"line":44,"column":36}},"9":{"start":{"line":45,"column":0},"end":{"line":45,"column":60}},"10":{"start":{"line":46,"column":0},"end":{"line":46,"column":60}},"11":{"start":{"line":47,"column":0},"end":{"line":47,"column":68}},"12":{"start":{"line":61,"column":0},"end":{"line":63,"column":2}},"13":{"start":{"line":62,"column":2},"end":{"line":62,"column":84}},"14":{"start":{"line":73,"column":0},"end":{"line":75,"column":2}},"15":{"start":{"line":74,"column":2},"end":{"line":74,"column":57}},"16":{"start":{"line":81,"column":0},"end":{"line":81,"column":57}},"17":{"start":{"line":83,"column":0},"end":{"line":83,"column":34}},"18":{"start":{"line":84,"column":0},"end":{"line":84,"column":65}},"19":{"start":{"line":97,"column":0},"end":{"line":99,"column":2}},"20":{"start":{"line":98,"column":2},"end":{"line":98,"column":89}},"21":{"start":{"line":109,"column":0},"end":{"line":111,"column":2}},"22":{"start":{"line":110,"column":2},"end":{"line":110,"column":53}},"23":{"start":{"line":120,"column":0},"end":{"line":122,"column":2}},"24":{"start":{"line":121,"column":2},"end":{"line":121,"column":49}},"25":{"start":{"line":128,"column":0},"end":{"line":128,"column":57}},"26":{"start":{"line":130,"column":0},"end":{"line":130,"column":34}},"27":{"start":{"line":131,"column":0},"end":{"line":131,"column":65}},"28":{"start":{"line":144,"column":0},"end":{"line":146,"column":2}},"29":{"start":{"line":145,"column":2},"end":{"line":145,"column":83}},"30":{"start":{"line":156,"column":0},"end":{"line":158,"column":2}},"31":{"start":{"line":157,"column":2},"end":{"line":157,"column":56}},"32":{"start":{"line":164,"column":0},"end":{"line":164,"column":60}},"33":{"start":{"line":166,"column":0},"end":{"line":166,"column":36}},"34":{"start":{"line":167,"column":0},"end":{"line":167,"column":68}},"35":{"start":{"line":168,"column":0},"end":{"line":168,"column":78}},"36":{"start":{"line":181,"column":0},"end":{"line":183,"column":2}},"37":{"start":{"line":182,"column":2},"end":{"line":182,"column":84}},"38":{"start":{"line":193,"column":0},"end":{"line":195,"column":2}},"39":{"start":{"line":194,"column":2},"end":{"line":194,"column":57}},"40":{"start":{"line":203,"column":0},"end":{"line":203,"column":45}},"41":{"start":{"line":204,"column":0},"end":{"line":204,"column":60}},"42":{"start":{"line":205,"column":0},"end":{"line":205,"column":38}},"43":{"start":{"line":223,"column":0},"end":{"line":229,"column":2}},"44":{"start":{"line":225,"column":2},"end":{"line":225,"column":116}},"45":{"start":{"line":226,"column":2},"end":{"line":226,"column":77}},"46":{"start":{"line":228,"column":2},"end":{"line":228,"column":79}},"47":{"start":{"line":356,"column":0},"end":{"line":356,"column":42}},"48":{"start":{"line":357,"column":0},"end":{"line":357,"column":56}},"49":{"start":{"line":358,"column":0},"end":{"line":358,"column":54}},"50":{"start":{"line":360,"column":0},"end":{"line":360,"column":28}},"51":{"start":{"line":361,"column":0},"end":{"line":361,"column":52}},"52":{"start":{"line":362,"column":0},"end":{"line":362,"column":36}},"53":{"start":{"line":363,"column":0},"end":{"line":363,"column":46}},"54":{"start":{"line":364,"column":0},"end":{"line":364,"column":40}},"55":{"start":{"line":365,"column":0},"end":{"line":365,"column":32}},"56":{"start":{"line":368,"column":0},"end":{"line":368,"column":70}},"57":{"start":{"line":369,"column":0},"end":{"line":369,"column":80}},"58":{"start":{"line":370,"column":0},"end":{"line":370,"column":58}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var exports = module.exports;","","/**","* Creates a connection string that can be used to create a service which runs on the storage emulator. The emulator must be downloaded separately.","*","* @param {string}   [proxyUri]                  The proxyUri. By default, http://127.0.0.1","* @return {string}                              A connection string representing the development storage credentials.","* @example","* var azure = require('azure-storage');","* var devStoreCreds = azure.generateDevelopmentStorageCredentials();","* var blobService = azure.createBlobService(devStoreCreds);","*/","exports.generateDevelopmentStorageCredentials = function (proxyUri) {","  var devStore = 'UseDevelopmentStorage=true;';","  if(proxyUri){","    devStore += 'DevelopmentStorageProxyUri=' + proxyUri;","  }","","  return devStore;","};","","/**"," * Table client exports."," * @ignore"," */","var TableService = require('./services/table/tableservice');","","exports.TableService = TableService;","exports.TableQuery = require('./services/table/tablequery');","exports.TableBatch = require('./services/table/tablebatch');","exports.TableUtilities = require('./services/table/tableutilities');","","/**","* Creates a new {@link TableService} object.","* If no storageaccount or storageaccesskey are provided, the AZURE_STORAGE_CONNECTION_STRING and then the AZURE_STORAGE_ACCOUNT and AZURE_STORAGE_ACCESS_KEY ","* environment variables will be used.","*","* @param {string} [storageAccountOrConnectionString]  The storage account or the connection string.","* @param {string} [storageAccessKey]                  The storage access key.","* @param {string|object} [host]                       The host address. To define primary only, pass a string. ","*                                                     Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.","* @return {TableService}                              A new TableService object.","*","*/","exports.createTableService = function (storageAccountOrConnectionString, storageAccessKey, host) {","  return new TableService(storageAccountOrConnectionString, storageAccessKey, host);","};","","/**","* Creates a new {@link TableService} object using the host Uri and the SAS credentials provided.","* ","* @param {string|object} host                         The host address. To define primary only, pass a string. ","*                                                     Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.","* @param {string} sasToken                            The Shared Access Signature token.","* @return {TableService}                              A new TableService object with the SAS credentials.","*/","exports.createTableServiceWithSas = function (hostUri, sasToken) {","  return new TableService(null, null, hostUri, sasToken);","};","","/**"," * Blob client exports."," * @ignore"," */","var BlobService = require('./services/blob/blobservice');","","exports.BlobService = BlobService;","exports.BlobUtilities = require('./services/blob/blobutilities');","","/**","* Creates a new {@link BlobService} object.","* If no storageaccount or storageaccesskey are provided, the AZURE_STORAGE_CONNECTION_STRING and then the AZURE_STORAGE_ACCOUNT and AZURE_STORAGE_ACCESS_KEY ","* environment variables will be used.","*","* @param {string} storageAccountOrConnectionString    The storage account or the connection string.","* @param {string} [storageAccessKey]                  The storage access key.","* @param {string|object} [host]                       The host address. To define primary only, pass a string. ","*                                                     Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.","* @return {BlobService}                               A new BlobService object.","*/","exports.createBlobService = function (storageAccountOrConnectionString, storageAccessKey, host) {","  return new BlobService(storageAccountOrConnectionString, storageAccessKey, host, null);","};","","/**","* Creates a new {@link BlobService} object using the host Uri and the SAS credentials provided.","* ","* @param {string|object} host                         The host address. To define primary only, pass a string. ","*                                                     Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.","* @param {string} sasToken                            The Shared Access Signature token.","* @return {BlobService}                               A new BlobService object with the SAS credentials.","*/","exports.createBlobServiceWithSas = function (host, sasToken) {","  return new BlobService(null, null, host, sasToken);","};","","/**","* Creates a new {@link BlobService} object using the host uri and anonymous access.","* ","* @param {string|object} host                         The host address. To define primary only, pass a string. ","*                                                     Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.","* @return {BlobService}                               A new BlobService object with the anonymous credentials.","*/","exports.createBlobServiceAnonymous = function (host) {","  return new BlobService(null, null, host, null);","};","","/**"," * File client exports."," * @ignore"," */","var FileService = require('./services/file/fileservice');","","exports.FileService = FileService;","exports.FileUtilities = require('./services/file/fileutilities');","","/**","* Creates a new {@link FileService} object.","* If no storageaccount or storageaccesskey are provided, the AZURE_STORAGE_CONNECTION_STRING and then the AZURE_STORAGE_ACCOUNT and AZURE_STORAGE_ACCESS_KEY ","* environment variables will be used.","*","* @param {string} storageAccountOrConnectionString    The storage account or the connection string.","* @param {string} [storageAccessKey]                  The storage access key.","* @param {string|object} [host]                       The host address. To define primary only, pass a string. ","*                                                     Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.","* @return {FileService}                               A new FileService object.","*/","exports.createFileService = function (storageAccountOrConnectionString, storageAccessKey, host) {","  return new FileService(storageAccountOrConnectionString, storageAccessKey, host);","};","","/**","* Creates a new {@link FileService} object using the host Uri and the SAS credentials provided.","* ","* @param {string|object} host                         The host address. To define primary only, pass a string. ","*                                                     Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.","* @param {string} sasToken                            The Shared Access Signature token.","* @return {FileService}                               A new FileService object with the SAS credentials.","*/","exports.createFileServiceWithSas = function (hostUri, sasToken) {","  return new FileService(null, null, hostUri, sasToken);","};","","/**"," * Queue client exports."," * @ignore"," */","var QueueService = require('./services/queue/queueservice');","","exports.QueueService = QueueService;","exports.QueueUtilities = require('./services/queue/queueutilities');","exports.QueueMessageEncoder = require('./services/queue/queuemessageencoder');","","/**","* Creates a new {@link QueueService} object.","* If no storageaccount or storageaccesskey are provided, the AZURE_STORAGE_CONNECTION_STRING and then the AZURE_STORAGE_ACCOUNT and AZURE_STORAGE_ACCESS_KEY ","* environment variables will be used.","*","* @param {string} [storageAccountOrConnectionString]  The storage account or the connection string.","* @param {string} [storageAccessKey]                  The storage access key.","* @param {string|object} [host]                       The host address. To define primary only, pass a string. ","*                                                     Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.","* @return {QueueService}                              A new QueueService object.","*/","exports.createQueueService = function (storageAccountOrConnectionString, storageAccessKey, host) {","  return new QueueService(storageAccountOrConnectionString, storageAccessKey, host);","};","","/**","* Creates a new {@link QueueService} object using the host Uri and the SAS credentials provided.","* ","* @param {string|object} host                         The host address. To define primary only, pass a string. ","*                                                     Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.","* @param {string} sasToken                            The Shared Access Signature token.","* @return {QueueService}                              A new QueueService object with the SAS credentials.","*/","exports.createQueueServiceWithSas = function(hostUri, sasToken) {","  return new QueueService(null, null, hostUri, sasToken);","};","","/**","* Account SAS","* @ignore","*/","","","var azureCommon = require('./common/common');","var StorageServiceClient = azureCommon.StorageServiceClient;","var SharedKey = azureCommon.SharedKey;","/**","* Generates an account shared access signature token","* ","* @param {string}                     [storageAccountOrConnectionString]                The storage account or the connection string.","* @param {string}                     [storageAccessKey]                                The storage access key.","* @param {object}                     sharedAccessPolicy                                The shared access policy.","* @param {SharedAccessServices}       sharedAccessPolicy.AccessPolicy.Services          The services (blob, file, queue, table) for a shared access signature associated with this shared access policy.","*                                                                                       Refer to `Constants.AccountSasConstants.Services`.","* @param {SharedAccessResourceTypes}  sharedAccessPolicy.AccessPolicy.ResourceTypes     The resource type for a shared access signature associated with this shared access policy.","*                                                                                       Refer to `Constants.AccountSasConstants.ResourceTypes`.","* @param {SharedAccessPermissions}    sharedAccessPolicy.AccessPolicy.Permissions       The permissions for a shared access signature. ","*                                                                                       Refer to `Constants.AccountSasConstants.Permissions`.","* @param {date}                       sharedAccessPolicy.AccessPolicy.Start             The time at which the Shared Access Signature becomes valid.","* @param {date}                       sharedAccessPolicy.AccessPolicy.Expiry            The time at which the Shared Access Signature becomes expired.","* @param {string}                     sharedAccessPolicy.AccessPolicy.IPAddressOrRange  The permission type. Refer to `Constants.AccountSasConstants.ResourceTypes`.","* @param {string}                     sharedAccessPolicy.AccessPolicy.Protocols          The possible protocols. Refer to `Constants.AccountSasConstants.ResourceTypes`.","*/","exports.generateAccountSharedAccessSignature = function(storageAccountOrConnectionString, storageAccessKey, sharedAccessAccountPolicy)","{","  var storageSettings = StorageServiceClient.getStorageSettings(storageAccountOrConnectionString, storageAccessKey);","  var sharedKey = new SharedKey(storageSettings._name, storageSettings._key);","  ","  return sharedKey.generateAccountSignedQueryString(sharedAccessAccountPolicy);","};","","","/**","* A callback that returns a response object.","* @callback errorOrResponse","* @param {object} error         If an error occurs, will contain information about the error.","* @param {object} response      Contains information about the response returned for the operation.","*                               For example, HTTP status codes and headers.","*/","","/**","* A callback that returns result and response objects.","* @callback errorOrResult","* @param {object} error         If an error occurs, will contain information about the error.","* @param {object} result        The result of the operation.","* @param {object} response      Contains information about the response returned for the operation.","*                               For example, HTTP status codes and headers.","*/","","","/**","* Specifying conditional headers for blob service operations. See http://msdn.microsoft.com/en-us/library/dd179371.aspx for more information.","* @typedef    {object}          AccessConditions","* @property   {string}          EtagMatch                       If the ETag for the blob matches the specified ETag.","*                                                               Specify the wildcard character (*) to perform the operation only if the resource does exist, and fail the operation if it does not exist.","* @property   {string}          EtagNonMatch                    If the ETag for the blob does not match the specified ETag.","*                                                               Specify the wildcard character (*) to perform the operation only if the resource does not exist, and fail the operation if it does exist.","* @property   {Date|string}     DateModifedSince                If the blob has been modified since the specified date.","* @property   {Date|string}     DateUnModifiedSince             If the blob has not been modified since the specified date.","* @property   {Number|string}   SequenceNumberLessThanOrEqual   If the blob's sequence number is less than or equal to the specified value.","*                                                               For Put Page operation only. See https://msdn.microsoft.com/en-us/library/azure/ee691975.aspx for more information.","* @property   {Number|string}   SequenceNumberLessThan          If the blob's sequence number is less than the specified value.","*                                                               For Put Page operation only. See https://msdn.microsoft.com/en-us/library/azure/ee691975.aspx for more information.","* @property   {Number|string}   SequenceNumberEqual             If the blob's sequence number is equal to the specified value.","*                                                               For Put Page operation only. See https://msdn.microsoft.com/en-us/library/azure/ee691975.aspx for more information.","* @property   {Number|string}   MaxBlobSize                     If the Append Block operation would cause the blob to exceed that limit or if the blob size is already greater than the specified value. ","*                                                               For Append Block operation only. See https://msdn.microsoft.com/en-us/library/mt427365.aspx for more information.","* @property   {Number|string}   MaxAppendPosition               If the append position is equal to the specified value.","*                                                               For Append Block operation only. See https://msdn.microsoft.com/en-us/library/mt427365.aspx for more information.","*/","","/**","* The properties of a storage service, including properties of Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.","* @typedef    {object}              ServiceProperties","* @property   {string}              DefaultServiceVersion  The default version of Storage Analytics currently in use.","* @property   {LoggingProperties}   Logging                The Logging settings.","* @property   {MetricsProperties}   HourMetrics            The HourMetrics settings provide a summary of request statistics grouped by API in hourly aggregates.","* @property   {MetricsProperties}   MinuteMetrics          The HourMetrics settings provide request statistics grouped by API for each minute.","* @property   {object}              Cors                   Groups all CORS rules.","* @property   {CorsRule[]}          Cors.CorsRules         Groups settings for a `[CORS rule]{@link CorsRule}`.","*/","","/**","* The Azure Analytics logging settings.","* @typedef    {object}          LoggingProperties","* @property   {string}          Version                    The version of Storage Analytics currently in use for logging.","* @property   {boolean}         Delete                     Indicates whether delete requests are being logged.","* @property   {boolean}         Read                       Indicates whether read requests are being logged.","* @property   {boolean}         Write                      Indicates whether write requests are being logged.","* @property   {RetentionPolicy} RetentionPolicy            The retention policy of the log data.","*/","","/**","* The setting of Azure Analytics summary of request stastics.","* @typedef    {object}          MetricsProperties","* @property   {string}          Version                    The version of Storage Analytics currently in use for hour metrics.","* @property   {string}          Enabled                    Indicates whether metrics are enabled","* @property   {boolean}         IncludeAPIs                Indicates whether metrics generate summary statistics for called API operations.","* @property   {RetentionPolicy} RetentionPolicy            The retention policy of the metrics data.","*/","","/**","* The CORS rule of a storage service.","* @typedef    {object}          CorsRule","* @property   {string[]}        AllowedMethods             A list of HTTP methods that are allowed to be executed by the origin. For Azure Storage, permitted methods are DELETE, GET, HEAD, MERGE, POST, OPTIONS or PUT.","* @property   {string[]}        AllowedOrigins             A list of origin domains that are allowed via CORS, or \"*\" if all domains are allowed.","* @property   {string[]}        AllowedHeaders             A list of headers allowed to be part of the cross-origin request.","* @property   {string[]}        ExposedHeaders             A list of response headers to expose to CORS clients.","* @property   {number}          MaxAgeInSeconds            The number of seconds that the client/browser should cache a preflight response.","*/","","/**","* The Azure Analytics logging or metrics retention policy.","* @typedef    {object}          RetentionPolicy","* @property   {boolean}         Enabled                    Indicates whether a retention policy is enabled for the storage service.","* @property   {number}          Days                       Indicates the number of days that logging data is retained. All data older than this value will be deleted.","*/","","/**","* The access policy.","* @typedef    {object}          AccessPolicy","* @property   {string}          Permissions                The permission type.","* @property   {Date}            Start                      The time at which the access policy becomes valid.","* @property   {Date}            Expiry                     The time at which the access policy becomes expired.","* @property   {string}          IPAddressOrRange           An IP address or a range of IP addresses from which to accept requests. When specifying a range, note that the range is inclusive.","* @property   {string}          Protocols                  The protocols permitted for a request made with the SAS.","* @property   {string}          Services                   The services (blob, file, queue, table) for a shared access signature associated with this shared access policy.","* @property   {string}          ResourceTypes              The resource type for a shared access signature associated with this shared access policy.","*/","","/**","* The service statistics.","* @typedef    {object}          ServiceStats","* @property   {object}          GeoReplication                  The geo replication stastics.","* @property   {string}          GeoReplication.Status           The status of the secondary location.","* @property   {Date}            GeoReplication.LastSyncTime     A GMT date/time value, to the second. ","*                                                               All primary writes preceding this value are guaranteed to be available for read operations at the secondary.","*                                                               Primary writes after this point in time may or may not be available for reads. ","*/","","/**","* The range.","* @typedef    {object}          Range","* @property   {number}          start                     The start of the range.","* @property   {number}          end                       The end of the range.","*/","","/**","* The range diff. Refer to https://msdn.microsoft.com/en-us/library/azure/mt736912.aspx","* @typedef    {object}          RangeDiff","* @property   {number}          start                     The start of the range.","* @property   {number}          end                       The end of the range.","* @property   {boolean}         isCleared                 If the range is cleared or not.","","*/","","exports.Constants = azureCommon.Constants;","exports.StorageUtilities = azureCommon.StorageUtilities;","exports.AccessCondition = azureCommon.AccessCondition;","","exports.SR = azureCommon.SR;","exports.StorageServiceClient = StorageServiceClient;","exports.Logger = azureCommon.Logger;","exports.WebResource = azureCommon.WebResource;","exports.Validate = azureCommon.validate;","exports.date = azureCommon.date;","","// Other filters","exports.LinearRetryPolicyFilter = azureCommon.LinearRetryPolicyFilter;","exports.ExponentialRetryPolicyFilter = azureCommon.ExponentialRetryPolicyFilter;","exports.RetryPolicyFilter = azureCommon.RetryPolicyFilter;"],"l":{"17":1,"29":1,"30":0,"31":0,"32":0,"35":0,"42":1,"44":1,"45":1,"46":1,"47":1,"61":1,"62":0,"73":1,"74":0,"81":1,"83":1,"84":1,"97":1,"98":0,"109":1,"110":0,"120":1,"121":0,"128":1,"130":1,"131":1,"144":1,"145":0,"156":1,"157":0,"164":1,"166":1,"167":1,"168":1,"181":1,"182":0,"193":1,"194":0,"203":1,"204":1,"205":1,"223":1,"225":0,"226":0,"228":0,"356":1,"357":1,"358":1,"360":1,"361":1,"362":1,"363":1,"364":1,"365":1,"368":1,"369":1,"370":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/tableservice.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/tableservice.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":1,"54":0,"55":1,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":1,"147":0,"148":1,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":1,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":1,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":1,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":1,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":1,"275":0,"276":0,"277":0,"278":0,"279":0,"280":1,"281":0,"282":1,"283":0,"284":1,"285":0,"286":1,"287":0,"288":1,"289":0,"290":1,"291":0,"292":1,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":1,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":1,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":1,"385":0,"386":0,"387":0,"388":0,"389":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0},"fnMap":{"1":{"name":"TableService","line":74,"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":106}}},"2":{"name":"(anonymous_2)","line":118,"loc":{"start":{"line":118,"column":41},"end":{"line":118,"column":80}}},"3":{"name":"(anonymous_3)","line":120,"loc":{"start":{"line":120,"column":55},"end":{"line":120,"column":71}}},"4":{"name":"(anonymous_4)","line":122,"loc":{"start":{"line":122,"column":43},"end":{"line":122,"column":56}}},"5":{"name":"(anonymous_5)","line":133,"loc":{"start":{"line":133,"column":32},"end":{"line":133,"column":64}}},"6":{"name":"(anonymous_6)","line":140,"loc":{"start":{"line":140,"column":24},"end":{"line":140,"column":48}}},"7":{"name":"(anonymous_7)","line":170,"loc":{"start":{"line":170,"column":46},"end":{"line":170,"column":85}}},"8":{"name":"(anonymous_8)","line":194,"loc":{"start":{"line":194,"column":46},"end":{"line":194,"column":104}}},"9":{"name":"(anonymous_9)","line":221,"loc":{"start":{"line":221,"column":45},"end":{"line":221,"column":98}}},"10":{"name":"(anonymous_10)","line":249,"loc":{"start":{"line":249,"column":55},"end":{"line":249,"column":116}}},"11":{"name":"(anonymous_11)","line":251,"loc":{"start":{"line":251,"column":55},"end":{"line":251,"column":71}}},"12":{"name":"(anonymous_12)","line":253,"loc":{"start":{"line":253,"column":38},"end":{"line":253,"column":51}}},"13":{"name":"(anonymous_13)","line":282,"loc":{"start":{"line":282,"column":32},"end":{"line":282,"column":64}}},"14":{"name":"(anonymous_14)","line":304,"loc":{"start":{"line":304,"column":24},"end":{"line":304,"column":48}}},"15":{"name":"(anonymous_15)","line":336,"loc":{"start":{"line":336,"column":37},"end":{"line":336,"column":83}}},"16":{"name":"(anonymous_16)","line":338,"loc":{"start":{"line":338,"column":55},"end":{"line":338,"column":71}}},"17":{"name":"(anonymous_17)","line":340,"loc":{"start":{"line":340,"column":39},"end":{"line":340,"column":52}}},"18":{"name":"(anonymous_18)","line":352,"loc":{"start":{"line":352,"column":32},"end":{"line":352,"column":64}}},"19":{"name":"(anonymous_19)","line":359,"loc":{"start":{"line":359,"column":24},"end":{"line":359,"column":48}}},"20":{"name":"(anonymous_20)","line":390,"loc":{"start":{"line":390,"column":37},"end":{"line":390,"column":102}}},"21":{"name":"(anonymous_21)","line":392,"loc":{"start":{"line":392,"column":55},"end":{"line":392,"column":71}}},"22":{"name":"(anonymous_22)","line":394,"loc":{"start":{"line":394,"column":39},"end":{"line":394,"column":52}}},"23":{"name":"(anonymous_23)","line":415,"loc":{"start":{"line":415,"column":32},"end":{"line":415,"column":64}}},"24":{"name":"(anonymous_24)","line":426,"loc":{"start":{"line":426,"column":24},"end":{"line":426,"column":48}}},"25":{"name":"(anonymous_25)","line":455,"loc":{"start":{"line":455,"column":55},"end":{"line":455,"column":92}}},"26":{"name":"(anonymous_26)","line":461,"loc":{"start":{"line":461,"column":57},"end":{"line":461,"column":70}}},"27":{"name":"(anonymous_27)","line":491,"loc":{"start":{"line":491,"column":40},"end":{"line":491,"column":86}}},"28":{"name":"(anonymous_28)","line":515,"loc":{"start":{"line":515,"column":37},"end":{"line":515,"column":83}}},"29":{"name":"(anonymous_29)","line":517,"loc":{"start":{"line":517,"column":55},"end":{"line":517,"column":71}}},"30":{"name":"(anonymous_30)","line":519,"loc":{"start":{"line":519,"column":39},"end":{"line":519,"column":52}}},"31":{"name":"(anonymous_31)","line":534,"loc":{"start":{"line":534,"column":32},"end":{"line":534,"column":64}}},"32":{"name":"(anonymous_32)","line":542,"loc":{"start":{"line":542,"column":24},"end":{"line":542,"column":48}}},"33":{"name":"(anonymous_33)","line":581,"loc":{"start":{"line":581,"column":48},"end":{"line":581,"column":94}}},"34":{"name":"(anonymous_34)","line":583,"loc":{"start":{"line":583,"column":55},"end":{"line":583,"column":71}}},"35":{"name":"(anonymous_35)","line":585,"loc":{"start":{"line":585,"column":50},"end":{"line":585,"column":63}}},"36":{"name":"(anonymous_36)","line":594,"loc":{"start":{"line":594,"column":45},"end":{"line":594,"column":79}}},"37":{"name":"(anonymous_37)","line":605,"loc":{"start":{"line":605,"column":39},"end":{"line":605,"column":85}}},"38":{"name":"(anonymous_38)","line":639,"loc":{"start":{"line":639,"column":37},"end":{"line":639,"column":83}}},"39":{"name":"(anonymous_39)","line":641,"loc":{"start":{"line":641,"column":55},"end":{"line":641,"column":71}}},"40":{"name":"(anonymous_40)","line":643,"loc":{"start":{"line":643,"column":39},"end":{"line":643,"column":52}}},"41":{"name":"(anonymous_41)","line":654,"loc":{"start":{"line":654,"column":32},"end":{"line":654,"column":64}}},"42":{"name":"(anonymous_42)","line":655,"loc":{"start":{"line":655,"column":24},"end":{"line":655,"column":48}}},"43":{"name":"(anonymous_43)","line":685,"loc":{"start":{"line":685,"column":45},"end":{"line":685,"column":91}}},"44":{"name":"(anonymous_44)","line":687,"loc":{"start":{"line":687,"column":55},"end":{"line":687,"column":71}}},"45":{"name":"(anonymous_45)","line":689,"loc":{"start":{"line":689,"column":47},"end":{"line":689,"column":60}}},"46":{"name":"(anonymous_46)","line":698,"loc":{"start":{"line":698,"column":45},"end":{"line":698,"column":79}}},"47":{"name":"(anonymous_47)","line":705,"loc":{"start":{"line":705,"column":39},"end":{"line":705,"column":77}}},"48":{"name":"(anonymous_48)","line":809,"loc":{"start":{"line":809,"column":39},"end":{"line":809,"column":111}}},"49":{"name":"(anonymous_49)","line":811,"loc":{"start":{"line":811,"column":55},"end":{"line":811,"column":71}}},"50":{"name":"(anonymous_50)","line":813,"loc":{"start":{"line":813,"column":41},"end":{"line":813,"column":54}}},"51":{"name":"(anonymous_51)","line":826,"loc":{"start":{"line":826,"column":37},"end":{"line":826,"column":64}}},"52":{"name":"(anonymous_52)","line":838,"loc":{"start":{"line":838,"column":32},"end":{"line":838,"column":64}}},"53":{"name":"(anonymous_53)","line":861,"loc":{"start":{"line":861,"column":24},"end":{"line":861,"column":48}}},"54":{"name":"(anonymous_54)","line":939,"loc":{"start":{"line":939,"column":40},"end":{"line":939,"column":108}}},"55":{"name":"(anonymous_55)","line":944,"loc":{"start":{"line":944,"column":42},"end":{"line":944,"column":55}}},"56":{"name":"(anonymous_56)","line":994,"loc":{"start":{"line":994,"column":38},"end":{"line":994,"column":102}}},"57":{"name":"(anonymous_57)","line":1019,"loc":{"start":{"line":1019,"column":47},"end":{"line":1019,"column":111}}},"58":{"name":"(anonymous_58)","line":1044,"loc":{"start":{"line":1044,"column":39},"end":{"line":1044,"column":103}}},"59":{"name":"(anonymous_59)","line":1069,"loc":{"start":{"line":1069,"column":37},"end":{"line":1069,"column":101}}},"60":{"name":"(anonymous_60)","line":1094,"loc":{"start":{"line":1094,"column":45},"end":{"line":1094,"column":109}}},"61":{"name":"(anonymous_61)","line":1118,"loc":{"start":{"line":1118,"column":38},"end":{"line":1118,"column":102}}},"62":{"name":"(anonymous_62)","line":1145,"loc":{"start":{"line":1145,"column":38},"end":{"line":1145,"column":91}}},"63":{"name":"(anonymous_63)","line":1147,"loc":{"start":{"line":1147,"column":55},"end":{"line":1147,"column":71}}},"64":{"name":"(anonymous_64)","line":1149,"loc":{"start":{"line":1149,"column":40},"end":{"line":1149,"column":53}}},"65":{"name":"(anonymous_65)","line":1169,"loc":{"start":{"line":1169,"column":32},"end":{"line":1169,"column":64}}},"66":{"name":"(anonymous_66)","line":1175,"loc":{"start":{"line":1175,"column":30},"end":{"line":1175,"column":44}}},"67":{"name":"(anonymous_67)","line":1187,"loc":{"start":{"line":1187,"column":24},"end":{"line":1187,"column":48}}},"68":{"name":"(anonymous_68)","line":1223,"loc":{"start":{"line":1223,"column":41},"end":{"line":1223,"column":100}}},"69":{"name":"(anonymous_69)","line":1225,"loc":{"start":{"line":1225,"column":55},"end":{"line":1225,"column":71}}},"70":{"name":"(anonymous_70)","line":1227,"loc":{"start":{"line":1227,"column":42},"end":{"line":1227,"column":55}}},"71":{"name":"(anonymous_71)","line":1242,"loc":{"start":{"line":1242,"column":32},"end":{"line":1242,"column":64}}},"72":{"name":"(anonymous_72)","line":1256,"loc":{"start":{"line":1256,"column":24},"end":{"line":1256,"column":48}}},"73":{"name":"(anonymous_73)","line":1291,"loc":{"start":{"line":1291,"column":49},"end":{"line":1291,"column":124}}},"74":{"name":"(anonymous_74)","line":1293,"loc":{"start":{"line":1293,"column":55},"end":{"line":1293,"column":71}}},"75":{"name":"(anonymous_75)","line":1295,"loc":{"start":{"line":1295,"column":43},"end":{"line":1295,"column":56}}},"76":{"name":"(anonymous_76)","line":1317,"loc":{"start":{"line":1317,"column":32},"end":{"line":1317,"column":64}}},"77":{"name":"(anonymous_77)","line":1320,"loc":{"start":{"line":1320,"column":22},"end":{"line":1320,"column":46}}},"78":{"name":"(anonymous_78)","line":1329,"loc":{"start":{"line":1329,"column":22},"end":{"line":1329,"column":46}}},"79":{"name":"(anonymous_79)","line":1361,"loc":{"start":{"line":1361,"column":32},"end":{"line":1361,"column":68}}},"80":{"name":"(anonymous_80)","line":1362,"loc":{"start":{"line":1362,"column":34},"end":{"line":1362,"column":47}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":31}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":30}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":51}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":33}},"6":{"start":{"line":24,"column":0},"end":{"line":24,"column":36}},"7":{"start":{"line":25,"column":0},"end":{"line":25,"column":24}},"8":{"start":{"line":26,"column":0},"end":{"line":26,"column":60}},"9":{"start":{"line":27,"column":0},"end":{"line":27,"column":58}},"10":{"start":{"line":28,"column":0},"end":{"line":28,"column":58}},"11":{"start":{"line":29,"column":0},"end":{"line":29,"column":41}},"12":{"start":{"line":30,"column":0},"end":{"line":30,"column":42}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":38}},"14":{"start":{"line":32,"column":0},"end":{"line":32,"column":58}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":48}},"16":{"start":{"line":34,"column":0},"end":{"line":34,"column":46}},"17":{"start":{"line":35,"column":0},"end":{"line":35,"column":56}},"18":{"start":{"line":38,"column":0},"end":{"line":38,"column":50}},"19":{"start":{"line":39,"column":0},"end":{"line":39,"column":52}},"20":{"start":{"line":40,"column":0},"end":{"line":40,"column":50}},"21":{"start":{"line":41,"column":0},"end":{"line":41,"column":56}},"22":{"start":{"line":42,"column":0},"end":{"line":42,"column":38}},"23":{"start":{"line":43,"column":0},"end":{"line":43,"column":49}},"24":{"start":{"line":74,"column":0},"end":{"line":93,"column":1}},"25":{"start":{"line":75,"column":2},"end":{"line":75,"column":155}},"26":{"start":{"line":77,"column":2},"end":{"line":82,"column":38}},"27":{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},"28":{"start":{"line":85,"column":4},"end":{"line":85,"column":58}},"29":{"start":{"line":88,"column":2},"end":{"line":90,"column":3}},"30":{"start":{"line":89,"column":4},"end":{"line":89,"column":115}},"31":{"start":{"line":92,"column":2},"end":{"line":92,"column":76}},"32":{"start":{"line":95,"column":0},"end":{"line":95,"column":50}},"33":{"start":{"line":118,"column":0},"end":{"line":149,"column":2}},"34":{"start":{"line":119,"column":2},"end":{"line":119,"column":18}},"35":{"start":{"line":120,"column":2},"end":{"line":120,"column":107}},"36":{"start":{"line":120,"column":73},"end":{"line":120,"column":89}},"37":{"start":{"line":120,"column":90},"end":{"line":120,"column":103}},"38":{"start":{"line":122,"column":2},"end":{"line":124,"column":5}},"39":{"start":{"line":123,"column":4},"end":{"line":123,"column":25}},"40":{"start":{"line":126,"column":2},"end":{"line":126,"column":46}},"41":{"start":{"line":127,"column":2},"end":{"line":127,"column":83}},"42":{"start":{"line":129,"column":2},"end":{"line":131,"column":62}},"43":{"start":{"line":133,"column":2},"end":{"line":146,"column":4}},"44":{"start":{"line":134,"column":4},"end":{"line":134,"column":45}},"45":{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},"46":{"start":{"line":136,"column":6},"end":{"line":136,"column":117}},"47":{"start":{"line":140,"column":4},"end":{"line":142,"column":6}},"48":{"start":{"line":141,"column":6},"end":{"line":141,"column":91}},"49":{"start":{"line":145,"column":4},"end":{"line":145,"column":40}},"50":{"start":{"line":148,"column":2},"end":{"line":148,"column":75}},"51":{"start":{"line":170,"column":0},"end":{"line":172,"column":2}},"52":{"start":{"line":171,"column":2},"end":{"line":171,"column":71}},"53":{"start":{"line":194,"column":0},"end":{"line":196,"column":2}},"54":{"start":{"line":195,"column":2},"end":{"line":195,"column":90}},"55":{"start":{"line":221,"column":0},"end":{"line":223,"column":2}},"56":{"start":{"line":222,"column":2},"end":{"line":222,"column":99}},"57":{"start":{"line":249,"column":0},"end":{"line":312,"column":2}},"58":{"start":{"line":250,"column":2},"end":{"line":250,"column":18}},"59":{"start":{"line":251,"column":2},"end":{"line":251,"column":107}},"60":{"start":{"line":251,"column":73},"end":{"line":251,"column":89}},"61":{"start":{"line":251,"column":90},"end":{"line":251,"column":103}},"62":{"start":{"line":253,"column":2},"end":{"line":255,"column":5}},"63":{"start":{"line":254,"column":4},"end":{"line":254,"column":25}},"64":{"start":{"line":257,"column":2},"end":{"line":257,"column":46}},"65":{"start":{"line":258,"column":2},"end":{"line":258,"column":77}},"66":{"start":{"line":260,"column":2},"end":{"line":260,"column":77}},"67":{"start":{"line":261,"column":2},"end":{"line":261,"column":89}},"68":{"start":{"line":263,"column":2},"end":{"line":265,"column":3}},"69":{"start":{"line":264,"column":4},"end":{"line":264,"column":92}},"70":{"start":{"line":267,"column":2},"end":{"line":273,"column":3}},"71":{"start":{"line":268,"column":4},"end":{"line":270,"column":61}},"72":{"start":{"line":272,"column":4},"end":{"line":272,"column":92}},"73":{"start":{"line":275,"column":2},"end":{"line":278,"column":3}},"74":{"start":{"line":276,"column":4},"end":{"line":276,"column":57}},"75":{"start":{"line":277,"column":4},"end":{"line":277,"column":86}},"76":{"start":{"line":280,"column":2},"end":{"line":280,"column":83}},"77":{"start":{"line":282,"column":2},"end":{"line":309,"column":4}},"78":{"start":{"line":283,"column":4},"end":{"line":283,"column":43}},"79":{"start":{"line":285,"column":4},"end":{"line":302,"column":5}},"80":{"start":{"line":286,"column":6},"end":{"line":289,"column":8}},"81":{"start":{"line":290,"column":6},"end":{"line":290,"column":91}},"82":{"start":{"line":292,"column":6},"end":{"line":301,"column":7}},"83":{"start":{"line":294,"column":8},"end":{"line":297,"column":10}},"84":{"start":{"line":299,"column":8},"end":{"line":299,"column":151}},"85":{"start":{"line":300,"column":8},"end":{"line":300,"column":105}},"86":{"start":{"line":304,"column":4},"end":{"line":306,"column":6}},"87":{"start":{"line":305,"column":6},"end":{"line":305,"column":89}},"88":{"start":{"line":308,"column":4},"end":{"line":308,"column":40}},"89":{"start":{"line":311,"column":2},"end":{"line":311,"column":75}},"90":{"start":{"line":336,"column":0},"end":{"line":367,"column":2}},"91":{"start":{"line":337,"column":2},"end":{"line":337,"column":18}},"92":{"start":{"line":338,"column":2},"end":{"line":338,"column":107}},"93":{"start":{"line":338,"column":73},"end":{"line":338,"column":89}},"94":{"start":{"line":338,"column":90},"end":{"line":338,"column":103}},"95":{"start":{"line":340,"column":2},"end":{"line":344,"column":5}},"96":{"start":{"line":341,"column":4},"end":{"line":341,"column":29}},"97":{"start":{"line":342,"column":4},"end":{"line":342,"column":30}},"98":{"start":{"line":343,"column":4},"end":{"line":343,"column":25}},"99":{"start":{"line":346,"column":2},"end":{"line":346,"column":46}},"100":{"start":{"line":347,"column":2},"end":{"line":347,"column":83}},"101":{"start":{"line":349,"column":2},"end":{"line":350,"column":55}},"102":{"start":{"line":352,"column":2},"end":{"line":364,"column":4}},"103":{"start":{"line":353,"column":4},"end":{"line":353,"column":38}},"104":{"start":{"line":354,"column":4},"end":{"line":357,"column":5}},"105":{"start":{"line":355,"column":6},"end":{"line":355,"column":58}},"106":{"start":{"line":356,"column":6},"end":{"line":356,"column":99}},"107":{"start":{"line":359,"column":4},"end":{"line":361,"column":6}},"108":{"start":{"line":360,"column":6},"end":{"line":360,"column":84}},"109":{"start":{"line":363,"column":4},"end":{"line":363,"column":40}},"110":{"start":{"line":366,"column":2},"end":{"line":366,"column":75}},"111":{"start":{"line":390,"column":0},"end":{"line":434,"column":2}},"112":{"start":{"line":391,"column":2},"end":{"line":391,"column":18}},"113":{"start":{"line":392,"column":2},"end":{"line":392,"column":107}},"114":{"start":{"line":392,"column":73},"end":{"line":392,"column":89}},"115":{"start":{"line":392,"column":90},"end":{"line":392,"column":103}},"116":{"start":{"line":394,"column":2},"end":{"line":398,"column":5}},"117":{"start":{"line":395,"column":4},"end":{"line":395,"column":29}},"118":{"start":{"line":396,"column":4},"end":{"line":396,"column":30}},"119":{"start":{"line":397,"column":4},"end":{"line":397,"column":25}},"120":{"start":{"line":400,"column":2},"end":{"line":400,"column":46}},"121":{"start":{"line":402,"column":2},"end":{"line":402,"column":22}},"122":{"start":{"line":403,"column":2},"end":{"line":408,"column":3}},"123":{"start":{"line":404,"column":4},"end":{"line":406,"column":5}},"124":{"start":{"line":405,"column":6},"end":{"line":405,"column":57}},"125":{"start":{"line":407,"column":4},"end":{"line":407,"column":54}},"126":{"start":{"line":410,"column":2},"end":{"line":413,"column":24}},"127":{"start":{"line":415,"column":2},"end":{"line":431,"column":4}},"128":{"start":{"line":416,"column":4},"end":{"line":416,"column":38}},"129":{"start":{"line":417,"column":4},"end":{"line":424,"column":5}},"130":{"start":{"line":420,"column":6},"end":{"line":420,"column":58}},"131":{"start":{"line":421,"column":6},"end":{"line":423,"column":7}},"132":{"start":{"line":422,"column":8},"end":{"line":422,"column":73}},"133":{"start":{"line":426,"column":4},"end":{"line":428,"column":6}},"134":{"start":{"line":427,"column":6},"end":{"line":427,"column":84}},"135":{"start":{"line":430,"column":4},"end":{"line":430,"column":40}},"136":{"start":{"line":433,"column":2},"end":{"line":433,"column":87}},"137":{"start":{"line":455,"column":0},"end":{"line":469,"column":2}},"138":{"start":{"line":457,"column":2},"end":{"line":459,"column":3}},"139":{"start":{"line":458,"column":4},"end":{"line":458,"column":62}},"140":{"start":{"line":461,"column":2},"end":{"line":465,"column":5}},"141":{"start":{"line":462,"column":4},"end":{"line":462,"column":29}},"142":{"start":{"line":463,"column":4},"end":{"line":463,"column":30}},"143":{"start":{"line":464,"column":4},"end":{"line":464,"column":55}},"144":{"start":{"line":467,"column":2},"end":{"line":467,"column":48}},"145":{"start":{"line":468,"column":2},"end":{"line":468,"column":171}},"146":{"start":{"line":491,"column":0},"end":{"line":493,"column":2}},"147":{"start":{"line":492,"column":2},"end":{"line":492,"column":66}},"148":{"start":{"line":515,"column":0},"end":{"line":550,"column":2}},"149":{"start":{"line":516,"column":2},"end":{"line":516,"column":18}},"150":{"start":{"line":517,"column":2},"end":{"line":517,"column":107}},"151":{"start":{"line":517,"column":73},"end":{"line":517,"column":89}},"152":{"start":{"line":517,"column":90},"end":{"line":517,"column":103}},"153":{"start":{"line":519,"column":2},"end":{"line":523,"column":5}},"154":{"start":{"line":520,"column":4},"end":{"line":520,"column":29}},"155":{"start":{"line":521,"column":4},"end":{"line":521,"column":30}},"156":{"start":{"line":522,"column":4},"end":{"line":522,"column":25}},"157":{"start":{"line":525,"column":2},"end":{"line":525,"column":46}},"158":{"start":{"line":527,"column":2},"end":{"line":527,"column":53}},"159":{"start":{"line":529,"column":2},"end":{"line":530,"column":75}},"160":{"start":{"line":532,"column":2},"end":{"line":532,"column":104}},"161":{"start":{"line":534,"column":2},"end":{"line":547,"column":4}},"162":{"start":{"line":535,"column":4},"end":{"line":535,"column":38}},"163":{"start":{"line":536,"column":4},"end":{"line":536,"column":84}},"164":{"start":{"line":537,"column":4},"end":{"line":537,"column":81}},"165":{"start":{"line":538,"column":4},"end":{"line":540,"column":5}},"166":{"start":{"line":539,"column":6},"end":{"line":539,"column":53}},"167":{"start":{"line":542,"column":4},"end":{"line":544,"column":6}},"168":{"start":{"line":543,"column":6},"end":{"line":543,"column":86}},"169":{"start":{"line":546,"column":4},"end":{"line":546,"column":40}},"170":{"start":{"line":549,"column":2},"end":{"line":549,"column":87}},"171":{"start":{"line":581,"column":0},"end":{"line":618,"column":2}},"172":{"start":{"line":582,"column":2},"end":{"line":582,"column":18}},"173":{"start":{"line":583,"column":2},"end":{"line":583,"column":107}},"174":{"start":{"line":583,"column":73},"end":{"line":583,"column":89}},"175":{"start":{"line":583,"column":90},"end":{"line":583,"column":103}},"176":{"start":{"line":585,"column":2},"end":{"line":589,"column":5}},"177":{"start":{"line":586,"column":4},"end":{"line":586,"column":29}},"178":{"start":{"line":587,"column":4},"end":{"line":587,"column":30}},"179":{"start":{"line":588,"column":4},"end":{"line":588,"column":25}},"180":{"start":{"line":591,"column":2},"end":{"line":591,"column":46}},"181":{"start":{"line":593,"column":2},"end":{"line":593,"column":18}},"182":{"start":{"line":594,"column":2},"end":{"line":617,"column":5}},"183":{"start":{"line":595,"column":4},"end":{"line":595,"column":31}},"184":{"start":{"line":596,"column":4},"end":{"line":596,"column":27}},"185":{"start":{"line":597,"column":4},"end":{"line":597,"column":25}},"186":{"start":{"line":599,"column":4},"end":{"line":616,"column":5}},"187":{"start":{"line":600,"column":6},"end":{"line":600,"column":40}},"188":{"start":{"line":601,"column":11},"end":{"line":616,"column":5}},"189":{"start":{"line":602,"column":6},"end":{"line":602,"column":35}},"190":{"start":{"line":603,"column":6},"end":{"line":603,"column":40}},"191":{"start":{"line":605,"column":6},"end":{"line":615,"column":9}},"192":{"start":{"line":606,"column":8},"end":{"line":613,"column":9}},"193":{"start":{"line":607,"column":10},"end":{"line":607,"column":38}},"194":{"start":{"line":609,"column":13},"end":{"line":613,"column":9}},"195":{"start":{"line":610,"column":10},"end":{"line":610,"column":29}},"196":{"start":{"line":611,"column":10},"end":{"line":611,"column":39}},"197":{"start":{"line":612,"column":10},"end":{"line":612,"column":43}},"198":{"start":{"line":614,"column":8},"end":{"line":614,"column":54}},"199":{"start":{"line":639,"column":0},"end":{"line":663,"column":2}},"200":{"start":{"line":640,"column":2},"end":{"line":640,"column":18}},"201":{"start":{"line":641,"column":2},"end":{"line":641,"column":107}},"202":{"start":{"line":641,"column":73},"end":{"line":641,"column":89}},"203":{"start":{"line":641,"column":90},"end":{"line":641,"column":103}},"204":{"start":{"line":643,"column":2},"end":{"line":647,"column":5}},"205":{"start":{"line":644,"column":4},"end":{"line":644,"column":29}},"206":{"start":{"line":645,"column":4},"end":{"line":645,"column":30}},"207":{"start":{"line":646,"column":4},"end":{"line":646,"column":25}},"208":{"start":{"line":649,"column":2},"end":{"line":649,"column":46}},"209":{"start":{"line":651,"column":2},"end":{"line":651,"column":65}},"210":{"start":{"line":652,"column":2},"end":{"line":652,"column":93}},"211":{"start":{"line":654,"column":2},"end":{"line":660,"column":4}},"212":{"start":{"line":655,"column":4},"end":{"line":657,"column":6}},"213":{"start":{"line":656,"column":6},"end":{"line":656,"column":58}},"214":{"start":{"line":659,"column":4},"end":{"line":659,"column":40}},"215":{"start":{"line":662,"column":2},"end":{"line":662,"column":75}},"216":{"start":{"line":685,"column":0},"end":{"line":719,"column":2}},"217":{"start":{"line":686,"column":2},"end":{"line":686,"column":18}},"218":{"start":{"line":687,"column":2},"end":{"line":687,"column":107}},"219":{"start":{"line":687,"column":73},"end":{"line":687,"column":89}},"220":{"start":{"line":687,"column":90},"end":{"line":687,"column":103}},"221":{"start":{"line":689,"column":2},"end":{"line":693,"column":5}},"222":{"start":{"line":690,"column":4},"end":{"line":690,"column":29}},"223":{"start":{"line":691,"column":4},"end":{"line":691,"column":30}},"224":{"start":{"line":692,"column":4},"end":{"line":692,"column":25}},"225":{"start":{"line":695,"column":2},"end":{"line":695,"column":46}},"226":{"start":{"line":697,"column":2},"end":{"line":697,"column":18}},"227":{"start":{"line":698,"column":2},"end":{"line":718,"column":5}},"228":{"start":{"line":699,"column":4},"end":{"line":717,"column":5}},"229":{"start":{"line":700,"column":6},"end":{"line":700,"column":47}},"230":{"start":{"line":701,"column":11},"end":{"line":717,"column":5}},"231":{"start":{"line":702,"column":6},"end":{"line":702,"column":35}},"232":{"start":{"line":703,"column":6},"end":{"line":703,"column":39}},"233":{"start":{"line":705,"column":6},"end":{"line":716,"column":9}},"234":{"start":{"line":706,"column":8},"end":{"line":706,"column":20}},"235":{"start":{"line":707,"column":8},"end":{"line":713,"column":9}},"236":{"start":{"line":708,"column":10},"end":{"line":708,"column":25}},"237":{"start":{"line":709,"column":15},"end":{"line":713,"column":9}},"238":{"start":{"line":710,"column":10},"end":{"line":710,"column":26}},"239":{"start":{"line":711,"column":10},"end":{"line":711,"column":29}},"240":{"start":{"line":712,"column":10},"end":{"line":712,"column":45}},"241":{"start":{"line":715,"column":8},"end":{"line":715,"column":55}},"242":{"start":{"line":809,"column":0},"end":{"line":869,"column":2}},"243":{"start":{"line":810,"column":2},"end":{"line":810,"column":18}},"244":{"start":{"line":811,"column":2},"end":{"line":811,"column":107}},"245":{"start":{"line":811,"column":73},"end":{"line":811,"column":89}},"246":{"start":{"line":811,"column":90},"end":{"line":811,"column":103}},"247":{"start":{"line":813,"column":2},"end":{"line":816,"column":5}},"248":{"start":{"line":814,"column":4},"end":{"line":814,"column":29}},"249":{"start":{"line":815,"column":4},"end":{"line":815,"column":25}},"250":{"start":{"line":818,"column":2},"end":{"line":818,"column":46}},"251":{"start":{"line":819,"column":2},"end":{"line":819,"column":77}},"252":{"start":{"line":821,"column":2},"end":{"line":821,"column":43}},"253":{"start":{"line":822,"column":2},"end":{"line":822,"column":89}},"254":{"start":{"line":824,"column":2},"end":{"line":829,"column":3}},"255":{"start":{"line":825,"column":4},"end":{"line":825,"column":49}},"256":{"start":{"line":826,"column":4},"end":{"line":828,"column":7}},"257":{"start":{"line":827,"column":6},"end":{"line":827,"column":81}},"258":{"start":{"line":831,"column":2},"end":{"line":834,"column":3}},"259":{"start":{"line":832,"column":4},"end":{"line":832,"column":98}},"260":{"start":{"line":833,"column":4},"end":{"line":833,"column":86}},"261":{"start":{"line":836,"column":2},"end":{"line":836,"column":83}},"262":{"start":{"line":838,"column":2},"end":{"line":866,"column":4}},"263":{"start":{"line":839,"column":4},"end":{"line":839,"column":46}},"264":{"start":{"line":840,"column":4},"end":{"line":859,"column":5}},"265":{"start":{"line":841,"column":6},"end":{"line":844,"column":8}},"266":{"start":{"line":847,"column":6},"end":{"line":847,"column":181}},"267":{"start":{"line":850,"column":6},"end":{"line":854,"column":10}},"268":{"start":{"line":856,"column":6},"end":{"line":858,"column":7}},"269":{"start":{"line":857,"column":8},"end":{"line":857,"column":81}},"270":{"start":{"line":861,"column":4},"end":{"line":863,"column":6}},"271":{"start":{"line":862,"column":6},"end":{"line":862,"column":92}},"272":{"start":{"line":865,"column":4},"end":{"line":865,"column":40}},"273":{"start":{"line":868,"column":2},"end":{"line":868,"column":75}},"274":{"start":{"line":939,"column":0},"end":{"line":950,"column":2}},"275":{"start":{"line":940,"column":2},"end":{"line":942,"column":4}},"276":{"start":{"line":944,"column":2},"end":{"line":947,"column":5}},"277":{"start":{"line":945,"column":4},"end":{"line":945,"column":53}},"278":{"start":{"line":946,"column":4},"end":{"line":946,"column":41}},"279":{"start":{"line":949,"column":2},"end":{"line":949,"column":121}},"280":{"start":{"line":994,"column":0},"end":{"line":996,"column":2}},"281":{"start":{"line":995,"column":2},"end":{"line":995,"column":119}},"282":{"start":{"line":1019,"column":0},"end":{"line":1021,"column":2}},"283":{"start":{"line":1020,"column":2},"end":{"line":1020,"column":130}},"284":{"start":{"line":1044,"column":0},"end":{"line":1046,"column":2}},"285":{"start":{"line":1045,"column":2},"end":{"line":1045,"column":120}},"286":{"start":{"line":1069,"column":0},"end":{"line":1071,"column":2}},"287":{"start":{"line":1070,"column":2},"end":{"line":1070,"column":118}},"288":{"start":{"line":1094,"column":0},"end":{"line":1096,"column":2}},"289":{"start":{"line":1095,"column":2},"end":{"line":1095,"column":128}},"290":{"start":{"line":1118,"column":0},"end":{"line":1120,"column":2}},"291":{"start":{"line":1119,"column":2},"end":{"line":1119,"column":119}},"292":{"start":{"line":1145,"column":0},"end":{"line":1196,"column":2}},"293":{"start":{"line":1146,"column":2},"end":{"line":1146,"column":18}},"294":{"start":{"line":1147,"column":2},"end":{"line":1147,"column":107}},"295":{"start":{"line":1147,"column":73},"end":{"line":1147,"column":89}},"296":{"start":{"line":1147,"column":90},"end":{"line":1147,"column":103}},"297":{"start":{"line":1149,"column":2},"end":{"line":1154,"column":5}},"298":{"start":{"line":1150,"column":4},"end":{"line":1150,"column":29}},"299":{"start":{"line":1151,"column":4},"end":{"line":1151,"column":30}},"300":{"start":{"line":1152,"column":4},"end":{"line":1152,"column":29}},"301":{"start":{"line":1153,"column":4},"end":{"line":1153,"column":25}},"302":{"start":{"line":1156,"column":2},"end":{"line":1158,"column":3}},"303":{"start":{"line":1157,"column":4},"end":{"line":1157,"column":36}},"304":{"start":{"line":1160,"column":2},"end":{"line":1160,"column":46}},"305":{"start":{"line":1162,"column":2},"end":{"line":1162,"column":67}},"306":{"start":{"line":1163,"column":2},"end":{"line":1163,"column":55}},"307":{"start":{"line":1165,"column":2},"end":{"line":1165,"column":37}},"308":{"start":{"line":1166,"column":2},"end":{"line":1166,"column":29}},"309":{"start":{"line":1167,"column":2},"end":{"line":1167,"column":90}},"310":{"start":{"line":1169,"column":2},"end":{"line":1193,"column":4}},"311":{"start":{"line":1170,"column":4},"end":{"line":1170,"column":60}},"312":{"start":{"line":1172,"column":4},"end":{"line":1172,"column":23}},"313":{"start":{"line":1174,"column":4},"end":{"line":1181,"column":5}},"314":{"start":{"line":1175,"column":6},"end":{"line":1180,"column":9}},"315":{"start":{"line":1176,"column":8},"end":{"line":1179,"column":9}},"316":{"start":{"line":1177,"column":10},"end":{"line":1177,"column":32}},"317":{"start":{"line":1178,"column":10},"end":{"line":1178,"column":26}},"318":{"start":{"line":1183,"column":4},"end":{"line":1185,"column":5}},"319":{"start":{"line":1184,"column":6},"end":{"line":1184,"column":58}},"320":{"start":{"line":1187,"column":4},"end":{"line":1190,"column":6}},"321":{"start":{"line":1189,"column":6},"end":{"line":1189,"column":91}},"322":{"start":{"line":1192,"column":4},"end":{"line":1192,"column":40}},"323":{"start":{"line":1195,"column":2},"end":{"line":1195,"column":87}},"324":{"start":{"line":1223,"column":0},"end":{"line":1264,"column":2}},"325":{"start":{"line":1224,"column":2},"end":{"line":1224,"column":18}},"326":{"start":{"line":1225,"column":2},"end":{"line":1225,"column":107}},"327":{"start":{"line":1225,"column":73},"end":{"line":1225,"column":89}},"328":{"start":{"line":1225,"column":90},"end":{"line":1225,"column":103}},"329":{"start":{"line":1227,"column":2},"end":{"line":1231,"column":5}},"330":{"start":{"line":1228,"column":4},"end":{"line":1228,"column":29}},"331":{"start":{"line":1229,"column":4},"end":{"line":1229,"column":30}},"332":{"start":{"line":1230,"column":4},"end":{"line":1230,"column":25}},"333":{"start":{"line":1233,"column":2},"end":{"line":1233,"column":46}},"334":{"start":{"line":1235,"column":2},"end":{"line":1237,"column":3}},"335":{"start":{"line":1236,"column":4},"end":{"line":1236,"column":75}},"336":{"start":{"line":1239,"column":2},"end":{"line":1239,"column":65}},"337":{"start":{"line":1240,"column":2},"end":{"line":1240,"column":76}},"338":{"start":{"line":1242,"column":2},"end":{"line":1261,"column":4}},"339":{"start":{"line":1243,"column":4},"end":{"line":1243,"column":36}},"340":{"start":{"line":1244,"column":4},"end":{"line":1244,"column":82}},"341":{"start":{"line":1245,"column":4},"end":{"line":1245,"column":167}},"342":{"start":{"line":1246,"column":4},"end":{"line":1246,"column":49}},"343":{"start":{"line":1248,"column":4},"end":{"line":1254,"column":5}},"344":{"start":{"line":1249,"column":6},"end":{"line":1249,"column":47}},"345":{"start":{"line":1250,"column":11},"end":{"line":1254,"column":5}},"346":{"start":{"line":1251,"column":6},"end":{"line":1251,"column":34}},"347":{"start":{"line":1252,"column":6},"end":{"line":1252,"column":48}},"348":{"start":{"line":1253,"column":6},"end":{"line":1253,"column":50}},"349":{"start":{"line":1256,"column":4},"end":{"line":1258,"column":6}},"350":{"start":{"line":1257,"column":6},"end":{"line":1257,"column":84}},"351":{"start":{"line":1260,"column":4},"end":{"line":1260,"column":40}},"352":{"start":{"line":1263,"column":2},"end":{"line":1263,"column":75}},"353":{"start":{"line":1291,"column":0},"end":{"line":1338,"column":2}},"354":{"start":{"line":1292,"column":2},"end":{"line":1292,"column":18}},"355":{"start":{"line":1293,"column":2},"end":{"line":1293,"column":107}},"356":{"start":{"line":1293,"column":73},"end":{"line":1293,"column":89}},"357":{"start":{"line":1293,"column":90},"end":{"line":1293,"column":103}},"358":{"start":{"line":1295,"column":2},"end":{"line":1310,"column":5}},"359":{"start":{"line":1296,"column":4},"end":{"line":1296,"column":29}},"360":{"start":{"line":1297,"column":4},"end":{"line":1297,"column":30}},"361":{"start":{"line":1298,"column":4},"end":{"line":1298,"column":51}},"362":{"start":{"line":1300,"column":4},"end":{"line":1303,"column":5}},"363":{"start":{"line":1301,"column":6},"end":{"line":1301,"column":79}},"364":{"start":{"line":1302,"column":6},"end":{"line":1302,"column":93}},"365":{"start":{"line":1305,"column":4},"end":{"line":1308,"column":5}},"366":{"start":{"line":1306,"column":6},"end":{"line":1306,"column":67}},"367":{"start":{"line":1307,"column":6},"end":{"line":1307,"column":81}},"368":{"start":{"line":1309,"column":4},"end":{"line":1309,"column":25}},"369":{"start":{"line":1312,"column":2},"end":{"line":1312,"column":46}},"370":{"start":{"line":1313,"column":2},"end":{"line":1313,"column":77}},"371":{"start":{"line":1315,"column":2},"end":{"line":1315,"column":107}},"372":{"start":{"line":1317,"column":2},"end":{"line":1335,"column":4}},"373":{"start":{"line":1318,"column":4},"end":{"line":1318,"column":22}},"374":{"start":{"line":1319,"column":4},"end":{"line":1332,"column":5}},"375":{"start":{"line":1320,"column":6},"end":{"line":1322,"column":8}},"376":{"start":{"line":1321,"column":8},"end":{"line":1321,"column":60}},"377":{"start":{"line":1324,"column":6},"end":{"line":1324,"column":43}},"378":{"start":{"line":1325,"column":6},"end":{"line":1327,"column":7}},"379":{"start":{"line":1326,"column":8},"end":{"line":1326,"column":171}},"380":{"start":{"line":1329,"column":6},"end":{"line":1331,"column":8}},"381":{"start":{"line":1330,"column":8},"end":{"line":1330,"column":89}},"382":{"start":{"line":1334,"column":4},"end":{"line":1334,"column":40}},"383":{"start":{"line":1337,"column":2},"end":{"line":1337,"column":87}},"384":{"start":{"line":1361,"column":0},"end":{"line":1368,"column":2}},"385":{"start":{"line":1362,"column":2},"end":{"line":1365,"column":5}},"386":{"start":{"line":1363,"column":4},"end":{"line":1363,"column":29}},"387":{"start":{"line":1364,"column":4},"end":{"line":1364,"column":30}},"388":{"start":{"line":1367,"column":2},"end":{"line":1367,"column":48}},"389":{"start":{"line":1391,"column":0},"end":{"line":1391,"column":30}}},"branchMap":{"1":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"2":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"3":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":5},"end":{"line":88,"column":24}},{"start":{"line":88,"column":28},"end":{"line":88,"column":49}}]},"4":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"5":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":26},"end":{"line":258,"column":47}},{"start":{"line":258,"column":51},"end":{"line":258,"column":76}}]},"6":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":2},"end":{"line":263,"column":2}},{"start":{"line":263,"column":2},"end":{"line":263,"column":2}}]},"7":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":2},"end":{"line":267,"column":2}},{"start":{"line":267,"column":2},"end":{"line":267,"column":2}}]},"8":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":2},"end":{"line":275,"column":2}},{"start":{"line":275,"column":2},"end":{"line":275,"column":2}}]},"9":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":4},"end":{"line":285,"column":4}},{"start":{"line":285,"column":4},"end":{"line":285,"column":4}}]},"10":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":6},"end":{"line":292,"column":6}},{"start":{"line":292,"column":6},"end":{"line":292,"column":6}}]},"11":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":10},"end":{"line":292,"column":86}},{"start":{"line":293,"column":6},"end":{"line":293,"column":108}}]},"12":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":4},"end":{"line":354,"column":4}},{"start":{"line":354,"column":4},"end":{"line":354,"column":4}}]},"13":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":2},"end":{"line":403,"column":2}},{"start":{"line":403,"column":2},"end":{"line":403,"column":2}}]},"14":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":4},"end":{"line":404,"column":4}},{"start":{"line":404,"column":4},"end":{"line":404,"column":4}}]},"15":{"line":412,"type":"cond-expr","locations":[{"start":{"line":412,"column":84},"end":{"line":412,"column":111}},{"start":{"line":412,"column":114},"end":{"line":412,"column":115}}]},"16":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":4},"end":{"line":417,"column":4}},{"start":{"line":417,"column":4},"end":{"line":417,"column":4}}]},"17":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":6},"end":{"line":421,"column":6}},{"start":{"line":421,"column":6},"end":{"line":421,"column":6}}]},"18":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":2},"end":{"line":457,"column":2}},{"start":{"line":457,"column":2},"end":{"line":457,"column":2}}]},"19":{"line":457,"type":"binary-expr","locations":[{"start":{"line":457,"column":6},"end":{"line":457,"column":30}},{"start":{"line":457,"column":34},"end":{"line":457,"column":84}}]},"20":{"line":536,"type":"cond-expr","locations":[{"start":{"line":536,"column":71},"end":{"line":536,"column":76}},{"start":{"line":536,"column":79},"end":{"line":536,"column":83}}]},"21":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":4},"end":{"line":538,"column":4}},{"start":{"line":538,"column":4},"end":{"line":538,"column":4}}]},"22":{"line":599,"type":"if","locations":[{"start":{"line":599,"column":4},"end":{"line":599,"column":4}},{"start":{"line":599,"column":4},"end":{"line":599,"column":4}}]},"23":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":11},"end":{"line":601,"column":11}},{"start":{"line":601,"column":11},"end":{"line":601,"column":11}}]},"24":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":8},"end":{"line":606,"column":8}},{"start":{"line":606,"column":8},"end":{"line":606,"column":8}}]},"25":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":13},"end":{"line":609,"column":13}},{"start":{"line":609,"column":13},"end":{"line":609,"column":13}}]},"26":{"line":609,"type":"binary-expr","locations":[{"start":{"line":609,"column":17},"end":{"line":609,"column":28}},{"start":{"line":609,"column":32},"end":{"line":609,"column":109}},{"start":{"line":609,"column":113},"end":{"line":609,"column":186}}]},"27":{"line":699,"type":"if","locations":[{"start":{"line":699,"column":4},"end":{"line":699,"column":4}},{"start":{"line":699,"column":4},"end":{"line":699,"column":4}}]},"28":{"line":701,"type":"if","locations":[{"start":{"line":701,"column":11},"end":{"line":701,"column":11}},{"start":{"line":701,"column":11},"end":{"line":701,"column":11}}]},"29":{"line":707,"type":"if","locations":[{"start":{"line":707,"column":8},"end":{"line":707,"column":8}},{"start":{"line":707,"column":8},"end":{"line":707,"column":8}}]},"30":{"line":709,"type":"if","locations":[{"start":{"line":709,"column":15},"end":{"line":709,"column":15}},{"start":{"line":709,"column":15},"end":{"line":709,"column":15}}]},"31":{"line":709,"type":"binary-expr","locations":[{"start":{"line":709,"column":19},"end":{"line":709,"column":30}},{"start":{"line":709,"column":34},"end":{"line":709,"column":111}},{"start":{"line":709,"column":115},"end":{"line":709,"column":188}}]},"32":{"line":819,"type":"binary-expr","locations":[{"start":{"line":819,"column":26},"end":{"line":819,"column":47}},{"start":{"line":819,"column":51},"end":{"line":819,"column":76}}]},"33":{"line":824,"type":"if","locations":[{"start":{"line":824,"column":2},"end":{"line":824,"column":2}},{"start":{"line":824,"column":2},"end":{"line":824,"column":2}}]},"34":{"line":831,"type":"if","locations":[{"start":{"line":831,"column":2},"end":{"line":831,"column":2}},{"start":{"line":831,"column":2},"end":{"line":831,"column":2}}]},"35":{"line":840,"type":"if","locations":[{"start":{"line":840,"column":4},"end":{"line":840,"column":4}},{"start":{"line":840,"column":4},"end":{"line":840,"column":4}}]},"36":{"line":856,"type":"if","locations":[{"start":{"line":856,"column":6},"end":{"line":856,"column":6}},{"start":{"line":856,"column":6},"end":{"line":856,"column":6}}]},"37":{"line":1156,"type":"if","locations":[{"start":{"line":1156,"column":2},"end":{"line":1156,"column":2}},{"start":{"line":1156,"column":2},"end":{"line":1156,"column":2}}]},"38":{"line":1174,"type":"if","locations":[{"start":{"line":1174,"column":4},"end":{"line":1174,"column":4}},{"start":{"line":1174,"column":4},"end":{"line":1174,"column":4}}]},"39":{"line":1174,"type":"binary-expr","locations":[{"start":{"line":1174,"column":8},"end":{"line":1174,"column":23}},{"start":{"line":1174,"column":27},"end":{"line":1174,"column":53}}]},"40":{"line":1176,"type":"if","locations":[{"start":{"line":1176,"column":8},"end":{"line":1176,"column":8}},{"start":{"line":1176,"column":8},"end":{"line":1176,"column":8}}]},"41":{"line":1176,"type":"binary-expr","locations":[{"start":{"line":1176,"column":11},"end":{"line":1176,"column":18}},{"start":{"line":1176,"column":22},"end":{"line":1176,"column":49}}]},"42":{"line":1183,"type":"if","locations":[{"start":{"line":1183,"column":4},"end":{"line":1183,"column":4}},{"start":{"line":1183,"column":4},"end":{"line":1183,"column":4}}]},"43":{"line":1235,"type":"if","locations":[{"start":{"line":1235,"column":2},"end":{"line":1235,"column":2}},{"start":{"line":1235,"column":2},"end":{"line":1235,"column":2}}]},"44":{"line":1244,"type":"cond-expr","locations":[{"start":{"line":1244,"column":69},"end":{"line":1244,"column":74}},{"start":{"line":1244,"column":77},"end":{"line":1244,"column":81}}]},"45":{"line":1245,"type":"cond-expr","locations":[{"start":{"line":1245,"column":120},"end":{"line":1245,"column":129}},{"start":{"line":1245,"column":132},"end":{"line":1245,"column":166}}]},"46":{"line":1245,"type":"binary-expr","locations":[{"start":{"line":1245,"column":44},"end":{"line":1245,"column":76}},{"start":{"line":1245,"column":80},"end":{"line":1245,"column":117}}]},"47":{"line":1248,"type":"if","locations":[{"start":{"line":1248,"column":4},"end":{"line":1248,"column":4}},{"start":{"line":1248,"column":4},"end":{"line":1248,"column":4}}]},"48":{"line":1250,"type":"if","locations":[{"start":{"line":1250,"column":11},"end":{"line":1250,"column":11}},{"start":{"line":1250,"column":11},"end":{"line":1250,"column":11}}]},"49":{"line":1250,"type":"binary-expr","locations":[{"start":{"line":1250,"column":15},"end":{"line":1250,"column":35}},{"start":{"line":1250,"column":39},"end":{"line":1250,"column":125}}]},"50":{"line":1300,"type":"if","locations":[{"start":{"line":1300,"column":4},"end":{"line":1300,"column":4}},{"start":{"line":1300,"column":4},"end":{"line":1300,"column":4}}]},"51":{"line":1305,"type":"if","locations":[{"start":{"line":1305,"column":4},"end":{"line":1305,"column":4}},{"start":{"line":1305,"column":4},"end":{"line":1305,"column":4}}]},"52":{"line":1313,"type":"binary-expr","locations":[{"start":{"line":1313,"column":26},"end":{"line":1313,"column":47}},{"start":{"line":1313,"column":51},"end":{"line":1313,"column":76}}]},"53":{"line":1319,"type":"if","locations":[{"start":{"line":1319,"column":4},"end":{"line":1319,"column":4}},{"start":{"line":1319,"column":4},"end":{"line":1319,"column":4}}]},"54":{"line":1325,"type":"if","locations":[{"start":{"line":1325,"column":6},"end":{"line":1325,"column":6}},{"start":{"line":1325,"column":6},"end":{"line":1325,"column":6}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var util = require('util');","var extend = require('extend');","var _ = require('underscore');","","var azureCommon = require('./../../common/common');","var azureutil = azureCommon.util;","var validate = azureCommon.validate;","var SR = azureCommon.SR;","var StorageServiceClient = azureCommon.StorageServiceClient;","var SharedKeyTable = require('./internal/sharedkeytable');","var RequestHandler = require('./internal/requesthandler');","var TableQuery = require('./tablequery');","var WebResource = azureCommon.WebResource;","var Constants = azureCommon.Constants;","var QueryStringConstants = Constants.QueryStringConstants;","var HeaderConstants = Constants.HeaderConstants;","var TableConstants = Constants.TableConstants;","var RequestLocationMode = Constants.RequestLocationMode;","","// Models requires","var TableResult = require('./models/tableresult');","var entityResult = require('./models/entityresult');","var BatchResult = require('./models/batchresult');","var ServiceStatsParser = azureCommon.ServiceStatsParser;","var AclResult = azureCommon.AclResult;","var TableUtilities = require('./tableutilities');","","/**","* Creates a new TableService object.","* If no connection string or storageaccount and storageaccesskey are provided,","* the AZURE_STORAGE_CONNECTION_STRING or AZURE_STORAGE_ACCOUNT and AZURE_STORAGE_ACCESS_KEY environment variables will be used.","* @class","* The TableService object allows you to peform management operations with the Microsoft Azure Table Service.","* The Table Service stores data in rows of key-value pairs. A table is composed of multiple rows, and each row","* contains key-value pairs. There is no schema, so each row in a table may store a different set of keys.","*","* For more information on the Table Service, as well as task focused information on using it from a Node.js application, see","* [How to Use the Table Service from Node.js](http://azure.microsoft.com/en-us/documentation/articles/storage-nodejs-how-to-use-table-storage/).","* The following defaults can be set on the Table service.","* defaultTimeoutIntervalInMs                          The default timeout interval, in milliseconds, to use for request made via the Table service.","* defaultClientRequestTimeoutInMs                     The default timeout of client requests, in milliseconds, to use for the request made via the Table service.","* defaultMaximumExecutionTimeInMs                     The default maximum execution time across all potential retries, for requests made via the Table service.","* defaultLocationMode                                 The default location mode for requests made via the Table service.","* defaultPayloadFormat                                The default payload format for requests made via the Table service.","* useNagleAlgorithm                                   Determines whether the Nagle algorithm is used for requests made via the Table service.; true to use the  ","*                                                     Nagle algorithm; otherwise, false. The default value is false.","* @constructor","* @extends {StorageServiceClient}","*","* @param {string} [storageAccountOrConnectionString]  The storage account or the connection string.","* @param {string} [storageAccessKey]                  The storage access key.","* @param {string|object} [host]                       The host address. To define primary only, pass a string. ","*                                                     Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.","* @param {string} [sasToken]                          The Shared Access Signature token.","* @param {string} [endpointSuffix]                    The endpoint suffix.","*/","function TableService(storageAccountOrConnectionString, storageAccessKey, host, sasToken, endpointSuffix) {","  var storageServiceSettings = StorageServiceClient.getStorageSettings(storageAccountOrConnectionString, storageAccessKey, host, sasToken, endpointSuffix);","","  TableService['super_'].call(this,","    storageServiceSettings._name,","    storageServiceSettings._key,","    storageServiceSettings._tableEndpoint,","    storageServiceSettings._usePathStyleUri,","    storageServiceSettings._sasToken);","","  if (this.anonymous) {","    throw new Error(SR.ANONYMOUS_ACCESS_BLOBSERVICE_ONLY);","  }","","  if(this.storageAccount && this.storageAccessKey) {","    this.storageCredentials = new SharedKeyTable(this.storageAccount, this.storageAccessKey, this.usePathStyleUri);","  }","","  this.defaultPayloadFormat = TableUtilities.PayloadFormat.MINIMAL_METADATA;","}","","util.inherits(TableService, StorageServiceClient);","","// Table service methods","","/**","* Gets the service stats for a storage account’s Table service.","*","* @this {TableService}","* @param {object}         [options]                                       The request options.","* @param {LocationMode}   [options.locationMode]                          Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}            [options.timeoutIntervalInMs]                   The server timeout interval, in milliseconds, to use for the request.","* @param {int}            [options.clientRequestTimeoutInMs]              The timeout of client requests, in milliseconds, to use for the request.","* @param {int}            [options.maximumExecutionTimeInMs]              The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}         [options.clientRequestId]                       A string that represents the client request ID with a 1KB character limit.","* @param {bool}           [options.useNagleAlgorithm]                     Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}  callback                                        `error` will contain information if an error occurs; ","*                                                                         otherwise `[result]{@link ServiceStats}` will contain the stats.","*                                                                         `response` will contain information related to this operation.","*/","TableService.prototype.getServiceStats = function (optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getServiceStats', function (v) {","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  options.requestLocationMode = Constants.RequestLocationMode.PRIMARY_OR_SECONDARY;","","  var webResource = WebResource.get()","    .withQueryOption(QueryStringConstants.COMP, 'stats')","    .withQueryOption(QueryStringConstants.RESTYPE, 'service');","","  var processResponseCallback = function (responseObject, next) {","    responseObject.serviceStatsResult = null;","    if (!responseObject.error) {","      responseObject.serviceStatsResult = ServiceStatsParser.parse(responseObject.response.body.StorageServiceStats);","    }","","    // function to be called after all filters","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.serviceStatsResult, returnObject.response);","    };","","    // call the first filter","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Gets the properties of a storage account’s Table service, including Azure Storage Analytics.","*","* @this {TableService}","* @param {object}             [options]                                    The request options.","* @param {LocationMode}       [options.locationMode]                       Specifies the location mode used to decide which location the request should be sent to. ","*                                                                          Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]           The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]           The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                          The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                          execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                    A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                  Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                          The default value is false.","* @param {errorOrResult}  callback                                         `error` will contain information if an error occurs; ","*                                                                          otherwise `[result]{@link ServiceProperties}` will contain the properties.","*                                                                         `response` will contain information related to this operation.","*/","TableService.prototype.getServiceProperties = function (optionsOrCallback, callback) {","  return this.getAccountServiceProperties(optionsOrCallback, callback);","};","","/**","* Sets the properties of a storage account’s Table service, including Azure Storage Analytics.","* You can also use this operation to set the default request version for all incoming requests that do not have a version specified.","*","* @this {TableService}","* @param {object}             serviceProperties                            The service properties.","* @param {object}             [options]                                    The request options.","* @param {LocationMode}       [options.locationMode]                       Specifies the location mode used to decide which location the request should be sent to. ","*                                                                          Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]           The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]           The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                          The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                          execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                    A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                  Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                          The default value is false.","* @param {errorOrResponse}  callback                                       `error` will contain information if an error occurs; ","*                                                                          `response` will contain information related to this operation.","*/","TableService.prototype.setServiceProperties = function (serviceProperties, optionsOrCallback, callback) {","  return this.setAccountServiceProperties(serviceProperties, optionsOrCallback, callback);","};","","/**","* Lists a segment containing a collection of table items under the specified account.","*","* @this {TableService}","* @param {object}             currentToken                                      A continuation token returned by a previous listing operation. Please use 'null' or 'undefined' if this is the first operation.","* @param {object}             [options]                                         The create options or callback function.","* @param {int}                [options.maxResults]                              Specifies the maximum number of tables to return per call to Azure ServiceClient. ","* @param {LocationMode}       [options.locationMode]                            Specifies the location mode used to decide which location the request should be sent to. ","*                                                                               Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                     The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]                The timeout of client requests, in milliseconds, to use for the request.","* @param {string}             [options.payloadFormat]                           The payload format to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]                The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                               The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                               execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                         A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                       Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                               The default value is false.","* @param {errorOrResult}  callback                                              `error` will contain information if an error occurs; ","*                                                                               otherwise `result` will contain `entries` and `continuationToken`. ","*                                                                               `entries`  gives a list of tables and the `continuationToken` is used for the next listing operation.","*                                                                               `response` will contain information related to this operation.","*/","TableService.prototype.listTablesSegmented = function (currentToken, optionsOrCallback, callback) {","  this.listTablesSegmentedWithPrefix(null /* prefix */, currentToken, optionsOrCallback, callback);","};","","/**","* Lists a segment containing a collection of table items under the specified account.","*","* @this {TableService}","* @param {string}             prefix                                            The prefix of the table name.","* @param {object}             currentToken                                      A continuation token returned by a previous listing operation. Please use 'null' or 'undefined' if this is the first operation.","* @param {object}             [options]                                         The create options or callback function.","* @param {int}                [options.maxResults]                              Specifies the maximum number of tables to return per call to Azure ServiceClient. ","* @param {LocationMode}       [options.locationMode]                            Specifies the location mode used to decide which location the request should be sent to. ","*                                                                               Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                     The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]                The timeout of client requests, in milliseconds, to use for the request.","* @param {string}             [options.payloadFormat]                           The payload format to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]                The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                               The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                               execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                         A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                       Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                               The default value is false.","* @param {errorOrResult}  callback                                              `error` will contain information if an error occurs; ","*                                                                               otherwise `result` will contain `entries` and `continuationToken`. ","*                                                                               `entries`  gives a list of tables and the `continuationToken` is used for the next listing operation.","*                                                                               `response` will contain information related to this operation.","*/","TableService.prototype.listTablesSegmentedWithPrefix = function (prefix, currentToken, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('listTables', function (v) {","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  options.payloadFormat = options.payloadFormat || this.defaultPayloadFormat;","","  var webResource = WebResource.get(TableConstants.TABLE_SERVICE_TABLE_NAME);","  RequestHandler.setTableRequestHeadersAndBody(webResource, null, options.payloadFormat);","","  if(!azureutil.objectIsNull(currentToken)) {","    webResource.withQueryOption(TableConstants.NEXT_TABLE_NAME, currentToken.nextTableName);","  }","","  if(!azureutil.objectIsNull(prefix)) {","    var query = new TableQuery()","      .where(TableConstants.TABLE_NAME + ' >= ?', prefix)","      .and(TableConstants.TABLE_NAME + ' < ?', prefix + '{');","    ","    webResource.withQueryOption(QueryStringConstants.FILTER, query.toQueryObject().$filter);","  }","","  if(!azureutil.objectIsNull(options.maxResults)) {","    var query = new TableQuery().top(options.maxResults);","    webResource.withQueryOption(QueryStringConstants.TOP, query.toQueryObject().$top);","  }","","  options.requestLocationMode = azureutil.getNextListingLocationMode(currentToken);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.listTablesResult = null;","","    if (!responseObject.error) {","      responseObject.listTablesResult = {","        entries: null,","        continuationToken: null","      };","      responseObject.listTablesResult.entries = TableResult.parse(responseObject.response);","","      if (responseObject.response.headers[TableConstants.CONTINUATION_NEXT_TABLE_NAME] &&","      !azureutil.objectIsEmpty(responseObject.response.headers[TableConstants.CONTINUATION_NEXT_TABLE_NAME])) {","        responseObject.listTablesResult.continuationToken = {","          nextTableName: null,","          targetLocation: null","        };","","        responseObject.listTablesResult.continuationToken.nextTableName = responseObject.response.headers[TableConstants.CONTINUATION_NEXT_TABLE_NAME];","        responseObject.listTablesResult.continuationToken.targetLocation = responseObject.targetLocation;","      }","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.listTablesResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","// Table Methods","","/**","* Gets the table's ACL.","*","* @this {TableService}","* @param {string}             table                                        The table name.","* @param {object}             [options]                                    The request options.","* @param {LocationMode}       [options.locationMode]                       Specifies the location mode used to decide which location the request should be sent to. ","*                                                                          Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]           The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]           The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                          The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                          execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                    A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                  Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                          The default value is false.","* @param {errorOrResult}  callback                                         `error` will contain information if an error occurs; ","*                                                                          otherwise `result` will contain the ACL information for the table. See `[AccessPolicy]{@link AccessPolicy}` for detailed information.","*                                                                          `response` will contain information related to this operation.","*/","TableService.prototype.getTableAcl = function (table, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getTableAcl', function (v) {","    v.string(table, 'table');","    v.tableNameIsValid(table);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  options.requestLocationMode = Constants.RequestLocationMode.PRIMARY_OR_SECONDARY;","","  var webResource = WebResource.get(table)","    .withQueryOption(QueryStringConstants.COMP, 'acl');","","  var processResponseCallback = function (responseObject, next) {","    responseObject.tableResult = null;","    if (!responseObject.error) {","      responseObject.tableResult = new TableResult(table);","      responseObject.tableResult.signedIdentifiers = AclResult.parse(responseObject.response.body);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.tableResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Updates the table's ACL.","*","* @this {TableService}","* @param {string}                                 table                                        The table name.","* @param {Object.<string, AccessPolicy>}             signedIdentifiers                            The table ACL settings. See `[AccessPolicy]{@link AccessPolicy}` for detailed information.","* @param {object}                                 [options]                                    The request options.","* @param {LocationMode}                           [options.locationMode]                       Specifies the location mode used to decide which location the request should be sent to. ","*                                                                                              Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                                    [options.timeoutIntervalInMs]                The server timeout interval, in milliseconds, to use for the request.","* @param {int}                                    [options.clientRequestTimeoutInMs]           The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                                    [options.maximumExecutionTimeInMs]           The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                                              The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                                              execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}                                 [options.clientRequestId]                    A string that represents the client request ID with a 1KB character limit.","* @param {bool}                                   [options.useNagleAlgorithm]                  Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                                              The default value is false.","* @param {errorOrResult}                          callback                                     `error` will contain information if an error occurs; ","*                                                                                              otherwise `result` will contain information for the table.","*                                                                                              `response` will contain information related to this operation.","*/","TableService.prototype.setTableAcl = function (table, signedIdentifiers, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('setTableAcl', function (v) {","    v.string(table, 'table');","    v.tableNameIsValid(table);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  var policies = null;","  if (signedIdentifiers) {","    if(_.isArray(signedIdentifiers)) {","      throw new TypeError(SR.INVALID_SIGNED_IDENTIFIERS);","    }","    policies = AclResult.serialize(signedIdentifiers);","  }","","  var webResource = WebResource.put(table)","    .withQueryOption(QueryStringConstants.COMP, 'acl')","    .withHeader(HeaderConstants.CONTENT_LENGTH, !azureutil.objectIsNull(policies) ? Buffer.byteLength(policies) : 0)","    .withBody(policies);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.tableResult = null;","    if (!responseObject.error) {","","      // SetTableAcl doesn't actually return anything in the response","      responseObject.tableResult = new TableResult(table);","      if (signedIdentifiers) {","        responseObject.tableResult.signedIdentifiers = signedIdentifiers;","      }","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.tableResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, webResource.body, options, processResponseCallback);","};","","/**","* Retrieves a shared access signature token.","*","* @this {TableService}","* @param {string}                   table                                               The table name.","* @param {object}                   sharedAccessPolicy                                  The shared access policy.","* @param {string}                   [sharedAccessPolicy.Id]                             The signed identifier.","* @param {object}                   [sharedAccessPolicy.AccessPolicy.Permissions]       The permission type.","* @param {date|string}              [sharedAccessPolicy.AccessPolicy.Start]             The time at which the Shared Access Signature becomes valid (The UTC value will be used).","* @param {date|string}              [sharedAccessPolicy.AccessPolicy.Expiry]            The time at which the Shared Access Signature becomes expired (The UTC value will be used).","* @param {string}                   [sharedAccessPolicy.AccessPolicy.IPAddressOrRange]  An IP address or a range of IP addresses from which to accept requests. When specifying a range, note that the range is inclusive.","* @param {string}                   [sharedAccessPolicy.AccessPolicy.Protocols]         The protocols permitted for a request made with the account SAS. ","*                                                                                       Possible values are both HTTPS and HTTP (https,http) or HTTPS only (https). The default value is https,http.","* @param {string}                   [sharedAccessPolicy.AccessPolicy.StartPk]           The starting Partition Key for which the SAS will be valid.","* @param {string}                   [sharedAccessPolicy.AccessPolicy.EndPk]             The ending Partition Key for which the SAS will be valid.","* @param {string}                   [sharedAccessPolicy.AccessPolicy.StartRk]           The starting Row Key for which the SAS will be valid.","* @param {string}                   [sharedAccessPolicy.AccessPolicy.EndRk]             The ending Row Key for which the SAS will be valid.","* @return {object}                                                                      An object with the shared access signature.","*/","TableService.prototype.generateSharedAccessSignature = function (table, sharedAccessPolicy) {","  // check if the TableService is able to generate a shared access signature","  if (!this.storageCredentials || !this.storageCredentials.generateSignedQueryString) {","    throw new Error(SR.CANNOT_CREATE_SAS_WITHOUT_ACCOUNT_KEY);","  }","","  validate.validateArgs('generateSharedAccessSignature', function (v) {","    v.string(table, 'table');","    v.tableNameIsValid(table);","    v.object(sharedAccessPolicy, 'sharedAccessPolicy');","  });","  ","  var lowerCasedTableName = table.toLowerCase();","  return this.storageCredentials.generateSignedQueryString(Constants.ServiceType.Table, lowerCasedTableName, sharedAccessPolicy, null, { tableName: lowerCasedTableName });","};","","/**","* Checks whether or not a table exists on the service.","*","* @this {TableService}","* @param {string}             table                                   The table name.","* @param {object}             [options]                               The request options.","* @param {LocationMode}       [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {errorOrResult}  callback                                    `error` will contain information if an error occurs; ","*                                                                     otherwise `result` will contain the table information including `exists` boolean member. ","*                                                                     `response` will contain information related to this operation.","*/","TableService.prototype.doesTableExist = function (table, optionsOrCallback, callback) {","  this._doesTableExist(table, false, optionsOrCallback, callback);","};","","/**","* Creates a new table within a storage account.","*","* @this {TableService}","* @param {string}             table                                   The table name.","* @param {object}             [options]                               The request options.","* @param {LocationMode}       [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {errorOrResult}  callback                                    `error` will contain information if an error occurs; ","*                                                                     otherwise `result` will contain the new table information.","*                                                                     `response` will contain information related to this operation.","*/","TableService.prototype.createTable = function (table, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createTable', function (v) {","    v.string(table, 'table');","    v.tableNameIsValid(table);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  var tableDescriptor = TableResult.serialize(table);","","  var webResource = WebResource.post('Tables')","    .withHeader(HeaderConstants.PREFER, HeaderConstants.PREFER_NO_CONTENT);","","  RequestHandler.setTableRequestHeadersAndBody(webResource, tableDescriptor, this.defaultPayloadFormat);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.tableResponse = {};","    responseObject.tableResponse.isSuccessful = responseObject.error ? false : true;","    responseObject.tableResponse.statusCode = responseObject.response.statusCode;","    if (!responseObject.error) {","      responseObject.tableResponse.TableName = table;","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.tableResponse, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, webResource.body, options, processResponseCallback);","};","","/**","* Creates a new table within a storage account if it does not exists.","*","* @this {TableService}","* @param {string}             table                                   The table name.","* @param {object}             [options]                               The request options.","* @param {LocationMode}       [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {errorOrResult}  callback                                    `error` will contain information if an error occurs; ","*                                                                     `result` will contain the table information including `created` boolean member","*                                                                     `response` will contain information related to this operation.","*","* @example","* var azure = require('azure-storage');","* var tableService = azure.createTableService();","* tableService.createTableIfNotExists('tasktable', function(error) {","*   if(!error) { ","*     // Table created or exists","*   }","* });","*/","TableService.prototype.createTableIfNotExists = function (table, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createTableIfNotExists', function (v) {","    v.string(table, 'table');","    v.tableNameIsValid(table);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  var self = this;","  self._doesTableExist(table, true, options, function(error, result, response) {","    var exists = result.exists;","    result.created = false;","    delete result.exists;","    ","    if (error) {","      callback(error, result, response);","    } else if (exists) {","      response.isSuccessful = true;","      callback(error, result, response);","    } else {","      self.createTable(table, options, function(createError, createResult, response) {","        if (!createError) {","          createResult.created = true;","        }","        else if (createError && createError.statusCode === Constants.HttpConstants.HttpResponseCodes.Conflict && createError.code === Constants.TableErrorCodeStrings.TABLE_ALREADY_EXISTS) {","          createError = null;","          createResult.created = false;","          createResult.isSuccessful = true;","        }","        callback(createError, createResult, response);","      });","    }","  });","};","","/**","* Deletes a table from a storage account.","*","* @this {TableService}","* @param {string}             table                                   The table name.","* @param {object}             [options]                               The request options.","* @param {LocationMode}       [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {errorOrResponse}  callback                                  `error` will contain information if an error occurs;","*                                                                     `response` will contain information related to this operation.","*/","TableService.prototype.deleteTable = function (table, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('deleteTable', function (v) {","    v.string(table, 'table');","    v.tableNameIsValid(table);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  var webResource = WebResource.del('Tables(\\'' + table + '\\')');","  RequestHandler.setTableRequestHeadersAndBody(webResource, null, this.defaultPayloadFormat);","","  var processResponseCallback = function (responseObject, next) {","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Deletes a table from a storage account, if it exists.","*","* @this {TableService}","* @param {string}             table                                   The table name.","* @param {object}             [options]                               The request options.","* @param {LocationMode}       [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {errorOrResult}  callback                                    `error` will contain information if an error occurs; ","*                                                                     `result` will be `true` if table was deleted, false otherwise","*                                                                     `response` will contain information related to this operation.","*/","TableService.prototype.deleteTableIfExists = function (table, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('deleteTableIfExists', function (v) {","    v.string(table, 'table');","    v.tableNameIsValid(table);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  var self = this;","  self._doesTableExist(table, true, options, function(error, result, response) {","    if (error) {","      callback(error, result.exists, response);","    } else if (!result.exists) {","      response.isSuccessful = true;","      callback(error, false, response);","    } else {","      self.deleteTable(table, options, function(deleteError, deleteResponse) {","        var deleted;","        if (!deleteError) {","          deleted = true;","        } else if (deleteError && deleteError.statusCode === Constants.HttpConstants.HttpResponseCodes.NotFound && deleteError.code === Constants.StorageErrorCodeStrings.RESOURCE_NOT_FOUND) {","          deleted = false;","          deleteError = null;","          deleteResponse.isSuccessful = true;","        }","","        callback(deleteError, deleted, deleteResponse);","      });","    }","  });","};","","// Table Entity Methods","","/**","* Queries data in a table. To retrieve a single entity by partition key and row key, use retrieve entity.","*","* @this {TableService}","* @param {string}             table                                                The table name.","* @param {TableQuery}         tableQuery                                           The query to perform. Use null, undefined, or new TableQuery() to get all of the entities in the table.","* @param {object}             currentToken                                         A continuation token returned by a previous listing operation. ","*                                                                                  Please use 'null' or 'undefined' if this is the first operation.","* @param {object}             [options]                                            The request options.","* @param {LocationMode}       [options.locationMode]                               Specifies the location mode used to decide which location the request should be sent to. ","*                                                                                  Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                        The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]                   The timeout of client requests, in milliseconds, to use for the request.","* @param {string}             [options.payloadFormat]                              The payload format to use for the request.","* @param {bool}               [options.autoResolveProperties]                      If true, guess at all property types.","* @param {int}                [options.maximumExecutionTimeInMs]                   The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                                  The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                                  execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                            A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                          Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                                  The default value is false.","* @param {Function(entity)} [options.entityResolver]                               The entity resolver. Given a single entity returned by the query, returns a modified object which is added to ","*                                                                                  the entities array.","* @param {TableService~propertyResolver}  [options.propertyResolver]               The property resolver. Given the partition key, row key, property name, property value,","*                                                                                  and the property Edm type if given by the service, returns the Edm type of the property.","* @param {TableService~queryResponse} callback                                     `error` will contain information if an error occurs; ","*                                                                                  otherwise `entities` will contain the entities returned by the query. ","*                                                                                  If more matching entities exist, and could not be returned,","*                                                                                  `queryResultContinuation` will contain a continuation token that can be used","*                                                                                  to retrieve the next set of results.","*                                                                                  `response` will contain information related to this operation.","*","* The logic for returning entity types can get complicated.  Here is the algorithm used:","* ```","* var propertyType;","*","* if (propertyResovler) {                      // If the caller provides a propertyResolver in the options, use it","*   propertyType = propertyResolver(partitionKey, rowKey, propertyName, propertyValue, propertyTypeFromService);","* } else if (propertyTypeFromService) {        // If the service provides us a property type, use it.  See below for an explanation of when this will and won't occur.","*   propertyType = propertyTypeFromService;","* } else if (autoResolveProperties) {          // If options.autoResolveProperties is set to true","*   if (javascript type is string) {           // See below for an explanation of how and why autoResolveProperties works as it does.","*     propertyType = 'Edm.String';","*   } else if (javascript type is boolean) {","*     propertyType = 'Edm.Boolean';","*   }","* }","*","* if (propertyType) {","*   // Set the property type on the property.","* } else {","*   // Property gets no EdmType. ","* }","* ```","* Notes:","* ","* * The service only provides a type if JsonFullMetadata or JsonMinimalMetadata is used, and if the type is Int64, Guid, Binary, or DateTime.","* * Explanation of autoResolveProperties:","*     * String gets correctly resolved to 'Edm.String'.","*     * Int64, Guid, Binary, and DateTime all get resolved to 'Edm.String.'  This only happens if JsonNoMetadata is used (otherwise the service will provide the propertyType in a prior step).","*     * Boolean gets correctly resolved to 'Edm.Boolean'.","*     * For both Int32 and Double, no type information is returned, even in the case of autoResolveProperties = true.  This is due to an","*          inability to distinguish between the two in certain cases.","*","* @example","* var azure = require('azure-storage');","* var tableService = azure.createTableService();","* // tasktable should already exist and have entities","* ","* // returns all entities in tasktable, and a continuation token for the next page of results if necessary","* tableService.queryEntities('tasktable', null, null \\/*currentToken*\\/, function(error, result) {","*   if(!error) { ","*     var entities = result.entities;","*     // do stuff with the returned entities if there are any","*   }","* });","* ","* // returns field1 and field2 of the entities in tasktable, and a continuation token for the next page of results if necessary","* var tableQuery = new TableQuery().select('field1', 'field2');","* tableService.queryEntities('tasktable', tableQuery, null \\/*currentToken*\\/, function(error, result) {","*   if(!error) { ","*     var entities = result.entities;","*     // do stuff with the returned entities if there are any","*   }","* });","*/","TableService.prototype.queryEntities = function (table, tableQuery, currentToken, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('queryEntities', function (v) {","    v.string(table, 'table');","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  options.payloadFormat = options.payloadFormat || this.defaultPayloadFormat;","","  var webResource = WebResource.get(table);","  RequestHandler.setTableRequestHeadersAndBody(webResource, null, options.payloadFormat);","","  if (tableQuery) {","    var queryString = tableQuery.toQueryObject();","    Object.keys(queryString).forEach(function (queryStringName) {","      webResource.withQueryOption(queryStringName, queryString[queryStringName]);","    });","  }","","  if(!azureutil.objectIsNull(currentToken)) {","    webResource.withQueryOption(TableConstants.NEXT_PARTITION_KEY, currentToken.nextPartitionKey);","    webResource.withQueryOption(TableConstants.NEXT_ROW_KEY, currentToken.nextRowKey);","  }","","  options.requestLocationMode = azureutil.getNextListingLocationMode(currentToken);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.queryEntitiesResult = null;","    if (!responseObject.error) {","      responseObject.queryEntitiesResult = {","        entries: null,","        continuationToken: null","      };","","      // entries","      responseObject.queryEntitiesResult.entries = entityResult.parseQuery(responseObject.response, options.autoResolveProperties, options.propertyResolver, options.entityResolver);","","      // continuation token","      var continuationToken = {","          nextPartitionKey: responseObject.response.headers[TableConstants.CONTINUATION_NEXT_PARTITION_KEY],","          nextRowKey: responseObject.response.headers[TableConstants.CONTINUATION_NEXT_ROW_KEY],","          targetLocation: responseObject.targetLocation","        };","","      if (!azureutil.IsNullOrEmptyOrUndefinedOrWhiteSpace(continuationToken.nextPartitionKey)) {","        responseObject.queryEntitiesResult.continuationToken = continuationToken;","      }","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.queryEntitiesResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Retrieves an entity from a table.","*","* @this {TableService}","* @param {string}             table                                           The table name.","* @param {string}             partitionKey                                    The partition key.","* @param {string}             rowKey                                          The row key.","* @param {object}             [options]                                       The request options.","* @param {LocationMode}       [options.locationMode]                          Specifies the location mode used to decide which location the request should be sent to. ","*                                                                             Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                   The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]              The timeout of client requests, in milliseconds, to use for the request.","* @param {string}             [options.payloadFormat]                         The payload format to use for the request.","* @param {bool}               [options.autoResolveProperties]                 If true, guess at all property types.","* @param {int}                [options.maximumExecutionTimeInMs]              The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                             The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                             execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                       A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                     Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                             The default value is false.","* @param {TableService~propertyResolver}  [options.propertyResolver]          The property resolver. Given the partition key, row key, property name, property value,","*                                                                             and the property Edm type if given by the service, returns the Edm type of the property.","* @param {Function(entity)} [options.entityResolver]                          The entity resolver. Given the single entity returned by the query, returns a modified object.","* @param {errorOrResult}  callback                                            `error` will contain information if an error occurs; ","*                                                                             otherwise `result` will be the matching entity.","*                                                                             `response` will contain information related to this operation.","*","* The logic for returning entity types can get complicated.  Here is the algorithm used:","* ```","* var propertyType;","*","* if (propertyResovler) {                      // If the caller provides a propertyResolver in the options, use it","*   propertyType = propertyResolver(partitionKey, rowKey, propertyName, propertyValue, propertyTypeFromService);","* } else if (propertyTypeFromService) {        // If the service provides us a property type, use it.  See below for an explanation of when this will and won't occur.","*   propertyType = propertyTypeFromService;","* } else if (autoResolveProperties) {          // If options.autoResolveProperties is set to true","*   if (javascript type is string) {           // See below for an explanation of how and why autoResolveProperties works as it does.","*     propertyType = 'Edm.String';","*   } else if (javascript type is boolean) {","*     propertyType = 'Edm.Boolean';","*   }","* }","*","* if (propertyType) {","*   // Set the property type on the property.","* } else {","*   // Property gets no EdmType. ","* }","* ```","* Notes:","* ","* * The service only provides a type if JsonFullMetadata or JsonMinimalMetadata is used, and if the type is Int64, Guid, Binary, or DateTime.","* * Explanation of autoResolveProperties:","*     * String gets correctly resolved to 'Edm.String'.","*     * Int64, Guid, Binary, and DateTime all get resolved to 'Edm.String.'  This only happens if JsonNoMetadata is used (otherwise the service will provide the propertyType in a prior step).","*     * Boolean gets correctly resolved to 'Edm.Boolean'.","*     * For both Int32 and Double, no type information is returned, even in the case of autoResolveProperties = true.  This is due to an","*          inability to distinguish between the two in certain cases.","*","* @example","* var azure = require('azure-storage');","* var tableService = azure.createTableService();","* tableService.retrieveEntity('tasktable', 'tasksSeattle', '1', function(error, serverEntity) {","*   if(!error) {","*     // Entity available in serverEntity variable","*   }","* });","*/","TableService.prototype.retrieveEntity = function (table, partitionKey, rowKey, optionsOrCallback, callback) {","  var entityDescriptor = { PartitionKey: {_: partitionKey, $: 'Edm.String'},","    RowKey: {_: rowKey, $: 'Edm.String'},","  };","","  validate.validateArgs('retrieveEntity', function (v) {","    v.stringAllowEmpty(partitionKey, 'partitionKey');","    v.stringAllowEmpty(rowKey, 'rowKey');","  });","","  this._performEntityOperation(TableConstants.Operations.RETRIEVE, table, entityDescriptor, optionsOrCallback, callback);","};","","/**","* Inserts a new entity into a table.","*","* @this {TableService}","* @param {string}             table                                           The table name.","* @param {object}             entityDescriptor                                The entity descriptor.","* @param {object}             [options]                                       The request options.","* @param {string}             [options.echoContent]                           Whether or not to return the entity upon a successful insert. Default to false.","* @param {string}             [options.payloadFormat]                         The payload format to use in the response, if options.echoContent is true.","* @param {LocationMode}       [options.locationMode]                          Specifies the location mode used to decide which location the request should be sent to. ","*                                                                             Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                   The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]              The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]              The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                             The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                             execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                       A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                     Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                             The default value is false.","* @param {TableService~propertyResolver}  [options.propertyResolver]          The property resolver. Only applied if echoContent is true. Given the partition key, row key, property name, ","*                                                                             property value, and the property Edm type if given by the service, returns the Edm type of the property.","* @param {Function(entity)} [options.entityResolver]                          The entity resolver. Only applied if echoContent is true. Given the single entity returned by the insert, returns ","*                                                                             a modified object.","* @param {errorOrResult}  callback                                            `error` will contain information if an error occurs; ","*                                                                             otherwise `result` will contain the entity information.","*                                                                             `response` will contain information related to this operation.","*","* @example","* var azure = require('azure-storage');","* var tableService = azure.createTableService();","* var task1 = {","*   PartitionKey : {'_': 'tasksSeattle', '$':'Edm.String'},","*   RowKey: {'_': '1', '$':'Edm.String'},","*   Description: {'_': 'Take out the trash', '$':'Edm.String'},","*   DueDate: {'_': new Date(2011, 12, 14, 12), '$':'Edm.DateTime'}","* };","* tableService.insertEntity('tasktable', task1, function(error) {","*   if(!error) {","*     // Entity inserted","*   }","* }); ","*/","TableService.prototype.insertEntity = function (table, entityDescriptor, optionsOrCallback, callback) {","  this._performEntityOperation(TableConstants.Operations.INSERT, table, entityDescriptor, optionsOrCallback, callback);","};","","/**","* Inserts or updates a new entity into a table.","*","* @this {TableService}","* @param {string}             table                                   The table name.","* @param {object}             entityDescriptor                        The entity descriptor.","* @param {object}             [options]                               The request options.","* @param {LocationMode}       [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {errorOrResult}  callback                                    `error` will contain information if an error occurs; ","*                                                                     otherwise `result` will contain the entity information.","*                                                                     `response` will contain information related to this operation.","*/","TableService.prototype.insertOrReplaceEntity = function (table, entityDescriptor, optionsOrCallback, callback) {","  this._performEntityOperation(TableConstants.Operations.INSERT_OR_REPLACE, table, entityDescriptor, optionsOrCallback, callback);","};","","/**","* Replaces an existing entity within a table. To replace conditionally based on etag, set entity['.metadata']['etag'].","*","* @this {TableService}","* @param {string}             table                                   The table name.","* @param {object}             entityDescriptor                        The entity descriptor.","* @param {object}             [options]                               The request options.","* @param {LocationMode}       [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {errorOrResult}  callback                                    `error` will contain information if an error occurs; ","*                                                                     otherwise `result` will contain the entity information.","*                                                                     `response` will contain information related to this operation.","*/","TableService.prototype.replaceEntity = function (table, entityDescriptor, optionsOrCallback, callback) {","  this._performEntityOperation(TableConstants.Operations.REPLACE, table, entityDescriptor, optionsOrCallback, callback);","};","","/**","* Updates an existing entity within a table by merging new property values into the entity. To merge conditionally based on etag, set entity['.metadata']['etag'].","*","* @this {TableService}","* @param {string}             table                                   The table name.","* @param {object}             entityDescriptor                        The entity descriptor. ","* @param {object}             [options]                               The request options.","* @param {LocationMode}       [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {errorOrResult}  callback                                    `error` will contain information if an error occurs; ","*                                                                     otherwise `result` will contain the entity information.","*                                                                     response` will contain information related to this operation.","*/","TableService.prototype.mergeEntity = function (table, entityDescriptor, optionsOrCallback, callback) {","  this._performEntityOperation(TableConstants.Operations.MERGE, table, entityDescriptor, optionsOrCallback, callback);","};","","/**","* Inserts or updates an existing entity within a table by merging new property values into the entity.","*","* @this {TableService}","* @param {string}             table                                   The table name.","* @param {object}             entityDescriptor                        The entity descriptor.","* @param {object}             [options]                               The request options.","* @param {LocationMode}       [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {errorOrResult}  callback                                    `error` will contain information if an error occurs; ","*                                                                     otherwise `result` will contain the entity information.","*                                                                     `response` will contain information related to this operation.","*/","TableService.prototype.insertOrMergeEntity = function (table, entityDescriptor, optionsOrCallback, callback) {","  this._performEntityOperation(TableConstants.Operations.INSERT_OR_MERGE, table, entityDescriptor, optionsOrCallback, callback);","};","","/**","* Deletes an entity within a table. To delete conditionally based on etag, set entity['.metadata']['etag'].","*","* @this {TableService}","* @param {string}             table                                   The table name.","* @param {object}             entityDescriptor                        The entity descriptor.","* @param {object}             [options]                               The request options.","* @param {LocationMode}       [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {errorOrResponse}  callback                                  `error` will contain information if an error occurs; ","*                                                                     `response` will contain information related to this operation.","*/","TableService.prototype.deleteEntity = function (table, entityDescriptor, optionsOrCallback, callback) {","  this._performEntityOperation(TableConstants.Operations.DELETE, table, entityDescriptor, optionsOrCallback, callback);","};","","/**","* Executes the operations in the batch.","*","* @this {TableService}","* @param {string}             table                                           The table name.","* @param {TableBatch}         batch                                           The table batch to execute.","* @param {object}             [options]                                       The create options or callback function.","* @param {LocationMode}       [options.locationMode]                          Specifies the location mode used to decide which location the request should be sent to. ","*                                                                             Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                   The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]              The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]              The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                             The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                             execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                       A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                     Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                             The default value is false.","* @param {errorOrResult}  callback                                            `error` will contain information if an error occurs; ","*                                                                             otherwise `result` will contain responses for each operation executed in the batch;","*                                                                             `result.entity` will contain the entity information for each operation executed.","*                                                                             `result.response` will contain the response for each operations executed.","*                                                                             `response` will contain information related to this operation.","*/","TableService.prototype.executeBatch = function (table, batch, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('executeBatch', function (v) {","    v.string(table, 'table');","    v.tableNameIsValid(table);","    v.object(batch, 'batch');","    v.callback(callback);","  });","","  if(!batch.hasOperations()) {","    throw new Error(SR.EMPTY_BATCH);","  }","","  var options = extend(true, {}, userOptions);","","  var batchResult = new BatchResult(this, table, batch.operations);","  var webResource = batchResult.constructWebResource();","","  var body = batchResult.serialize();","  webResource.withBody(body);","  webResource.withHeader(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(body, 'utf8'));","","  var processResponseCallback = function (responseObject, next) {","    var responseObjects = batchResult.parse(responseObject);","","    var noError = true;","    // if the batch was unsuccesful, there will be a single response indicating the error","    if (responseObjects && responseObjects.length > 0) {","      responseObjects.forEach(function(item){","        if(noError && !item.response.isSuccessful){","          responseObject = item;","          noError = false;","        }","      });","    }","    ","    if (noError) {","      responseObject.operationResponses = responseObjects;","    }","","    var finalCallback = function (returnObject) {","      // perform final callback","      callback(returnObject.error, returnObject.operationResponses, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, webResource.body, options, processResponseCallback);","};","","// Private methods","","/**","* Checks whether or not a table exists on the service.","* @ignore","*","* @this {TableService}","* @param {string}             table                                   The table name.","* @param {string}             primaryOnly                             If true, the request will be executed against the primary storage location.","* @param {object}             [options]                               The request options.","* @param {LocationMode}       [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {Function(error, result, response)}  callback                `error` will contain information if an error occurs; ","*                                                                     otherwise `result` will contain","*                                                                     the table information including `exists` boolean member. ","*                                                                     `response` will contain information related to this operation.","*/","TableService.prototype._doesTableExist = function (table, primaryOnly, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('doesTableExist', function (v) {","    v.string(table, 'table');","    v.tableNameIsValid(table);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  ","  if(primaryOnly === false) {","    options.requestLocationMode = RequestLocationMode.PRIMARY_OR_SECONDARY;","  }","","  var webResource = WebResource.get('Tables(\\'' + table + '\\')');","  webResource.withHeader(HeaderConstants.ACCEPT, this.defaultPayloadFormat);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.tableResult = {};","    responseObject.tableResult.isSuccessful = responseObject.error ? false : true;","    responseObject.tableResult.statusCode = responseObject.response === null || responseObject.response === undefined ? undefined : responseObject.response.statusCode;","    responseObject.tableResult.TableName = table;","    ","    if(!responseObject.error){","      responseObject.tableResult.exists = true;","    } else if (responseObject.error && responseObject.error.statusCode === Constants.HttpConstants.HttpResponseCodes.NotFound) {","      responseObject.error = null;","      responseObject.tableResult.exists = false;","      responseObject.response.isSuccessful = true;","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.tableResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Peforms a table operation.","*","* @this {TableService}","* @param {string}             operation                           The operation to perform.","* @param {string}             table                               The table name.","* @param {object}             entityDescriptor                    The entity descriptor.","* @param {object}             [options]                           The create options or callback function.","* @param {string}             [options.echoContent]               Whether or not to return the entity upon a successful insert. Default to false.","* @param {string}             [options.payloadFormat]             The payload format to use for the request.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}  callback                                `error` will contain information if an error occurs; ","*                                                                 otherwise `entity` will contain the entity information.","*                                                                 `response` will contain information related to this operation.","* @ignore","*/","TableService.prototype._performEntityOperation = function (operation, table, entityDescriptor, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('entityOperation', function (v) {","    v.string(table, 'table');","    v.tableNameIsValid(table);","    v.object(entityDescriptor, 'entityDescriptor');","","    if(typeof entityDescriptor.PartitionKey !== 'string') {","      v.object(entityDescriptor.PartitionKey, 'entityDescriptor.PartitionKey');","      v.stringAllowEmpty(entityDescriptor.PartitionKey._, 'entityDescriptor.PartitionKey._');","    }","    ","    if(typeof entityDescriptor.RowKey !== 'string') {","      v.object(entityDescriptor.RowKey, 'entityDescriptor.RowKey');","      v.stringAllowEmpty(entityDescriptor.RowKey._, 'entityDescriptor.RowKey._');","    }","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  options.payloadFormat = options.payloadFormat || this.defaultPayloadFormat;","","  var webResource = RequestHandler.constructEntityWebResource(operation, table, entityDescriptor, options);","","  var processResponseCallback = function (responseObject, next) {","    var finalCallback;","    if (operation === TableConstants.Operations.DELETE) {","      finalCallback = function (returnObject) {","        callback(returnObject.error, returnObject.response);","      };","    } else {","      responseObject.entityResponse = null;","      if (!responseObject.error) {","        responseObject.entityResponse = entityResult.parseEntity(responseObject.response, options.autoResolveProperties, options.propertyResolver, options.entityResolver);","      }","","      finalCallback = function (returnObject) {","        callback(returnObject.error, returnObject.entityResponse, returnObject.response);","      };","    }","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, webResource.body, options, processResponseCallback);","};","","/**","* Retrieves a table URL.","*","* @param {string}                   table                    The table name.","* @param {string}                   [sasToken]               The Shared Access Signature token.","* @param {boolean}                  [primary]                A boolean representing whether to use the primary or the secondary endpoint.","* @return {string}                                           The formatted URL string.","* @example","* var azure = require('azure-storage');","* var tableService = azure.createTableService();","* var sharedAccessPolicy = {","*   AccessPolicy: {","*     Permissions: azure.TableUtilities.SharedAccessPermissions.QUERY,","*     Start: startDate,","*     Expiry: expiryDate","*   },","* };","* ","* var sasToken = tableService.generateSharedAccessSignature(table, sharedAccessPolicy);","* var sasUrl = tableService.getUrl(table, sasToken);","*/","TableService.prototype.getUrl = function (table, sasToken, primary) {","  validate.validateArgs('getUrl', function (v) {","    v.string(table, 'table');","    v.tableNameIsValid(table);","  });","","  return this._getUrl(table, sasToken, primary);","};","","/**","* Given the partition key, row key, property name, property value,","* and the property Edm type if given by the service, returns the Edm type of the property.","* @typedef {function} TableService~propertyResolver","* @param {object} pk  The partition key.","* @param {object} rk  The row key.","* @param {string} name  The property name.","* @param {object} value The property value.","* @param {string} type  The EDM type.","*/","","/** ","* Returns entities matched by a query.","* @callback TableService~queryResponse                                                                                ","* @param {object} error                     If an error occurs, the error information.","* @param {object} entities                  The entities returned by the query.","* @param {object} queryResultContinuation   If more matching entities exist, and could not be returned,","*                                           a continuation token that can be used to retrieve more results.","* @param {object} response                  Information related to this operation.","*/","","module.exports = TableService;"],"l":{"18":1,"19":1,"20":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"74":1,"75":0,"77":0,"84":0,"85":0,"88":0,"89":0,"92":0,"95":1,"118":1,"119":0,"120":0,"122":0,"123":0,"126":0,"127":0,"129":0,"133":0,"134":0,"135":0,"136":0,"140":0,"141":0,"145":0,"148":0,"170":1,"171":0,"194":1,"195":0,"221":1,"222":0,"249":1,"250":0,"251":0,"253":0,"254":0,"257":0,"258":0,"260":0,"261":0,"263":0,"264":0,"267":0,"268":0,"272":0,"275":0,"276":0,"277":0,"280":0,"282":0,"283":0,"285":0,"286":0,"290":0,"292":0,"294":0,"299":0,"300":0,"304":0,"305":0,"308":0,"311":0,"336":1,"337":0,"338":0,"340":0,"341":0,"342":0,"343":0,"346":0,"347":0,"349":0,"352":0,"353":0,"354":0,"355":0,"356":0,"359":0,"360":0,"363":0,"366":0,"390":1,"391":0,"392":0,"394":0,"395":0,"396":0,"397":0,"400":0,"402":0,"403":0,"404":0,"405":0,"407":0,"410":0,"415":0,"416":0,"417":0,"420":0,"421":0,"422":0,"426":0,"427":0,"430":0,"433":0,"455":1,"457":0,"458":0,"461":0,"462":0,"463":0,"464":0,"467":0,"468":0,"491":1,"492":0,"515":1,"516":0,"517":0,"519":0,"520":0,"521":0,"522":0,"525":0,"527":0,"529":0,"532":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"542":0,"543":0,"546":0,"549":0,"581":1,"582":0,"583":0,"585":0,"586":0,"587":0,"588":0,"591":0,"593":0,"594":0,"595":0,"596":0,"597":0,"599":0,"600":0,"601":0,"602":0,"603":0,"605":0,"606":0,"607":0,"609":0,"610":0,"611":0,"612":0,"614":0,"639":1,"640":0,"641":0,"643":0,"644":0,"645":0,"646":0,"649":0,"651":0,"652":0,"654":0,"655":0,"656":0,"659":0,"662":0,"685":1,"686":0,"687":0,"689":0,"690":0,"691":0,"692":0,"695":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"715":0,"809":1,"810":0,"811":0,"813":0,"814":0,"815":0,"818":0,"819":0,"821":0,"822":0,"824":0,"825":0,"826":0,"827":0,"831":0,"832":0,"833":0,"836":0,"838":0,"839":0,"840":0,"841":0,"847":0,"850":0,"856":0,"857":0,"861":0,"862":0,"865":0,"868":0,"939":1,"940":0,"944":0,"945":0,"946":0,"949":0,"994":1,"995":0,"1019":1,"1020":0,"1044":1,"1045":0,"1069":1,"1070":0,"1094":1,"1095":0,"1118":1,"1119":0,"1145":1,"1146":0,"1147":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1156":0,"1157":0,"1160":0,"1162":0,"1163":0,"1165":0,"1166":0,"1167":0,"1169":0,"1170":0,"1172":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1183":0,"1184":0,"1187":0,"1189":0,"1192":0,"1195":0,"1223":1,"1224":0,"1225":0,"1227":0,"1228":0,"1229":0,"1230":0,"1233":0,"1235":0,"1236":0,"1239":0,"1240":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1253":0,"1256":0,"1257":0,"1260":0,"1263":0,"1291":1,"1292":0,"1293":0,"1295":0,"1296":0,"1297":0,"1298":0,"1300":0,"1301":0,"1302":0,"1305":0,"1306":0,"1307":0,"1309":0,"1312":0,"1313":0,"1315":0,"1317":0,"1318":0,"1319":0,"1320":0,"1321":0,"1324":0,"1325":0,"1326":0,"1329":0,"1330":0,"1334":0,"1337":0,"1361":1,"1362":0,"1363":0,"1364":0,"1367":0,"1391":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/common.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/common.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1},"b":{"1":[0,1],"2":[1,0,0],"3":[0,0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":29}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":39}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":35}},"4":{"start":{"line":23,"column":0},"end":{"line":23,"column":45}},"5":{"start":{"line":24,"column":0},"end":{"line":26,"column":1}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":138}},"7":{"start":{"line":28,"column":0},"end":{"line":28,"column":43}},"8":{"start":{"line":29,"column":0},"end":{"line":29,"column":35}},"9":{"start":{"line":31,"column":0},"end":{"line":31,"column":49}},"10":{"start":{"line":32,"column":0},"end":{"line":32,"column":52}},"11":{"start":{"line":35,"column":0},"end":{"line":35,"column":74}},"12":{"start":{"line":38,"column":0},"end":{"line":38,"column":78}},"13":{"start":{"line":39,"column":0},"end":{"line":39,"column":68}},"14":{"start":{"line":40,"column":0},"end":{"line":40,"column":50}},"15":{"start":{"line":43,"column":0},"end":{"line":43,"column":79}},"16":{"start":{"line":44,"column":0},"end":{"line":44,"column":89}},"17":{"start":{"line":45,"column":0},"end":{"line":45,"column":67}},"18":{"start":{"line":48,"column":0},"end":{"line":48,"column":75}},"19":{"start":{"line":49,"column":0},"end":{"line":49,"column":51}},"20":{"start":{"line":52,"column":0},"end":{"line":52,"column":61}},"21":{"start":{"line":53,"column":0},"end":{"line":53,"column":61}},"22":{"start":{"line":54,"column":0},"end":{"line":54,"column":55}},"23":{"start":{"line":55,"column":0},"end":{"line":55,"column":75}},"24":{"start":{"line":56,"column":0},"end":{"line":56,"column":61}},"25":{"start":{"line":57,"column":0},"end":{"line":57,"column":57}},"26":{"start":{"line":58,"column":0},"end":{"line":58,"column":46}},"27":{"start":{"line":61,"column":0},"end":{"line":61,"column":48}},"28":{"start":{"line":62,"column":0},"end":{"line":62,"column":34}},"29":{"start":{"line":63,"column":0},"end":{"line":63,"column":38}},"30":{"start":{"line":64,"column":0},"end":{"line":64,"column":52}},"31":{"start":{"line":65,"column":0},"end":{"line":65,"column":38}},"32":{"start":{"line":66,"column":0},"end":{"line":66,"column":46}},"33":{"start":{"line":67,"column":0},"end":{"line":67,"column":62}},"34":{"start":{"line":68,"column":0},"end":{"line":68,"column":60}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":0},"end":{"line":24,"column":0}},{"start":{"line":24,"column":0},"end":{"line":24,"column":0}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":27}},{"start":{"line":24,"column":31},"end":{"line":24,"column":52}},{"start":{"line":24,"column":56},"end":{"line":24,"column":137}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":58},"end":{"line":24,"column":80}},{"start":{"line":24,"column":85},"end":{"line":24,"column":109}},{"start":{"line":24,"column":113},"end":{"line":24,"column":135}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var exports = module.exports;","","var azureutil = require('./util/util');","","require('./util/patch-xmlbuilder');","","var nodeVersion = azureutil.getNodeVersion();","if (nodeVersion.major === 0 && nodeVersion.minor > 8 && !(nodeVersion.minor > 10 || (nodeVersion.minor === 10 && nodeVersion.patch >= 3))) {","  throw new Error('The Microsoft Azure node SDK does not work with node versions > 0.9.0 and < 0.10.3. Please upgrade to node >= 0.10.3');","}","","exports.xmlbuilder = require('xmlbuilder');","exports.xml2js = require('xml2js');","","exports.Logger = require('./diagnostics/logger');","exports.WebResource = require('./http/webresource');","","// Services","exports.StorageServiceClient = require('./services/storageserviceclient');","","// Models","exports.ServicePropertiesResult = require('./models/servicepropertiesresult');","exports.ServiceStatsParser = require('./models/servicestatsparser');","exports.AclResult = require('./models/aclresult');","","// Filters","exports.LinearRetryPolicyFilter = require('./filters/linearretrypolicyfilter');","exports.ExponentialRetryPolicyFilter = require('./filters/exponentialretrypolicyfilter');","exports.RetryPolicyFilter = require('./filters/retrypolicyfilter');","","// Signing","exports.SharedAccessSignature = require('./signing/sharedaccesssignature');","exports.SharedKey = require('./signing/sharedkey');","","// Streams","exports.BatchOperation = require('./streams/batchoperation');","exports.ChunkAllocator = require('./streams/chunkallocator');","exports.ChunkStream = require('./streams/chunkstream');","exports.ChunkStreamWithStream = require('./streams/chunkstreamwithstream');","exports.FileReadStream = require('./streams/filereadstream');","exports.SpeedSummary = require('./streams/speedsummary');","exports.rfs = require('./streams/readablefs');","","// Utilities","exports.Constants = require('./util/constants');","exports.SR = require('./util/sr');","exports.date = require('./util/date');","exports.ISO8061Date = require('./util/iso8061date');","exports.util = require('./util/util');","exports.validate = require('./util/validate');","exports.StorageUtilities = require('./util/storageutilities');","exports.AccessCondition = require('./util/accesscondition');"],"l":{"17":1,"19":1,"21":1,"23":1,"24":1,"25":0,"28":1,"29":1,"31":1,"32":1,"35":1,"38":1,"39":1,"40":1,"43":1,"44":1,"45":1,"48":1,"49":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/util.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/util.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1,"25":0,"26":1,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":1,"67":0,"68":1,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":2,"106":2,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":1,"148":1,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":1,"171":0,"172":0,"173":0,"174":0,"175":0,"176":1,"177":0,"178":0,"179":0,"180":0,"181":0,"182":1,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":1,"190":0,"191":0,"192":0,"193":1,"194":1,"195":0,"196":0,"197":0,"198":0,"199":1,"200":1,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":1,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0},"b":{"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0,0,0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0,0],"50":[0,0],"51":[0,0,0],"52":[1,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":2,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0},"fnMap":{"1":{"name":"(anonymous_1)","line":34,"loc":{"start":{"line":34,"column":26},"end":{"line":34,"column":41}}},"2":{"name":"(anonymous_2)","line":48,"loc":{"start":{"line":48,"column":20},"end":{"line":48,"column":35}}},"3":{"name":"(anonymous_3)","line":63,"loc":{"start":{"line":63,"column":27},"end":{"line":63,"column":44}}},"4":{"name":"(anonymous_4)","line":76,"loc":{"start":{"line":76,"column":20},"end":{"line":76,"column":32}}},"5":{"name":"(anonymous_5)","line":86,"loc":{"start":{"line":86,"column":23},"end":{"line":86,"column":40}}},"6":{"name":"(anonymous_6)","line":96,"loc":{"start":{"line":96,"column":24},"end":{"line":96,"column":42}}},"7":{"name":"(anonymous_7)","line":106,"loc":{"start":{"line":106,"column":22},"end":{"line":106,"column":39}}},"8":{"name":"(anonymous_8)","line":116,"loc":{"start":{"line":116,"column":22},"end":{"line":116,"column":39}}},"9":{"name":"(anonymous_9)","line":126,"loc":{"start":{"line":126,"column":25},"end":{"line":126,"column":43}}},"10":{"name":"(anonymous_10)","line":135,"loc":{"start":{"line":135,"column":27},"end":{"line":135,"column":45}}},"11":{"name":"(anonymous_11)","line":143,"loc":{"start":{"line":143,"column":28},"end":{"line":143,"column":47}}},"12":{"name":"(anonymous_12)","line":158,"loc":{"start":{"line":158,"column":24},"end":{"line":158,"column":41}}},"13":{"name":"(anonymous_13)","line":168,"loc":{"start":{"line":168,"column":47},"end":{"line":168,"column":64}}},"14":{"name":"(anonymous_14)","line":187,"loc":{"start":{"line":187,"column":23},"end":{"line":187,"column":39}}},"15":{"name":"(anonymous_15)","line":204,"loc":{"start":{"line":204,"column":27},"end":{"line":204,"column":51}}},"16":{"name":"(anonymous_16)","line":219,"loc":{"start":{"line":219,"column":25},"end":{"line":219,"column":49}}},"17":{"name":"(anonymous_17)","line":233,"loc":{"start":{"line":233,"column":20},"end":{"line":233,"column":35}}},"18":{"name":"(anonymous_18)","line":247,"loc":{"start":{"line":247,"column":16},"end":{"line":247,"column":28}}},"19":{"name":"(anonymous_19)","line":262,"loc":{"start":{"line":262,"column":29},"end":{"line":262,"column":57}}},"20":{"name":"(anonymous_20)","line":263,"loc":{"start":{"line":263,"column":36},"end":{"line":263,"column":49}}},"21":{"name":"(anonymous_21)","line":279,"loc":{"start":{"line":279,"column":33},"end":{"line":279,"column":72}}},"22":{"name":"(anonymous_22)","line":302,"loc":{"start":{"line":302,"column":27},"end":{"line":302,"column":65}}},"23":{"name":"(anonymous_23)","line":329,"loc":{"start":{"line":329,"column":38},"end":{"line":329,"column":80}}},"24":{"name":"(anonymous_24)","line":353,"loc":{"start":{"line":353,"column":31},"end":{"line":353,"column":47}}},"25":{"name":"(anonymous_25)","line":358,"loc":{"start":{"line":358,"column":24},"end":{"line":358,"column":71}}},"26":{"name":"(anonymous_26)","line":369,"loc":{"start":{"line":369,"column":25},"end":{"line":369,"column":37}}},"27":{"name":"(anonymous_27)","line":378,"loc":{"start":{"line":378,"column":24},"end":{"line":378,"column":66}}},"28":{"name":"(anonymous_28)","line":385,"loc":{"start":{"line":385,"column":20},"end":{"line":385,"column":37}}},"29":{"name":"(anonymous_29)","line":393,"loc":{"start":{"line":393,"column":19},"end":{"line":393,"column":31}}},"30":{"name":"(anonymous_30)","line":407,"loc":{"start":{"line":407,"column":23},"end":{"line":407,"column":77}}},"31":{"name":"(anonymous_31)","line":411,"loc":{"start":{"line":411,"column":24},"end":{"line":411,"column":39}}},"32":{"name":"(anonymous_32)","line":426,"loc":{"start":{"line":426,"column":15},"end":{"line":426,"column":26}}},"33":{"name":"(anonymous_33)","line":441,"loc":{"start":{"line":441,"column":26},"end":{"line":441,"column":44}}},"34":{"name":"(anonymous_34)","line":454,"loc":{"start":{"line":454,"column":29},"end":{"line":454,"column":92}}},"35":{"name":"(anonymous_35)","line":473,"loc":{"start":{"line":473,"column":30},"end":{"line":473,"column":42}}},"36":{"name":"(anonymous_36)","line":489,"loc":{"start":{"line":489,"column":24},"end":{"line":489,"column":53}}},"37":{"name":"(anonymous_37)","line":496,"loc":{"start":{"line":496,"column":26},"end":{"line":496,"column":63}}},"38":{"name":"(anonymous_38)","line":510,"loc":{"start":{"line":510,"column":37},"end":{"line":510,"column":54}}},"39":{"name":"(anonymous_39)","line":526,"loc":{"start":{"line":526,"column":25},"end":{"line":526,"column":43}}},"40":{"name":"(anonymous_40)","line":538,"loc":{"start":{"line":538,"column":28},"end":{"line":538,"column":48}}},"41":{"name":"(anonymous_41)","line":577,"loc":{"start":{"line":577,"column":39},"end":{"line":577,"column":63}}},"42":{"name":"(anonymous_42)","line":601,"loc":{"start":{"line":601,"column":34},"end":{"line":601,"column":74}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":23}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":25}},"6":{"start":{"line":22,"column":0},"end":{"line":22,"column":31}},"7":{"start":{"line":23,"column":0},"end":{"line":23,"column":39}},"8":{"start":{"line":24,"column":0},"end":{"line":24,"column":43}},"9":{"start":{"line":25,"column":0},"end":{"line":25,"column":53}},"10":{"start":{"line":26,"column":0},"end":{"line":26,"column":25}},"11":{"start":{"line":34,"column":0},"end":{"line":40,"column":2}},"12":{"start":{"line":35,"column":2},"end":{"line":35,"column":27}},"13":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"14":{"start":{"line":37,"column":4},"end":{"line":37,"column":28}},"15":{"start":{"line":39,"column":2},"end":{"line":39,"column":25}},"16":{"start":{"line":48,"column":0},"end":{"line":55,"column":2}},"17":{"start":{"line":49,"column":2},"end":{"line":54,"column":27}},"18":{"start":{"line":63,"column":0},"end":{"line":69,"column":2}},"19":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"20":{"start":{"line":65,"column":4},"end":{"line":65,"column":13}},"21":{"start":{"line":68,"column":2},"end":{"line":68,"column":30}},"22":{"start":{"line":76,"column":0},"end":{"line":78,"column":2}},"23":{"start":{"line":77,"column":2},"end":{"line":77,"column":39}},"24":{"start":{"line":86,"column":0},"end":{"line":88,"column":2}},"25":{"start":{"line":87,"column":2},"end":{"line":87,"column":49}},"26":{"start":{"line":96,"column":0},"end":{"line":98,"column":2}},"27":{"start":{"line":97,"column":2},"end":{"line":97,"column":27}},"28":{"start":{"line":106,"column":0},"end":{"line":108,"column":2}},"29":{"start":{"line":107,"column":2},"end":{"line":107,"column":96}},"30":{"start":{"line":116,"column":0},"end":{"line":118,"column":2}},"31":{"start":{"line":117,"column":2},"end":{"line":117,"column":52}},"32":{"start":{"line":126,"column":0},"end":{"line":128,"column":2}},"33":{"start":{"line":127,"column":2},"end":{"line":127,"column":28}},"34":{"start":{"line":135,"column":0},"end":{"line":137,"column":2}},"35":{"start":{"line":136,"column":2},"end":{"line":136,"column":30}},"36":{"start":{"line":143,"column":0},"end":{"line":150,"column":2}},"37":{"start":{"line":144,"column":2},"end":{"line":144,"column":38}},"38":{"start":{"line":145,"column":2},"end":{"line":149,"column":3}},"39":{"start":{"line":146,"column":4},"end":{"line":146,"column":54}},"40":{"start":{"line":148,"column":4},"end":{"line":148,"column":39}},"41":{"start":{"line":158,"column":0},"end":{"line":160,"column":2}},"42":{"start":{"line":159,"column":2},"end":{"line":159,"column":65}},"43":{"start":{"line":168,"column":0},"end":{"line":178,"column":2}},"44":{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},"45":{"start":{"line":170,"column":4},"end":{"line":170,"column":16}},"46":{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},"47":{"start":{"line":174,"column":4},"end":{"line":174,"column":16}},"48":{"start":{"line":177,"column":2},"end":{"line":177,"column":15}},"49":{"start":{"line":187,"column":0},"end":{"line":195,"column":2}},"50":{"start":{"line":188,"column":2},"end":{"line":192,"column":3}},"51":{"start":{"line":189,"column":4},"end":{"line":191,"column":5}},"52":{"start":{"line":190,"column":6},"end":{"line":190,"column":45}},"53":{"start":{"line":194,"column":2},"end":{"line":194,"column":14}},"54":{"start":{"line":204,"column":0},"end":{"line":210,"column":2}},"55":{"start":{"line":205,"column":2},"end":{"line":207,"column":3}},"56":{"start":{"line":206,"column":4},"end":{"line":206,"column":16}},"57":{"start":{"line":209,"column":2},"end":{"line":209,"column":50}},"58":{"start":{"line":219,"column":0},"end":{"line":225,"column":2}},"59":{"start":{"line":220,"column":2},"end":{"line":222,"column":3}},"60":{"start":{"line":221,"column":4},"end":{"line":221,"column":16}},"61":{"start":{"line":224,"column":2},"end":{"line":224,"column":61}},"62":{"start":{"line":233,"column":0},"end":{"line":239,"column":2}},"63":{"start":{"line":234,"column":2},"end":{"line":236,"column":3}},"64":{"start":{"line":235,"column":4},"end":{"line":235,"column":27}},"65":{"start":{"line":238,"column":2},"end":{"line":238,"column":13}},"66":{"start":{"line":247,"column":0},"end":{"line":249,"column":2}},"67":{"start":{"line":248,"column":2},"end":{"line":248,"column":41}},"68":{"start":{"line":262,"column":0},"end":{"line":264,"column":2}},"69":{"start":{"line":263,"column":2},"end":{"line":263,"column":101}},"70":{"start":{"line":263,"column":51},"end":{"line":263,"column":74}},"71":{"start":{"line":279,"column":0},"end":{"line":289,"column":2}},"72":{"start":{"line":280,"column":2},"end":{"line":286,"column":3}},"73":{"start":{"line":281,"column":4},"end":{"line":285,"column":5}},"74":{"start":{"line":282,"column":6},"end":{"line":284,"column":7}},"75":{"start":{"line":283,"column":8},"end":{"line":283,"column":27}},"76":{"start":{"line":288,"column":2},"end":{"line":288,"column":22}},"77":{"start":{"line":302,"column":0},"end":{"line":313,"column":2}},"78":{"start":{"line":303,"column":2},"end":{"line":305,"column":3}},"79":{"start":{"line":304,"column":4},"end":{"line":304,"column":18}},"80":{"start":{"line":307,"column":2},"end":{"line":307,"column":32}},"81":{"start":{"line":308,"column":2},"end":{"line":310,"column":3}},"82":{"start":{"line":309,"column":4},"end":{"line":309,"column":76}},"83":{"start":{"line":312,"column":2},"end":{"line":312,"column":22}},"84":{"start":{"line":329,"column":0},"end":{"line":345,"column":2}},"85":{"start":{"line":330,"column":2},"end":{"line":332,"column":3}},"86":{"start":{"line":331,"column":4},"end":{"line":331,"column":11}},"87":{"start":{"line":334,"column":2},"end":{"line":334,"column":45}},"88":{"start":{"line":335,"column":2},"end":{"line":338,"column":3}},"89":{"start":{"line":336,"column":4},"end":{"line":336,"column":31}},"90":{"start":{"line":337,"column":4},"end":{"line":337,"column":11}},"91":{"start":{"line":340,"column":2},"end":{"line":342,"column":3}},"92":{"start":{"line":341,"column":4},"end":{"line":341,"column":28}},"93":{"start":{"line":344,"column":2},"end":{"line":344,"column":84}},"94":{"start":{"line":353,"column":0},"end":{"line":356,"column":2}},"95":{"start":{"line":354,"column":2},"end":{"line":354,"column":38}},"96":{"start":{"line":355,"column":2},"end":{"line":355,"column":62}},"97":{"start":{"line":358,"column":0},"end":{"line":367,"column":2}},"98":{"start":{"line":359,"column":2},"end":{"line":359,"column":19}},"99":{"start":{"line":360,"column":2},"end":{"line":364,"column":3}},"100":{"start":{"line":361,"column":4},"end":{"line":361,"column":33}},"101":{"start":{"line":362,"column":9},"end":{"line":364,"column":3}},"102":{"start":{"line":363,"column":4},"end":{"line":363,"column":32}},"103":{"start":{"line":366,"column":2},"end":{"line":366,"column":28}},"104":{"start":{"line":369,"column":0},"end":{"line":376,"column":2}},"105":{"start":{"line":370,"column":2},"end":{"line":370,"column":49}},"106":{"start":{"line":371,"column":2},"end":{"line":375,"column":4}},"107":{"start":{"line":378,"column":0},"end":{"line":401,"column":2}},"108":{"start":{"line":379,"column":2},"end":{"line":379,"column":20}},"109":{"start":{"line":380,"column":2},"end":{"line":380,"column":17}},"110":{"start":{"line":381,"column":2},"end":{"line":383,"column":3}},"111":{"start":{"line":382,"column":4},"end":{"line":382,"column":46}},"112":{"start":{"line":385,"column":2},"end":{"line":391,"column":5}},"113":{"start":{"line":386,"column":4},"end":{"line":388,"column":5}},"114":{"start":{"line":387,"column":6},"end":{"line":387,"column":27}},"115":{"start":{"line":390,"column":4},"end":{"line":390,"column":27}},"116":{"start":{"line":393,"column":2},"end":{"line":400,"column":5}},"117":{"start":{"line":394,"column":4},"end":{"line":394,"column":19}},"118":{"start":{"line":395,"column":4},"end":{"line":397,"column":5}},"119":{"start":{"line":396,"column":6},"end":{"line":396,"column":36}},"120":{"start":{"line":399,"column":4},"end":{"line":399,"column":26}},"121":{"start":{"line":407,"column":0},"end":{"line":436,"column":2}},"122":{"start":{"line":408,"column":2},"end":{"line":408,"column":46}},"123":{"start":{"line":409,"column":2},"end":{"line":409,"column":16}},"124":{"start":{"line":410,"column":2},"end":{"line":410,"column":54}},"125":{"start":{"line":411,"column":2},"end":{"line":435,"column":5}},"126":{"start":{"line":412,"column":4},"end":{"line":425,"column":5}},"127":{"start":{"line":413,"column":6},"end":{"line":413,"column":44}},"128":{"start":{"line":414,"column":6},"end":{"line":419,"column":7}},"129":{"start":{"line":415,"column":8},"end":{"line":415,"column":41}},"130":{"start":{"line":416,"column":8},"end":{"line":416,"column":39}},"131":{"start":{"line":417,"column":8},"end":{"line":417,"column":34}},"132":{"start":{"line":418,"column":8},"end":{"line":418,"column":28}},"133":{"start":{"line":420,"column":6},"end":{"line":420,"column":29}},"134":{"start":{"line":422,"column":6},"end":{"line":422,"column":37}},"135":{"start":{"line":423,"column":6},"end":{"line":423,"column":32}},"136":{"start":{"line":424,"column":6},"end":{"line":424,"column":27}},"137":{"start":{"line":427,"column":4},"end":{"line":434,"column":5}},"138":{"start":{"line":428,"column":6},"end":{"line":428,"column":50}},"139":{"start":{"line":429,"column":6},"end":{"line":429,"column":53}},"140":{"start":{"line":432,"column":6},"end":{"line":432,"column":35}},"141":{"start":{"line":433,"column":6},"end":{"line":433,"column":41}},"142":{"start":{"line":441,"column":0},"end":{"line":448,"column":2}},"143":{"start":{"line":442,"column":2},"end":{"line":446,"column":3}},"144":{"start":{"line":443,"column":4},"end":{"line":445,"column":5}},"145":{"start":{"line":444,"column":6},"end":{"line":444,"column":19}},"146":{"start":{"line":447,"column":2},"end":{"line":447,"column":14}},"147":{"start":{"line":453,"column":0},"end":{"line":453,"column":22}},"148":{"start":{"line":454,"column":0},"end":{"line":484,"column":2}},"149":{"start":{"line":455,"column":2},"end":{"line":455,"column":84}},"150":{"start":{"line":456,"column":2},"end":{"line":456,"column":55}},"151":{"start":{"line":457,"column":2},"end":{"line":457,"column":38}},"152":{"start":{"line":458,"column":2},"end":{"line":458,"column":20}},"153":{"start":{"line":459,"column":2},"end":{"line":468,"column":3}},"154":{"start":{"line":460,"column":4},"end":{"line":463,"column":5}},"155":{"start":{"line":461,"column":6},"end":{"line":461,"column":49}},"156":{"start":{"line":462,"column":6},"end":{"line":462,"column":25}},"157":{"start":{"line":464,"column":4},"end":{"line":464,"column":24}},"158":{"start":{"line":466,"column":4},"end":{"line":466,"column":36}},"159":{"start":{"line":467,"column":4},"end":{"line":467,"column":19}},"160":{"start":{"line":469,"column":2},"end":{"line":471,"column":3}},"161":{"start":{"line":470,"column":4},"end":{"line":470,"column":27}},"162":{"start":{"line":473,"column":2},"end":{"line":483,"column":5}},"163":{"start":{"line":474,"column":4},"end":{"line":476,"column":5}},"164":{"start":{"line":475,"column":6},"end":{"line":475,"column":44}},"165":{"start":{"line":477,"column":4},"end":{"line":477,"column":18}},"166":{"start":{"line":478,"column":4},"end":{"line":482,"column":5}},"167":{"start":{"line":479,"column":6},"end":{"line":479,"column":89}},"168":{"start":{"line":480,"column":11},"end":{"line":482,"column":5}},"169":{"start":{"line":481,"column":6},"end":{"line":481,"column":27}},"170":{"start":{"line":489,"column":0},"end":{"line":494,"column":2}},"171":{"start":{"line":490,"column":2},"end":{"line":490,"column":37}},"172":{"start":{"line":490,"column":17},"end":{"line":490,"column":37}},"173":{"start":{"line":491,"column":2},"end":{"line":491,"column":54}},"174":{"start":{"line":492,"column":2},"end":{"line":492,"column":39}},"175":{"start":{"line":493,"column":2},"end":{"line":493,"column":39}},"176":{"start":{"line":496,"column":0},"end":{"line":508,"column":2}},"177":{"start":{"line":497,"column":2},"end":{"line":507,"column":3}},"178":{"start":{"line":499,"column":4},"end":{"line":499,"column":45}},"179":{"start":{"line":501,"column":4},"end":{"line":501,"column":47}},"180":{"start":{"line":504,"column":4},"end":{"line":504,"column":138}},"181":{"start":{"line":506,"column":4},"end":{"line":506,"column":100}},"182":{"start":{"line":510,"column":0},"end":{"line":524,"column":2}},"183":{"start":{"line":511,"column":2},"end":{"line":523,"column":3}},"184":{"start":{"line":512,"column":4},"end":{"line":512,"column":62}},"185":{"start":{"line":515,"column":4},"end":{"line":522,"column":5}},"186":{"start":{"line":517,"column":6},"end":{"line":517,"column":56}},"187":{"start":{"line":519,"column":6},"end":{"line":519,"column":58}},"188":{"start":{"line":521,"column":6},"end":{"line":521,"column":112}},"189":{"start":{"line":526,"column":0},"end":{"line":531,"column":2}},"190":{"start":{"line":527,"column":2},"end":{"line":529,"column":3}},"191":{"start":{"line":528,"column":4},"end":{"line":528,"column":105}},"192":{"start":{"line":530,"column":2},"end":{"line":530,"column":15}},"193":{"start":{"line":533,"column":0},"end":{"line":533,"column":73}},"194":{"start":{"line":538,"column":0},"end":{"line":545,"column":2}},"195":{"start":{"line":539,"column":2},"end":{"line":541,"column":3}},"196":{"start":{"line":540,"column":4},"end":{"line":540,"column":14}},"197":{"start":{"line":543,"column":2},"end":{"line":543,"column":41}},"198":{"start":{"line":544,"column":2},"end":{"line":544,"column":71}},"199":{"start":{"line":550,"column":0},"end":{"line":571,"column":2}},"200":{"start":{"line":577,"column":0},"end":{"line":596,"column":2}},"201":{"start":{"line":578,"column":2},"end":{"line":580,"column":3}},"202":{"start":{"line":579,"column":4},"end":{"line":579,"column":14}},"203":{"start":{"line":582,"column":2},"end":{"line":582,"column":37}},"204":{"start":{"line":583,"column":2},"end":{"line":583,"column":75}},"205":{"start":{"line":589,"column":2},"end":{"line":595,"column":3}},"206":{"start":{"line":590,"column":4},"end":{"line":590,"column":60}},"207":{"start":{"line":591,"column":9},"end":{"line":595,"column":3}},"208":{"start":{"line":592,"column":4},"end":{"line":592,"column":41}},"209":{"start":{"line":594,"column":4},"end":{"line":594,"column":24}},"210":{"start":{"line":601,"column":0},"end":{"line":618,"column":2}},"211":{"start":{"line":602,"column":2},"end":{"line":617,"column":3}},"212":{"start":{"line":603,"column":4},"end":{"line":616,"column":5}},"213":{"start":{"line":604,"column":6},"end":{"line":609,"column":7}},"214":{"start":{"line":605,"column":8},"end":{"line":605,"column":90}},"215":{"start":{"line":606,"column":8},"end":{"line":606,"column":93}},"216":{"start":{"line":608,"column":8},"end":{"line":608,"column":73}},"217":{"start":{"line":611,"column":6},"end":{"line":615,"column":7}},"218":{"start":{"line":612,"column":8},"end":{"line":612,"column":68}},"219":{"start":{"line":613,"column":8},"end":{"line":613,"column":105}},"220":{"start":{"line":614,"column":8},"end":{"line":614,"column":103}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":7},"end":{"line":36,"column":39}},{"start":{"line":36,"column":43},"end":{"line":36,"column":83}},{"start":{"line":36,"column":89},"end":{"line":36,"column":120}},{"start":{"line":36,"column":124},"end":{"line":36,"column":163}}]},"3":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"4":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":9},"end":{"line":87,"column":24}},{"start":{"line":87,"column":28},"end":{"line":87,"column":48}}]},"5":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":9},"end":{"line":107,"column":34}},{"start":{"line":107,"column":38},"end":{"line":107,"column":78}},{"start":{"line":107,"column":82},"end":{"line":107,"column":95}}]},"6":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":9},"end":{"line":117,"column":35}},{"start":{"line":117,"column":39},"end":{"line":117,"column":51}}]},"7":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"8":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":9},"end":{"line":159,"column":24}},{"start":{"line":159,"column":28},"end":{"line":159,"column":48}},{"start":{"line":159,"column":52},"end":{"line":159,"column":64}}]},"9":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":2},"end":{"line":169,"column":2}},{"start":{"line":169,"column":2},"end":{"line":169,"column":2}}]},"10":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":5},"end":{"line":169,"column":20}},{"start":{"line":169,"column":24},"end":{"line":169,"column":44}},{"start":{"line":169,"column":48},"end":{"line":169,"column":60}}]},"11":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":2},"end":{"line":173,"column":2}},{"start":{"line":173,"column":2},"end":{"line":173,"column":2}}]},"12":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":5},"end":{"line":173,"column":22}},{"start":{"line":173,"column":26},"end":{"line":173,"column":51}}]},"13":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":2},"end":{"line":188,"column":2}},{"start":{"line":188,"column":2},"end":{"line":188,"column":2}}]},"14":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"15":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":2},"end":{"line":220,"column":2}},{"start":{"line":220,"column":2},"end":{"line":220,"column":2}}]},"16":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":2},"end":{"line":234,"column":2}},{"start":{"line":234,"column":2},"end":{"line":234,"column":2}}]},"17":{"line":234,"type":"binary-expr","locations":[{"start":{"line":234,"column":6},"end":{"line":234,"column":34}},{"start":{"line":234,"column":38},"end":{"line":234,"column":66}}]},"18":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":2},"end":{"line":280,"column":2}},{"start":{"line":280,"column":2},"end":{"line":280,"column":2}}]},"19":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":6},"end":{"line":282,"column":6}},{"start":{"line":282,"column":6},"end":{"line":282,"column":6}}]},"20":{"line":282,"type":"binary-expr","locations":[{"start":{"line":282,"column":10},"end":{"line":282,"column":36}},{"start":{"line":282,"column":40},"end":{"line":282,"column":99}}]},"21":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":2},"end":{"line":303,"column":2}},{"start":{"line":303,"column":2},"end":{"line":303,"column":2}}]},"22":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":2},"end":{"line":308,"column":2}},{"start":{"line":308,"column":2},"end":{"line":308,"column":2}}]},"23":{"line":308,"type":"binary-expr","locations":[{"start":{"line":308,"column":6},"end":{"line":308,"column":12}},{"start":{"line":308,"column":16},"end":{"line":308,"column":48}}]},"24":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":2},"end":{"line":330,"column":2}},{"start":{"line":330,"column":2},"end":{"line":330,"column":2}}]},"25":{"line":330,"type":"binary-expr","locations":[{"start":{"line":330,"column":5},"end":{"line":330,"column":12}},{"start":{"line":330,"column":16},"end":{"line":330,"column":44}}]},"26":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":2},"end":{"line":335,"column":2}},{"start":{"line":335,"column":2},"end":{"line":335,"column":2}}]},"27":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":2},"end":{"line":340,"column":2}},{"start":{"line":340,"column":2},"end":{"line":340,"column":2}}]},"28":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":2},"end":{"line":360,"column":2}},{"start":{"line":360,"column":2},"end":{"line":360,"column":2}}]},"29":{"line":360,"type":"binary-expr","locations":[{"start":{"line":360,"column":5},"end":{"line":360,"column":36}},{"start":{"line":360,"column":40},"end":{"line":360,"column":49}}]},"30":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":9},"end":{"line":362,"column":9}},{"start":{"line":362,"column":9},"end":{"line":362,"column":9}}]},"31":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":2},"end":{"line":381,"column":2}},{"start":{"line":381,"column":2},"end":{"line":381,"column":2}}]},"32":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":4},"end":{"line":386,"column":4}},{"start":{"line":386,"column":4},"end":{"line":386,"column":4}}]},"33":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":4},"end":{"line":395,"column":4}},{"start":{"line":395,"column":4},"end":{"line":395,"column":4}}]},"34":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":4},"end":{"line":412,"column":4}},{"start":{"line":412,"column":4},"end":{"line":412,"column":4}}]},"35":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":6},"end":{"line":414,"column":6}},{"start":{"line":414,"column":6},"end":{"line":414,"column":6}}]},"36":{"line":427,"type":"if","locations":[{"start":{"line":427,"column":4},"end":{"line":427,"column":4}},{"start":{"line":427,"column":4},"end":{"line":427,"column":4}}]},"37":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":4},"end":{"line":443,"column":4}},{"start":{"line":443,"column":4},"end":{"line":443,"column":4}}]},"38":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":2},"end":{"line":459,"column":2}},{"start":{"line":459,"column":2},"end":{"line":459,"column":2}}]},"39":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":4},"end":{"line":460,"column":4}},{"start":{"line":460,"column":4},"end":{"line":460,"column":4}}]},"40":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":2},"end":{"line":469,"column":2}},{"start":{"line":469,"column":2},"end":{"line":469,"column":2}}]},"41":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":4},"end":{"line":474,"column":4}},{"start":{"line":474,"column":4},"end":{"line":474,"column":4}}]},"42":{"line":478,"type":"if","locations":[{"start":{"line":478,"column":4},"end":{"line":478,"column":4}},{"start":{"line":478,"column":4},"end":{"line":478,"column":4}}]},"43":{"line":480,"type":"if","locations":[{"start":{"line":480,"column":11},"end":{"line":480,"column":11}},{"start":{"line":480,"column":11},"end":{"line":480,"column":11}}]},"44":{"line":490,"type":"if","locations":[{"start":{"line":490,"column":2},"end":{"line":490,"column":2}},{"start":{"line":490,"column":2},"end":{"line":490,"column":2}}]},"45":{"line":497,"type":"switch","locations":[{"start":{"line":498,"column":2},"end":{"line":499,"column":45}},{"start":{"line":500,"column":2},"end":{"line":501,"column":47}},{"start":{"line":502,"column":2},"end":{"line":502,"column":60}},{"start":{"line":503,"column":2},"end":{"line":504,"column":138}},{"start":{"line":505,"column":2},"end":{"line":506,"column":100}}]},"46":{"line":504,"type":"cond-expr","locations":[{"start":{"line":504,"column":66},"end":{"line":504,"column":101}},{"start":{"line":504,"column":104},"end":{"line":504,"column":137}}]},"47":{"line":511,"type":"if","locations":[{"start":{"line":511,"column":2},"end":{"line":511,"column":2}},{"start":{"line":511,"column":2},"end":{"line":511,"column":2}}]},"48":{"line":511,"type":"binary-expr","locations":[{"start":{"line":511,"column":5},"end":{"line":511,"column":20}},{"start":{"line":511,"column":24},"end":{"line":511,"column":44}}]},"49":{"line":515,"type":"switch","locations":[{"start":{"line":516,"column":4},"end":{"line":517,"column":56}},{"start":{"line":518,"column":4},"end":{"line":519,"column":58}},{"start":{"line":520,"column":4},"end":{"line":521,"column":112}}]},"50":{"line":527,"type":"if","locations":[{"start":{"line":527,"column":2},"end":{"line":527,"column":2}},{"start":{"line":527,"column":2},"end":{"line":527,"column":2}}]},"51":{"line":528,"type":"binary-expr","locations":[{"start":{"line":528,"column":11},"end":{"line":528,"column":34}},{"start":{"line":528,"column":39},"end":{"line":528,"column":60}},{"start":{"line":528,"column":64},"end":{"line":528,"column":103}}]},"52":{"line":533,"type":"cond-expr","locations":[{"start":{"line":533,"column":41},"end":{"line":533,"column":54}},{"start":{"line":533,"column":57},"end":{"line":533,"column":72}}]},"53":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":2},"end":{"line":539,"column":2}},{"start":{"line":539,"column":2},"end":{"line":539,"column":2}}]},"54":{"line":539,"type":"binary-expr","locations":[{"start":{"line":539,"column":6},"end":{"line":539,"column":33}},{"start":{"line":539,"column":37},"end":{"line":539,"column":65}}]},"55":{"line":578,"type":"if","locations":[{"start":{"line":578,"column":2},"end":{"line":578,"column":2}},{"start":{"line":578,"column":2},"end":{"line":578,"column":2}}]},"56":{"line":589,"type":"if","locations":[{"start":{"line":589,"column":2},"end":{"line":589,"column":2}},{"start":{"line":589,"column":2},"end":{"line":589,"column":2}}]},"57":{"line":591,"type":"if","locations":[{"start":{"line":591,"column":9},"end":{"line":591,"column":9}},{"start":{"line":591,"column":9},"end":{"line":591,"column":9}}]},"58":{"line":603,"type":"if","locations":[{"start":{"line":603,"column":4},"end":{"line":603,"column":4}},{"start":{"line":603,"column":4},"end":{"line":603,"column":4}}]},"59":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":6},"end":{"line":604,"column":6}},{"start":{"line":604,"column":6},"end":{"line":604,"column":6}}]},"60":{"line":611,"type":"if","locations":[{"start":{"line":611,"column":6},"end":{"line":611,"column":6}},{"start":{"line":611,"column":6},"end":{"line":611,"column":6}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var fs = require('fs');","var path = require('path');","var _ = require('underscore');","var util = require('util');","var url = require('url');","var stream = require('stream');","var Constants = require('./constants');","var Md5Wrapper = require('../md5-wrapper');","var StorageUtilities = require('./storageutilities');","var SR = require('./sr');","","/**","* Trim the default port in the url.","*","* @param {string} uri The URI to be encoded.","* @return {string} The URI without defualt port.","*/","exports.trimPortFromUri = function (uri) {","  var uri = url.parse(uri);","  if ((uri.protocol === Constants.HTTPS && uri.port == Constants.DEFAULT_HTTPS_PORT) || (uri.protocol === Constants.HTTP && uri.port == Constants.DEFAULT_HTTP_PORT)) {","    uri.host = uri.hostname;","  }","  return url.format(uri);","};","","/**","* Encodes an URI.","*","* @param {string} uri The URI to be encoded.","* @return {string} The encoded URI.","*/","exports.encodeUri = function (uri) {","  return encodeURIComponent(uri)","    .replace(/!/g, '%21')","    .replace(/'/g, '%27')","    .replace(/\\(/g, '%28')","    .replace(/\\)/g, '%29')","    .replace(/\\*/g, '%2A');","};","","/**","* Returns the number of keys (properties) in an object.","*","* @param {object} value The object which keys are to be counted.","* @return {number} The number of keys in the object.","*/","exports.objectKeysLength = function (value) {","  if (!value) {","    return 0;","  }","","  return _.keys(value).length;","};","","/**","* Checks if in a browser environment.","*","* @return {bool} True if in a browser environment, false otherwise.","*/","exports.isBrowser = function () {","  return typeof window !== 'undefined';","};","","/**","* Checks if a value is null or undefined.","*","* @param {object} value The value to check for null or undefined.","* @return {bool} True if the value is null or undefined, false otherwise.","*/","exports.objectIsNull = function (value) {","  return _.isNull(value) || _.isUndefined(value);","};","","/**","* Checks if an object is empty.","*","* @param {object} object The object to check if it is null.","* @return {bool} True if the object is empty, false otherwise.","*/","exports.objectIsEmpty = function (object) {","  return _.isEmpty(object);","};","","/**","* Determines if an object contains an integer number.","*","* @param {object}  value  The object to assert.","* @return {bool} True if the object contains an integer number; false otherwise.","*/","exports.objectIsInt = function (value) {","  return typeof value === 'number' && parseFloat(value) == parseInt(value, 10) && !isNaN(value);","};","","/**","* Determines if an object is a NaN.","*","* @param {object}  value  The object to assert.","* @return {bool} True if the object is a NaN; false otherwise.","*/","exports.objectIsNaN = function (value) {","  return typeof(value) === 'number' && isNaN(value);","};","","/**","* Checks if an object is a string.","*","* @param {object} object The object to check if it is a string.","* @return {bool} True if the object is a string, false otherwise.","*/","exports.objectIsString = function (object) {","  return _.isString(object);","};","","/**","* Check if an object is a function","* @param {object} object The object to check whether it is function","* @return {bool} True if the specified object is function, otherwise false","*/","exports.objectIsFunction = function (object) {","  return _.isFunction(object);","};","","","/**","* Front zero padding of string to sepcified length","*/","exports.zeroPaddingString = function(str, len) {","  var paddingStr = '0000000000' + str;","  if(paddingStr.length < len) {","    return exports.zeroPaddingString(paddingStr, len);","  } else {","    return paddingStr.substr(-1 * len);","  }","};","","/**","* Checks if a value is an empty string, null or undefined.","*","* @param {object} value The value to check for an empty string, null or undefined.","* @return {bool} True if the value is an empty string, null or undefined, false otherwise.","*/","exports.stringIsEmpty = function (value) {","  return _.isNull(value) || _.isUndefined(value) || value === '';","};","","/**","* Checks if a value is null, empty, undefined or consists only of white-space characters.","*","* @param {object} value The value to check for null, empty, undefined and white-space only characters.","* @return {bool} True if the value is an empty string, null, undefined, or consists only of white-space characters, false otherwise.","*/","exports.IsNullOrEmptyOrUndefinedOrWhiteSpace = function (value) {","  if(_.isNull(value) || _.isUndefined(value) || value === '') {","    return true;","  }","","  if(_.isString(value) && value.trim().length === 0) {","    return true;","  }","","  return false;","};","","/**","* Formats a text replacing '?' by the arguments.","*","* @param {string}       text      The string where the ? should be replaced.","* @param {array}        arguments Value(s) to insert in question mark (?) parameters.","* @return {string}","*/","exports.stringFormat = function (text) {","  if (arguments.length > 1) {","    for (var i = 1; text.indexOf('?') !== -1; i++) {","      text = text.replace('?', arguments[i]);","    }","  }","","  return text;","};","","/**","* Determines if a string starts with another.","*","* @param {string}       text      The string to assert.","* @param {string}       prefix    The string prefix.","* @return {Bool} True if the string starts with the prefix; false otherwise.","*/","exports.stringStartsWith = function (text, prefix) {","  if (_.isNull(prefix)) {","    return true;","  }","","  return text.substr(0, prefix.length) === prefix;","};","","/**","* Determines if a string ends with another.","*","* @param {string}       text      The string to assert.","* @param {string}       suffix    The string suffix.","* @return {Bool} True if the string ends with the suffix; false otherwise.","*/","exports.stringEndsWith = function (text, suffix) {","  if (_.isNull(suffix)) {","    return true;","  }","","  return text.substr(text.length - suffix.length) === suffix;","};","","/**","* Removes the BOM from a string.","*","* @param {string} str The string from where the BOM is to be removed","* @return {string} The string without the BOM.","*/","exports.removeBOM = function (str) {","  if (str.charCodeAt(0) === 0xfeff || str.charCodeAt(0) === 0xffef) {","    str = str.substring(1);","  }","","  return str;","};","","/**","* Merges multiple objects.","*","* @param {object} object The objects to be merged","* @return {object} The merged object.","*/","exports.merge = function () {","  return _.extend.apply(this, arguments);","};","","/**","* Checks if a value exists in an array. The comparison is done in a case","* insensitive manner.","*","* @param {string} needle     The searched value.","* @param {array}  haystack   The array.","*","* @static","*","* @return {boolean}","*/","exports.inArrayInsensitive = function (needle, haystack) {","  return _.contains(_.map(haystack, function (h) { return h.toLowerCase(); }), needle.toLowerCase());","};","","/**","* Returns the specified value of the key passed from object and in case that","* this key doesn't exist, the default value is returned. The key matching is","* done in a case insensitive manner.","*","* @param {string} key      The array key.","* @param {object} haystack The object to be used.","* @param {mix}    default  The value to return if $key is not found in $array.","*","* @static","*","* @return mix","*/","exports.tryGetValueInsensitive = function (key, haystack, defaultValue) {","  if (haystack) {","    for (var i in haystack) {","      if (haystack.hasOwnProperty(i) && i.toString().toLowerCase() === key.toString().toLowerCase()) {","        return haystack[i];","      }","    }","  }","","  return defaultValue;","};","","/**","* Returns the value in a chained object.","*","* @param {object} object   The object with the values.","* @param {array}  keys     The keys.","* @param {mix}    default  The value to return if $key is not found in $array.","*","* @static","*","* @return mix","*/","exports.tryGetValueChain = function (object, keys, defaultValue) {","  if (keys.length === 0) {","    return object;","  }","","  var currentKey = keys.shift();","  if (object && object[currentKey] !== undefined) {","    return exports.tryGetValueChain(object[currentKey], keys, defaultValue);","  }","","  return defaultValue;","};","","/**","* Set the value of an inner property of an object.","*","* @param {object} object   The target object.","* @param {array}  keys     The property chain keys.","* @param {mix}    object   The value to be set.","*","* @static","","* @example","* // Set targetObject.propA.propB to 'testValue'","* var targetObject = {};","* util.setObjectInnerPropertyValue(targetObject, ['propA', 'propB'], 'testValue');","*/","exports.setObjectInnerPropertyValue = function(object, propertyChainKeys, value){","  if(!object || propertyChainKeys.length < 1) {","    return;","  }","","  var currentKey = propertyChainKeys.shift();","  if(propertyChainKeys.length === 0) {","    object[currentKey] = value;","    return;","  }","  ","  if (!object[currentKey]) {","    object[currentKey] = {};","  }","  ","  exports.setObjectInnerPropertyValue(object[currentKey], propertyChainKeys, value);","};","","/**","* Rounds a date off to seconds.","*","* @param {Date} a date","* @return {string} the date in ISO8061 format, with no milliseconds component","*/","exports.truncatedISO8061Date = function (date) {","  var dateString = date.toISOString();","  return dateString.substring(0, dateString.length - 5) + 'Z';","};","","exports.normalizeArgs = function (optionsOrCallback, callback, result) {","  var options = {};","  if(_.isFunction(optionsOrCallback) && !callback) {","    callback = optionsOrCallback;","  } else if (optionsOrCallback) {","    options = optionsOrCallback;","  }","","  result(options, callback);","};","","exports.getNodeVersion = function () {","  var parsedVersion = process.version.split('.');","  return {","    major: parseInt(parsedVersion[0].substr(1), 10),","    minor: parseInt(parsedVersion[1], 10),","    patch: parseInt(parsedVersion[2], 10)","  };","};","","exports.analyzeStream = function (stream, calculateMD5, callback) {","  var digest = null;","  var length = 0;","  if (calculateMD5) {","    digest = new Md5Wrapper().createMd5Hash();","  }","","  stream.on('data', function (chunk) {","    if (calculateMD5) {","      digest.update(chunk);","    }","","    length += chunk.length;","  });","","  stream.on('end', function () {","    var md5 = null;","    if (calculateMD5) {","      md5 = digest.digest('base64');","    }","","    callback(length, md5);","  });","};","","/**","* Calculate md5sum for the stream","* @ignore","*/","exports.calculateMD5 = function(readStream, bufferLength, options, callback) {","  var internalBuff = new Buffer(bufferLength);","  var index = 0;","  var internalHash = new Md5Wrapper().createMd5Hash();","  readStream.on('data', function(data) {","    if (index + data.length > bufferLength) {","      var copyLength = bufferLength - index;","      if (copyLength > 0) {","        data = data.slice(0, copyLength);","        data.copy(internalBuff, index);","        internalHash.update(data);","        index += copyLength;","      }","      readStream.emit('end');","    } else {","      data.copy(internalBuff, index);","      internalHash.update(data);","      index += data.length;","    }","  }).on('end', function() {","    if (!readStream.endEmitted) {","      internalBuff = internalBuff.slice(0, index);","      var contentMD5 = internalHash.digest('base64');","      // Set the flag to be compatible with Nodejs 0.10 which will keep emitting data from ","      // the file stream when the read stream has emitted the end event from its listner. ","      readStream.endEmitted = true;","      callback(internalBuff, contentMD5);","    }","  });","};","","/**","* Whether the content of buffer is all zero","*/","exports.isBufferAllZero = function (buffer) {","  for(var i = 0, len = buffer.length; i < len; i++) {","    if (buffer[i] !== 0) {","      return false;","    }","  }","  return true;","};","","/**","* Write zero to stream","*/","var zeroBuffer = null;","exports.writeZerosToStream = function (stream, length, md5Hash, progressCallback, callback) {","  var defaultBufferSize = Constants.BlobConstants.DEFAULT_WRITE_BLOCK_SIZE_IN_BYTES;","  var bufferSize = Math.min(defaultBufferSize, length);","  var remaining = length - bufferSize;","  var buffer = null;","  if (bufferSize == defaultBufferSize) {","    if (!zeroBuffer) {","      zeroBuffer = new Buffer(defaultBufferSize);","      zeroBuffer.fill(0);","    }","    buffer = zeroBuffer;","  } else {","    buffer = new Buffer(bufferSize);","    buffer.fill(0);","  }","  if (md5Hash) {","    md5Hash.update(buffer);","  }","  //We can only write the entire buffer to stream instead of part of buffer.","  return stream.write(buffer, function () {","    if (exports.objectIsFunction(progressCallback)) {","      progressCallback(null, buffer.length);","    }","    buffer = null;","    if (remaining > 0) {","      exports.writeZerosToStream(stream, remaining, md5Hash, progressCallback, callback);","    } else if (exports.objectIsFunction(callback)) {","      callback(null, null);","    }","  });","};","","/**","* Calculate md5sum for the content","*/","exports.getContentMd5 = function (content, encoding) {","  if (!encoding) encoding = 'base64';","  var internalHash = new Md5Wrapper().createMd5Hash();","  internalHash.update(content, 'utf8');","  return internalHash.digest(encoding);","};","","exports.getNextLocation = function(lastLocation, locationMode) {","  switch(locationMode) {","  case StorageUtilities.LocationMode.PRIMARY_ONLY:","    return Constants.StorageLocation.PRIMARY;","  case StorageUtilities.LocationMode.SECONDARY_ONLY:","    return Constants.StorageLocation.SECONDARY;","  case StorageUtilities.LocationMode.PRIMARY_THEN_SECONDARY:","  case StorageUtilities.LocationMode.SECONDARY_THEN_PRIMARY:","    return (lastLocation === Constants.StorageLocation.PRIMARY) ? Constants.StorageLocation.SECONDARY : Constants.StorageLocation.PRIMARY;","  default:","    throw new RangeError(util.format(SR.ARGUMENT_OUT_OF_RANGE_ERROR, 'locationMode', locationMode));","  }","};","","exports.getNextListingLocationMode = function (token) {","  if(_.isNull(token) || _.isUndefined(token)) {","    return Constants.RequestLocationMode.PRIMARY_OR_SECONDARY;","  }","  else {","    switch (token.targetLocation) {","    case Constants.StorageLocation.PRIMARY:","      return Constants.RequestLocationMode.PRIMARY_ONLY;","    case Constants.StorageLocation.SECONDARY:","      return Constants.RequestLocationMode.SECONDARY_ONLY;","    default:","      throw new RangeError(util.format(SR.ARGUMENT_OUT_OF_RANGE_ERROR, 'targetLocation', token.targetLocation));","    }","  }","};","","exports.isStreamPaused = function (object) {","  if (object instanceof stream) {","    return object._paused === true || (object._readableState && object._readableState.flowing === false);","  }","  return false;","};","","exports.pathExistsSync = fs.existsSync ? fs.existsSync : path.existsSync;","","/**","* Parse copy progress string in the format of bytesCopied/totalBytes","*/","exports.parseCopyProgress = function (progress) {","  if (typeof progress != 'string' || progress.indexOf('/') === -1) {","    return {};","  }","  ","  var progressInfo = progress.split('/');","  return { bytesCopied: progressInfo[0], totalBytes: progressInfo[1] };","};","","/**","* The list of the properties should be normalized with explicit mapping","*/","var normalizePropertyNameExceptionList = {","  'x-ms-blob-sequence-number': 'sequenceNumber',","  'content-Type': 'contentSettings.contentType',","  'content-Encoding': 'contentSettings.contentEncoding',","  'content-Language': 'contentSettings.contentLanguage',","  'cache-Control': 'contentSettings.cacheControl',","  'content-Disposition': 'contentSettings.contentDisposition',","  'content-MD5': 'contentSettings.contentMD5',","  'leaseId': 'lease.id',","  'leaseStatus': 'lease.status',","  'leaseDuration': 'lease.duration',","  'leaseState': 'lease.state',","  'copyId': 'copy.id',","  'copyStatus': 'copy.status',","  'copySource': 'copy.source',","  'copyProgress': 'copy.progress',","  'copyCompletionTime': 'copy.completionTime',","  'copyStatusDescription': 'copy.statusDescription',","  'copyDestinationSnapshot': 'copy.destinationSnapshot',","  'publicAccess': 'publicAccessLevel',","  'incrementalCopy': 'isIncrementalCopy'","};","","/**","* Normalize the property name from XML to keep consistent with ","* the name defined in the property headers","*/","exports.normalizePropertyNameFromXML = function (propertyName) {","  if (this.IsNullOrEmptyOrUndefinedOrWhiteSpace(propertyName)) {","    return '';","  }","  ","  propertyName = propertyName.trim();","  propertyName = propertyName[0].toLowerCase() + propertyName.substring(1);","  // So far the cases are:","  //   for the 'last-modified' property in listing resources","  //   for the 'content-*' properties in listing resources","  //   for the 'cache-control' property in listing blobs","  //   for the 'x-ms-blob-sequence-number' in listing blobs","  if (propertyName in normalizePropertyNameExceptionList) {","    return normalizePropertyNameExceptionList[propertyName];","  } else if (propertyName.toLowerCase().indexOf('-') != -1) {","    return propertyName.replace('-', '');","  } else {","    return propertyName;","  }","};","","/**","* Set the property value from XML","*/","exports.setPropertyValueFromXML = function (result, xmlNode, toNormalize) {","  for (var subPropertyName in xmlNode) {","    if (xmlNode.hasOwnProperty(subPropertyName)) {","      if (toNormalize) {","        var propertyChain = this.normalizePropertyNameFromXML(subPropertyName).split('.');","        exports.setObjectInnerPropertyValue(result, propertyChain, xmlNode[subPropertyName]);","      } else {","        result[subPropertyName.toLowerCase()] = xmlNode[subPropertyName];","      }","      ","      if (subPropertyName.toLowerCase() === 'copyprogress') {","        var info = this.parseCopyProgress(xmlNode[subPropertyName]);","        exports.setObjectInnerPropertyValue(result, ['copy', 'bytesCopied'], parseInt(info.bytesCopied));","        exports.setObjectInnerPropertyValue(result, ['copy', 'totalBytes'], parseInt(info.totalBytes));","      }","    }","  }","};",""],"l":{"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"34":1,"35":0,"36":0,"37":0,"39":0,"48":1,"49":0,"63":1,"64":0,"65":0,"68":0,"76":1,"77":0,"86":1,"87":0,"96":1,"97":0,"106":1,"107":0,"116":1,"117":0,"126":1,"127":0,"135":1,"136":0,"143":1,"144":0,"145":0,"146":0,"148":0,"158":1,"159":0,"168":1,"169":0,"170":0,"173":0,"174":0,"177":0,"187":1,"188":0,"189":0,"190":0,"194":0,"204":1,"205":0,"206":0,"209":0,"219":1,"220":0,"221":0,"224":0,"233":1,"234":0,"235":0,"238":0,"247":1,"248":0,"262":1,"263":0,"279":1,"280":0,"281":0,"282":0,"283":0,"288":0,"302":1,"303":0,"304":0,"307":0,"308":0,"309":0,"312":0,"329":1,"330":0,"331":0,"334":0,"335":0,"336":0,"337":0,"340":0,"341":0,"344":0,"353":1,"354":0,"355":0,"358":1,"359":0,"360":0,"361":0,"362":0,"363":0,"366":0,"369":1,"370":2,"371":2,"378":1,"379":0,"380":0,"381":0,"382":0,"385":0,"386":0,"387":0,"390":0,"393":0,"394":0,"395":0,"396":0,"399":0,"407":1,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"420":0,"422":0,"423":0,"424":0,"427":0,"428":0,"429":0,"432":0,"433":0,"441":1,"442":0,"443":0,"444":0,"447":0,"453":1,"454":1,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"464":0,"466":0,"467":0,"469":0,"470":0,"473":0,"474":0,"475":0,"477":0,"478":0,"479":0,"480":0,"481":0,"489":1,"490":0,"491":0,"492":0,"493":0,"496":1,"497":0,"499":0,"501":0,"504":0,"506":0,"510":1,"511":0,"512":0,"515":0,"517":0,"519":0,"521":0,"526":1,"527":0,"528":0,"530":0,"533":1,"538":1,"539":0,"540":0,"543":0,"544":0,"550":1,"577":1,"578":0,"579":0,"582":0,"583":0,"589":0,"590":0,"591":0,"592":0,"594":0,"601":1,"602":0,"603":0,"604":0,"605":0,"606":0,"608":0,"611":0,"612":0,"613":0,"614":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/constants.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/constants.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{"1":[1,1]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":25}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":82}},"3":{"start":{"line":25,"column":0},"end":{"line":2391,"column":2}},"4":{"start":{"line":2393,"column":0},"end":{"line":2393,"column":27}}},"branchMap":{"1":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":23},"end":{"line":20,"column":59}},{"start":{"line":20,"column":63},"end":{"line":20,"column":81}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Expose 'Constants'.","exports = module.exports;","","var storageDnsSuffix = process.env.AZURE_STORAGE_DNS_SUFFIX || 'core.windows.net';","","/**","* Defines constants.","*/","var Constants = {","  /*","  * Specifies the value to use for UserAgent header.","  */","  USER_AGENT_PRODUCT_NAME: 'Azure-Storage',","","  /*","  * Specifies the value to use for UserAgent header.","  */","  USER_AGENT_PRODUCT_VERSION: '2.1.0',","","  /**","  * The number of default concurrent requests for parallel operation.","  *","  * @const","  * @type {string}","  */","  DEFAULT_PARALLEL_OPERATION_THREAD_COUNT: 5,","","  /**","  * Constant representing a kilobyte (Non-SI version).","  *","  * @const","  * @type {string}","  */","  KB: 1024,","","  /**","  * Constant representing a megabyte (Non-SI version).","  *","  * @const","  * @type {string}","  */","  MB: 1024 * 1024,","","  /**","  * Constant representing a gigabyte (Non-SI version).","  *","  * @const","  * @type {string}","  */","  GB: 1024 * 1024 * 1024,","","  /**","  * Specifies HTTP.","  *","  * @const","  * @type {string}","  */","  HTTP: 'http:',","","  /**","  * Specifies HTTPS.","  *","  * @const","  * @type {string}","  */","  HTTPS: 'https:',","  ","  /**","  * Default HTTP port.","  *","  * @const","  * @type {int}","  */","  DEFAULT_HTTP_PORT: 80,","  ","  /**","  * Default HTTPS port.","  *","  * @const","  * @type {int}","  */","  DEFAULT_HTTPS_PORT: 443,","","  /**","   * Default client request timeout in milliseconds.","   * Integer containing the number of milliseconds to wait for a server to send response headers (and start the response body) before aborting the request.","   * 2 minutes by default.","   * ","   * @constant","   * @type {int}","   */","  DEFAULT_CLIENT_REQUEST_TIMEOUT_IN_MS: 120000,","","  /**","  * Marker for atom metadata.","  *","  * @const","  * @type {string}","  */","  XML_METADATA_MARKER: '$',","","  /**","  * Marker for atom value.","  *","  * @const","  * @type {string}","  */","  XML_VALUE_MARKER: '_',","  ","  /**","  * Defines the service types indicators.","  * ","  * @const","  * @enum","  */","  ServiceType: {","    Blob: 'blob',","    Queue: 'queue',","    Table: 'table',","    File: 'file',","  },","","  /**","  * Specifies the location used to indicate which location the operation can be performed against.","  *","  * @const","  * @enum","  */","  RequestLocationMode: {","    PRIMARY_ONLY: 0,","    SECONDARY_ONLY: 1,","    PRIMARY_OR_SECONDARY: 2,","  },","","  /**","  * Represents a storage service location.","  *","  * @const","  * @enum","  */","  StorageLocation: {","    PRIMARY: 0,","    SECONDARY: 1,","  },","  ","  AccountSasConstants:{","    /**","    * Permission types","    *","    * @const","    * @enum {string}","    */","    Permissions: {","      READ: 'r',","      ADD: 'a',","      CREATE: 'c',","      UPDATE: 'u',","      PROCESS: 'p',","      WRITE: 'w',","      DELETE: 'd',","      LIST: 'l'","    },","    ","    /**","    * Services types","    *","    * @const","    * @enum {string}","    */","    Services: {","      BLOB: 'b',","      FILE: 'f',","      QUEUE: 'q',","      TABLE: 't',","    },","    ","    /**","    * Resources types","    *","    * @const","    * @enum {string}","    */","    Resources: {","      SERVICE: 's',","      CONTAINER: 'c',","      OBJECT: 'o'","    },","    ","    Protocols: {","      HTTPSONLY: 'https',","      HTTPSORHTTP: 'https,http'","    },","  },","","  /**","  * Defines constants for use with shared access policies.","  */","  AclConstants: {","    /**","    * XML element for an access policy.","    *","    * @const","    * @type {string}","    */","    ACCESS_POLICY: 'AccessPolicy',","","    /**","    * XML element for the end time of an access policy.","    *","    * @const","    * @type {string}","    */","    EXPIRY: 'Expiry',","","    /**","    * XML attribute for IDs.","    *","    * @const","    * @type {string}","    */","    ID: 'Id',","","    /**","    * XML element for the permission of an access policy.","    *","    * @const","    * @type {string}","    */","    PERMISSION: 'Permission',","","    /**","    * XML element for a signed identifier.","    *","    * @const","    * @type {string}","    */","    SIGNED_IDENTIFIER_ELEMENT: 'SignedIdentifier',","","    /**","    * XML element for signed identifiers.","    *","    * @const","    * @type {string}","    */","    SIGNED_IDENTIFIERS_ELEMENT: 'SignedIdentifiers',","","    /**","    * XML element for the start time of an access policy.","    *","    * @const","    * @type {string}","    */","    START: 'Start'","  },","","  /**","  * Defines constants for use with service properties.","  */","  ServicePropertiesConstants: {","    /**","    * XML element for storage service properties.","    *","    * @const","    * @type {string}","    */","    STORAGE_SERVICE_PROPERTIES_ELEMENT: 'StorageServiceProperties',","","    /**","    * Default analytics version to send for logging, hour metrics and minute metrics.","    *","    * @const","    * @type {string}","    */","    DEFAULT_ANALYTICS_VERSION: '1.0',","","    /**","    * XML element for logging.","    *","    * @const","    * @type {string}","    */","    LOGGING_ELEMENT: 'Logging',","","    /**","    * XML element for version.","    *","    * @const","    * @type {string}","    */","    VERSION_ELEMENT: 'Version',","","    /**","    * XML element for delete.","    *","    * @const","    * @type {string}","    */","    DELETE_ELEMENT: 'Delete',","","    /**","    * XML element for read.","    *","    * @const","    * @type {string}","    */","    READ_ELEMENT: 'Read',","","    /**","    * XML element for write.","    *","    * @const","    * @type {string}","    */","    WRITE_ELEMENT: 'Write',","","    /**","    * XML element for retention policy.","    *","    * @const","    * @type {string}","    */","    RETENTION_POLICY_ELEMENT: 'RetentionPolicy',","","    /**","    * XML element for enabled.","    *","    * @const","    * @type {string}","    */","    ENABLED_ELEMENT: 'Enabled',","","    /**","    * XML element for days.","    *","    * @const","    * @type {string}","    */","    DAYS_ELEMENT: 'Days',","","    /**","    * XML element for HourMetrics.","    *","    * @const","    * @type {string}","    */","    HOUR_METRICS_ELEMENT: 'HourMetrics',","","    /**","    * XML element for MinuteMetrics.","    *","    * @const","    * @type {string}","    */","    MINUTE_METRICS_ELEMENT: 'MinuteMetrics',","","    /**","    * XML element for Cors.","    *","    * @const","    * @type {string}","    */","    CORS_ELEMENT: 'Cors',","","    /**","    * XML element for CorsRule.","    *","    * @const","    * @type {string}","    */","    CORS_RULE_ELEMENT: 'CorsRule',","","    /**","    * XML element for AllowedOrigins.","    *","    * @const","    * @type {string}","    */","    ALLOWED_ORIGINS_ELEMENT: 'AllowedOrigins',","","    /**","    * XML element for AllowedMethods.","    *","    * @const","    * @type {string}","    */","    ALLOWED_METHODS_ELEMENT: 'AllowedMethods',","","    /**","    * XML element for MaxAgeInSeconds.","    *","    * @const","    * @type {string}","    */","    MAX_AGE_IN_SECONDS_ELEMENT: 'MaxAgeInSeconds',","","    /**","    * XML element for ExposedHeaders.","    *","    * @const","    * @type {string}","    */","    EXPOSED_HEADERS_ELEMENT: 'ExposedHeaders',","","    /**","    * XML element for AllowedHeaders.","    *","    * @const","    * @type {string}","    */","    ALLOWED_HEADERS_ELEMENT: 'AllowedHeaders',","","    /**","    * XML element for IncludeAPIs.","    *","    * @const","    * @type {string}","    */","    INCLUDE_APIS_ELEMENT: 'IncludeAPIs',","","    /**","    * XML element for DefaultServiceVersion.","    *","    * @const","    * @type {string}","    */","    DEFAULT_SERVICE_VERSION_ELEMENT: 'DefaultServiceVersion'","  },","","  /**","  * Defines constants for use with blob operations.","  */","  BlobConstants: {","    /**","    * XML element for the latest.","    *","    * @const","    * @type {string}","    */","    LATEST_ELEMENT: 'Latest',","","    /**","    * XML element for uncommitted blocks.","    *","    * @const","    * @type {string}","    */","    UNCOMMITTED_ELEMENT: 'Uncommitted',","","    /**","    * XML element for a block list.","    *","    * @const","    * @type {string}","    */","    BLOCK_LIST_ELEMENT: 'BlockList',","","    /**","    * XML element for committed blocks.","    *","    * @const","    * @type {string}","    */","    COMMITTED_ELEMENT: 'Committed',","","    /**","    * The default write page size, in bytes, used by blob streams.","    *","    * @const","    * @type {int}","    */","    DEFAULT_WRITE_PAGE_SIZE_IN_BYTES: 4 * 1024 * 1024,","    ","    /**","    * The minimum write page size, in bytes, used by blob streams.","    *","    * @const","    * @type {int}","    */","    MIN_WRITE_PAGE_SIZE_IN_BYTES: 2 * 1024 * 1024,","","    /**","    * The default maximum size, in bytes, of a blob before it must be separated into blocks.","    *","    * @const","    * @type {int}","    */","    DEFAULT_SINGLE_BLOB_PUT_THRESHOLD_IN_BYTES: 32 * 1024 * 1024,","","    /**","    * The default write block size, in bytes, used by blob streams.","    *","    * @const","    * @type {int}","    */","    DEFAULT_WRITE_BLOCK_SIZE_IN_BYTES: 4 * 1024 * 1024,","","    /**","    * The maximum size of a single block of block blob.","    *","    * @const","    * @type {int}","    */","    MAX_BLOCK_BLOB_BLOCK_SIZE: 100 * 1024 * 1024,","","    /**","    * The maximum size of a single block of append blob.","    *","    * @const","    * @type {int}","    */","    MAX_APPEND_BLOB_BLOCK_SIZE: 4 * 1024 * 1024,","","    /**","    * The maximum size, in bytes, of a blob before it must be separated into blocks.","    *","    * @const","    * @type {int}","    */","    MAX_SINGLE_UPLOAD_BLOB_SIZE_IN_BYTES: 64 * 1024 * 1024,","","    /**","    * The maximum range get size when requesting for a contentMD5","    */","    MAX_RANGE_GET_SIZE_WITH_MD5 : 4 * 1024 * 1024,","","    /**","    * The maximum page range size for a page update operation.","    */","    MAX_UPDATE_PAGE_SIZE : 4 * 1024 * 1024,","    ","    /**","    * The maximum buffer size for writing a stream buffer.","    */","    MAX_QUEUED_WRITE_DISK_BUFFER_SIZE : 64 * 1024 * 1024,","    ","    /**","    * Max size for single get page range. The max value should be 150MB","    * http://blogs.msdn.com/b/windowsazurestorage/archive/2012/03/26/getting-the-page-ranges-of-a-large-page-blob-in-segments.aspx","    */","    MAX_SINGLE_GET_PAGE_RANGE_SIZE : 37 * 4 * 1024 * 1024,","","    /**","    * The size of a page, in bytes, in a page blob.","    *","    * @const","    * @type {string}","    */","    PAGE_SIZE: 512,","","    /**","    * Resource types.","    *","    * @const","    * @enum {string}","    */","    ResourceTypes: {","      CONTAINER: 'c',","      BLOB: 'b'","    },","","    /**","    * List blob types.","    *","    * @const","    * @enum {string}","    */","    ListBlobTypes: {","      Blob: 'b',","      Directory: 'd'","    },","","    /**","    * Put page write options","    *","    * @const","    * @enum {string}","    */","    PageWriteOptions: {","      UPDATE: 'update',","      CLEAR: 'clear'","    },","","    /**","    * Blob types","    *","    * @const","    * @enum {string}","    */","    BlobTypes: {","      BLOCK: 'BlockBlob',","      PAGE: 'PageBlob',","      APPEND: 'AppendBlob'","    },","","    /**","    * Blob lease constants","    *","    * @const","    * @enum {string}","    */","    LeaseOperation: {","      ACQUIRE: 'acquire',","      RENEW: 'renew',","      CHANGE: 'change',","      RELEASE: 'release',","      BREAK: 'break'","    }","  },","","  /**","  * Defines constants for use with file operations.","  */","  FileConstants: {","    /**","    * The default write size, in bytes, used by file streams.","    *","    * @const","    * @type {string}","    */","    DEFAULT_WRITE_SIZE_IN_BYTES: 4 * 1024 * 1024,","","    /**","    * The maximum range size when requesting for a contentMD5.","    */","    MAX_RANGE_GET_SIZE_WITH_MD5 : 4 * 1024 * 1024,","","    /**","    * The maximum range size for a file update operation.","    */","    MAX_UPDATE_FILE_SIZE : 4 * 1024 * 1024,","","    /**","    * The default minimum size, in bytes, of a file when it must be separated into ranges.","    *","    * @const","    * @type {int}","    */","    DEFAULT_SINGLE_FILE_GET_THRESHOLD_IN_BYTES: 32 * 1024 * 1024,","","    /**","    * The minimum write file size, in bytes, used by file streams.","    *","    * @const","    * @type {int}","    */","    MIN_WRITE_FILE_SIZE_IN_BYTES: 2 * 1024 * 1024,","","    /**","    * Put range write options","    *","    * @const","    * @enum {string}","    */","    RangeWriteOptions: {","      UPDATE: 'update',","      CLEAR: 'clear'","    },","","    /**","    * Resource types.","    *","    * @const","    * @enum {string}","    */","    ResourceTypes: {","      SHARE: 's',","      FILE: 'f'","    }","  },","","  /**","  * Defines constants for use with queue storage.","  *","  * @const","  * @type {string}","  */","  QueueConstants: {","    /**","    * XML element for QueueMessage.","    *","    * @const","    * @type {string}","    */","    QUEUE_MESSAGE_ELEMENT: 'QueueMessage',","","    /**","    * XML element for MessageText.","    *","    * @const","    * @type {string}","    */","    MESSAGE_TEXT_ELEMENT: 'MessageText'","  },","","  /**","  * Defines constants for use with table storage.","  *","  * @const","  * @type {string}","  */","  TableConstants: {","    /**","    * The changeset response delimiter.","    *","    * @const","    * @type {string}","    */","    CHANGESET_DELIMITER: '--changesetresponse_',","","    /**","    * The batch response delimiter.","    *","    * @const","    * @type {string}","    */","    BATCH_DELIMITER: '--batchresponse_',","","    /**","    * The next continuation row key token.","    *","    * @const","    * @type {string}","    */","    CONTINUATION_NEXT_ROW_KEY: 'x-ms-continuation-nextrowkey',","","    /**","    * The next continuation partition key token.","    *","    * @const","    * @type {string}","    */","    CONTINUATION_NEXT_PARTITION_KEY: 'x-ms-continuation-nextpartitionkey',","","    /**","    * The next continuation table name token.","    *","    * @const","    * @type {string}","    */","    CONTINUATION_NEXT_TABLE_NAME: 'x-ms-continuation-nexttablename',","","    /**","    * The next row key query string argument.","    *","    * @const","    * @type {string}","    */","    NEXT_ROW_KEY: 'NextRowKey',","","        /**","    * The next partition key query string argument.","    *","    * @const","    * @type {string}","    */","    NEXT_PARTITION_KEY: 'NextPartitionKey',","","    /**","    * The next table name query string argument.","    *","    * @const","    * @type {string}","    */","    NEXT_TABLE_NAME: 'NextTableName',","","    /** ","    * Prefix of the odata properties returned in a JSON query","    */","    ODATA_PREFIX: 'odata.',","","    /**","    * Constant representing the string following a type annotation in a JSON table query","    */","    ODATA_TYPE_SUFFIX: '@odata.type',","","    /**","    * Constant representing the property where the odata metadata elements are stored.","    *","    * @const","    * @type {string}","    */","    ODATA_METADATA_MARKER: '.metadata',","","    /**","    * Constant representing the value for an entity property.","    */","    ODATA_VALUE_MARKER: '_',","","    /** ","    * Constant representing the type for an entity property.","    */","    ODATA_TYPE_MARKER: '$',","","    /**","    * The value to set the maximum data service version header.","    * @const","    * @type {string}","    */","    DEFAULT_DATA_SERVICE_VERSION: '3.0;NetFx',","","    /**","    * The name of the property that stores the table name.","    *","    * @const","    * @type {string}","    */","    TABLE_NAME: 'TableName',","","    /**","    * The name of the special table used to store tables.","    *","    * @const","    * @type {string}","    */","    TABLE_SERVICE_TABLE_NAME: 'Tables',","","    /**","    * Operations","    *","    * @const","    * @enum {string}","    */","    Operations: {","      RETRIEVE: 'RETRIEVE',","      INSERT: 'INSERT',","      REPLACE: 'REPLACE',","      MERGE: 'MERGE',","      DELETE: 'DELETE',","      INSERT_OR_REPLACE: 'INSERT_OR_REPLACE',","      INSERT_OR_MERGE: 'INSERT_OR_MERGE'","    }","  },","","  /**","  * Defines constants for use with HTTP headers.","  */","  HeaderConstants: {","    /**","    * The accept ranges header.","    *","    * @const","    * @type {string}","    */","    ACCEPT_RANGES: 'accept_ranges',","","    /**","    * The content transfer encoding header.","    *","    * @const","    * @type {string}","    */","    CONTENT_TRANSFER_ENCODING: 'content-transfer-encoding',","","    /**","    * The transfer encoding header.","    *","    * @const","    * @type {string}","    */","    TRANSFER_ENCODING: 'transfer-encoding',","","    /**","    * The server header.","    *","    * @const","    * @type {string}","    */","    SERVER: 'server',","","    /**","    * The location header.","    *","    * @const","    * @type {string}","    */","    LOCATION: 'location',","","    /**","    * The Last-Modified header","    *","    * @const","    * @type {string}","    */","    LAST_MODIFIED: 'Last-Modified',","","    /**","    * The data service version.","    *","    * @const","    * @type {string}","    */","    DATA_SERVICE_VERSION: 'dataserviceversion',","","    /**","    * The maximum data service version.","    *","    * @const","    * @type {string}","    */","    MAX_DATA_SERVICE_VERSION: 'maxdataserviceversion',","","    /**","    * The master Windows Azure Storage header prefix.","    *","    * @const","    * @type {string}","    */","    PREFIX_FOR_STORAGE: 'x-ms-',","","    /**","    * The client request Id header.","    *","    * @const","    * @type {string}","    */","    CLIENT_REQUEST_ID: 'x-ms-client-request-id',","","    /**","    * The header that specifies the approximate message count of a queue.","    *","    * @const","    * @type {string}","    */","    APPROXIMATE_MESSAGES_COUNT: 'x-ms-approximate-messages-count',","","    /**","    * The Authorization header.","    *","    * @const","    * @type {string}","    */","    AUTHORIZATION: 'authorization',","","    /**","    * The header that is used to avoid browser cache.","    *","    * @const","    * @type {string}","    */","    FORCE_NO_CACHE_IN_BROWSER: '_',","","    /**","    * The header that specifies public access to blobs.","    *","    * @const","    * @type {string}","    */","    BLOB_PUBLIC_ACCESS: 'x-ms-blob-public-access',","","    /**","    * The header for the blob type.","    *","    * @const","    * @type {string}","    */","    BLOB_TYPE: 'x-ms-blob-type',","","    /**","    * The header for the type.","    *","    * @const","    * @type {string}","    */","    TYPE: 'x-ms-type',","","    /**","    * Specifies the block blob type.","    *","    * @const","    * @type {string}","    */","    BLOCK_BLOB: 'blockblob',","","    /**","    * The CacheControl header.","    *","    * @const","    * @type {string}","    */","    CACHE_CONTROL: 'cache-control',","","    /**","    * The header that specifies blob caching control.","    *","    * @const","    * @type {string}","    */","    BLOB_CACHE_CONTROL: 'x-ms-blob-cache-control',","","    /**","    * The header that specifies caching control.","    *","    * @const","    * @type {string}","    */","    FILE_CACHE_CONTROL: 'x-ms-cache-control',","","    /**","    * The copy status.","    *","    * @const","    * @type {string}","    */","    COPY_STATUS: 'x-ms-copy-status',","","    /**","    * The copy completion time","    *","    * @const","    * @type {string}","    */","    COPY_COMPLETION_TIME: 'x-ms-copy-completion-time',","","    /**","    * The copy status message","    *","    * @const","    * @type {string}","    */","    COPY_STATUS_DESCRIPTION: 'x-ms-copy-status-description',","","    /**","    * The copy identifier.","    *","    * @const","    * @type {string}","    */","    COPY_ID: 'x-ms-copy-id',","","    /**","    * Progress of any copy operation","    *","    * @const","    * @type {string}","    */","    COPY_PROGRESS: 'x-ms-copy-progress',","","    /**","    * The copy action.","    *","    * @const","    * @type {string}","    */","    COPY_ACTION: 'x-ms-copy-action',","","    /**","    * Flag if the blob is incremental copy blob.","    */","    INCREMENTAL_COPY: 'x-ms-incremental-copy',","","    /**","    * Snapshot time of the last successful incremental copy snapshot for this blob.","    */","    COPY_DESTINATION_SNAPSHOT: 'x-ms-copy-destination-snapshot',","","    /**","    * The ContentID header.","    *","    * @const","    * @type {string}","    */","    CONTENT_ID: 'content-id',","","    /**","    * The ContentEncoding header.","    *","    * @const","    * @type {string}","    */","    CONTENT_ENCODING: 'content-encoding',","","    /**","    * The header that specifies blob content encoding.","    *","    * @const","    * @type {string}","    */","    BLOB_CONTENT_ENCODING: 'x-ms-blob-content-encoding',","","    /**","    * The header that specifies content encoding.","    *","    * @const","    * @type {string}","    */","    FILE_CONTENT_ENCODING: 'x-ms-content-encoding',","","    /**","    * The ContentLangauge header.","    *","    * @const","    * @type {string}","    */","    CONTENT_LANGUAGE: 'content-language',","","    /**","    * The header that specifies blob content language.","    *","    * @const","    * @type {string}","    */","    BLOB_CONTENT_LANGUAGE: 'x-ms-blob-content-language',","","    /**","    * The header that specifies content language.","    *","    * @const","    * @type {string}","    */","    FILE_CONTENT_LANGUAGE: 'x-ms-content-language',","","    /**","    * The ContentLength header.","    *","    * @const","    * @type {string}","    */","    CONTENT_LENGTH: 'content-length',","","    /**","    * The header that specifies blob content length.","    *","    * @const","    * @type {string}","    */","    BLOB_CONTENT_LENGTH: 'x-ms-blob-content-length',","","    /**","    * The header that specifies content length.","    *","    * @const","    * @type {string}","    */","    FILE_CONTENT_LENGTH: 'x-ms-content-length',","","    /**","    * The ContentDisposition header.","    * @const","    * @type {string}","    */","    CONTENT_DISPOSITION: 'content-disposition',","","    /**","    * The header that specifies blob content disposition.","    *","    * @const","    * @type {string}","    */","    BLOB_CONTENT_DISPOSITION: 'x-ms-blob-content-disposition',","","    /**","    * The header that specifies content disposition.","    *","    * @const","    * @type {string}","    */","    FILE_CONTENT_DISPOSITION: 'x-ms-content-disposition',","","    /**","    * The ContentMD5 header.","    *","    * @const","    * @type {string}","    */","    CONTENT_MD5: 'content-md5',","","    /**","    * The header that specifies blob content MD5.","    *","    * @const","    * @type {string}","    */","    BLOB_CONTENT_MD5: 'x-ms-blob-content-md5',","","    /**","    * The header that specifies content MD5.","    *","    * @const","    * @type {string}","    */","    FILE_CONTENT_MD5: 'x-ms-content-md5',","","    /**","    * The ContentRange header.","    *","    * @const","    * @type {string}","    */","    CONTENT_RANGE: 'cache-range',","","    /**","    * The ContentType header.","    *","    * @const","    * @type {string}","    */","    CONTENT_TYPE: 'content-type',","","    /**","    * The header that specifies blob content type.","    *","    * @const","    * @type {string}","    */","    BLOB_CONTENT_TYPE: 'x-ms-blob-content-type',","","    /**","    * The header that specifies content type.","    *","    * @const","    * @type {string}","    */","    FILE_CONTENT_TYPE: 'x-ms-content-type',","","    /**","    * The header for copy source.","    *","    * @const","    * @type {string}","    */","    COPY_SOURCE: 'x-ms-copy-source',","","    /**","    * The header that specifies the date.","    *","    * @const","    * @type {string}","    */","    DATE: 'date',","","    /**","    * The header that specifies the date.","    *","    * @const","    * @type {string}","    */","    MS_DATE: 'x-ms-date',","","    /**","    * The header to delete snapshots.","    *","    * @const","    * @type {string}","    */","    DELETE_SNAPSHOT: 'x-ms-delete-snapshots',","","    /**","    * The ETag header.","    *","    * @const","    * @type {string}","    */","    ETAG: 'etag',","","    /**","    * The IfMatch header.","    *","    * @const","    * @type {string}","    */","    IF_MATCH: 'if-match',","","    /**","    * The IfModifiedSince header.","    *","    * @const","    * @type {string}","    */","    IF_MODIFIED_SINCE: 'if-modified-since',","","    /**","    * The IfNoneMatch header.","    *","    * @const","    * @type {string}","    */","    IF_NONE_MATCH: 'if-none-match',","","    /**","    * The IfUnmodifiedSince header.","    *","    * @const","    * @type {string}","    */","    IF_UNMODIFIED_SINCE: 'if-unmodified-since',","","    /**","    * Specifies snapshots are to be included.","    *","    * @const","    * @type {string}","    */","    INCLUDE_SNAPSHOTS_VALUE: 'include',","","    /**","    * Specifies that the content-type is JSON.","    *","    * @const","    * @type {string}","    */","    JSON_CONTENT_TYPE_VALUE: 'application/json;',","","","    /**","    * The header that specifies lease ID.","    *","    * @const","    * @type {string}","    */","    LEASE_ID: 'x-ms-lease-id',","","    /**","    * The header that specifies the lease break period.","    *","    * @const","    * @type {string}","    */","    LEASE_BREAK_PERIOD: 'x-ms-lease-break-period',","","    /**","    * The header that specifies the proposed lease identifier.","    *","    * @const","    * @type {string}","    */","    PROPOSED_LEASE_ID: 'x-ms-proposed-lease-id',","","    /**","    * The header that specifies the lease duration.","    *","    * @const","    * @type {string}","    */","    LEASE_DURATION: 'x-ms-lease-duration',","","    /**","    * The header that specifies the source lease ID.","    *","    * @const","    * @type {string}","    */","    SOURCE_LEASE_ID: 'x-ms-source-lease-id',","","    /**","    * The header that specifies lease time.","    *","    * @const","    * @type {string}","    */","    LEASE_TIME: 'x-ms-lease-time',","","    /**","    * The header that specifies lease status.","    *","    * @const","    * @type {string}","    */","    LEASE_STATUS: 'x-ms-lease-status',","","    /**","    * The header that specifies lease state.","    *","    * @const","    * @type {string}","    */","    LEASE_STATE: 'x-ms-lease-state',","","    /**","    * Specifies the page blob type.","    *","    * @const","    * @type {string}","    */","    PAGE_BLOB: 'PageBlob',","","    /**","    * The header that specifies page write mode.","    *","    * @const","    * @type {string}","    */","    PAGE_WRITE: 'x-ms-page-write',","","    /**","    * The header that specifies file range write mode.","    *","    * @const","    * @type {string}","    */","    FILE_WRITE: 'x-ms-write',","","    /**","    * The header that specifies whether the response should include the inserted entity.","    *","    * @const","    * @type {string}","    */","    PREFER: 'Prefer',","","    /**","    * The header value which specifies that the response should include the inserted entity.","    *","    * @const","    * @type {string}","    */","    PREFER_CONTENT: 'return-content',","","    /**","    * The header value which specifies that the response should not include the inserted entity.","    *","    * @const","    * @type {string}","    */","    PREFER_NO_CONTENT: 'return-no-content',","","    /**","    * The header prefix for metadata.","    *","    * @const","    * @type {string}","    */","    PREFIX_FOR_STORAGE_METADATA: 'x-ms-meta-',","","    /**","    * The header prefix for properties.","    *","    * @const","    * @type {string}","    */","    PREFIX_FOR_STORAGE_PROPERTIES: 'x-ms-prop-',","","    /**","    * The Range header.","    *","    * @const","    * @type {string}","    */","    RANGE: 'Range',","","    /**","    * The header that specifies if the request will populate the ContentMD5 header for range gets.","    *","    * @const","    * @type {string}","    */","    RANGE_GET_CONTENT_MD5: 'x-ms-range-get-content-md5',","","    /**","    * The format string for specifying ranges.","    *","    * @const","    * @type {string}","    */","    RANGE_HEADER_FORMAT: 'bytes:%d-%d',","","    /**","    * The header that indicates the request ID.","    *","    * @const","    * @type {string}","    */","    REQUEST_ID: 'x-ms-request-id',","","    /**","    * The header for specifying the sequence number.","    *","    * @const","    * @type {string}","    */","    SEQUENCE_NUMBER: 'x-ms-blob-sequence-number',","","    /**","    * The header for specifying the If-Sequence-Number-EQ condition.","    *","    * @const","    * @type {string}","    */","    SEQUENCE_NUMBER_EQUAL: 'x-ms-if-sequence-number-eq',","","    /**","    * The header for specifying the If-Sequence-Number-LT condition.","    *","    * @const","    * @type {string}","    */","    SEQUENCE_NUMBER_LESS_THAN: 'x-ms-if-sequence-number-lt',","","    /**","    * The header for specifying the If-Sequence-Number-LE condition.","    *","    * @const","    * @type {string}","    */","    SEQUENCE_NUMBER_LESS_THAN_OR_EQUAL: 'x-ms-if-sequence-number-le',","","    /**","    * The header that specifies sequence number action.","    *","    * @const","    * @type {string}","    */","    SEQUENCE_NUMBER_ACTION: 'x-ms-sequence-number-action',","","    /**","    * The header for the blob content length.","    *","    * @const","    * @type {string}","    */","    SIZE: 'x-ms-blob-content-length',","","    /**","    * The header for snapshots.","    *","    * @const","    * @type {string}","    */","    SNAPSHOT: 'x-ms-snapshot',","","    /**","    * Specifies only snapshots are to be included.","    *","    * @const","    * @type {string}","    */","    SNAPSHOTS_ONLY_VALUE: 'only',","","    /**","    * The header for the If-Match condition.","    *","    * @const","    * @type {string}","    */","    SOURCE_IF_MATCH: 'x-ms-source-if-match',","","    /**","    * The header for the If-Modified-Since condition.","    *","    * @const","    * @type {string}","    */","    SOURCE_IF_MODIFIED_SINCE: 'x-ms-source-if-modified-since',","","    /**","    * The header for the If-None-Match condition.","    *","    * @const","    * @type {string}","    */","    SOURCE_IF_NONE_MATCH: 'x-ms-source-if-none-match',","","    /**","    * The header for the If-Unmodified-Since condition.","    *","    * @const","    * @type {string}","    */","    SOURCE_IF_UNMODIFIED_SINCE: 'x-ms-source-if-unmodified-since',","","    /**","    * The header for data ranges.","    *","    * @const","    * @type {string}","    */","    STORAGE_RANGE: 'x-ms-range',","","    /**","    * The header for storage version.","    *","    * @const","    * @type {string}","    */","    STORAGE_VERSION: 'x-ms-version',","","    /**","    * The current storage version header value.","    *","    * @const","    * @type {string}","    */","    TARGET_STORAGE_VERSION: '2016-05-31',","","    /**","    * The UserAgent header.","    *","    * @const","    * @type {string}","    */","    USER_AGENT: 'user-agent',","","    /**","    * The pop receipt header.","    *","    * @const","    * @type {string}","    */","    POP_RECEIPT: 'x-ms-popreceipt',","","    /**","    * The time next visibile header.","    *","    * @const","    * @type {string}","    */","    TIME_NEXT_VISIBLE: 'x-ms-time-next-visible',","","    /**","    * The approximate message counter header.","    *","    * @const","    * @type {string}","    */","    APPROXIMATE_MESSAGE_COUNT: 'x-ms-approximate-message-count',","","    /**","    * The lease action header.","    *","    * @const","    * @type {string}","    */","    LEASE_ACTION: 'x-ms-lease-action',","","    /**","    * The accept header.","    *","    * @const","    * @type {string}","    */","    ACCEPT: 'accept',","","    /**","    * The accept charset header.","    *","    * @const","    * @type {string}","    */","    ACCEPT_CHARSET: 'Accept-Charset',","","    /**","    * The host header.","    *","    * @const","    * @type {string}","    */","    HOST: 'host',","","    /**","    * The correlation identifier header.","    *","    * @const","    * @type {string}","    */","    CORRELATION_ID: 'x-ms-correlation-id',","","    /**","    * The group identifier header.","    *","    * @const","    * @type {string}","    */","    GROUP_ID: 'x-ms-group-id',","","    /**","    * The share quota header.","    *","    * @const","    * @type {string}","    */","    SHARE_QUOTA: 'x-ms-share-quota',","    ","    /**","    * The max blob size header.","    *","    * @const","    * @type {int}","    */","    BLOB_CONDITION_MAX_SIZE: 'x-ms-blob-condition-maxsize',","","    /**","    * The append blob position header.","    *","    * @const","    * @type {int}","    */","    BLOB_CONDITION_APPEND_POSITION: 'x-ms-blob-condition-appendpos',","","    /**","    * The append blob append offset header.","    *","    * @const","    * @type {int}","    */","    BLOB_APPEND_OFFSET: 'x-ms-blob-append-offset',","","    /**","    * The append blob committed block header.","    *","    * @const","    * @type {int}","    */","    BLOB_COMMITTED_BLOCK_COUNT: 'x-ms-blob-committed-block-count',","","    /**","    * If the data and application metadata are completely encrypted using the specified algorithm.","    *","    * @const","    * @type {bool}","    */","    SERVER_ENCRYPTED: 'x-ms-server-encrypted',","  },","","  QueryStringConstants: {","","    /**","    * Query component for SAS API version.","    * @const","    * @type {string}","    */","    API_VERSION: 'api-version',","","    /**","    * The Comp value.","    *","    * @const","    * @type {string}","    */","    COMP: 'comp',","","    /**","    * The Res Type.","    *","    * @const","    * @type {string}","    */","    RESTYPE: 'restype',","","    /**","    * The copy Id.","    * @const","    * @type {string}","    */","    COPY_ID: 'copyid',","","    /**","    * The Snapshot value.","    *","    * @const","    * @type {string}","    */","    SNAPSHOT: 'snapshot',","","    /**","    * The previous snapshot value.","    *","    * @const","    * @type {string}","    */","    PREV_SNAPSHOT: 'prevsnapshot',","","    /**","    * The timeout value.","    *","    * @const","    * @type {string}","    */","    TIMEOUT: 'timeout',","","    /**","    * The signed start time query string argument for shared access signature.","    *","    * @const","    * @type {string}","    */","    SIGNED_START: 'st',","","    /**","    * The signed expiry time query string argument for shared access signature.","    *","    * @const","    * @type {string}","    */","    SIGNED_EXPIRY: 'se',","","    /**","    * The signed resource query string argument for shared access signature.","    *","    * @const","    * @type {string}","    */","    SIGNED_RESOURCE: 'sr',","","    /**","    * The signed permissions query string argument for shared access signature.","    *","    * @const","    * @type {string}","    */","    SIGNED_PERMISSIONS: 'sp',","    ","    /**","    * The signed services query string argument for shared access signature.","    *","    * @const","    * @type {string}","    */","    SIGNED_SERVICES: 'ss',","    ","    /**","    * The signed resource types query string argument for shared access signature.","    *","    * @const","    * @type {string}","    */","    SIGNED_RESOURCE_TYPES: 'srt',","    ","    /**","    * The signed IP query string argument for shared access signature.","    *","    * @const","    * @type {string}","    */","    SIGNED_IP: 'sip',","    ","    /**","    * The signed protocol query string argument for shared access signature.","    *","    * @const","    * @type {string}","    */","    SIGNED_PROTOCOL: 'spr',","","    /**","    * The signed identifier query string argument for shared access signature.","    *","    * @const","    * @type {string}","    */","    SIGNED_IDENTIFIER: 'si',","","    /**","    * The signature query string argument for shared access signature.","    *","    * @const","    * @type {string}","    */","    SIGNATURE: 'sig',","","    /**","    * The signed version argument for shared access signature.","    *","    * @const","    * @type {string}","    */","    SIGNED_VERSION: 'sv',","","    /**","    * The cache control argument for shared access signature.","    *","    * @const","    * @type {string}","    */","    CACHE_CONTROL: 'rscc',","","    /**","    * The content type argument for shared access signature.","    *","    * @const","    * @type {string}","    */","    CONTENT_TYPE: 'rsct',","","    /**","    * The content encoding argument for shared access signature.","    *","    * @const","    * @type {string}","    */","    CONTENT_ENCODING: 'rsce',","","    /**","    * The content language argument for shared access signature.","    *","    * @const","    * @type {string}","    */","    CONTENT_LANGUAGE: 'rscl',","","    /**","    * The content disposition argument for shared access signature.","    *","    * @const","    * @type {string}","    */","    CONTENT_DISPOSITION: 'rscd',","","    /**","    * The block identifier query string argument for blob service.","    *","    * @const","    * @type {string}","    */","    BLOCK_ID: 'blockid',","","    /**","    * The block list type query string argument for blob service.","    *","    * @const","    * @type {string}","    */","    BLOCK_LIST_TYPE: 'blocklisttype',","","    /**","    * The prefix query string argument for listing operations.","    *","    * @const","    * @type {string}","    */","    PREFIX: 'prefix',","","    /**","    * The marker query string argument for listing operations.","    *","    * @const","    * @type {string}","    */","    MARKER: 'marker',","","    /**","    * The maxresults query string argument for listing operations.","    *","    * @const","    * @type {string}","    */","    MAX_RESULTS: 'maxresults',","","    /**","    * The delimiter query string argument for listing operations.","    *","    * @const","    * @type {string}","    */","    DELIMITER: 'delimiter',","","    /**","    * The include query string argument for listing operations.","    *","    * @const","    * @type {string}","    */","    INCLUDE: 'include',","","    /**","    * The peekonly query string argument for queue service.","    *","    * @const","    * @type {string}","    */","    PEEK_ONLY: 'peekonly',","","    /**","    * The numofmessages query string argument for queue service.","    *","    * @const","    * @type {string}","    */","    NUM_OF_MESSAGES: 'numofmessages',","","    /**","    * The popreceipt query string argument for queue service.","    *","    * @const","    * @type {string}","    */","    POP_RECEIPT: 'popreceipt',","","    /**","    * The visibilitytimeout query string argument for queue service.","    *","    * @const","    * @type {string}","    */","    VISIBILITY_TIMEOUT: 'visibilitytimeout',","","    /**","    * The messagettl query string argument for queue service.","    *","    * @const","    * @type {string}","    */","    MESSAGE_TTL: 'messagettl',","","    /**","    * The select query string argument.","    *","    * @const","    * @type {string}","    */","    SELECT: '$select',","","    /**","    * The filter query string argument.","    *","    * @const","    * @type {string}","    */","    FILTER: '$filter',","","    /**","    * The top query string argument.","    *","    * @const","    * @type {string}","    */","    TOP: '$top',","","    /**","    * The skip query string argument.","    *","    * @const","    * @type {string}","    */","    SKIP: '$skip',","","    /**","    * The next partition key query string argument for table service.","    *","    * @const","    * @type {string}","    */","    NEXT_PARTITION_KEY: 'NextPartitionKey',","","    /**","    * The next row key query string argument for table service.","    *","    * @const","    * @type {string}","    */","    NEXT_ROW_KEY: 'NextRowKey',","","    /**","    * The lock identifier for service bus messages.","    *","    * @const","    * @type {string}","    */","    LOCK_ID: 'lockid',","","    /**","    * The table name for table SAS URI's.","    *","    * @const","    * @type {string}","    */","    TABLENAME: 'tn',","","    /**","    * The starting Partition Key for tableSAS URI's.","    *","    * @const","    * @type {string}","    */","    STARTPK: 'spk',","","    /**","    * The starting Partition Key for tableSAS URI's.","    *","    * @const","    * @type {string}","    */","    STARTRK: 'srk',","","    /**","    * The ending Partition Key for tableSAS URI's.","    *","    * @const","    * @type {string}","    */","    ENDPK: 'epk',","","    /**","    * The ending Partition Key for tableSAS URI's.","    *","    * @const","    * @type {string}","    */","    ENDRK: 'erk'","  },","","  StorageServiceClientConstants: {","    /**","    * The default protocol.","    */","    DEFAULT_PROTOCOL: 'https:',","","    /*","    * Used environment variables.","    * @enum {string}","    */","    EnvironmentVariables: {","      AZURE_STORAGE_ACCOUNT: 'AZURE_STORAGE_ACCOUNT',","      AZURE_STORAGE_ACCESS_KEY: 'AZURE_STORAGE_ACCESS_KEY',","      AZURE_STORAGE_DNS_SUFFIX: 'AZURE_STORAGE_DNS_SUFFIX',","      AZURE_STORAGE_CONNECTION_STRING: 'AZURE_STORAGE_CONNECTION_STRING',","      HTTP_PROXY: 'HTTP_PROXY',","      HTTPS_PROXY: 'HTTPS_PROXY',","      EMULATED: 'EMULATED',","    },","","    /**","    * Default credentials.","    */","    DEVSTORE_STORAGE_ACCOUNT: 'devstoreaccount1',","    DEVSTORE_STORAGE_ACCESS_KEY: 'Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==',","","    /**","    * The development store URI.","    *","    * @const","    * @type {string}","    */","    DEV_STORE_URI: 'http://127.0.0.1',","","    /**","    * Development ServiceClient URLs.","    */","    DEVSTORE_DEFAULT_PROTOCOL: 'http://',","    DEVSTORE_BLOB_HOST: '127.0.0.1:10000',","    DEVSTORE_QUEUE_HOST: '127.0.0.1:10001',","    DEVSTORE_TABLE_HOST: '127.0.0.1:10002',","","    /**","    * Production ServiceClient URLs.","    */","    CLOUD_BLOB_HOST: 'blob.' + storageDnsSuffix,","    CLOUD_QUEUE_HOST: 'queue.' + storageDnsSuffix,","    CLOUD_TABLE_HOST: 'table.' + storageDnsSuffix,","    CLOUD_FILE_HOST: 'file.' + storageDnsSuffix","  },","","  HttpConstants: {","    /**","    * Http Verbs","    *","    * @const","    * @enum {string}","    */","    HttpVerbs: {","      PUT: 'PUT',","      GET: 'GET',","      DELETE: 'DELETE',","      POST: 'POST',","      MERGE: 'MERGE',","      HEAD: 'HEAD'","    },","","    /**","    * Response codes.","    *","    * @const","    * @enum {int}","    */","    HttpResponseCodes: {","      Ok: 200,","      Created: 201,","      Accepted: 202,","      NoContent: 204,","      PartialContent: 206,","      BadRequest: 400,","      Unauthorized: 401,","      Forbidden: 403,","      NotFound: 404,","      Conflict: 409,","      LengthRequired: 411,","      PreconditionFailed: 412","    }","  },","","  CompatibleVersionConstants: {","    /**","    * Constant for the 2013-08-15 version.","    *","    * @const","    * @type {string}","    */","    AUGUST_2013: '2013-08-15',","","    /**","    * Constant for the 2012-02-12 version.","    *","    * @const","    * @type {string}","    */","    FEBRUARY_2012: '2012-02-12'","  },","","  BlobErrorCodeStrings: {","    INVALID_BLOCK_ID: 'InvalidBlockId',","    BLOB_NOT_FOUND: 'BlobNotFound',","    BLOB_ALREADY_EXISTS: 'BlobAlreadyExists',","    CONTAINER_ALREADY_EXISTS: 'ContainerAlreadyExists',","    CONTAINER_NOT_FOUND: 'ContainerNotFound',","    INVALID_BLOB_OR_BLOCK: 'InvalidBlobOrBlock',","    INVALID_BLOCK_LIST: 'InvalidBlockList'","  },","","  FileErrorCodeStrings: {","    SHARE_ALREADY_EXISTS: 'ShareAlreadyExists',","    SHARE_NOT_FOUND: 'ShareNotFound',","    FILE_NOT_FOUND: 'FileNotFound'","  },","","  QueueErrorCodeStrings: {","    QUEUE_NOT_FOUND: 'QueueNotFound',","    QUEUE_DISABLED: 'QueueDisabled',","    QUEUE_ALREADY_EXISTS: 'QueueAlreadyExists',","    QUEUE_NOT_EMPTY: 'QueueNotEmpty',","    QUEUE_BEING_DELETED: 'QueueBeingDeleted',","    POP_RECEIPT_MISMATCH: 'PopReceiptMismatch',","    INVALID_PARAMETER: 'InvalidParameter',","    MESSAGE_NOT_FOUND: 'MessageNotFound',","    MESSAGE_TOO_LARGE: 'MessageTooLarge',","    INVALID_MARKER: 'InvalidMarker'","  },","","  /**","  * Constants for storage error strings","  *","  * More details are at: http://msdn.microsoft.com/en-us/library/azure/dd179357.aspx","  */","  StorageErrorCodeStrings: {","    // Not Modified (304): The condition specified in the conditional header(s) was not met for a read operation.","    // Precondition Failed (412): The condition specified in the conditional header(s) was not met for a write operation.","    CONDITION_NOT_MET: 'ConditionNotMet', ","    // Bad Request (400): A required HTTP header was not specified.","    MISSING_REQUIRED_HEADER: 'MissingRequiredHeader', ","    // Bad Request (400): A required XML node was not specified in the request body.","    MISSING_REQUIRED_XML_NODE: 'MissingRequiredXmlNode', ","    // Bad Request (400): One of the HTTP headers specified in the request is not supported.","    UNSUPPORTED_HEADER: 'UnsupportedHeader',","    // Bad Request (400): One of the XML nodes specified in the request body is not supported.","    UNSUPPORTED_XML_NODE: 'UnsupportedXmlNode', ","    // Bad Request (400): The value provided for one of the HTTP headers was not in the correct format.","    INVALID_HEADER_VALUE: 'InvalidHeaderValue', ","    // Bad Request (400): The value provided for one of the XML nodes in the request body was not in the correct format.","    INVALID_XML_NODE_VALUE: 'InvalidXmlNodeValue',","    // Bad Request (400): A required query parameter was not specified for this request.","    MISSING_REQUIRED_QUERY_PARAMETER: 'MissingRequiredQueryParameter',","    // Bad Request (400): One of the query parameters specified in the request URI is not supported.","    UNSUPPORTED_QUERY_PARAMETER: 'UnsupportedQueryParameter',","    // Bad Request (400): An invalid value was specified for one of the query parameters in the request URI.","    INVALID_QUERY_PARAMETER_VALUE: 'InvalidQueryParameterValue',","    // Bad Request (400): A query parameter specified in the request URI is outside the permissible range.","    OUT_OF_RANGE_QUERY_PARAMETER_VALUE: 'OutOfRangeQueryParameterValue',","    // Bad Request (400): The url in the request could not be parsed.","    REQUEST_URL_FAILED_TO_PARSE: 'RequestUrlFailedToParse',","    // Bad Request (400): The requested URI does not represent any resource on the server.","    INVALID_URI: 'InvalidUri',","    // Bad Request (400): The HTTP verb specified was not recognized by the server.","    INVALID_HTTP_VERB: 'InvalidHttpVerb',","    // Bad Request (400): The key for one of the metadata key-value pairs is empty.","    EMPTY_METADATA_KEY: 'EmptyMetadataKey',","    // Bad Request (400): The specified XML is not syntactically valid.","    INVALID_XML_DOCUMENT: 'InvalidXmlDocument',","    // Bad Request (400): The MD5 value specified in the request did not match the MD5 value calculated by the server.","    MD5_MISMATCH: 'Md5Mismatch',","    // Bad Request (400): The MD5 value specified in the request is invalid. The MD5 value must be 128 bits and Base64-encoded.","    INVALID_MD5: 'InvalidMd5',","    // Bad Request (400): One of the request inputs is out of range.","    OUT_OF_RANGE_INPUT: 'OutOfRangeInput',","    // Bad Request (400): The authentication information was not provided in the correct format. Verify the value of Authorization header.","    INVALID_AUTHENTICATION_INFO: 'InvalidAuthenticationInfo',","    // Bad Request (400): One of the request inputs is not valid.","    INVALID_INPUT: 'InvalidInput',","    // Bad Request (400): The specified metadata is invalid. It includes characters that are not permitted.","    INVALID_METADATA: 'InvalidMetadata',","    // Bad Request (400): The specifed resource name contains invalid characters.","    INVALID_RESOURCE_NAME: 'InvalidResourceName',","    // Bad Request (400): The size of the specified metadata exceeds the maximum size permitted.","    METADATA_TOO_LARGE: 'MetadataTooLarge',","    // Bad Request (400): Condition headers are not supported.","    CONDITION_HEADER_NOT_SUPPORTED: 'ConditionHeadersNotSupported',","    // Bad Request (400): Multiple condition headers are not supported.","    MULTIPLE_CONDITION_HEADER_NOT_SUPPORTED: 'MultipleConditionHeadersNotSupported',","    // Forbidden (403): Server failed to authenticate the request. Make sure the value of the Authorization header is formed correctly including the signature.","    AUTHENTICATION_FAILED: 'AuthenticationFailed',","    // Forbidden (403): Read-access geo-redundant replication is not enabled for the account.","    // Forbidden (403): Write operations to the secondary location are not allowed.","    // Forbidden (403): The account being accessed does not have sufficient permissions to execute this operation.","    INSUFFICIENT_ACCOUNT_PERMISSIONS: 'InsufficientAccountPermissions',","    // Not Found (404): The specified resource does not exist.","    RESOURCE_NOT_FOUND: 'ResourceNotFound',","    // Forbidden (403): The specified account is disabled.","    ACCOUNT_IS_DISABLED: 'AccountIsDisabled',","    // Method Not Allowed (405): The resource doesn't support the specified HTTP verb.","    UNSUPPORTED_HTTP_VERB: 'UnsupportedHttpVerb',","    // Conflict (409): The specified account already exists. ","    ACCOUNT_ALREADY_EXISTS: 'AccountAlreadyExists',","    // Conflict (409): The specified account is in the process of being created.","    ACCOUNT_BEING_CREATED: 'AccountBeingCreated',","    // Conflict (409): The specified resource already exists.","    RESOURCE_ALREADY_EXISTS: 'ResourceAlreadyExists',","    // Conflict (409): The specified resource type does not match the type of the existing resource.","    RESOURCE_TYPE_MISMATCH: 'ResourceTypeMismatch',","    // Length Required (411): The Content-Length header was not specified.","    MISSING_CONTENT_LENGTH_HEADER: 'MissingContentLengthHeader',","    // Request Entity Too Large (413): The size of the request body exceeds the maximum size permitted.","    REQUEST_BODY_TOO_LARGE: 'RequestBodyTooLarge',","    // Requested Range Not Satisfiable (416): The range specified is invalid for the current size of the resource.","    INVALID_RANGE: 'InvalidRange',","    // Internal Server Error (500): The server encountered an internal error. Please retry the request.","    INTERNAL_ERROR: 'InternalError',","    // Internal Server Error (500): The operation could not be completed within the permitted time.","    OPERATION_TIMED_OUT: 'OperationTimedOut',","    // Service Unavailable (503): The server is currently unable to receive requests. Please retry your request. ","    SERVER_BUSY: 'ServerBusy',","","    // Legacy error code strings","    UPDATE_CONDITION_NOT_SATISFIED: 'UpdateConditionNotSatisfied',","    CONTAINER_NOT_FOUND: 'ContainerNotFound',","    CONTAINER_ALREADY_EXISTS: 'ContainerAlreadyExists',","    CONTAINER_DISABLED: 'ContainerDisabled',","    CONTAINER_BEING_DELETED: 'ContainerBeingDeleted',","  },","","  TableErrorCodeStrings: {","    XMETHOD_NOT_USING_POST: 'XMethodNotUsingPost',","    XMETHOD_INCORRECT_VALUE: 'XMethodIncorrectValue',","    XMETHOD_INCORRECT_COUNT: 'XMethodIncorrectCount',","    TABLE_HAS_NO_PROPERTIES: 'TableHasNoProperties',","    DUPLICATE_PROPERTIES_SPECIFIED: 'DuplicatePropertiesSpecified',","    TABLE_HAS_NO_SUCH_PROPERTY: 'TableHasNoSuchProperty',","    DUPLICATE_KEY_PROPERTY_SPECIFIED: 'DuplicateKeyPropertySpecified',","    TABLE_ALREADY_EXISTS: 'TableAlreadyExists',","    TABLE_NOT_FOUND: 'TableNotFound',","    ENTITY_NOT_FOUND: 'EntityNotFound',","    ENTITY_ALREADY_EXISTS: 'EntityAlreadyExists',","    PARTITION_KEY_NOT_SPECIFIED: 'PartitionKeyNotSpecified',","    OPERATOR_INVALID: 'OperatorInvalid',","    UPDATE_CONDITION_NOT_SATISFIED: 'UpdateConditionNotSatisfied',","    PROPERTIES_NEED_VALUE: 'PropertiesNeedValue',","    PARTITION_KEY_PROPERTY_CANNOT_BE_UPDATED: 'PartitionKeyPropertyCannotBeUpdated',","    TOO_MANY_PROPERTIES: 'TooManyProperties',","    ENTITY_TOO_LARGE: 'EntityTooLarge',","    PROPERTY_VALUE_TOO_LARGE: 'PropertyValueTooLarge',","    INVALID_VALUE_TYPE: 'InvalidValueType',","    TABLE_BEING_DELETED: 'TableBeingDeleted',","    TABLE_SERVER_OUT_OF_MEMORY: 'TableServerOutOfMemory',","    PRIMARY_KEY_PROPERTY_IS_INVALID_TYPE: 'PrimaryKeyPropertyIsInvalidType',","    PROPERTY_NAME_TOO_LONG: 'PropertyNameTooLong',","    PROPERTY_NAME_INVALID: 'PropertyNameInvalid',","    BATCH_OPERATION_NOT_SUPPORTED: 'BatchOperationNotSupported',","    JSON_FORMAT_NOT_SUPPORTED: 'JsonFormatNotSupported',","    METHOD_NOT_ALLOWED: 'MethodNotAllowed',","    NOT_IMPLEMENTED: 'NotImplemented'","  },","","  ConnectionStringKeys: {","    USE_DEVELOPMENT_STORAGE_NAME: 'UseDevelopmentStorage',","    DEVELOPMENT_STORAGE_PROXY_URI_NAME: 'DevelopmentStorageProxyUri',","    DEFAULT_ENDPOINTS_PROTOCOL_NAME: 'DefaultEndpointsProtocol',","    ACCOUNT_NAME_NAME: 'AccountName',","    ACCOUNT_KEY_NAME: 'AccountKey',","    BLOB_ENDPOINT_NAME: 'BlobEndpoint',","    FILE_ENDPOINT_NAME: 'FileEndpoint',","    QUEUE_ENDPOINT_NAME: 'QueueEndpoint',","    TABLE_ENDPOINT_NAME: 'TableEndpoint',","    SHARED_ACCESS_SIGNATURE_NAME: 'SharedAccessSignature',","    ENDPOINT_SUFFIX_NAME: 'EndpointSuffix',","    BLOB_BASE_DNS_NAME: 'blob.core.windows.net',","    FILE_BASE_DNS_NAME: 'file.core.windows.net',","    QUEUE_BASE_DNS_NAME: 'queue.core.windows.net',","    TABLE_BASE_DNS_NAME: 'table.core.windows.net'","  }","};","","module.exports = Constants;",""],"l":{"18":1,"20":1,"25":1,"2393":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/md5-wrapper/node.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/md5-wrapper/node.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":19,"column":29}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":37},"end":{"line":22,"column":48}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":31}},"2":{"start":{"line":19,"column":0},"end":{"line":20,"column":2}},"3":{"start":{"line":22,"column":0},"end":{"line":24,"column":2}},"4":{"start":{"line":23,"column":4},"end":{"line":23,"column":36}},"5":{"start":{"line":26,"column":0},"end":{"line":26,"column":28}}},"branchMap":{},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var crypto = require('crypto');","","var Md5Wrapper = function () {","};","","Md5Wrapper.prototype.createMd5Hash = function() {","    return crypto.createHash('md5');","};","","module.exports = Md5Wrapper;"],"l":{"17":1,"19":1,"22":1,"23":0,"26":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/storageutilities.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/storageutilities.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":23,"column":0},"end":{"line":40,"column":2}},"2":{"start":{"line":42,"column":0},"end":{"line":42,"column":34}}},"branchMap":{},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Expose 'StorageUtilities'.","","/**","* Defines constants, enums, and utility functions for use with storage.","* @namespace","*/","var StorageUtilities = {","\t/**","  * Specifies the location mode used to decide which location the request should be sent to.","  *","  * @const","  * @enum {number}","  */","  LocationMode: {","    /** The primary location only */","    PRIMARY_ONLY: 0,","    /** The primary location first, then the secondary */","    PRIMARY_THEN_SECONDARY: 1,","    /** The secondary location only */","    SECONDARY_ONLY: 2,","    /** The secondary location first, then the primary */","    SECONDARY_THEN_PRIMARY: 3","  }","};","","module.exports = StorageUtilities;"],"l":{"23":1,"42":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/sr.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/sr.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":25}},"2":{"start":{"line":19,"column":0},"end":{"line":74,"column":2}},"3":{"start":{"line":76,"column":0},"end":{"line":76,"column":20}}},"branchMap":{},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","exports = module.exports;","","var SR = {","  ANONYMOUS_ACCESS_BLOBSERVICE_ONLY: 'Anonymous access is only valid for the BlobService.',","  ARGUMENT_NULL_OR_EMPTY: 'The argument must not be null or an empty string. Argument name: %s.',","  ARGUMENT_NULL_OR_UNDEFINED: 'The argument must not be null or undefined. Argument name: %s.',","  ARGUMENT_OUT_OF_RANGE_ERROR: 'The argument is out of range. Argument name: %s, Value passed: %s.',","  BATCH_ONE_PARTITION_KEY: 'All entities in the batch must have the same PartitionKey value.',","  BATCH_ONE_RETRIEVE: 'If a retrieve operation is part of a batch, it must be the only operation in the batch.',","  BATCH_TOO_LARGE: 'Batches must not contain more than 100 operations.',","  BLOB_INVALID_SEQUENCE_NUMBER: 'The sequence number may not be specified for an increment operation.',","  BLOB_TYPE_MISMATCH: 'Blob type of the blob reference doesn\\'t match blob type of the blob.',","  CANNOT_CREATE_SAS_WITHOUT_ACCOUNT_KEY: 'Cannot create Shared Access Signature unless the Account Name and Key are used to create the ServiceClient.',","  CONTENT_LENGTH_MISMATCH: 'An incorrect number of bytes was read from the connection. The connection may have been closed.',","  CONTENT_TYPE_MISSING: 'Content-Type response header is missing or invalid.',","  EMPTY_BATCH: 'Batch must not be empty.',","  EXCEEDED_SIZE_LIMITATION: 'Upload exceeds the size limitation. Max size is %s but the current size is %s',","  HASH_MISMATCH: 'Hash mismatch (integrity check failed), Expected value is %s, retrieved %s.',","  INCORRECT_ENTITY_KEYS: 'PartitionKey and RowKey must be specified as strings in the entity object.',","  INVALID_BLOB_LENGTH: 'createBlockBlobFromText requires the size of text to be less than 64MB. Please use createBlockBlobFromLocalFile or createBlockBlobFromStream to upload large blobs.',","  INVALID_CONNECTION_STRING: 'Connection strings must be of the form \"key1=value1;key2=value2\".',","  INVALID_CONNECTION_STRING_BAD_KEY: 'Connection string contains unrecognized key: \"%s\"',","  INVALID_CONNECTION_STRING_DUPLICATE_KEY: 'Connection string contains duplicate key: \"%s\"',","  INVALID_CONNECTION_STRING_EMPTY_KEY: 'Connection strings must not contain empty keys.',","  INVALID_DELETE_SNAPSHOT_OPTION: 'The deleteSnapshots option cannot be included when deleting a specific snapshot using the snapshotId option.',","  INVALID_EDM_TYPE: 'The value \\'%s\\' does not match the type \\'%s\\'.',","  INVALID_FILE_LENGTH: 'createFileFromText requires the size of text to be less than 4MB. Please use createFileFromLocalFile or createFileFromStream to upload large files.',","  INVALID_FILE_RANGE_FOR_UPDATE: 'Range size should be less than 4MB for a file range update operation.',","  INVALID_HEADERS: 'Headers are not supported in the 2012-02-12 version.',","  INVALID_MESSAGE_ID: 'Message ID cannot be null or undefined for deleteMessage and updateMessage operations.',","  INVALID_PAGE_BLOB_LENGTH: 'Page blob length must be multiple of 512.',","  INVALID_PAGE_END_OFFSET: 'Page end offset must be multiple of 512.',","  INVALID_PAGE_RANGE_FOR_UPDATE: 'Page range size should be less than 4MB for a page update operation.',","  INVALID_PAGE_START_OFFSET: 'Page start offset must be multiple of 512.',","  INVALID_POP_RECEIPT: 'Pop Receipt cannot be null or undefined for deleteMessage and updateMessage operations.',","  INVALID_PROPERTY_RESOLVER: 'The specified property resolver returned an invalid type. %s:{_:%s,$:%s }',","  INVALID_RANGE_FOR_MD5: 'The requested range should be less than 4MB when contentMD5 is expected from the server',","  INVALID_SAS_VERSION: 'SAS Version ? is invalid. Valid versions include: ?.',","  INVALID_SAS_TOKEN: 'The SAS token should not contain api-version.',","  INVALID_SIGNED_IDENTIFIERS: 'Signed identifiers need to be a hash object with key as the id and the value as the access policy.',","  INVALID_STREAM_LENGTH: 'The length of the provided stream is invalid.',","  INVALID_STRING_ERROR: 'Invalid string error.',","  INVALID_TABLE_OPERATION: 'Operation not found: %s',","  INVALID_TEXT_LENGTH: 'The length of the provided text is invalid.',","  MAXIMUM_EXECUTION_TIMEOUT_EXCEPTION: 'The client could not finish the operation within specified maximum execution timeout.',","  MD5_NOT_POSSIBLE: 'MD5 cannot be calculated for an existing blob because it would require reading the existing data. Please disable storeBlobContentMD5.',","  MD5_NOT_PRESENT_ERROR: 'MD5 does not exist. If you do not want to force validation, please disable useTransactionalMD5.',","  METADATA_KEY_INVALID: 'The key for one of the metadata key-value pairs is null, empty, or whitespace.',","  METADATA_VALUE_INVALID: 'The value for one of the metadata key-value pairs is null, empty, or whitespace.',","  NO_CREDENTIALS_PROVIDED: 'Credentials must be provided when creating a service client.',","  PRIMARY_ONLY_COMMAND: 'This operation can only be executed against the primary storage location.',","  QUERY_OPERATOR_REQUIRES_WHERE: '%s operator needs to be used after where.',","  SECONDARY_ONLY_COMMAND: 'This operation can only be executed against the secondary storage location.',","  STORAGE_HOST_LOCATION_REQUIRED: 'The host for the storage service must be specified.',","  STORAGE_HOST_MISSING_LOCATION: 'The host for the target storage location is not specified. Please consider changing the request\\'s location mode.',","  TYPE_NOT_SUPPORTED: 'Type not supported when sending data to the service: ',","  MAX_BLOB_SIZE_CONDITION_NOT_MEET: 'Append block data should not exceed the maximum blob size condition value.',","};","","module.exports = SR;"],"l":{"17":1,"19":1,"76":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/patch-xmlbuilder.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/patch-xmlbuilder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":39},"end":{"line":24,"column":53}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":19,"column":54}},"2":{"start":{"line":24,"column":0},"end":{"line":31,"column":2}},"3":{"start":{"line":25,"column":2},"end":{"line":25,"column":17}},"4":{"start":{"line":26,"column":2},"end":{"line":26,"column":67}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":25}},"6":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"7":{"start":{"line":29,"column":4},"end":{"line":29,"column":73}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","'use strict';","","var XMLBuilder = require('xmlbuilder/lib/XMLBuilder');","","// Patch xmlbuilder to allow Unicode surrogate pair code","// points in XML bodies","","XMLBuilder.prototype.assertLegalChar = function(str) {","  var chars, chr;","  chars = /[\\u0000-\\u0008\\u000B-\\u000C\\u000E-\\u001F\\uFFFE-\\uFFFF]/;","  chr = str.match(chars);","  if (chr) {","    throw new Error('Invalid character (' + chr + ') in string: ' + str);","  }","};"],"l":{"19":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/diagnostics/logger.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/diagnostics/logger.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":1,"8":1,"9":0,"10":1,"11":0,"12":1,"13":0,"14":1,"15":0,"16":1,"17":0,"18":1,"19":0,"20":1,"21":0,"22":1,"23":0,"24":1,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"Logger","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":39}}},"2":{"name":"(anonymous_2)","line":102,"loc":{"start":{"line":102,"column":23},"end":{"line":102,"column":45}}},"3":{"name":"(anonymous_3)","line":106,"loc":{"start":{"line":106,"column":29},"end":{"line":106,"column":43}}},"4":{"name":"(anonymous_4)","line":110,"loc":{"start":{"line":110,"column":28},"end":{"line":110,"column":42}}},"5":{"name":"(anonymous_5)","line":114,"loc":{"start":{"line":114,"column":25},"end":{"line":114,"column":39}}},"6":{"name":"(anonymous_6)","line":118,"loc":{"start":{"line":118,"column":25},"end":{"line":118,"column":39}}},"7":{"name":"(anonymous_7)","line":122,"loc":{"start":{"line":122,"column":24},"end":{"line":122,"column":38}}},"8":{"name":"(anonymous_8)","line":126,"loc":{"start":{"line":126,"column":26},"end":{"line":126,"column":40}}},"9":{"name":"(anonymous_9)","line":130,"loc":{"start":{"line":130,"column":24},"end":{"line":130,"column":38}}},"10":{"name":"(anonymous_10)","line":134,"loc":{"start":{"line":134,"column":25},"end":{"line":134,"column":39}}},"11":{"name":"(anonymous_11)","line":138,"loc":{"start":{"line":138,"column":41},"end":{"line":138,"column":66}}}},"statementMap":{"1":{"start":{"line":27,"column":0},"end":{"line":41,"column":1}},"2":{"start":{"line":34,"column":2},"end":{"line":34,"column":21}},"3":{"start":{"line":36,"column":2},"end":{"line":36,"column":39}},"4":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"5":{"start":{"line":39,"column":4},"end":{"line":39,"column":53}},"6":{"start":{"line":49,"column":0},"end":{"line":89,"column":2}},"7":{"start":{"line":91,"column":0},"end":{"line":100,"column":2}},"8":{"start":{"line":102,"column":0},"end":{"line":104,"column":2}},"9":{"start":{"line":103,"column":2},"end":{"line":103,"column":34}},"10":{"start":{"line":106,"column":0},"end":{"line":108,"column":2}},"11":{"start":{"line":107,"column":2},"end":{"line":107,"column":44}},"12":{"start":{"line":110,"column":0},"end":{"line":112,"column":2}},"13":{"start":{"line":111,"column":2},"end":{"line":111,"column":43}},"14":{"start":{"line":114,"column":0},"end":{"line":116,"column":2}},"15":{"start":{"line":115,"column":2},"end":{"line":115,"column":40}},"16":{"start":{"line":118,"column":0},"end":{"line":120,"column":2}},"17":{"start":{"line":119,"column":2},"end":{"line":119,"column":40}},"18":{"start":{"line":122,"column":0},"end":{"line":124,"column":2}},"19":{"start":{"line":123,"column":2},"end":{"line":123,"column":42}},"20":{"start":{"line":126,"column":0},"end":{"line":128,"column":2}},"21":{"start":{"line":127,"column":2},"end":{"line":127,"column":41}},"22":{"start":{"line":130,"column":0},"end":{"line":132,"column":2}},"23":{"start":{"line":131,"column":2},"end":{"line":131,"column":39}},"24":{"start":{"line":134,"column":0},"end":{"line":136,"column":2}},"25":{"start":{"line":135,"column":2},"end":{"line":135,"column":40}},"26":{"start":{"line":138,"column":0},"end":{"line":146,"column":2}},"27":{"start":{"line":139,"column":2},"end":{"line":139,"column":65}},"28":{"start":{"line":140,"column":2},"end":{"line":140,"column":59}},"29":{"start":{"line":141,"column":2},"end":{"line":141,"column":24}},"30":{"start":{"line":142,"column":2},"end":{"line":142,"column":37}},"31":{"start":{"line":143,"column":2},"end":{"line":145,"column":3}},"32":{"start":{"line":144,"column":4},"end":{"line":144,"column":66}},"33":{"start":{"line":148,"column":0},"end":{"line":148,"column":24}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"2":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":143,"column":2}},{"start":{"line":143,"column":2},"end":{"line":143,"column":2}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","/**","* Creates a new Logger object","* @class","* The Logger class is used to write log information.","* ","* @constructor","*","* @param {string} [level]           The log level. Refer to Logger.LogLevels.","* @param {object} [loggerFunction]  The function to write log information.","*/","function Logger(level, loggerFunction) {","  /**","   * The log level. Refer to the Logger.LogLevels for available log levels. ","   * @name  Logger#level","   * @type  {string}","   * @see Logger.LogLevels","   */","  this.level = level;","  ","  this.loggerFunction = loggerFunction;","","  if (!this.loggerFunction) {","    this.loggerFunction = this.defaultLoggerFunction;","  }","}","","/**","* The available log levels.","*","* @const","* @enum {string}","*/","Logger.LogLevels = {","  /**","  * System is unusable.","  */","  EMERGENCY: 'emergency',","","  /**","  * Action must be taken immediately.","  */","  ALERT : 'alert',","","  /**","  * Critical condition.","  */","  CRITICAL : 'critical',","","  /**","  * Error condition.","  */","  ERROR : 'error',","","  /**","  * Warning condition.","  */","  WARNING : 'warning',","","  /**","  * Normal but significant condition.","  */","  NOTICE : 'notice',","","  /**","  * Purely informational message.","  */","  INFO : 'info',","","  /**","  * Application debug messages.","  */","  DEBUG : 'debug'","};","","Logger.logPriority = [","  Logger.LogLevels.EMERGENCY,","  Logger.LogLevels.ALERT,","  Logger.LogLevels.CRITICAL,","  Logger.LogLevels.ERROR,","  Logger.LogLevels.WARNING,","  Logger.LogLevels.NOTICE,","  Logger.LogLevels.INFO,","  Logger.LogLevels.DEBUG","];","","Logger.prototype.log = function (level, msg) {","  this.loggerFunction(level, msg);","};","","Logger.prototype.emergency = function(msg) {","  this.log(Logger.LogLevels.EMERGENCY, msg);","};","","Logger.prototype.critical = function(msg) {","  this.log(Logger.LogLevels.CRITICAL, msg);","};","","Logger.prototype.alert = function(msg) {","  this.log(Logger.LogLevels.ALERT, msg);","};","","Logger.prototype.error = function(msg) {","  this.log(Logger.LogLevels.ERROR, msg);","};","","Logger.prototype.warn = function(msg) {","  this.log(Logger.LogLevels.WARNING, msg);","};","","Logger.prototype.notice = function(msg) {","  this.log(Logger.LogLevels.NOTICE, msg);","};","","Logger.prototype.info = function(msg) {","  this.log(Logger.LogLevels.INFO, msg);","};","","Logger.prototype.debug = function(msg) {","  this.log(Logger.LogLevels.DEBUG, msg);","};","","Logger.prototype.defaultLoggerFunction = function(logLevel , msg) {","  var currentLevelIndex = Logger.logPriority.indexOf(this.level);","  var logLevelIndex = Logger.logPriority.indexOf(logLevel);","  var time = new Date();","  var timeStamp = time.toISOString();","  if (logLevelIndex <= currentLevelIndex) {","    console.log('[' + timeStamp + ']' + this.level + ' : ' + msg);","  }","};","","module.exports = Logger;",""],"l":{"27":1,"34":0,"36":0,"38":0,"39":0,"49":1,"91":1,"102":1,"103":0,"106":1,"107":0,"110":1,"111":0,"114":1,"115":0,"118":1,"119":0,"122":1,"123":0,"126":1,"127":0,"130":1,"131":0,"134":1,"135":0,"138":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"148":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/http/webresource.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/http/webresource.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":1,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":1,"111":0,"112":1,"113":0,"114":0,"115":0,"116":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"encodeSpecialCharacters","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":39}}},"2":{"name":"WebResource","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":23}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":18},"end":{"line":51,"column":34}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":18},"end":{"line":64,"column":34}}},"5":{"name":"(anonymous_5)","line":77,"loc":{"start":{"line":77,"column":19},"end":{"line":77,"column":35}}},"6":{"name":"(anonymous_6)","line":90,"loc":{"start":{"line":90,"column":18},"end":{"line":90,"column":34}}},"7":{"name":"(anonymous_7)","line":103,"loc":{"start":{"line":103,"column":19},"end":{"line":103,"column":35}}},"8":{"name":"(anonymous_8)","line":116,"loc":{"start":{"line":116,"column":20},"end":{"line":116,"column":36}}},"9":{"name":"(anonymous_9)","line":130,"loc":{"start":{"line":130,"column":37},"end":{"line":130,"column":60}}},"10":{"name":"(anonymous_10)","line":146,"loc":{"start":{"line":146,"column":40},"end":{"line":146,"column":63}}},"11":{"name":"(anonymous_11)","line":156,"loc":{"start":{"line":156,"column":40},"end":{"line":156,"column":63}}},"12":{"name":"(anonymous_12)","line":174,"loc":{"start":{"line":174,"column":40},"end":{"line":174,"column":77}}},"13":{"name":"(anonymous_13)","line":192,"loc":{"start":{"line":192,"column":41},"end":{"line":192,"column":59}}},"14":{"name":"(anonymous_14)","line":211,"loc":{"start":{"line":211,"column":35},"end":{"line":211,"column":58}}},"15":{"name":"(anonymous_15)","line":231,"loc":{"start":{"line":231,"column":33},"end":{"line":231,"column":49}}},"16":{"name":"(anonymous_16)","line":244,"loc":{"start":{"line":244,"column":36},"end":{"line":244,"column":54}}},"17":{"name":"(anonymous_17)","line":256,"loc":{"start":{"line":256,"column":51},"end":{"line":256,"column":71}}},"18":{"name":"(anonymous_18)","line":260,"loc":{"start":{"line":260,"column":34},"end":{"line":260,"column":57}}},"19":{"name":"(anonymous_19)","line":273,"loc":{"start":{"line":273,"column":36},"end":{"line":273,"column":58}}},"20":{"name":"(anonymous_20)","line":293,"loc":{"start":{"line":293,"column":28},"end":{"line":293,"column":50}}},"21":{"name":"isMethodWithBody","line":301,"loc":{"start":{"line":301,"column":0},"end":{"line":301,"column":32}}},"22":{"name":"(anonymous_22)","line":316,"loc":{"start":{"line":316,"column":34},"end":{"line":316,"column":68}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":40}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":31}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":45}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":41}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":41}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":48}},"7":{"start":{"line":24,"column":0},"end":{"line":24,"column":44}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":44}},"9":{"start":{"line":26,"column":0},"end":{"line":26,"column":40}},"10":{"start":{"line":28,"column":0},"end":{"line":30,"column":1}},"11":{"start":{"line":29,"column":2},"end":{"line":29,"column":35}},"12":{"start":{"line":40,"column":0},"end":{"line":43,"column":1}},"13":{"start":{"line":41,"column":2},"end":{"line":41,"column":27}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":24}},"15":{"start":{"line":51,"column":0},"end":{"line":56,"column":2}},"16":{"start":{"line":52,"column":2},"end":{"line":52,"column":38}},"17":{"start":{"line":53,"column":2},"end":{"line":53,"column":65}},"18":{"start":{"line":54,"column":2},"end":{"line":54,"column":51}},"19":{"start":{"line":55,"column":2},"end":{"line":55,"column":21}},"20":{"start":{"line":64,"column":0},"end":{"line":69,"column":2}},"21":{"start":{"line":65,"column":2},"end":{"line":65,"column":38}},"22":{"start":{"line":66,"column":2},"end":{"line":66,"column":65}},"23":{"start":{"line":67,"column":2},"end":{"line":67,"column":51}},"24":{"start":{"line":68,"column":2},"end":{"line":68,"column":21}},"25":{"start":{"line":77,"column":0},"end":{"line":82,"column":2}},"26":{"start":{"line":78,"column":2},"end":{"line":78,"column":38}},"27":{"start":{"line":79,"column":2},"end":{"line":79,"column":65}},"28":{"start":{"line":80,"column":2},"end":{"line":80,"column":52}},"29":{"start":{"line":81,"column":2},"end":{"line":81,"column":21}},"30":{"start":{"line":90,"column":0},"end":{"line":95,"column":2}},"31":{"start":{"line":91,"column":2},"end":{"line":91,"column":38}},"32":{"start":{"line":92,"column":2},"end":{"line":92,"column":65}},"33":{"start":{"line":93,"column":2},"end":{"line":93,"column":54}},"34":{"start":{"line":94,"column":2},"end":{"line":94,"column":21}},"35":{"start":{"line":103,"column":0},"end":{"line":108,"column":2}},"36":{"start":{"line":104,"column":2},"end":{"line":104,"column":38}},"37":{"start":{"line":105,"column":2},"end":{"line":105,"column":65}},"38":{"start":{"line":106,"column":2},"end":{"line":106,"column":52}},"39":{"start":{"line":107,"column":2},"end":{"line":107,"column":21}},"40":{"start":{"line":116,"column":0},"end":{"line":121,"column":2}},"41":{"start":{"line":117,"column":2},"end":{"line":117,"column":38}},"42":{"start":{"line":118,"column":2},"end":{"line":118,"column":65}},"43":{"start":{"line":119,"column":2},"end":{"line":119,"column":53}},"44":{"start":{"line":120,"column":2},"end":{"line":120,"column":21}},"45":{"start":{"line":130,"column":0},"end":{"line":138,"column":2}},"46":{"start":{"line":131,"column":2},"end":{"line":133,"column":3}},"47":{"start":{"line":132,"column":4},"end":{"line":132,"column":25}},"48":{"start":{"line":135,"column":2},"end":{"line":135,"column":32}},"49":{"start":{"line":137,"column":2},"end":{"line":137,"column":14}},"50":{"start":{"line":146,"column":0},"end":{"line":154,"column":2}},"51":{"start":{"line":147,"column":2},"end":{"line":147,"column":33}},"52":{"start":{"line":149,"column":2},"end":{"line":151,"column":3}},"53":{"start":{"line":150,"column":4},"end":{"line":150,"column":28}},"54":{"start":{"line":153,"column":2},"end":{"line":153,"column":14}},"55":{"start":{"line":156,"column":0},"end":{"line":164,"column":2}},"56":{"start":{"line":157,"column":2},"end":{"line":161,"column":3}},"57":{"start":{"line":158,"column":4},"end":{"line":158,"column":35}},"58":{"start":{"line":160,"column":4},"end":{"line":160,"column":28}},"59":{"start":{"line":163,"column":2},"end":{"line":163,"column":14}},"60":{"start":{"line":174,"column":0},"end":{"line":182,"column":2}},"61":{"start":{"line":175,"column":2},"end":{"line":179,"column":3}},"62":{"start":{"line":176,"column":4},"end":{"line":176,"column":35}},"63":{"start":{"line":177,"column":9},"end":{"line":179,"column":3}},"64":{"start":{"line":178,"column":4},"end":{"line":178,"column":42}},"65":{"start":{"line":181,"column":2},"end":{"line":181,"column":14}},"66":{"start":{"line":192,"column":0},"end":{"line":202,"column":2}},"67":{"start":{"line":193,"column":2},"end":{"line":199,"column":3}},"68":{"start":{"line":194,"column":4},"end":{"line":198,"column":5}},"69":{"start":{"line":195,"column":6},"end":{"line":197,"column":7}},"70":{"start":{"line":196,"column":8},"end":{"line":196,"column":65}},"71":{"start":{"line":201,"column":2},"end":{"line":201,"column":14}},"72":{"start":{"line":211,"column":0},"end":{"line":223,"column":2}},"73":{"start":{"line":212,"column":2},"end":{"line":214,"column":3}},"74":{"start":{"line":213,"column":4},"end":{"line":213,"column":22}},"75":{"start":{"line":216,"column":2},"end":{"line":220,"column":3}},"76":{"start":{"line":217,"column":4},"end":{"line":217,"column":64}},"77":{"start":{"line":219,"column":4},"end":{"line":219,"column":31}},"78":{"start":{"line":222,"column":2},"end":{"line":222,"column":14}},"79":{"start":{"line":231,"column":0},"end":{"line":234,"column":2}},"80":{"start":{"line":232,"column":2},"end":{"line":232,"column":19}},"81":{"start":{"line":233,"column":2},"end":{"line":233,"column":14}},"82":{"start":{"line":244,"column":0},"end":{"line":254,"column":2}},"83":{"start":{"line":245,"column":2},"end":{"line":251,"column":3}},"84":{"start":{"line":246,"column":4},"end":{"line":250,"column":5}},"85":{"start":{"line":247,"column":6},"end":{"line":249,"column":7}},"86":{"start":{"line":248,"column":8},"end":{"line":248,"column":60}},"87":{"start":{"line":253,"column":2},"end":{"line":253,"column":14}},"88":{"start":{"line":256,"column":0},"end":{"line":285,"column":2}},"89":{"start":{"line":257,"column":2},"end":{"line":257,"column":18}},"90":{"start":{"line":259,"column":2},"end":{"line":282,"column":3}},"91":{"start":{"line":260,"column":4},"end":{"line":281,"column":7}},"92":{"start":{"line":261,"column":6},"end":{"line":263,"column":7}},"93":{"start":{"line":262,"column":8},"end":{"line":262,"column":69}},"94":{"start":{"line":265,"column":6},"end":{"line":265,"column":40}},"95":{"start":{"line":266,"column":6},"end":{"line":268,"column":7}},"96":{"start":{"line":267,"column":8},"end":{"line":267,"column":71}},"97":{"start":{"line":270,"column":6},"end":{"line":270,"column":89}},"98":{"start":{"line":271,"column":6},"end":{"line":271,"column":42}},"99":{"start":{"line":272,"column":6},"end":{"line":272,"column":53}},"100":{"start":{"line":273,"column":6},"end":{"line":280,"column":7}},"101":{"start":{"line":274,"column":8},"end":{"line":274,"column":48}},"102":{"start":{"line":275,"column":8},"end":{"line":275,"column":88}},"103":{"start":{"line":277,"column":8},"end":{"line":277,"column":108}},"104":{"start":{"line":279,"column":8},"end":{"line":279,"column":51}},"105":{"start":{"line":284,"column":2},"end":{"line":284,"column":14}},"106":{"start":{"line":293,"column":0},"end":{"line":299,"column":2}},"107":{"start":{"line":294,"column":2},"end":{"line":296,"column":3}},"108":{"start":{"line":295,"column":4},"end":{"line":295,"column":16}},"109":{"start":{"line":298,"column":2},"end":{"line":298,"column":15}},"110":{"start":{"line":301,"column":0},"end":{"line":305,"column":1}},"111":{"start":{"line":302,"column":2},"end":{"line":304,"column":29}},"112":{"start":{"line":316,"column":0},"end":{"line":322,"column":2}},"113":{"start":{"line":317,"column":2},"end":{"line":319,"column":3}},"114":{"start":{"line":318,"column":4},"end":{"line":318,"column":33}},"115":{"start":{"line":321,"column":2},"end":{"line":321,"column":20}},"116":{"start":{"line":324,"column":0},"end":{"line":324,"column":29}}},"branchMap":{"1":{"line":53,"type":"cond-expr","locations":[{"start":{"line":53,"column":28},"end":{"line":53,"column":57}},{"start":{"line":53,"column":60},"end":{"line":53,"column":64}}]},"2":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":28},"end":{"line":66,"column":57}},{"start":{"line":66,"column":60},"end":{"line":66,"column":64}}]},"3":{"line":79,"type":"cond-expr","locations":[{"start":{"line":79,"column":28},"end":{"line":79,"column":57}},{"start":{"line":79,"column":60},"end":{"line":79,"column":64}}]},"4":{"line":92,"type":"cond-expr","locations":[{"start":{"line":92,"column":28},"end":{"line":92,"column":57}},{"start":{"line":92,"column":60},"end":{"line":92,"column":64}}]},"5":{"line":105,"type":"cond-expr","locations":[{"start":{"line":105,"column":28},"end":{"line":105,"column":57}},{"start":{"line":105,"column":60},"end":{"line":105,"column":64}}]},"6":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":28},"end":{"line":118,"column":57}},{"start":{"line":118,"column":60},"end":{"line":118,"column":64}}]},"7":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":2},"end":{"line":131,"column":2}},{"start":{"line":131,"column":2},"end":{"line":131,"column":2}}]},"8":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":2},"end":{"line":149,"column":2}},{"start":{"line":149,"column":2},"end":{"line":149,"column":2}}]},"9":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":2},"end":{"line":157,"column":2}},{"start":{"line":157,"column":2},"end":{"line":157,"column":2}}]},"10":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":2},"end":{"line":175,"column":2}},{"start":{"line":175,"column":2},"end":{"line":175,"column":2}}]},"11":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":9},"end":{"line":177,"column":9}},{"start":{"line":177,"column":9},"end":{"line":177,"column":9}}]},"12":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]},"13":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":6},"end":{"line":195,"column":6}},{"start":{"line":195,"column":6},"end":{"line":195,"column":6}}]},"14":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":2},"end":{"line":212,"column":2}},{"start":{"line":212,"column":2},"end":{"line":212,"column":2}}]},"15":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":2},"end":{"line":216,"column":2}},{"start":{"line":216,"column":2},"end":{"line":216,"column":2}}]},"16":{"line":217,"type":"cond-expr","locations":[{"start":{"line":217,"column":36},"end":{"line":217,"column":55}},{"start":{"line":217,"column":58},"end":{"line":217,"column":63}}]},"17":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":2},"end":{"line":245,"column":2}},{"start":{"line":245,"column":2},"end":{"line":245,"column":2}}]},"18":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":6},"end":{"line":247,"column":6}},{"start":{"line":247,"column":6},"end":{"line":247,"column":6}}]},"19":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":2},"end":{"line":259,"column":2}},{"start":{"line":259,"column":2},"end":{"line":259,"column":2}}]},"20":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":6},"end":{"line":261,"column":6}},{"start":{"line":261,"column":6},"end":{"line":261,"column":6}}]},"21":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":6},"end":{"line":266,"column":6}},{"start":{"line":266,"column":6},"end":{"line":266,"column":6}}]},"22":{"line":272,"type":"cond-expr","locations":[{"start":{"line":272,"column":35},"end":{"line":272,"column":47}},{"start":{"line":272,"column":50},"end":{"line":272,"column":52}}]},"23":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":6},"end":{"line":273,"column":6}},{"start":{"line":273,"column":6},"end":{"line":273,"column":6}}]},"24":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":2},"end":{"line":294,"column":2}},{"start":{"line":294,"column":2},"end":{"line":294,"column":2}}]},"25":{"line":294,"type":"binary-expr","locations":[{"start":{"line":294,"column":6},"end":{"line":294,"column":23}},{"start":{"line":294,"column":27},"end":{"line":294,"column":43}}]},"26":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":9},"end":{"line":302,"column":31}},{"start":{"line":303,"column":4},"end":{"line":303,"column":27}},{"start":{"line":304,"column":4},"end":{"line":304,"column":28}}]},"27":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":2},"end":{"line":317,"column":2}},{"start":{"line":317,"column":2},"end":{"line":317,"column":2}}]},"28":{"line":317,"type":"binary-expr","locations":[{"start":{"line":317,"column":6},"end":{"line":317,"column":35}},{"start":{"line":317,"column":39},"end":{"line":317,"column":67}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var azureutil = require('../util/util');","var SR = require('../util/sr');","var Constants = require('../util/constants');","var errors = require('../errors/errors');","var ArgumentError = errors.ArgumentError;","var HeaderConstants = Constants.HeaderConstants;","var HttpConstants = Constants.HttpConstants;","var HttpConstants = Constants.HttpConstants;","var HttpVerbs = HttpConstants.HttpVerbs;","","function encodeSpecialCharacters(path) {","  return path.replace(/'/g, '%27');","}","","/**","* Creates a new WebResource object.","*","* This class provides an abstraction over a REST call by being library / implementation agnostic and wrapping the necessary","* properties to initiate a request.","*","* @constructor","*/","function WebResource() {","  this.rawResponse = false;","  this.queryString = {};","}","","/**","* Creates a new put request web resource.","*","* @param {string} path The path for the put operation.","* @return {WebResource} A new webresource with a put operation for the given path.","*/","WebResource.put = function (path) {","  var webResource = new WebResource();","  webResource.path = path ? encodeSpecialCharacters(path) : null;","  webResource.method = HttpConstants.HttpVerbs.PUT;","  return webResource;","};","","/**","* Creates a new get request web resource.","*","* @param {string} path The path for the get operation.","* @return {WebResource} A new webresource with a get operation for the given path.","*/","WebResource.get = function (path) {","  var webResource = new WebResource();","  webResource.path = path ? encodeSpecialCharacters(path) : null;","  webResource.method = HttpConstants.HttpVerbs.GET;","  return webResource;","};","","/**","* Creates a new head request web resource.","*","* @param {string} path The path for the head operation.","* @return {WebResource} A new webresource with a head operation for the given path.","*/","WebResource.head = function (path) {","  var webResource = new WebResource();","  webResource.path = path ? encodeSpecialCharacters(path) : null;","  webResource.method = HttpConstants.HttpVerbs.HEAD;","  return webResource;","};","","/**","* Creates a new delete request web resource.","*","* @param {string} path The path for the delete operation.","* @return {WebResource} A new webresource with a delete operation for the given path.","*/","WebResource.del = function (path) {","  var webResource = new WebResource();","  webResource.path = path ? encodeSpecialCharacters(path) : null;","  webResource.method = HttpConstants.HttpVerbs.DELETE;","  return webResource;","};","","/**","* Creates a new post request web resource.","*","* @param {string} path The path for the post operation.","* @return {WebResource} A new webresource with a post operation for the given path.","*/","WebResource.post = function (path) {","  var webResource = new WebResource();","  webResource.path = path ? encodeSpecialCharacters(path) : null;","  webResource.method = HttpConstants.HttpVerbs.POST;","  return webResource;","};","","/**","* Creates a new merge request web resource.","*","* @param {string} path The path for the merge operation.","* @return {WebResource} A new webresource with a merge operation for the given path.","*/","WebResource.merge = function (path) {","  var webResource = new WebResource();","  webResource.path = path ? encodeSpecialCharacters(path) : null;","  webResource.method = HttpConstants.HttpVerbs.MERGE;","  return webResource;","};","","/**","* Specifies a custom property in the web resource.","*","* @param {string} name  The property name.","* @param {string} value The property value.","* @return {WebResource} The webresource.","*/","WebResource.prototype.withProperty = function (name, value) {","  if (!this.properties) {","    this.properties = {};","  }","","  this.properties[name] = value;","","  return this;","};","","/**","* Specifies if the response should be parsed or not.","*","* @param {bool} rawResponse true if the response should not be parsed; false otherwise.","* @return {WebResource} The webresource.","*/","WebResource.prototype.withRawResponse = function (rawResponse) {","  this.rawResponse = rawResponse;","","  if (azureutil.objectIsNull(this.rawResponse)) {","    this.rawResponse = true;","  }","","  return this;","};","","WebResource.prototype.withHeadersOnly = function (headersOnly) {","  if (headersOnly !== undefined) {","    this.headersOnly = headersOnly;","  } else {","    this.headersOnly = true;","  }","","  return this;","};","","/**","* Adds an optional query string parameter.","*","* @param {Object} name          The name of the query string parameter.","* @param {Object} value         The value of the query string parameter.","* @param {Object} defaultValue  The default value for the query string parameter to be used if no value is passed.","* @return {Object} The web resource.","*/","WebResource.prototype.withQueryOption = function (name, value, defaultValue) {","  if (!azureutil.objectIsNull(value)) {","    this.queryString[name] = value;","  } else if (defaultValue) {","    this.queryString[name] = defaultValue;","  }","","  return this;","};","","/**","* Adds optional query string parameters.","*","* Additional arguments will be the needles to search in the haystack. ","*","* @param {Object} object  The haystack of query string parameters.","* @return {Object} The web resource.","*/","WebResource.prototype.withQueryOptions = function (object) {","  if (object) {","    for (var i = 1; i < arguments.length; i++) {","      if (object[arguments[i]]) {","        this.withQueryOption(arguments[i], object[arguments[i]]);","      }","    }","  }","","  return this;","};","","/**","* Adds an optional header parameter.","*","* @param {Object} name  The name of the header parameter.","* @param {Object} value The value of the header parameter.","* @return {Object} The web resource.","*/","WebResource.prototype.withHeader = function (name, value) {","  if (!this.headers) {","    this.headers = {};","  }","","  if (!azureutil.IsNullOrEmptyOrUndefinedOrWhiteSpace(value)) {","    value = value instanceof Date ? value.toUTCString() : value;","    ","    this.headers[name] = value;","  }","","  return this;","};","","/**","* Adds an optional body.","*","* @param {Object} body  The request body.","* @return {Object} The web resource.","*/","WebResource.prototype.withBody = function (body) {","  this.body = body;","  return this;","};","","/**","* Adds optional query string parameters.","*","* Additional arguments will be the needles to search in the haystack. ","*","* @param {Object} object  The haystack of headers.","* @return {Object} The web resource.","*/","WebResource.prototype.withHeaders = function (object) {","  if (object) {","    for (var i = 1; i < arguments.length; i++) {","      if (object[arguments[i]]) {","        this.withHeader(arguments[i], object[arguments[i]]);","      }","    }","  }","","  return this;","};","","WebResource.prototype.addOptionalMetadataHeaders = function (metadata) {","  var self = this;","","  if (metadata) {","    Object.keys(metadata).forEach(function (metadataKey) {","      if (azureutil.IsNullOrEmptyOrUndefinedOrWhiteSpace(metadataKey)) {","        throw new ArgumentError('metadata', SR.METADATA_KEY_INVALID);","      }","","      var value = metadata[metadataKey];","      if (azureutil.IsNullOrEmptyOrUndefinedOrWhiteSpace(value)) {","        throw new ArgumentError('metadata', SR.METADATA_VALUE_INVALID);","      }","      ","      var metadataHeaderName = HeaderConstants.PREFIX_FOR_STORAGE_METADATA + metadataKey;","      var existingMetadataHeaderName = '';","      var headers = self.headers ? self.headers : {};","      if (Object.keys(headers).some(function (headerName) {","        existingMetadataHeaderName = headerName;","        return headerName.toString().toLowerCase() === metadataHeaderName.toLowerCase();","      })) {        ","        self.withHeader(existingMetadataHeaderName, self.headers[existingMetadataHeaderName] + ',' + value);","      } else {","        self.withHeader(metadataHeaderName, value);","      }","    });","  }","","  return this;","};","","/**","* Determines if a status code corresponds to a valid response according to the WebResource's expected status codes.","*","* @param {int} statusCode The response status code.","* @return true if the response is valid; false otherwise.","*/","WebResource.validResponse = function (statusCode) {","  if (statusCode >= 200 && statusCode < 300) {","    return true;","  }","","  return false;","};","","function isMethodWithBody(verb) {","  return verb === HttpVerbs.PUT ||","    verb === HttpVerbs.POST ||","    verb === HttpVerbs.MERGE;","}","","/**","* Hook up the given input stream to a destination output stream if the WebResource method","* requires a request body and a body is not already set.","*","* @param {Stream} inputStream the stream to pipe from","* @param {Stream} outputStream the stream to pipe to","*","* @return destStream","*/","WebResource.prototype.pipeInput = function(inputStream, destStream) {","  if (isMethodWithBody(this.method) && !this.hasOwnProperty('body')) {","    inputStream.pipe(destStream);","  }","","  return destStream;","};","","module.exports = WebResource;"],"l":{"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"28":1,"29":0,"40":1,"41":0,"42":0,"51":1,"52":0,"53":0,"54":0,"55":0,"64":1,"65":0,"66":0,"67":0,"68":0,"77":1,"78":0,"79":0,"80":0,"81":0,"90":1,"91":0,"92":0,"93":0,"94":0,"103":1,"104":0,"105":0,"106":0,"107":0,"116":1,"117":0,"118":0,"119":0,"120":0,"130":1,"131":0,"132":0,"135":0,"137":0,"146":1,"147":0,"149":0,"150":0,"153":0,"156":1,"157":0,"158":0,"160":0,"163":0,"174":1,"175":0,"176":0,"177":0,"178":0,"181":0,"192":1,"193":0,"194":0,"195":0,"196":0,"201":0,"211":1,"212":0,"213":0,"216":0,"217":0,"219":0,"222":0,"231":1,"232":0,"233":0,"244":1,"245":0,"246":0,"247":0,"248":0,"253":0,"256":1,"257":0,"259":0,"260":0,"261":0,"262":0,"265":0,"266":0,"267":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"277":0,"279":0,"284":0,"293":1,"294":0,"295":0,"298":0,"301":1,"302":0,"316":1,"317":0,"318":0,"321":0,"324":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/errors/errors.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/errors/errors.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":0,"27":0,"28":0,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"captureStackTrace","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":57}}},"2":{"name":"ArgumentError","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":46}}},"3":{"name":"ArgumentNullError","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":50}}},"4":{"name":"StorageError","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":43}}},"5":{"name":"TimeoutError","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":31}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}},"3":{"start":{"line":21,"column":0},"end":{"line":25,"column":1}},"4":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"5":{"start":{"line":23,"column":4},"end":{"line":23,"column":58}},"6":{"start":{"line":27,"column":0},"end":{"line":32,"column":1}},"7":{"start":{"line":28,"column":2},"end":{"line":28,"column":44}},"8":{"start":{"line":29,"column":2},"end":{"line":29,"column":36}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":35}},"10":{"start":{"line":31,"column":2},"end":{"line":31,"column":98}},"11":{"start":{"line":33,"column":0},"end":{"line":33,"column":36}},"12":{"start":{"line":35,"column":0},"end":{"line":40,"column":1}},"13":{"start":{"line":36,"column":2},"end":{"line":36,"column":44}},"14":{"start":{"line":37,"column":2},"end":{"line":37,"column":36}},"15":{"start":{"line":38,"column":2},"end":{"line":38,"column":35}},"16":{"start":{"line":39,"column":2},"end":{"line":39,"column":78}},"17":{"start":{"line":42,"column":0},"end":{"line":42,"column":40}},"18":{"start":{"line":44,"column":0},"end":{"line":52,"column":1}},"19":{"start":{"line":45,"column":2},"end":{"line":45,"column":44}},"20":{"start":{"line":46,"column":2},"end":{"line":46,"column":36}},"21":{"start":{"line":47,"column":2},"end":{"line":47,"column":25}},"22":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"23":{"start":{"line":50,"column":4},"end":{"line":50,"column":31}},"24":{"start":{"line":54,"column":0},"end":{"line":54,"column":35}},"25":{"start":{"line":56,"column":0},"end":{"line":60,"column":1}},"26":{"start":{"line":57,"column":2},"end":{"line":57,"column":44}},"27":{"start":{"line":58,"column":2},"end":{"line":58,"column":36}},"28":{"start":{"line":59,"column":2},"end":{"line":59,"column":25}},"29":{"start":{"line":62,"column":0},"end":{"line":62,"column":35}},"30":{"start":{"line":64,"column":0},"end":{"line":64,"column":45}},"31":{"start":{"line":65,"column":0},"end":{"line":65,"column":53}},"32":{"start":{"line":66,"column":0},"end":{"line":66,"column":43}},"33":{"start":{"line":67,"column":0},"end":{"line":67,"column":43}},"34":{"start":{"line":68,"column":0},"end":{"line":68,"column":53}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":17},"end":{"line":31,"column":24}},{"start":{"line":31,"column":28},"end":{"line":31,"column":97}}]},"3":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":17},"end":{"line":39,"column":24}},{"start":{"line":39,"column":28},"end":{"line":39,"column":77}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var util = require('util');","var _ = require('underscore');","","function captureStackTrace(targetObject, constructorOpt) {","  if (Error.captureStackTrace) {","    Error.captureStackTrace(targetObject, constructorOpt);","  }","}","","function ArgumentError(argumentName, message) {","  captureStackTrace(this, this.constructor); ","  this.name = this.constructor.name;","  this.argumentName = argumentName;","  this.message = message || util.format('Invalid or missing argument supplied: %s', argumentName);","}","util.inherits(ArgumentError, Error);","","function ArgumentNullError(argumentName, message) {","  captureStackTrace(this, this.constructor); ","  this.name = this.constructor.name;","  this.argumentName = argumentName;","  this.message = message || util.format('Missing argument: %s', argumentName);","}","","util.inherits(ArgumentNullError, Error);","","function StorageError(message, properties) {","  captureStackTrace(this, this.constructor); ","  this.name = this.constructor.name;","  this.message = message;","  ","  if(properties){","    _.extend(this, properties);","  }","}","","util.inherits(StorageError, Error);","","function TimeoutError(message) {","  captureStackTrace(this, this.constructor); ","  this.name = this.constructor.name;","  this.message = message;","}","","util.inherits(TimeoutError, Error);","","module.exports.ArgumentError = ArgumentError;","module.exports.ArgumentNullError = ArgumentNullError;","module.exports.StorageError = StorageError;","module.exports.TimeoutError = TimeoutError;","module.exports.captureStackTrace = captureStackTrace;"],"l":{"18":1,"19":1,"21":1,"22":0,"23":0,"27":1,"28":0,"29":0,"30":0,"31":0,"33":1,"35":1,"36":0,"37":0,"38":0,"39":0,"42":1,"44":1,"45":0,"46":0,"47":0,"49":0,"50":0,"54":1,"56":1,"57":0,"58":0,"59":0,"62":1,"64":1,"65":1,"66":1,"67":1,"68":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/services/storageserviceclient.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/services/storageserviceclient.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":1,"85":0,"86":1,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":1,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":1,"295":0,"296":1,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":1,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":1,"346":0,"347":1,"348":1,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":1,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":1,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":1,"399":0,"400":0,"401":0,"402":0,"403":0,"404":1,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":1,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":1,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":1,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":1,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":1,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":1,"491":0,"492":0,"493":0,"494":1,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":1,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":1,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":1,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":1,"538":0,"539":0,"540":0,"541":0,"542":1,"543":0,"544":0,"545":0,"546":1,"547":0,"548":0,"549":0,"550":0,"551":0,"552":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0,0],"104":[0,0],"105":[0,0,0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0,0,0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0,0,0,0],"146":[0,0],"147":[0,0,0],"148":[0,0],"149":[0,0],"150":[0,0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0},"fnMap":{"1":{"name":"StorageServiceClient","line":72,"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":97}}},"2":{"name":"(anonymous_2)","line":88,"loc":{"start":{"line":88,"column":19},"end":{"line":88,"column":50}}},"3":{"name":"(anonymous_3)","line":124,"loc":{"start":{"line":124,"column":49},"end":{"line":124,"column":60}}},"4":{"name":"(anonymous_4)","line":142,"loc":{"start":{"line":142,"column":41},"end":{"line":142,"column":57}}},"5":{"name":"(anonymous_5)","line":143,"loc":{"start":{"line":143,"column":18},"end":{"line":143,"column":35}}},"6":{"name":"(anonymous_6)","line":193,"loc":{"start":{"line":193,"column":48},"end":{"line":193,"column":102}}},"7":{"name":"(anonymous_7)","line":208,"loc":{"start":{"line":208,"column":60},"end":{"line":208,"column":116}}},"8":{"name":"(anonymous_8)","line":224,"loc":{"start":{"line":224,"column":59},"end":{"line":224,"column":126}}},"9":{"name":"(anonymous_9)","line":243,"loc":{"start":{"line":243,"column":49},"end":{"line":243,"column":97}}},"10":{"name":"(anonymous_10)","line":288,"loc":{"start":{"line":288,"column":18},"end":{"line":288,"column":43}}},"11":{"name":"(anonymous_11)","line":291,"loc":{"start":{"line":291,"column":58},"end":{"line":291,"column":94}}},"12":{"name":"(anonymous_12)","line":293,"loc":{"start":{"line":293,"column":49},"end":{"line":293,"column":95}}},"13":{"name":"(anonymous_13)","line":300,"loc":{"start":{"line":300,"column":104},"end":{"line":300,"column":150}}},"14":{"name":"(anonymous_14)","line":304,"loc":{"start":{"line":304,"column":40},"end":{"line":304,"column":67}}},"15":{"name":"(anonymous_15)","line":324,"loc":{"start":{"line":324,"column":29},"end":{"line":324,"column":65}}},"16":{"name":"(anonymous_16)","line":342,"loc":{"start":{"line":342,"column":43},"end":{"line":342,"column":63}}},"17":{"name":"(anonymous_17)","line":353,"loc":{"start":{"line":353,"column":45},"end":{"line":353,"column":61}}},"18":{"name":"(anonymous_18)","line":365,"loc":{"start":{"line":365,"column":44},"end":{"line":365,"column":56}}},"19":{"name":"(anonymous_19)","line":388,"loc":{"start":{"line":388,"column":43},"end":{"line":388,"column":58}}},"20":{"name":"(anonymous_20)","line":393,"loc":{"start":{"line":393,"column":37},"end":{"line":393,"column":49}}},"21":{"name":"(anonymous_21)","line":410,"loc":{"start":{"line":410,"column":42},"end":{"line":410,"column":64}}},"22":{"name":"(anonymous_22)","line":417,"loc":{"start":{"line":417,"column":32},"end":{"line":417,"column":44}}},"23":{"name":"(anonymous_23)","line":428,"loc":{"start":{"line":428,"column":41},"end":{"line":428,"column":61}}},"24":{"name":"(anonymous_24)","line":441,"loc":{"start":{"line":441,"column":41},"end":{"line":441,"column":53}}},"25":{"name":"(anonymous_25)","line":447,"loc":{"start":{"line":447,"column":39},"end":{"line":447,"column":51}}},"26":{"name":"(anonymous_26)","line":453,"loc":{"start":{"line":453,"column":42},"end":{"line":453,"column":54}}},"27":{"name":"(anonymous_27)","line":461,"loc":{"start":{"line":461,"column":32},"end":{"line":461,"column":44}}},"28":{"name":"(anonymous_28)","line":469,"loc":{"start":{"line":469,"column":43},"end":{"line":469,"column":56}}},"29":{"name":"(anonymous_29)","line":477,"loc":{"start":{"line":477,"column":27},"end":{"line":477,"column":39}}},"30":{"name":"(anonymous_30)","line":487,"loc":{"start":{"line":487,"column":29},"end":{"line":487,"column":41}}},"31":{"name":"(anonymous_31)","line":507,"loc":{"start":{"line":507,"column":45},"end":{"line":507,"column":57}}},"32":{"name":"(anonymous_32)","line":516,"loc":{"start":{"line":516,"column":42},"end":{"line":516,"column":59}}},"33":{"name":"(anonymous_33)","line":529,"loc":{"start":{"line":529,"column":23},"end":{"line":529,"column":78}}},"34":{"name":"(anonymous_34)","line":531,"loc":{"start":{"line":531,"column":99},"end":{"line":531,"column":151}}},"35":{"name":"(anonymous_35)","line":538,"loc":{"start":{"line":538,"column":19},"end":{"line":538,"column":30}}},"36":{"name":"(anonymous_36)","line":560,"loc":{"start":{"line":560,"column":54},"end":{"line":560,"column":102}}},"37":{"name":"(anonymous_37)","line":630,"loc":{"start":{"line":630,"column":51},"end":{"line":630,"column":68}}},"38":{"name":"(anonymous_38)","line":669,"loc":{"start":{"line":669,"column":50},"end":{"line":669,"column":92}}},"39":{"name":"convertRawHeadersToHeaders","line":672,"loc":{"start":{"line":672,"column":2},"end":{"line":672,"column":50}}},"40":{"name":"(anonymous_40)","line":720,"loc":{"start":{"line":720,"column":57},"end":{"line":720,"column":73}}},"41":{"name":"(anonymous_41)","line":760,"loc":{"start":{"line":760,"column":44},"end":{"line":760,"column":65}}},"42":{"name":"(anonymous_42)","line":771,"loc":{"start":{"line":771,"column":21},"end":{"line":771,"column":73}}},"43":{"name":"(anonymous_43)","line":772,"loc":{"start":{"line":772,"column":49},"end":{"line":772,"column":98}}},"44":{"name":"(anonymous_44)","line":774,"loc":{"start":{"line":774,"column":21},"end":{"line":774,"column":77}}},"45":{"name":"(anonymous_45)","line":777,"loc":{"start":{"line":777,"column":53},"end":{"line":777,"column":112}}},"46":{"name":"(anonymous_46)","line":778,"loc":{"start":{"line":778,"column":66},"end":{"line":778,"column":96}}},"47":{"name":"(anonymous_47)","line":805,"loc":{"start":{"line":805,"column":38},"end":{"line":805,"column":94}}},"48":{"name":"(anonymous_48)","line":826,"loc":{"start":{"line":826,"column":38},"end":{"line":826,"column":83}}},"49":{"name":"parseXml","line":827,"loc":{"start":{"line":827,"column":2},"end":{"line":827,"column":26}}},"50":{"name":"(anonymous_50)","line":830,"loc":{"start":{"line":830,"column":61},"end":{"line":830,"column":88}}},"51":{"name":"(anonymous_51)","line":851,"loc":{"start":{"line":851,"column":27},"end":{"line":851,"column":44}}},"52":{"name":"(anonymous_52)","line":884,"loc":{"start":{"line":884,"column":42},"end":{"line":884,"column":136}}},"53":{"name":"(anonymous_53)","line":906,"loc":{"start":{"line":906,"column":48},"end":{"line":906,"column":80}}},"54":{"name":"(anonymous_54)","line":939,"loc":{"start":{"line":939,"column":42},"end":{"line":939,"column":58}}},"55":{"name":"(anonymous_55)","line":952,"loc":{"start":{"line":952,"column":41},"end":{"line":952,"column":76}}},"56":{"name":"(anonymous_56)","line":977,"loc":{"start":{"line":977,"column":52},"end":{"line":977,"column":64}}},"57":{"name":"(anonymous_57)","line":978,"loc":{"start":{"line":978,"column":16},"end":{"line":978,"column":59}}},"58":{"name":"(anonymous_58)","line":981,"loc":{"start":{"line":981,"column":38},"end":{"line":981,"column":95}}},"59":{"name":"(anonymous_59)","line":999,"loc":{"start":{"line":999,"column":54},"end":{"line":999,"column":73}}},"60":{"name":"(anonymous_60)","line":1034,"loc":{"start":{"line":1034,"column":61},"end":{"line":1034,"column":100}}},"61":{"name":"(anonymous_61)","line":1036,"loc":{"start":{"line":1036,"column":55},"end":{"line":1036,"column":71}}},"62":{"name":"(anonymous_62)","line":1038,"loc":{"start":{"line":1038,"column":48},"end":{"line":1038,"column":61}}},"63":{"name":"(anonymous_63)","line":1050,"loc":{"start":{"line":1050,"column":32},"end":{"line":1050,"column":64}}},"64":{"name":"(anonymous_64)","line":1057,"loc":{"start":{"line":1057,"column":24},"end":{"line":1057,"column":48}}},"65":{"name":"(anonymous_65)","line":1088,"loc":{"start":{"line":1088,"column":61},"end":{"line":1088,"column":119}}},"66":{"name":"(anonymous_66)","line":1090,"loc":{"start":{"line":1090,"column":55},"end":{"line":1090,"column":71}}},"67":{"name":"(anonymous_67)","line":1092,"loc":{"start":{"line":1092,"column":48},"end":{"line":1092,"column":61}}},"68":{"name":"(anonymous_68)","line":1107,"loc":{"start":{"line":1107,"column":32},"end":{"line":1107,"column":64}}},"69":{"name":"(anonymous_69)","line":1108,"loc":{"start":{"line":1108,"column":24},"end":{"line":1108,"column":48}}},"70":{"name":"(anonymous_70)","line":1134,"loc":{"start":{"line":1134,"column":39},"end":{"line":1134,"column":66}}},"71":{"name":"(anonymous_71)","line":1196,"loc":{"start":{"line":1196,"column":42},"end":{"line":1196,"column":59}}},"72":{"name":"(anonymous_72)","line":1209,"loc":{"start":{"line":1209,"column":50},"end":{"line":1209,"column":62}}},"73":{"name":"(anonymous_73)","line":1230,"loc":{"start":{"line":1230,"column":50},"end":{"line":1230,"column":62}}},"74":{"name":"(anonymous_74)","line":1248,"loc":{"start":{"line":1248,"column":53},"end":{"line":1248,"column":72}}},"75":{"name":"(anonymous_75)","line":1271,"loc":{"start":{"line":1271,"column":51},"end":{"line":1271,"column":70}}},"76":{"name":"(anonymous_76)","line":1303,"loc":{"start":{"line":1303,"column":54},"end":{"line":1303,"column":78}}},"77":{"name":"(anonymous_77)","line":1317,"loc":{"start":{"line":1317,"column":63},"end":{"line":1317,"column":98}}},"78":{"name":"(anonymous_78)","line":1328,"loc":{"start":{"line":1328,"column":57},"end":{"line":1328,"column":76}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":33}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":25}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":32}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":27}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":31}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":31}},"7":{"start":{"line":24,"column":0},"end":{"line":24,"column":30}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":32}},"9":{"start":{"line":26,"column":0},"end":{"line":26,"column":23}},"10":{"start":{"line":27,"column":0},"end":{"line":27,"column":31}},"11":{"start":{"line":28,"column":0},"end":{"line":28,"column":40}},"12":{"start":{"line":30,"column":0},"end":{"line":30,"column":43}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":40}},"14":{"start":{"line":32,"column":0},"end":{"line":32,"column":43}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":31}},"16":{"start":{"line":34,"column":0},"end":{"line":34,"column":49}},"17":{"start":{"line":36,"column":0},"end":{"line":36,"column":51}},"18":{"start":{"line":37,"column":0},"end":{"line":37,"column":65}},"19":{"start":{"line":38,"column":0},"end":{"line":38,"column":45}},"20":{"start":{"line":39,"column":0},"end":{"line":39,"column":59}},"21":{"start":{"line":40,"column":0},"end":{"line":40,"column":75}},"22":{"start":{"line":41,"column":0},"end":{"line":41,"column":68}},"23":{"start":{"line":43,"column":0},"end":{"line":43,"column":48}},"24":{"start":{"line":44,"column":0},"end":{"line":44,"column":72}},"25":{"start":{"line":46,"column":0},"end":{"line":46,"column":48}},"26":{"start":{"line":47,"column":0},"end":{"line":47,"column":58}},"27":{"start":{"line":48,"column":0},"end":{"line":48,"column":66}},"28":{"start":{"line":49,"column":0},"end":{"line":49,"column":76}},"29":{"start":{"line":50,"column":0},"end":{"line":50,"column":76}},"30":{"start":{"line":51,"column":0},"end":{"line":51,"column":56}},"31":{"start":{"line":53,"column":0},"end":{"line":53,"column":46}},"32":{"start":{"line":54,"column":0},"end":{"line":54,"column":41}},"33":{"start":{"line":55,"column":0},"end":{"line":55,"column":41}},"34":{"start":{"line":56,"column":0},"end":{"line":56,"column":49}},"35":{"start":{"line":57,"column":0},"end":{"line":57,"column":39}},"36":{"start":{"line":58,"column":0},"end":{"line":58,"column":39}},"37":{"start":{"line":72,"column":0},"end":{"line":115,"column":1}},"38":{"start":{"line":73,"column":2},"end":{"line":73,"column":44}},"39":{"start":{"line":75,"column":2},"end":{"line":93,"column":3}},"40":{"start":{"line":77,"column":4},"end":{"line":77,"column":41}},"41":{"start":{"line":78,"column":4},"end":{"line":78,"column":45}},"42":{"start":{"line":79,"column":4},"end":{"line":79,"column":105}},"43":{"start":{"line":80,"column":9},"end":{"line":93,"column":3}},"44":{"start":{"line":82,"column":4},"end":{"line":82,"column":29}},"45":{"start":{"line":83,"column":4},"end":{"line":83,"column":66}},"46":{"start":{"line":86,"column":4},"end":{"line":86,"column":26}},"47":{"start":{"line":87,"column":4},"end":{"line":92,"column":6}},"48":{"start":{"line":90,"column":8},"end":{"line":90,"column":23}},"49":{"start":{"line":95,"column":2},"end":{"line":97,"column":3}},"50":{"start":{"line":96,"column":4},"end":{"line":96,"column":23}},"51":{"start":{"line":99,"column":2},"end":{"line":99,"column":59}},"52":{"start":{"line":100,"column":2},"end":{"line":100,"column":41}},"53":{"start":{"line":102,"column":2},"end":{"line":102,"column":28}},"54":{"start":{"line":109,"column":2},"end":{"line":109,"column":50}},"55":{"start":{"line":111,"column":2},"end":{"line":111,"column":26}},"56":{"start":{"line":113,"column":2},"end":{"line":113,"column":73}},"57":{"start":{"line":114,"column":2},"end":{"line":114,"column":72}},"58":{"start":{"line":117,"column":0},"end":{"line":117,"column":57}},"59":{"start":{"line":124,"column":0},"end":{"line":135,"column":2}},"60":{"start":{"line":125,"column":2},"end":{"line":125,"column":55}},"61":{"start":{"line":128,"column":2},"end":{"line":128,"column":72}},"62":{"start":{"line":129,"column":2},"end":{"line":129,"column":69}},"63":{"start":{"line":132,"column":2},"end":{"line":132,"column":39}},"64":{"start":{"line":134,"column":2},"end":{"line":134,"column":24}},"65":{"start":{"line":142,"column":0},"end":{"line":180,"column":2}},"66":{"start":{"line":143,"column":2},"end":{"line":172,"column":4}},"67":{"start":{"line":144,"column":4},"end":{"line":144,"column":19}},"68":{"start":{"line":145,"column":4},"end":{"line":169,"column":5}},"69":{"start":{"line":146,"column":6},"end":{"line":148,"column":7}},"70":{"start":{"line":147,"column":8},"end":{"line":147,"column":33}},"71":{"start":{"line":149,"column":6},"end":{"line":149,"column":51}},"72":{"start":{"line":151,"column":6},"end":{"line":153,"column":7}},"73":{"start":{"line":152,"column":8},"end":{"line":152,"column":63}},"74":{"start":{"line":155,"column":6},"end":{"line":161,"column":7}},"75":{"start":{"line":156,"column":8},"end":{"line":160,"column":9}},"76":{"start":{"line":157,"column":10},"end":{"line":157,"column":57}},"77":{"start":{"line":159,"column":10},"end":{"line":159,"column":56}},"78":{"start":{"line":163,"column":6},"end":{"line":168,"column":9}},"79":{"start":{"line":171,"column":4},"end":{"line":171,"column":22}},"80":{"start":{"line":174,"column":2},"end":{"line":174,"column":29}},"81":{"start":{"line":176,"column":2},"end":{"line":179,"column":4}},"82":{"start":{"line":193,"column":0},"end":{"line":195,"column":2}},"83":{"start":{"line":194,"column":2},"end":{"line":194,"column":83}},"84":{"start":{"line":208,"column":0},"end":{"line":210,"column":2}},"85":{"start":{"line":209,"column":2},"end":{"line":209,"column":87}},"86":{"start":{"line":224,"column":0},"end":{"line":226,"column":2}},"87":{"start":{"line":225,"column":2},"end":{"line":225,"column":109}},"88":{"start":{"line":243,"column":0},"end":{"line":550,"column":2}},"89":{"start":{"line":244,"column":2},"end":{"line":244,"column":18}},"90":{"start":{"line":247,"column":2},"end":{"line":249,"column":3}},"91":{"start":{"line":248,"column":4},"end":{"line":248,"column":40}},"92":{"start":{"line":251,"column":2},"end":{"line":251,"column":85}},"93":{"start":{"line":254,"column":2},"end":{"line":254,"column":107}},"94":{"start":{"line":255,"column":2},"end":{"line":255,"column":158}},"95":{"start":{"line":258,"column":2},"end":{"line":260,"column":3}},"96":{"start":{"line":259,"column":4},"end":{"line":259,"column":52}},"97":{"start":{"line":263,"column":2},"end":{"line":265,"column":3}},"98":{"start":{"line":264,"column":4},"end":{"line":264,"column":61}},"99":{"start":{"line":268,"column":2},"end":{"line":270,"column":3}},"100":{"start":{"line":269,"column":4},"end":{"line":269,"column":55}},"101":{"start":{"line":272,"column":2},"end":{"line":272,"column":36}},"102":{"start":{"line":275,"column":2},"end":{"line":275,"column":40}},"103":{"start":{"line":286,"column":2},"end":{"line":286,"column":31}},"104":{"start":{"line":288,"column":2},"end":{"line":525,"column":4}},"105":{"start":{"line":289,"column":4},"end":{"line":289,"column":36}},"106":{"start":{"line":290,"column":4},"end":{"line":290,"column":50}},"107":{"start":{"line":291,"column":4},"end":{"line":524,"column":7}},"108":{"start":{"line":292,"column":6},"end":{"line":523,"column":7}},"109":{"start":{"line":293,"column":8},"end":{"line":295,"column":11}},"110":{"start":{"line":294,"column":10},"end":{"line":294,"column":45}},"111":{"start":{"line":297,"column":8},"end":{"line":297,"column":112}},"112":{"start":{"line":299,"column":8},"end":{"line":522,"column":9}},"113":{"start":{"line":300,"column":10},"end":{"line":302,"column":13}},"114":{"start":{"line":301,"column":12},"end":{"line":301,"column":47}},"115":{"start":{"line":304,"column":10},"end":{"line":321,"column":12}},"116":{"start":{"line":305,"column":12},"end":{"line":305,"column":31}},"117":{"start":{"line":307,"column":12},"end":{"line":313,"column":13}},"118":{"start":{"line":308,"column":14},"end":{"line":308,"column":64}},"119":{"start":{"line":310,"column":14},"end":{"line":310,"column":85}},"120":{"start":{"line":311,"column":14},"end":{"line":311,"column":62}},"121":{"start":{"line":312,"column":14},"end":{"line":312,"column":54}},"122":{"start":{"line":315,"column":12},"end":{"line":315,"column":57}},"123":{"start":{"line":317,"column":12},"end":{"line":317,"column":60}},"124":{"start":{"line":318,"column":12},"end":{"line":318,"column":63}},"125":{"start":{"line":320,"column":12},"end":{"line":320,"column":43}},"126":{"start":{"line":323,"column":10},"end":{"line":323,"column":26}},"127":{"start":{"line":324,"column":10},"end":{"line":433,"column":12}},"128":{"start":{"line":326,"column":12},"end":{"line":326,"column":30}},"129":{"start":{"line":328,"column":12},"end":{"line":328,"column":36}},"130":{"start":{"line":330,"column":12},"end":{"line":336,"column":13}},"131":{"start":{"line":331,"column":14},"end":{"line":333,"column":15}},"132":{"start":{"line":332,"column":16},"end":{"line":332,"column":77}},"133":{"start":{"line":335,"column":14},"end":{"line":335,"column":44}},"134":{"start":{"line":338,"column":12},"end":{"line":406,"column":13}},"135":{"start":{"line":339,"column":14},"end":{"line":339,"column":71}},"136":{"start":{"line":341,"column":14},"end":{"line":341,"column":65}},"137":{"start":{"line":342,"column":14},"end":{"line":403,"column":17}},"138":{"start":{"line":343,"column":16},"end":{"line":343,"column":77}},"139":{"start":{"line":344,"column":16},"end":{"line":402,"column":17}},"140":{"start":{"line":346,"column":20},"end":{"line":346,"column":85}},"141":{"start":{"line":347,"column":20},"end":{"line":347,"column":43}},"142":{"start":{"line":348,"column":20},"end":{"line":348,"column":34}},"143":{"start":{"line":349,"column":20},"end":{"line":351,"column":21}},"144":{"start":{"line":350,"column":22},"end":{"line":350,"column":69}},"145":{"start":{"line":353,"column":20},"end":{"line":364,"column":23}},"146":{"start":{"line":354,"column":22},"end":{"line":363,"column":23}},"147":{"start":{"line":355,"column":24},"end":{"line":355,"column":61}},"148":{"start":{"line":356,"column":24},"end":{"line":356,"column":45}},"149":{"start":{"line":358,"column":24},"end":{"line":362,"column":25}},"150":{"start":{"line":359,"column":26},"end":{"line":359,"column":52}},"151":{"start":{"line":361,"column":26},"end":{"line":361,"column":89}},"152":{"start":{"line":365,"column":20},"end":{"line":378,"column":23}},"153":{"start":{"line":366,"column":22},"end":{"line":376,"column":23}},"154":{"start":{"line":368,"column":24},"end":{"line":375,"column":25}},"155":{"start":{"line":372,"column":26},"end":{"line":372,"column":81}},"156":{"start":{"line":374,"column":26},"end":{"line":374,"column":78}},"157":{"start":{"line":377,"column":22},"end":{"line":377,"column":62}},"158":{"start":{"line":382,"column":18},"end":{"line":384,"column":19}},"159":{"start":{"line":383,"column":20},"end":{"line":383,"column":52}},"160":{"start":{"line":386,"column":18},"end":{"line":386,"column":41}},"161":{"start":{"line":387,"column":18},"end":{"line":387,"column":70}},"162":{"start":{"line":388,"column":18},"end":{"line":391,"column":21}},"163":{"start":{"line":389,"column":20},"end":{"line":389,"column":50}},"164":{"start":{"line":390,"column":20},"end":{"line":390,"column":46}},"165":{"start":{"line":393,"column":18},"end":{"line":401,"column":21}},"166":{"start":{"line":395,"column":20},"end":{"line":397,"column":21}},"167":{"start":{"line":396,"column":22},"end":{"line":396,"column":74}},"168":{"start":{"line":399,"column":20},"end":{"line":399,"column":53}},"169":{"start":{"line":400,"column":20},"end":{"line":400,"column":43}},"170":{"start":{"line":405,"column":14},"end":{"line":405,"column":96}},"171":{"start":{"line":409,"column":12},"end":{"line":413,"column":13}},"172":{"start":{"line":410,"column":14},"end":{"line":412,"column":17}},"173":{"start":{"line":411,"column":16},"end":{"line":411,"column":45}},"174":{"start":{"line":416,"column":12},"end":{"line":416,"column":43}},"175":{"start":{"line":417,"column":12},"end":{"line":425,"column":14}},"176":{"start":{"line":418,"column":14},"end":{"line":422,"column":15}},"177":{"start":{"line":419,"column":16},"end":{"line":419,"column":104}},"178":{"start":{"line":420,"column":21},"end":{"line":422,"column":15}},"179":{"start":{"line":421,"column":16},"end":{"line":421,"column":63}},"180":{"start":{"line":424,"column":14},"end":{"line":424,"column":41}},"181":{"start":{"line":428,"column":12},"end":{"line":430,"column":15}},"182":{"start":{"line":429,"column":14},"end":{"line":429,"column":59}},"183":{"start":{"line":432,"column":12},"end":{"line":432,"column":33}},"184":{"start":{"line":435,"column":10},"end":{"line":437,"column":11}},"185":{"start":{"line":436,"column":12},"end":{"line":436,"column":55}},"186":{"start":{"line":440,"column":10},"end":{"line":521,"column":11}},"187":{"start":{"line":441,"column":12},"end":{"line":446,"column":15}},"188":{"start":{"line":442,"column":14},"end":{"line":445,"column":15}},"189":{"start":{"line":443,"column":16},"end":{"line":443,"column":59}},"190":{"start":{"line":444,"column":16},"end":{"line":444,"column":35}},"191":{"start":{"line":447,"column":12},"end":{"line":452,"column":15}},"192":{"start":{"line":448,"column":14},"end":{"line":451,"column":15}},"193":{"start":{"line":449,"column":16},"end":{"line":449,"column":59}},"194":{"start":{"line":450,"column":16},"end":{"line":450,"column":35}},"195":{"start":{"line":453,"column":12},"end":{"line":458,"column":15}},"196":{"start":{"line":454,"column":14},"end":{"line":457,"column":15}},"197":{"start":{"line":455,"column":16},"end":{"line":455,"column":59}},"198":{"start":{"line":456,"column":16},"end":{"line":456,"column":35}},"199":{"start":{"line":459,"column":12},"end":{"line":459,"column":49}},"200":{"start":{"line":460,"column":17},"end":{"line":521,"column":11}},"201":{"start":{"line":461,"column":12},"end":{"line":485,"column":14}},"202":{"start":{"line":462,"column":14},"end":{"line":464,"column":77}},"203":{"start":{"line":466,"column":14},"end":{"line":466,"column":47}},"204":{"start":{"line":467,"column":14},"end":{"line":467,"column":28}},"205":{"start":{"line":469,"column":14},"end":{"line":481,"column":17}},"206":{"start":{"line":470,"column":16},"end":{"line":470,"column":40}},"207":{"start":{"line":471,"column":16},"end":{"line":476,"column":17}},"208":{"start":{"line":472,"column":18},"end":{"line":472,"column":100}},"209":{"start":{"line":474,"column":18},"end":{"line":474,"column":43}},"210":{"start":{"line":475,"column":18},"end":{"line":475,"column":36}},"211":{"start":{"line":478,"column":16},"end":{"line":478,"column":51}},"212":{"start":{"line":479,"column":16},"end":{"line":479,"column":47}},"213":{"start":{"line":480,"column":16},"end":{"line":480,"column":36}},"214":{"start":{"line":482,"column":14},"end":{"line":484,"column":15}},"215":{"start":{"line":483,"column":16},"end":{"line":483,"column":43}},"216":{"start":{"line":487,"column":12},"end":{"line":499,"column":14}},"217":{"start":{"line":489,"column":14},"end":{"line":498,"column":15}},"218":{"start":{"line":490,"column":16},"end":{"line":490,"column":55}},"219":{"start":{"line":491,"column":16},"end":{"line":491,"column":40}},"220":{"start":{"line":493,"column":16},"end":{"line":495,"column":17}},"221":{"start":{"line":494,"column":18},"end":{"line":494,"column":45}},"222":{"start":{"line":497,"column":16},"end":{"line":497,"column":32}},"223":{"start":{"line":501,"column":12},"end":{"line":513,"column":13}},"224":{"start":{"line":503,"column":14},"end":{"line":510,"column":15}},"225":{"start":{"line":504,"column":16},"end":{"line":504,"column":31}},"226":{"start":{"line":507,"column":16},"end":{"line":509,"column":19}},"227":{"start":{"line":508,"column":18},"end":{"line":508,"column":31}},"228":{"start":{"line":512,"column":14},"end":{"line":512,"column":27}},"229":{"start":{"line":516,"column":12},"end":{"line":518,"column":15}},"230":{"start":{"line":517,"column":14},"end":{"line":517,"column":45}},"231":{"start":{"line":520,"column":12},"end":{"line":520,"column":27}},"232":{"start":{"line":529,"column":2},"end":{"line":549,"column":5}},"233":{"start":{"line":530,"column":4},"end":{"line":548,"column":5}},"234":{"start":{"line":531,"column":6},"end":{"line":533,"column":9}},"235":{"start":{"line":532,"column":8},"end":{"line":532,"column":49}},"236":{"start":{"line":537,"column":6},"end":{"line":547,"column":7}},"237":{"start":{"line":538,"column":8},"end":{"line":540,"column":10}},"238":{"start":{"line":539,"column":10},"end":{"line":539,"column":65}},"239":{"start":{"line":543,"column":8},"end":{"line":543,"column":66}},"240":{"start":{"line":546,"column":8},"end":{"line":546,"column":63}},"241":{"start":{"line":560,"column":0},"end":{"line":657,"column":2}},"242":{"start":{"line":561,"column":2},"end":{"line":561,"column":75}},"243":{"start":{"line":562,"column":2},"end":{"line":562,"column":76}},"244":{"start":{"line":563,"column":2},"end":{"line":565,"column":3}},"245":{"start":{"line":564,"column":4},"end":{"line":564,"column":91}},"246":{"start":{"line":566,"column":2},"end":{"line":566,"column":66}},"247":{"start":{"line":570,"column":2},"end":{"line":574,"column":3}},"248":{"start":{"line":573,"column":4},"end":{"line":573,"column":97}},"249":{"start":{"line":576,"column":2},"end":{"line":578,"column":3}},"250":{"start":{"line":577,"column":4},"end":{"line":577,"column":66}},"251":{"start":{"line":580,"column":2},"end":{"line":582,"column":3}},"252":{"start":{"line":581,"column":4},"end":{"line":581,"column":76}},"253":{"start":{"line":584,"column":2},"end":{"line":586,"column":3}},"254":{"start":{"line":585,"column":4},"end":{"line":585,"column":109}},"255":{"start":{"line":588,"column":2},"end":{"line":598,"column":3}},"256":{"start":{"line":589,"column":4},"end":{"line":589,"column":89}},"257":{"start":{"line":590,"column":4},"end":{"line":590,"column":105}},"258":{"start":{"line":591,"column":4},"end":{"line":591,"column":97}},"259":{"start":{"line":592,"column":4},"end":{"line":592,"column":110}},"260":{"start":{"line":593,"column":4},"end":{"line":593,"column":112}},"261":{"start":{"line":594,"column":4},"end":{"line":594,"column":119}},"262":{"start":{"line":595,"column":4},"end":{"line":595,"column":135}},"263":{"start":{"line":596,"column":4},"end":{"line":596,"column":106}},"264":{"start":{"line":597,"column":4},"end":{"line":597,"column":119}},"265":{"start":{"line":600,"column":2},"end":{"line":605,"column":3}},"266":{"start":{"line":601,"column":4},"end":{"line":601,"column":102}},"267":{"start":{"line":602,"column":4},"end":{"line":602,"column":118}},"268":{"start":{"line":603,"column":4},"end":{"line":603,"column":110}},"269":{"start":{"line":604,"column":4},"end":{"line":604,"column":123}},"270":{"start":{"line":607,"column":2},"end":{"line":612,"column":3}},"271":{"start":{"line":609,"column":4},"end":{"line":609,"column":59}},"272":{"start":{"line":610,"column":9},"end":{"line":612,"column":3}},"273":{"start":{"line":611,"column":4},"end":{"line":611,"column":61}},"274":{"start":{"line":614,"column":2},"end":{"line":622,"column":3}},"275":{"start":{"line":615,"column":4},"end":{"line":619,"column":5}},"276":{"start":{"line":616,"column":6},"end":{"line":616,"column":105}},"277":{"start":{"line":617,"column":11},"end":{"line":619,"column":5}},"278":{"start":{"line":618,"column":6},"end":{"line":618,"column":64}},"279":{"start":{"line":620,"column":9},"end":{"line":622,"column":3}},"280":{"start":{"line":621,"column":4},"end":{"line":621,"column":63}},"281":{"start":{"line":625,"column":2},"end":{"line":625,"column":44}},"282":{"start":{"line":627,"column":2},"end":{"line":627,"column":48}},"283":{"start":{"line":630,"column":2},"end":{"line":656,"column":5}},"284":{"start":{"line":631,"column":4},"end":{"line":631,"column":30}},"285":{"start":{"line":633,"column":4},"end":{"line":653,"column":5}},"286":{"start":{"line":634,"column":6},"end":{"line":634,"column":38}},"287":{"start":{"line":636,"column":6},"end":{"line":641,"column":8}},"288":{"start":{"line":643,"column":6},"end":{"line":646,"column":7}},"289":{"start":{"line":645,"column":8},"end":{"line":645,"column":59}},"290":{"start":{"line":648,"column":6},"end":{"line":652,"column":7}},"291":{"start":{"line":649,"column":8},"end":{"line":649,"column":66}},"292":{"start":{"line":651,"column":8},"end":{"line":651,"column":80}},"293":{"start":{"line":655,"column":4},"end":{"line":655,"column":36}},"294":{"start":{"line":669,"column":0},"end":{"line":737,"column":2}},"295":{"start":{"line":670,"column":2},"end":{"line":670,"column":18}},"296":{"start":{"line":672,"column":2},"end":{"line":689,"column":3}},"297":{"start":{"line":673,"column":4},"end":{"line":673,"column":21}},"298":{"start":{"line":674,"column":4},"end":{"line":676,"column":5}},"299":{"start":{"line":675,"column":6},"end":{"line":675,"column":23}},"300":{"start":{"line":678,"column":4},"end":{"line":686,"column":5}},"301":{"start":{"line":679,"column":6},"end":{"line":679,"column":21}},"302":{"start":{"line":680,"column":6},"end":{"line":684,"column":7}},"303":{"start":{"line":681,"column":8},"end":{"line":681,"column":35}},"304":{"start":{"line":683,"column":8},"end":{"line":683,"column":49}},"305":{"start":{"line":685,"column":6},"end":{"line":685,"column":44}},"306":{"start":{"line":688,"column":4},"end":{"line":688,"column":19}},"307":{"start":{"line":691,"column":2},"end":{"line":691,"column":69}},"308":{"start":{"line":692,"column":2},"end":{"line":692,"column":182}},"309":{"start":{"line":693,"column":2},"end":{"line":693,"column":21}},"310":{"start":{"line":695,"column":2},"end":{"line":732,"column":3}},"311":{"start":{"line":696,"column":4},"end":{"line":696,"column":52}},"312":{"start":{"line":699,"column":4},"end":{"line":699,"column":81}},"313":{"start":{"line":701,"column":4},"end":{"line":731,"column":5}},"314":{"start":{"line":702,"column":8},"end":{"line":702,"column":56}},"315":{"start":{"line":704,"column":6},"end":{"line":704,"column":31}},"316":{"start":{"line":706,"column":6},"end":{"line":709,"column":7}},"317":{"start":{"line":707,"column":8},"end":{"line":708,"column":85}},"318":{"start":{"line":713,"column":6},"end":{"line":713,"column":31}},"319":{"start":{"line":714,"column":6},"end":{"line":717,"column":7}},"320":{"start":{"line":715,"column":8},"end":{"line":715,"column":30}},"321":{"start":{"line":716,"column":8},"end":{"line":716,"column":25}},"322":{"start":{"line":719,"column":6},"end":{"line":727,"column":7}},"323":{"start":{"line":720,"column":8},"end":{"line":724,"column":11}},"324":{"start":{"line":721,"column":10},"end":{"line":723,"column":11}},"325":{"start":{"line":722,"column":12},"end":{"line":722,"column":24}},"326":{"start":{"line":726,"column":8},"end":{"line":726,"column":49}},"327":{"start":{"line":729,"column":6},"end":{"line":729,"column":86}},"328":{"start":{"line":730,"column":6},"end":{"line":730,"column":65}},"329":{"start":{"line":734,"column":2},"end":{"line":734,"column":88}},"330":{"start":{"line":736,"column":2},"end":{"line":736,"column":24}},"331":{"start":{"line":760,"column":0},"end":{"line":792,"column":4}},"332":{"start":{"line":762,"column":4},"end":{"line":762,"column":32}},"333":{"start":{"line":766,"column":4},"end":{"line":766,"column":35}},"334":{"start":{"line":767,"column":4},"end":{"line":767,"column":33}},"335":{"start":{"line":768,"column":4},"end":{"line":787,"column":5}},"336":{"start":{"line":771,"column":6},"end":{"line":786,"column":8}},"337":{"start":{"line":772,"column":8},"end":{"line":785,"column":11}},"338":{"start":{"line":774,"column":10},"end":{"line":782,"column":12}},"339":{"start":{"line":777,"column":12},"end":{"line":781,"column":15}},"340":{"start":{"line":778,"column":14},"end":{"line":780,"column":17}},"341":{"start":{"line":779,"column":16},"end":{"line":779,"column":87}},"342":{"start":{"line":784,"column":10},"end":{"line":784,"column":49}},"343":{"start":{"line":790,"column":4},"end":{"line":790,"column":34}},"344":{"start":{"line":791,"column":4},"end":{"line":791,"column":19}},"345":{"start":{"line":805,"column":0},"end":{"line":813,"column":2}},"346":{"start":{"line":806,"column":2},"end":{"line":812,"column":4}},"347":{"start":{"line":826,"column":0},"end":{"line":872,"column":2}},"348":{"start":{"line":827,"column":2},"end":{"line":839,"column":3}},"349":{"start":{"line":828,"column":4},"end":{"line":828,"column":15}},"350":{"start":{"line":829,"column":4},"end":{"line":829,"column":51}},"351":{"start":{"line":830,"column":4},"end":{"line":836,"column":7}},"352":{"start":{"line":831,"column":6},"end":{"line":835,"column":37}},"353":{"start":{"line":832,"column":8},"end":{"line":832,"column":53}},"354":{"start":{"line":833,"column":8},"end":{"line":833,"column":34}},"355":{"start":{"line":834,"column":8},"end":{"line":834,"column":23}},"356":{"start":{"line":835,"column":15},"end":{"line":835,"column":35}},"357":{"start":{"line":838,"column":4},"end":{"line":838,"column":18}},"358":{"start":{"line":841,"column":2},"end":{"line":869,"column":3}},"359":{"start":{"line":842,"column":4},"end":{"line":842,"column":25}},"360":{"start":{"line":843,"column":4},"end":{"line":845,"column":5}},"361":{"start":{"line":844,"column":6},"end":{"line":844,"column":67}},"362":{"start":{"line":847,"column":4},"end":{"line":868,"column":5}},"363":{"start":{"line":848,"column":6},"end":{"line":865,"column":7}},"364":{"start":{"line":849,"column":8},"end":{"line":857,"column":9}},"365":{"start":{"line":850,"column":10},"end":{"line":850,"column":36}},"366":{"start":{"line":851,"column":10},"end":{"line":853,"column":12}},"367":{"start":{"line":852,"column":12},"end":{"line":852,"column":34}},"368":{"start":{"line":854,"column":10},"end":{"line":854,"column":38}},"369":{"start":{"line":856,"column":10},"end":{"line":856,"column":52}},"370":{"start":{"line":858,"column":13},"end":{"line":865,"column":7}},"371":{"start":{"line":859,"column":8},"end":{"line":859,"column":48}},"372":{"start":{"line":860,"column":13},"end":{"line":865,"column":7}},"373":{"start":{"line":861,"column":8},"end":{"line":861,"column":38}},"374":{"start":{"line":863,"column":8},"end":{"line":863,"column":48}},"375":{"start":{"line":867,"column":6},"end":{"line":867,"column":25}},"376":{"start":{"line":871,"column":2},"end":{"line":871,"column":18}},"377":{"start":{"line":884,"column":0},"end":{"line":898,"column":2}},"378":{"start":{"line":885,"column":2},"end":{"line":885,"column":29}},"379":{"start":{"line":886,"column":2},"end":{"line":895,"column":3}},"380":{"start":{"line":888,"column":4},"end":{"line":888,"column":113}},"381":{"start":{"line":889,"column":9},"end":{"line":895,"column":3}},"382":{"start":{"line":891,"column":4},"end":{"line":891,"column":153}},"383":{"start":{"line":894,"column":4},"end":{"line":894,"column":76}},"384":{"start":{"line":897,"column":2},"end":{"line":897,"column":32}},"385":{"start":{"line":906,"column":0},"end":{"line":929,"column":2}},"386":{"start":{"line":909,"column":2},"end":{"line":909,"column":74}},"387":{"start":{"line":910,"column":2},"end":{"line":910,"column":61}},"388":{"start":{"line":912,"column":2},"end":{"line":914,"column":3}},"389":{"start":{"line":913,"column":4},"end":{"line":913,"column":80}},"390":{"start":{"line":916,"column":2},"end":{"line":916,"column":35}},"391":{"start":{"line":918,"column":2},"end":{"line":920,"column":3}},"392":{"start":{"line":919,"column":4},"end":{"line":919,"column":35}},"393":{"start":{"line":922,"column":2},"end":{"line":924,"column":3}},"394":{"start":{"line":923,"column":4},"end":{"line":923,"column":22}},"395":{"start":{"line":926,"column":2},"end":{"line":926,"column":90}},"396":{"start":{"line":927,"column":2},"end":{"line":927,"column":48}},"397":{"start":{"line":928,"column":2},"end":{"line":928,"column":57}},"398":{"start":{"line":939,"column":0},"end":{"line":947,"column":2}},"399":{"start":{"line":940,"column":2},"end":{"line":944,"column":3}},"400":{"start":{"line":941,"column":4},"end":{"line":941,"column":14}},"401":{"start":{"line":942,"column":9},"end":{"line":944,"column":3}},"402":{"start":{"line":943,"column":4},"end":{"line":943,"column":29}},"403":{"start":{"line":946,"column":2},"end":{"line":946,"column":14}},"404":{"start":{"line":952,"column":0},"end":{"line":968,"column":2}},"405":{"start":{"line":953,"column":2},"end":{"line":953,"column":11}},"406":{"start":{"line":954,"column":2},"end":{"line":958,"column":3}},"407":{"start":{"line":955,"column":4},"end":{"line":955,"column":35}},"408":{"start":{"line":957,"column":4},"end":{"line":957,"column":33}},"409":{"start":{"line":960,"column":2},"end":{"line":960,"column":41}},"410":{"start":{"line":961,"column":2},"end":{"line":963,"column":3}},"411":{"start":{"line":962,"column":4},"end":{"line":962,"column":22}},"412":{"start":{"line":965,"column":2},"end":{"line":965,"column":33}},"413":{"start":{"line":966,"column":2},"end":{"line":966,"column":77}},"414":{"start":{"line":967,"column":2},"end":{"line":967,"column":37}},"415":{"start":{"line":977,"column":0},"end":{"line":990,"column":2}},"416":{"start":{"line":978,"column":2},"end":{"line":989,"column":4}},"417":{"start":{"line":979,"column":4},"end":{"line":988,"column":5}},"418":{"start":{"line":981,"column":6},"end":{"line":987,"column":9}},"419":{"start":{"line":982,"column":8},"end":{"line":986,"column":9}},"420":{"start":{"line":983,"column":10},"end":{"line":983,"column":41}},"421":{"start":{"line":984,"column":15},"end":{"line":986,"column":9}},"422":{"start":{"line":985,"column":10},"end":{"line":985,"column":38}},"423":{"start":{"line":999,"column":0},"end":{"line":1014,"column":2}},"424":{"start":{"line":1000,"column":2},"end":{"line":1000,"column":20}},"425":{"start":{"line":1002,"column":2},"end":{"line":1004,"column":3}},"426":{"start":{"line":1003,"column":4},"end":{"line":1003,"column":20}},"427":{"start":{"line":1006,"column":2},"end":{"line":1011,"column":3}},"428":{"start":{"line":1007,"column":4},"end":{"line":1010,"column":5}},"429":{"start":{"line":1008,"column":6},"end":{"line":1008,"column":150}},"430":{"start":{"line":1009,"column":6},"end":{"line":1009,"column":38}},"431":{"start":{"line":1013,"column":2},"end":{"line":1013,"column":18}},"432":{"start":{"line":1034,"column":0},"end":{"line":1066,"column":2}},"433":{"start":{"line":1035,"column":2},"end":{"line":1035,"column":18}},"434":{"start":{"line":1036,"column":2},"end":{"line":1036,"column":107}},"435":{"start":{"line":1036,"column":73},"end":{"line":1036,"column":89}},"436":{"start":{"line":1036,"column":90},"end":{"line":1036,"column":103}},"437":{"start":{"line":1038,"column":2},"end":{"line":1040,"column":5}},"438":{"start":{"line":1039,"column":4},"end":{"line":1039,"column":25}},"439":{"start":{"line":1042,"column":2},"end":{"line":1042,"column":46}},"440":{"start":{"line":1044,"column":2},"end":{"line":1046,"column":62}},"441":{"start":{"line":1048,"column":2},"end":{"line":1048,"column":73}},"442":{"start":{"line":1050,"column":2},"end":{"line":1063,"column":4}},"443":{"start":{"line":1051,"column":4},"end":{"line":1051,"column":50}},"444":{"start":{"line":1052,"column":4},"end":{"line":1054,"column":5}},"445":{"start":{"line":1053,"column":6},"end":{"line":1053,"column":132}},"446":{"start":{"line":1057,"column":4},"end":{"line":1059,"column":6}},"447":{"start":{"line":1058,"column":6},"end":{"line":1058,"column":96}},"448":{"start":{"line":1062,"column":4},"end":{"line":1062,"column":40}},"449":{"start":{"line":1065,"column":2},"end":{"line":1065,"column":75}},"450":{"start":{"line":1088,"column":0},"end":{"line":1116,"column":2}},"451":{"start":{"line":1089,"column":2},"end":{"line":1089,"column":18}},"452":{"start":{"line":1090,"column":2},"end":{"line":1090,"column":107}},"453":{"start":{"line":1090,"column":73},"end":{"line":1090,"column":89}},"454":{"start":{"line":1090,"column":90},"end":{"line":1090,"column":103}},"455":{"start":{"line":1092,"column":2},"end":{"line":1095,"column":5}},"456":{"start":{"line":1093,"column":4},"end":{"line":1093,"column":53}},"457":{"start":{"line":1094,"column":4},"end":{"line":1094,"column":25}},"458":{"start":{"line":1097,"column":2},"end":{"line":1097,"column":46}},"459":{"start":{"line":1098,"column":2},"end":{"line":1098,"column":82}},"460":{"start":{"line":1100,"column":2},"end":{"line":1105,"column":36}},"461":{"start":{"line":1107,"column":2},"end":{"line":1113,"column":4}},"462":{"start":{"line":1108,"column":4},"end":{"line":1110,"column":6}},"463":{"start":{"line":1109,"column":6},"end":{"line":1109,"column":58}},"464":{"start":{"line":1112,"column":4},"end":{"line":1112,"column":40}},"465":{"start":{"line":1115,"column":2},"end":{"line":1115,"column":87}},"466":{"start":{"line":1134,"column":0},"end":{"line":1179,"column":2}},"467":{"start":{"line":1135,"column":2},"end":{"line":1176,"column":3}},"468":{"start":{"line":1136,"column":4},"end":{"line":1136,"column":41}},"469":{"start":{"line":1137,"column":9},"end":{"line":1176,"column":3}},"470":{"start":{"line":1138,"column":4},"end":{"line":1138,"column":29}},"471":{"start":{"line":1141,"column":4},"end":{"line":1141,"column":106}},"472":{"start":{"line":1142,"column":4},"end":{"line":1142,"column":51}},"473":{"start":{"line":1144,"column":4},"end":{"line":1161,"column":5}},"474":{"start":{"line":1145,"column":6},"end":{"line":1160,"column":7}},"475":{"start":{"line":1146,"column":8},"end":{"line":1146,"column":41}},"476":{"start":{"line":1147,"column":8},"end":{"line":1149,"column":9}},"477":{"start":{"line":1148,"column":10},"end":{"line":1148,"column":33}},"478":{"start":{"line":1151,"column":8},"end":{"line":1151,"column":57}},"479":{"start":{"line":1155,"column":8},"end":{"line":1159,"column":9}},"480":{"start":{"line":1156,"column":10},"end":{"line":1158,"column":11}},"481":{"start":{"line":1157,"column":12},"end":{"line":1157,"column":70}},"482":{"start":{"line":1164,"column":4},"end":{"line":1172,"column":5}},"483":{"start":{"line":1165,"column":6},"end":{"line":1167,"column":7}},"484":{"start":{"line":1166,"column":8},"end":{"line":1166,"column":57}},"485":{"start":{"line":1169,"column":6},"end":{"line":1171,"column":7}},"486":{"start":{"line":1170,"column":8},"end":{"line":1170,"column":72}},"487":{"start":{"line":1174,"column":4},"end":{"line":1174,"column":78}},"488":{"start":{"line":1175,"column":4},"end":{"line":1175,"column":23}},"489":{"start":{"line":1178,"column":2},"end":{"line":1178,"column":14}},"490":{"start":{"line":1196,"column":0},"end":{"line":1202,"column":2}},"491":{"start":{"line":1197,"column":2},"end":{"line":1201,"column":3}},"492":{"start":{"line":1198,"column":4},"end":{"line":1198,"column":23}},"493":{"start":{"line":1200,"column":4},"end":{"line":1200,"column":22}},"494":{"start":{"line":1209,"column":0},"end":{"line":1220,"column":2}},"495":{"start":{"line":1210,"column":2},"end":{"line":1210,"column":67}},"496":{"start":{"line":1211,"column":2},"end":{"line":1219,"column":3}},"497":{"start":{"line":1212,"column":4},"end":{"line":1212,"column":40}},"498":{"start":{"line":1213,"column":4},"end":{"line":1215,"column":5}},"499":{"start":{"line":1214,"column":6},"end":{"line":1214,"column":26}},"500":{"start":{"line":1216,"column":4},"end":{"line":1216,"column":29}},"501":{"start":{"line":1218,"column":4},"end":{"line":1218,"column":24}},"502":{"start":{"line":1230,"column":0},"end":{"line":1243,"column":2}},"503":{"start":{"line":1231,"column":2},"end":{"line":1231,"column":22}},"504":{"start":{"line":1232,"column":2},"end":{"line":1240,"column":3}},"505":{"start":{"line":1233,"column":4},"end":{"line":1233,"column":91}},"506":{"start":{"line":1234,"column":9},"end":{"line":1240,"column":3}},"507":{"start":{"line":1235,"column":4},"end":{"line":1235,"column":105}},"508":{"start":{"line":1236,"column":9},"end":{"line":1240,"column":3}},"509":{"start":{"line":1237,"column":4},"end":{"line":1237,"column":90}},"510":{"start":{"line":1238,"column":9},"end":{"line":1240,"column":3}},"511":{"start":{"line":1239,"column":4},"end":{"line":1239,"column":104}},"512":{"start":{"line":1242,"column":2},"end":{"line":1242,"column":18}},"513":{"start":{"line":1248,"column":0},"end":{"line":1266,"column":2}},"514":{"start":{"line":1249,"column":2},"end":{"line":1265,"column":3}},"515":{"start":{"line":1250,"column":4},"end":{"line":1261,"column":5}},"516":{"start":{"line":1253,"column":6},"end":{"line":1253,"column":66}},"517":{"start":{"line":1254,"column":6},"end":{"line":1254,"column":12}},"518":{"start":{"line":1257,"column":6},"end":{"line":1257,"column":68}},"519":{"start":{"line":1258,"column":6},"end":{"line":1258,"column":12}},"520":{"start":{"line":1260,"column":6},"end":{"line":1260,"column":110}},"521":{"start":{"line":1263,"column":4},"end":{"line":1263,"column":70}},"522":{"start":{"line":1264,"column":4},"end":{"line":1264,"column":64}},"523":{"start":{"line":1271,"column":0},"end":{"line":1298,"column":2}},"524":{"start":{"line":1272,"column":2},"end":{"line":1274,"column":3}},"525":{"start":{"line":1273,"column":4},"end":{"line":1273,"column":74}},"526":{"start":{"line":1276,"column":2},"end":{"line":1297,"column":3}},"527":{"start":{"line":1278,"column":4},"end":{"line":1280,"column":5}},"528":{"start":{"line":1279,"column":6},"end":{"line":1279,"column":75}},"529":{"start":{"line":1282,"column":4},"end":{"line":1282,"column":64}},"530":{"start":{"line":1283,"column":4},"end":{"line":1283,"column":70}},"531":{"start":{"line":1284,"column":4},"end":{"line":1284,"column":10}},"532":{"start":{"line":1287,"column":4},"end":{"line":1289,"column":5}},"533":{"start":{"line":1288,"column":6},"end":{"line":1288,"column":79}},"534":{"start":{"line":1291,"column":4},"end":{"line":1291,"column":66}},"535":{"start":{"line":1292,"column":4},"end":{"line":1292,"column":72}},"536":{"start":{"line":1293,"column":4},"end":{"line":1293,"column":10}},"537":{"start":{"line":1303,"column":0},"end":{"line":1312,"column":2}},"538":{"start":{"line":1304,"column":2},"end":{"line":1311,"column":3}},"539":{"start":{"line":1306,"column":4},"end":{"line":1306,"column":57}},"540":{"start":{"line":1308,"column":4},"end":{"line":1308,"column":59}},"541":{"start":{"line":1310,"column":4},"end":{"line":1310,"column":110}},"542":{"start":{"line":1317,"column":0},"end":{"line":1323,"column":2}},"543":{"start":{"line":1318,"column":2},"end":{"line":1322,"column":3}},"544":{"start":{"line":1319,"column":4},"end":{"line":1319,"column":16}},"545":{"start":{"line":1321,"column":4},"end":{"line":1321,"column":17}},"546":{"start":{"line":1328,"column":0},"end":{"line":1336,"column":2}},"547":{"start":{"line":1329,"column":2},"end":{"line":1335,"column":3}},"548":{"start":{"line":1330,"column":4},"end":{"line":1334,"column":5}},"549":{"start":{"line":1331,"column":6},"end":{"line":1331,"column":82}},"550":{"start":{"line":1332,"column":11},"end":{"line":1334,"column":5}},"551":{"start":{"line":1333,"column":6},"end":{"line":1333,"column":86}},"552":{"start":{"line":1338,"column":0},"end":{"line":1338,"column":38}}},"branchMap":{"1":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"2":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":5},"end":{"line":75,"column":19}},{"start":{"line":75,"column":23},"end":{"line":75,"column":39}}]},"3":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":9},"end":{"line":80,"column":9}},{"start":{"line":80,"column":9},"end":{"line":80,"column":9}}]},"4":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":2},"end":{"line":95,"column":2}},{"start":{"line":95,"column":2},"end":{"line":95,"column":2}}]},"5":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"6":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":6},"end":{"line":146,"column":6}},{"start":{"line":146,"column":6},"end":{"line":146,"column":6}}]},"7":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":9},"end":{"line":146,"column":39}},{"start":{"line":146,"column":43},"end":{"line":146,"column":70}}]},"8":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":6},"end":{"line":151,"column":6}},{"start":{"line":151,"column":6},"end":{"line":151,"column":6}}]},"9":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":6},"end":{"line":155,"column":6}},{"start":{"line":155,"column":6},"end":{"line":155,"column":6}}]},"10":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":156,"column":8}},{"start":{"line":156,"column":8},"end":{"line":156,"column":8}}]},"11":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":2},"end":{"line":247,"column":2}},{"start":{"line":247,"column":2},"end":{"line":247,"column":2}}]},"12":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":2},"end":{"line":258,"column":2}},{"start":{"line":258,"column":2},"end":{"line":258,"column":2}}]},"13":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":2},"end":{"line":263,"column":2}},{"start":{"line":263,"column":2},"end":{"line":263,"column":2}}]},"14":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":2},"end":{"line":268,"column":2}},{"start":{"line":268,"column":2},"end":{"line":268,"column":2}}]},"15":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":6},"end":{"line":292,"column":6}},{"start":{"line":292,"column":6},"end":{"line":292,"column":6}}]},"16":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":8},"end":{"line":299,"column":8}},{"start":{"line":299,"column":8},"end":{"line":299,"column":8}}]},"17":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":12},"end":{"line":307,"column":12}},{"start":{"line":307,"column":12},"end":{"line":307,"column":12}}]},"18":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":12},"end":{"line":330,"column":12}},{"start":{"line":330,"column":12},"end":{"line":330,"column":12}}]},"19":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":14},"end":{"line":331,"column":14}},{"start":{"line":331,"column":14},"end":{"line":331,"column":14}}]},"20":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":12},"end":{"line":338,"column":12}},{"start":{"line":338,"column":12},"end":{"line":338,"column":12}}]},"21":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":16},"end":{"line":344,"column":16}},{"start":{"line":344,"column":16},"end":{"line":344,"column":16}}]},"22":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":20},"end":{"line":349,"column":20}},{"start":{"line":349,"column":20},"end":{"line":349,"column":20}}]},"23":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":22},"end":{"line":354,"column":22}},{"start":{"line":354,"column":22},"end":{"line":354,"column":22}}]},"24":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":24},"end":{"line":358,"column":24}},{"start":{"line":358,"column":24},"end":{"line":358,"column":24}}]},"25":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":22},"end":{"line":366,"column":22}},{"start":{"line":366,"column":22},"end":{"line":366,"column":22}}]},"26":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":24},"end":{"line":368,"column":24}},{"start":{"line":368,"column":24},"end":{"line":368,"column":24}}]},"27":{"line":368,"type":"binary-expr","locations":[{"start":{"line":368,"column":28},"end":{"line":368,"column":57}},{"start":{"line":369,"column":26},"end":{"line":369,"column":55}},{"start":{"line":370,"column":26},"end":{"line":370,"column":55}},{"start":{"line":371,"column":26},"end":{"line":371,"column":55}}]},"28":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":18},"end":{"line":382,"column":18}},{"start":{"line":382,"column":18},"end":{"line":382,"column":18}}]},"29":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":20},"end":{"line":395,"column":20}},{"start":{"line":395,"column":20},"end":{"line":395,"column":20}}]},"30":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":23},"end":{"line":395,"column":82}},{"start":{"line":395,"column":86},"end":{"line":395,"column":131}}]},"31":{"line":409,"type":"if","locations":[{"start":{"line":409,"column":12},"end":{"line":409,"column":12}},{"start":{"line":409,"column":12},"end":{"line":409,"column":12}}]},"32":{"line":409,"type":"binary-expr","locations":[{"start":{"line":409,"column":16},"end":{"line":409,"column":65}},{"start":{"line":409,"column":69},"end":{"line":409,"column":104}}]},"33":{"line":418,"type":"if","locations":[{"start":{"line":418,"column":14},"end":{"line":418,"column":14}},{"start":{"line":418,"column":14},"end":{"line":418,"column":14}}]},"34":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":21},"end":{"line":420,"column":21}},{"start":{"line":420,"column":21},"end":{"line":420,"column":21}}]},"35":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":10},"end":{"line":435,"column":10}},{"start":{"line":435,"column":10},"end":{"line":435,"column":10}}]},"36":{"line":435,"type":"binary-expr","locations":[{"start":{"line":435,"column":14},"end":{"line":435,"column":18}},{"start":{"line":435,"column":22},"end":{"line":435,"column":37}}]},"37":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":10},"end":{"line":440,"column":10}},{"start":{"line":440,"column":10},"end":{"line":440,"column":10}}]},"38":{"line":440,"type":"binary-expr","locations":[{"start":{"line":440,"column":14},"end":{"line":440,"column":18}},{"start":{"line":440,"column":22},"end":{"line":440,"column":38}}]},"39":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":14},"end":{"line":442,"column":14}},{"start":{"line":442,"column":14},"end":{"line":442,"column":14}}]},"40":{"line":448,"type":"if","locations":[{"start":{"line":448,"column":14},"end":{"line":448,"column":14}},{"start":{"line":448,"column":14},"end":{"line":448,"column":14}}]},"41":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":14},"end":{"line":454,"column":14}},{"start":{"line":454,"column":14},"end":{"line":454,"column":14}}]},"42":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":17},"end":{"line":460,"column":17}},{"start":{"line":460,"column":17},"end":{"line":460,"column":17}}]},"43":{"line":460,"type":"binary-expr","locations":[{"start":{"line":460,"column":21},"end":{"line":460,"column":25}},{"start":{"line":460,"column":29},"end":{"line":460,"column":46}}]},"44":{"line":462,"type":"cond-expr","locations":[{"start":{"line":463,"column":16},"end":{"line":463,"column":61}},{"start":{"line":464,"column":16},"end":{"line":464,"column":76}}]},"45":{"line":471,"type":"if","locations":[{"start":{"line":471,"column":16},"end":{"line":471,"column":16}},{"start":{"line":471,"column":16},"end":{"line":471,"column":16}}]},"46":{"line":482,"type":"if","locations":[{"start":{"line":482,"column":14},"end":{"line":482,"column":14}},{"start":{"line":482,"column":14},"end":{"line":482,"column":14}}]},"47":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":14},"end":{"line":489,"column":14}},{"start":{"line":489,"column":14},"end":{"line":489,"column":14}}]},"48":{"line":489,"type":"binary-expr","locations":[{"start":{"line":489,"column":18},"end":{"line":489,"column":88}},{"start":{"line":489,"column":92},"end":{"line":489,"column":156}}]},"49":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":16},"end":{"line":493,"column":16}},{"start":{"line":493,"column":16},"end":{"line":493,"column":16}}]},"50":{"line":501,"type":"if","locations":[{"start":{"line":501,"column":12},"end":{"line":501,"column":12}},{"start":{"line":501,"column":12},"end":{"line":501,"column":12}}]},"51":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":14},"end":{"line":503,"column":14}},{"start":{"line":503,"column":14},"end":{"line":503,"column":14}}]},"52":{"line":530,"type":"if","locations":[{"start":{"line":530,"column":4},"end":{"line":530,"column":4}},{"start":{"line":530,"column":4},"end":{"line":530,"column":4}}]},"53":{"line":537,"type":"if","locations":[{"start":{"line":537,"column":6},"end":{"line":537,"column":6}},{"start":{"line":537,"column":6},"end":{"line":537,"column":6}}]},"54":{"line":563,"type":"if","locations":[{"start":{"line":563,"column":2},"end":{"line":563,"column":2}},{"start":{"line":563,"column":2},"end":{"line":563,"column":2}}]},"55":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":2},"end":{"line":570,"column":2}},{"start":{"line":570,"column":2},"end":{"line":570,"column":2}}]},"56":{"line":570,"type":"binary-expr","locations":[{"start":{"line":570,"column":6},"end":{"line":570,"column":27}},{"start":{"line":571,"column":4},"end":{"line":571,"column":64}},{"start":{"line":572,"column":4},"end":{"line":572,"column":65}}]},"57":{"line":576,"type":"if","locations":[{"start":{"line":576,"column":2},"end":{"line":576,"column":2}},{"start":{"line":576,"column":2},"end":{"line":576,"column":2}}]},"58":{"line":580,"type":"if","locations":[{"start":{"line":580,"column":2},"end":{"line":580,"column":2}},{"start":{"line":580,"column":2},"end":{"line":580,"column":2}}]},"59":{"line":584,"type":"if","locations":[{"start":{"line":584,"column":2},"end":{"line":584,"column":2}},{"start":{"line":584,"column":2},"end":{"line":584,"column":2}}]},"60":{"line":584,"type":"binary-expr","locations":[{"start":{"line":584,"column":5},"end":{"line":584,"column":57}},{"start":{"line":584,"column":61},"end":{"line":584,"column":92}}]},"61":{"line":588,"type":"if","locations":[{"start":{"line":588,"column":2},"end":{"line":588,"column":2}},{"start":{"line":588,"column":2},"end":{"line":588,"column":2}}]},"62":{"line":600,"type":"if","locations":[{"start":{"line":600,"column":2},"end":{"line":600,"column":2}},{"start":{"line":600,"column":2},"end":{"line":600,"column":2}}]},"63":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":2},"end":{"line":607,"column":2}},{"start":{"line":607,"column":2},"end":{"line":607,"column":2}}]},"64":{"line":607,"type":"binary-expr","locations":[{"start":{"line":607,"column":6},"end":{"line":607,"column":26}},{"start":{"line":607,"column":30},"end":{"line":607,"column":93}}]},"65":{"line":610,"type":"if","locations":[{"start":{"line":610,"column":9},"end":{"line":610,"column":9}},{"start":{"line":610,"column":9},"end":{"line":610,"column":9}}]},"66":{"line":610,"type":"binary-expr","locations":[{"start":{"line":610,"column":13},"end":{"line":610,"column":32}},{"start":{"line":610,"column":36},"end":{"line":610,"column":94}}]},"67":{"line":614,"type":"if","locations":[{"start":{"line":614,"column":2},"end":{"line":614,"column":2}},{"start":{"line":614,"column":2},"end":{"line":614,"column":2}}]},"68":{"line":614,"type":"binary-expr","locations":[{"start":{"line":614,"column":6},"end":{"line":614,"column":26}},{"start":{"line":614,"column":30},"end":{"line":614,"column":95}}]},"69":{"line":615,"type":"if","locations":[{"start":{"line":615,"column":4},"end":{"line":615,"column":4}},{"start":{"line":615,"column":4},"end":{"line":615,"column":4}}]},"70":{"line":615,"type":"binary-expr","locations":[{"start":{"line":615,"column":8},"end":{"line":615,"column":12}},{"start":{"line":615,"column":16},"end":{"line":615,"column":31}}]},"71":{"line":617,"type":"if","locations":[{"start":{"line":617,"column":11},"end":{"line":617,"column":11}},{"start":{"line":617,"column":11},"end":{"line":617,"column":11}}]},"72":{"line":620,"type":"if","locations":[{"start":{"line":620,"column":9},"end":{"line":620,"column":9}},{"start":{"line":620,"column":9},"end":{"line":620,"column":9}}]},"73":{"line":620,"type":"binary-expr","locations":[{"start":{"line":620,"column":13},"end":{"line":620,"column":32}},{"start":{"line":620,"column":36},"end":{"line":620,"column":96}}]},"74":{"line":633,"type":"if","locations":[{"start":{"line":633,"column":4},"end":{"line":633,"column":4}},{"start":{"line":633,"column":4},"end":{"line":633,"column":4}}]},"75":{"line":643,"type":"if","locations":[{"start":{"line":643,"column":6},"end":{"line":643,"column":6}},{"start":{"line":643,"column":6},"end":{"line":643,"column":6}}]},"76":{"line":648,"type":"if","locations":[{"start":{"line":648,"column":6},"end":{"line":648,"column":6}},{"start":{"line":648,"column":6},"end":{"line":648,"column":6}}]},"77":{"line":648,"type":"binary-expr","locations":[{"start":{"line":648,"column":10},"end":{"line":648,"column":17}},{"start":{"line":648,"column":21},"end":{"line":648,"column":53}}]},"78":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":4},"end":{"line":674,"column":4}},{"start":{"line":674,"column":4},"end":{"line":674,"column":4}}]},"79":{"line":680,"type":"if","locations":[{"start":{"line":680,"column":6},"end":{"line":680,"column":6}},{"start":{"line":680,"column":6},"end":{"line":680,"column":6}}]},"80":{"line":692,"type":"binary-expr","locations":[{"start":{"line":692,"column":78},"end":{"line":692,"column":125}},{"start":{"line":692,"column":129},"end":{"line":692,"column":145}}]},"81":{"line":695,"type":"if","locations":[{"start":{"line":695,"column":2},"end":{"line":695,"column":2}},{"start":{"line":695,"column":2},"end":{"line":695,"column":2}}]},"82":{"line":695,"type":"binary-expr","locations":[{"start":{"line":695,"column":6},"end":{"line":695,"column":19}},{"start":{"line":695,"column":23},"end":{"line":695,"column":46}}]},"83":{"line":701,"type":"if","locations":[{"start":{"line":701,"column":4},"end":{"line":701,"column":4}},{"start":{"line":701,"column":4},"end":{"line":701,"column":4}}]},"84":{"line":701,"type":"binary-expr","locations":[{"start":{"line":701,"column":8},"end":{"line":701,"column":21}},{"start":{"line":701,"column":25},"end":{"line":701,"column":35}}]},"85":{"line":706,"type":"if","locations":[{"start":{"line":706,"column":6},"end":{"line":706,"column":6}},{"start":{"line":706,"column":6},"end":{"line":706,"column":6}}]},"86":{"line":706,"type":"binary-expr","locations":[{"start":{"line":706,"column":10},"end":{"line":706,"column":35}},{"start":{"line":706,"column":39},"end":{"line":706,"column":65}}]},"87":{"line":714,"type":"if","locations":[{"start":{"line":714,"column":6},"end":{"line":714,"column":6}},{"start":{"line":714,"column":6},"end":{"line":714,"column":6}}]},"88":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":6},"end":{"line":719,"column":6}},{"start":{"line":719,"column":6},"end":{"line":719,"column":6}}]},"89":{"line":721,"type":"if","locations":[{"start":{"line":721,"column":10},"end":{"line":721,"column":10}},{"start":{"line":721,"column":10},"end":{"line":721,"column":10}}]},"90":{"line":768,"type":"if","locations":[{"start":{"line":768,"column":4},"end":{"line":768,"column":4}},{"start":{"line":768,"column":4},"end":{"line":768,"column":4}}]},"91":{"line":831,"type":"if","locations":[{"start":{"line":831,"column":6},"end":{"line":831,"column":6}},{"start":{"line":831,"column":6},"end":{"line":831,"column":6}}]},"92":{"line":841,"type":"if","locations":[{"start":{"line":841,"column":2},"end":{"line":841,"column":2}},{"start":{"line":841,"column":2},"end":{"line":841,"column":2}}]},"93":{"line":841,"type":"binary-expr","locations":[{"start":{"line":841,"column":6},"end":{"line":841,"column":19}},{"start":{"line":841,"column":23},"end":{"line":841,"column":70}}]},"94":{"line":843,"type":"if","locations":[{"start":{"line":843,"column":4},"end":{"line":843,"column":4}},{"start":{"line":843,"column":4},"end":{"line":843,"column":4}}]},"95":{"line":843,"type":"binary-expr","locations":[{"start":{"line":843,"column":8},"end":{"line":843,"column":24}},{"start":{"line":843,"column":28},"end":{"line":843,"column":60}}]},"96":{"line":848,"type":"if","locations":[{"start":{"line":848,"column":6},"end":{"line":848,"column":6}},{"start":{"line":848,"column":6},"end":{"line":848,"column":6}}]},"97":{"line":849,"type":"if","locations":[{"start":{"line":849,"column":8},"end":{"line":849,"column":8}},{"start":{"line":849,"column":8},"end":{"line":849,"column":8}}]},"98":{"line":849,"type":"binary-expr","locations":[{"start":{"line":849,"column":12},"end":{"line":849,"column":19}},{"start":{"line":849,"column":23},"end":{"line":849,"column":44}},{"start":{"line":849,"column":48},"end":{"line":849,"column":114}}]},"99":{"line":858,"type":"if","locations":[{"start":{"line":858,"column":13},"end":{"line":858,"column":13}},{"start":{"line":858,"column":13},"end":{"line":858,"column":13}}]},"100":{"line":858,"type":"binary-expr","locations":[{"start":{"line":858,"column":17},"end":{"line":858,"column":62}},{"start":{"line":858,"column":66},"end":{"line":858,"column":116}}]},"101":{"line":860,"type":"if","locations":[{"start":{"line":860,"column":13},"end":{"line":860,"column":13}},{"start":{"line":860,"column":13},"end":{"line":860,"column":13}}]},"102":{"line":886,"type":"if","locations":[{"start":{"line":886,"column":2},"end":{"line":886,"column":2}},{"start":{"line":886,"column":2},"end":{"line":886,"column":2}}]},"103":{"line":886,"type":"binary-expr","locations":[{"start":{"line":886,"column":6},"end":{"line":886,"column":38}},{"start":{"line":886,"column":42},"end":{"line":886,"column":59}},{"start":{"line":886,"column":63},"end":{"line":886,"column":72}}]},"104":{"line":889,"type":"if","locations":[{"start":{"line":889,"column":9},"end":{"line":889,"column":9}},{"start":{"line":889,"column":9},"end":{"line":889,"column":9}}]},"105":{"line":889,"type":"binary-expr","locations":[{"start":{"line":889,"column":14},"end":{"line":889,"column":46}},{"start":{"line":889,"column":50},"end":{"line":889,"column":66}},{"start":{"line":889,"column":71},"end":{"line":889,"column":79}},{"start":{"line":889,"column":83},"end":{"line":889,"column":87}}]},"106":{"line":909,"type":"binary-expr","locations":[{"start":{"line":909,"column":29},"end":{"line":909,"column":53}},{"start":{"line":909,"column":57},"end":{"line":909,"column":73}}]},"107":{"line":912,"type":"if","locations":[{"start":{"line":912,"column":2},"end":{"line":912,"column":2}},{"start":{"line":912,"column":2},"end":{"line":912,"column":2}}]},"108":{"line":918,"type":"if","locations":[{"start":{"line":918,"column":2},"end":{"line":918,"column":2}},{"start":{"line":918,"column":2},"end":{"line":918,"column":2}}]},"109":{"line":918,"type":"binary-expr","locations":[{"start":{"line":918,"column":5},"end":{"line":918,"column":37}},{"start":{"line":918,"column":41},"end":{"line":918,"column":104}}]},"110":{"line":922,"type":"if","locations":[{"start":{"line":922,"column":2},"end":{"line":922,"column":2}},{"start":{"line":922,"column":2},"end":{"line":922,"column":2}}]},"111":{"line":922,"type":"binary-expr","locations":[{"start":{"line":922,"column":5},"end":{"line":922,"column":9}},{"start":{"line":922,"column":13},"end":{"line":922,"column":56}}]},"112":{"line":940,"type":"if","locations":[{"start":{"line":940,"column":2},"end":{"line":940,"column":2}},{"start":{"line":940,"column":2},"end":{"line":940,"column":2}}]},"113":{"line":940,"type":"binary-expr","locations":[{"start":{"line":940,"column":6},"end":{"line":940,"column":19}},{"start":{"line":940,"column":23},"end":{"line":940,"column":41}}]},"114":{"line":942,"type":"if","locations":[{"start":{"line":942,"column":9},"end":{"line":942,"column":9}},{"start":{"line":942,"column":9},"end":{"line":942,"column":9}}]},"115":{"line":954,"type":"if","locations":[{"start":{"line":954,"column":2},"end":{"line":954,"column":2}},{"start":{"line":954,"column":2},"end":{"line":954,"column":2}}]},"116":{"line":954,"type":"binary-expr","locations":[{"start":{"line":954,"column":6},"end":{"line":954,"column":38}},{"start":{"line":954,"column":42},"end":{"line":954,"column":59}}]},"117":{"line":961,"type":"if","locations":[{"start":{"line":961,"column":2},"end":{"line":961,"column":2}},{"start":{"line":961,"column":2},"end":{"line":961,"column":2}}]},"118":{"line":961,"type":"binary-expr","locations":[{"start":{"line":961,"column":5},"end":{"line":961,"column":9}},{"start":{"line":961,"column":13},"end":{"line":961,"column":56}}]},"119":{"line":979,"type":"if","locations":[{"start":{"line":979,"column":4},"end":{"line":979,"column":4}},{"start":{"line":979,"column":4},"end":{"line":979,"column":4}}]},"120":{"line":982,"type":"if","locations":[{"start":{"line":982,"column":8},"end":{"line":982,"column":8}},{"start":{"line":982,"column":8},"end":{"line":982,"column":8}}]},"121":{"line":984,"type":"if","locations":[{"start":{"line":984,"column":15},"end":{"line":984,"column":15}},{"start":{"line":984,"column":15},"end":{"line":984,"column":15}}]},"122":{"line":1002,"type":"if","locations":[{"start":{"line":1002,"column":2},"end":{"line":1002,"column":2}},{"start":{"line":1002,"column":2},"end":{"line":1002,"column":2}}]},"123":{"line":1007,"type":"if","locations":[{"start":{"line":1007,"column":4},"end":{"line":1007,"column":4}},{"start":{"line":1007,"column":4},"end":{"line":1007,"column":4}}]},"124":{"line":1052,"type":"if","locations":[{"start":{"line":1052,"column":4},"end":{"line":1052,"column":4}},{"start":{"line":1052,"column":4},"end":{"line":1052,"column":4}}]},"125":{"line":1135,"type":"if","locations":[{"start":{"line":1135,"column":2},"end":{"line":1135,"column":2}},{"start":{"line":1135,"column":2},"end":{"line":1135,"column":2}}]},"126":{"line":1137,"type":"if","locations":[{"start":{"line":1137,"column":9},"end":{"line":1137,"column":9}},{"start":{"line":1137,"column":9},"end":{"line":1137,"column":9}}]},"127":{"line":1141,"type":"binary-expr","locations":[{"start":{"line":1141,"column":26},"end":{"line":1141,"column":37}},{"start":{"line":1141,"column":41},"end":{"line":1141,"column":52}},{"start":{"line":1141,"column":56},"end":{"line":1141,"column":76}},{"start":{"line":1141,"column":80},"end":{"line":1141,"column":96}},{"start":{"line":1141,"column":100},"end":{"line":1141,"column":105}}]},"128":{"line":1145,"type":"if","locations":[{"start":{"line":1145,"column":6},"end":{"line":1145,"column":6}},{"start":{"line":1145,"column":6},"end":{"line":1145,"column":6}}]},"129":{"line":1147,"type":"if","locations":[{"start":{"line":1147,"column":8},"end":{"line":1147,"column":8}},{"start":{"line":1147,"column":8},"end":{"line":1147,"column":8}}]},"130":{"line":1155,"type":"if","locations":[{"start":{"line":1155,"column":8},"end":{"line":1155,"column":8}},{"start":{"line":1155,"column":8},"end":{"line":1155,"column":8}}]},"131":{"line":1155,"type":"binary-expr","locations":[{"start":{"line":1155,"column":12},"end":{"line":1155,"column":29}},{"start":{"line":1155,"column":33},"end":{"line":1155,"column":70}}]},"132":{"line":1156,"type":"if","locations":[{"start":{"line":1156,"column":10},"end":{"line":1156,"column":10}},{"start":{"line":1156,"column":10},"end":{"line":1156,"column":10}}]},"133":{"line":1164,"type":"if","locations":[{"start":{"line":1164,"column":4},"end":{"line":1164,"column":4}},{"start":{"line":1164,"column":4},"end":{"line":1164,"column":4}}]},"134":{"line":1165,"type":"if","locations":[{"start":{"line":1165,"column":6},"end":{"line":1165,"column":6}},{"start":{"line":1165,"column":6},"end":{"line":1165,"column":6}}]},"135":{"line":1169,"type":"if","locations":[{"start":{"line":1169,"column":6},"end":{"line":1169,"column":6}},{"start":{"line":1169,"column":6},"end":{"line":1169,"column":6}}]},"136":{"line":1169,"type":"binary-expr","locations":[{"start":{"line":1169,"column":10},"end":{"line":1169,"column":26}},{"start":{"line":1169,"column":30},"end":{"line":1169,"column":65}}]},"137":{"line":1197,"type":"if","locations":[{"start":{"line":1197,"column":2},"end":{"line":1197,"column":2}},{"start":{"line":1197,"column":2},"end":{"line":1197,"column":2}}]},"138":{"line":1211,"type":"if","locations":[{"start":{"line":1211,"column":2},"end":{"line":1211,"column":2}},{"start":{"line":1211,"column":2},"end":{"line":1211,"column":2}}]},"139":{"line":1213,"type":"if","locations":[{"start":{"line":1213,"column":4},"end":{"line":1213,"column":4}},{"start":{"line":1213,"column":4},"end":{"line":1213,"column":4}}]},"140":{"line":1232,"type":"if","locations":[{"start":{"line":1232,"column":2},"end":{"line":1232,"column":2}},{"start":{"line":1232,"column":2},"end":{"line":1232,"column":2}}]},"141":{"line":1234,"type":"if","locations":[{"start":{"line":1234,"column":9},"end":{"line":1234,"column":9}},{"start":{"line":1234,"column":9},"end":{"line":1234,"column":9}}]},"142":{"line":1236,"type":"if","locations":[{"start":{"line":1236,"column":9},"end":{"line":1236,"column":9}},{"start":{"line":1236,"column":9},"end":{"line":1236,"column":9}}]},"143":{"line":1238,"type":"if","locations":[{"start":{"line":1238,"column":9},"end":{"line":1238,"column":9}},{"start":{"line":1238,"column":9},"end":{"line":1238,"column":9}}]},"144":{"line":1249,"type":"if","locations":[{"start":{"line":1249,"column":2},"end":{"line":1249,"column":2}},{"start":{"line":1249,"column":2},"end":{"line":1249,"column":2}}]},"145":{"line":1250,"type":"switch","locations":[{"start":{"line":1251,"column":4},"end":{"line":1251,"column":52}},{"start":{"line":1252,"column":4},"end":{"line":1254,"column":12}},{"start":{"line":1255,"column":4},"end":{"line":1255,"column":54}},{"start":{"line":1256,"column":4},"end":{"line":1258,"column":12}},{"start":{"line":1259,"column":4},"end":{"line":1260,"column":110}}]},"146":{"line":1272,"type":"if","locations":[{"start":{"line":1272,"column":2},"end":{"line":1272,"column":2}},{"start":{"line":1272,"column":2},"end":{"line":1272,"column":2}}]},"147":{"line":1276,"type":"switch","locations":[{"start":{"line":1277,"column":2},"end":{"line":1284,"column":10}},{"start":{"line":1286,"column":2},"end":{"line":1293,"column":10}},{"start":{"line":1295,"column":2},"end":{"line":1295,"column":10}}]},"148":{"line":1278,"type":"if","locations":[{"start":{"line":1278,"column":4},"end":{"line":1278,"column":4}},{"start":{"line":1278,"column":4},"end":{"line":1278,"column":4}}]},"149":{"line":1287,"type":"if","locations":[{"start":{"line":1287,"column":4},"end":{"line":1287,"column":4}},{"start":{"line":1287,"column":4},"end":{"line":1287,"column":4}}]},"150":{"line":1304,"type":"switch","locations":[{"start":{"line":1305,"column":2},"end":{"line":1306,"column":57}},{"start":{"line":1307,"column":2},"end":{"line":1308,"column":59}},{"start":{"line":1309,"column":2},"end":{"line":1310,"column":110}}]},"151":{"line":1310,"type":"binary-expr","locations":[{"start":{"line":1310,"column":12},"end":{"line":1310,"column":57}},{"start":{"line":1310,"column":61},"end":{"line":1310,"column":108}}]},"152":{"line":1318,"type":"if","locations":[{"start":{"line":1318,"column":2},"end":{"line":1318,"column":2}},{"start":{"line":1318,"column":2},"end":{"line":1318,"column":2}}]},"153":{"line":1318,"type":"binary-expr","locations":[{"start":{"line":1318,"column":5},"end":{"line":1318,"column":40}},{"start":{"line":1318,"column":44},"end":{"line":1318,"column":68}}]},"154":{"line":1329,"type":"if","locations":[{"start":{"line":1329,"column":2},"end":{"line":1329,"column":2}},{"start":{"line":1329,"column":2},"end":{"line":1329,"column":2}}]},"155":{"line":1330,"type":"if","locations":[{"start":{"line":1330,"column":4},"end":{"line":1330,"column":4}},{"start":{"line":1330,"column":4},"end":{"line":1330,"column":4}}]},"156":{"line":1332,"type":"if","locations":[{"start":{"line":1332,"column":11},"end":{"line":1332,"column":11}},{"start":{"line":1332,"column":11},"end":{"line":1332,"column":11}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var request = require('request');","var url = require('url');","var qs = require('querystring');","var util = require('util');","var xml2js = require('xml2js');","var events = require('events');","var _ = require('underscore');","var guid = require('node-uuid');","var os = require('os');","var extend = require('extend');","var Parser = require('json-edm-parser');","","var Md5Wrapper = require('../md5-wrapper');","var azureutil = require('../util/util');","var validate = require('../util/validate');","var SR = require('../util/sr');","var WebResource = require('../http/webresource');","","var ServiceSettings = require('./servicesettings');","var StorageServiceSettings = require('./storageservicesettings');","var Constants = require('../util/constants');","var StorageUtilities = require('../util/storageutilities');","var ServicePropertiesResult = require('../models/servicepropertiesresult');","var TableUtilities = require('../../services/table/tableutilities');","","var SharedKey = require('../signing/sharedkey');","var SharedAccessSignature = require('../signing/sharedaccesssignature');","","var HeaderConstants = Constants.HeaderConstants;","var QueryStringConstants = Constants.QueryStringConstants;","var HttpResponseCodes = Constants.HttpConstants.HttpResponseCodes;","var StorageServiceClientConstants = Constants.StorageServiceClientConstants;","var defaultRequestLocationMode = Constants.RequestLocationMode.PRIMARY_ONLY;","var RequestLocationMode = Constants.RequestLocationMode;","","var Logger = require('../diagnostics/logger');","var errors = require('../errors/errors');","var ArgumentError = errors.ArgumentError;","var ArgumentNullError = errors.ArgumentNullError;","var TimeoutError = errors.TimeoutError;","var StorageError = errors.StorageError;","","/**","* Creates a new StorageServiceClient object.","*","* @class","* The StorageServiceClient class is the base class of all the service classes.","* @constructor","* @param {string} storageAccount           The storage account.","* @param {string} storageAccessKey         The storage access key.","* @param {object} host                     The host for the service.","* @param {bool}   usePathStyleUri          Boolean value indicating wether to use path style uris.","* @param {string} sasToken                 The Shared Access Signature token.","*/","function StorageServiceClient(storageAccount, storageAccessKey, host, usePathStyleUri, sasToken) {","  StorageServiceClient['super_'].call(this);","","  if(storageAccount && storageAccessKey) {","    // account and key","    this.storageAccount = storageAccount;","    this.storageAccessKey = storageAccessKey;","    this.storageCredentials = new SharedKey(this.storageAccount, this.storageAccessKey, usePathStyleUri);","  } else if (sasToken) {","    // sas","    this.sasToken = sasToken;","    this.storageCredentials = new SharedAccessSignature(sasToken);","  } else {","    // anonymous","    this.anonymous = true;","    this.storageCredentials = {","      signRequest: function(webResource, callback){","        // no op, anonymous access","        callback(null);","      }","    };","  }","","  if(host){","    this.setHost(host);","  }","","  this.apiVersion = HeaderConstants.TARGET_STORAGE_VERSION;","  this.usePathStyleUri = usePathStyleUri;","","  this._initDefaultFilter();","","  /**","   * The logger of the service. To change the log level of the services, set the `[logger.level]{@link Logger#level}`.","   * @name StorageServiceClient#logger","   * @type Logger","   * */","  this.logger = new Logger(Logger.LogLevels.INFO);","","  this._setDefaultProxy();","","  this.xml2jsSettings = StorageServiceClient._getDefaultXml2jsSettings();","  this.defaultLocationMode = StorageUtilities.LocationMode.PRIMARY_ONLY;","}","","util.inherits(StorageServiceClient, events.EventEmitter);","","/**","* Gets the default xml2js settings.","* @ignore","* @return {object} The default settings","*/","StorageServiceClient._getDefaultXml2jsSettings = function() {","  var xml2jsSettings = _.clone(xml2js.defaults['0.2']);","","  // these determine what happens if the xml contains attributes","  xml2jsSettings.attrkey = Constants.TableConstants.XML_METADATA_MARKER;","  xml2jsSettings.charkey = Constants.TableConstants.XML_VALUE_MARKER;","","  // from xml2js guide: always put child nodes in an array if true; otherwise an array is created only if there is more than one.","  xml2jsSettings.explicitArray = false;","","  return xml2jsSettings;","};","","/**","* Sets a host for the service.","* @ignore","* @param {string}     host                              The host for the service.","*/","StorageServiceClient.prototype.setHost = function (host) {","  var parseHost = function(hostUri){","    var parsedHost;","    if(!azureutil.objectIsNull(hostUri)) {","      if(hostUri.indexOf('http') === -1 && hostUri.indexOf('//') !== 0){","        hostUri = '//' + hostUri;","      }","      parsedHost = url.parse(hostUri, false, true);","","      if(!parsedHost.protocol){","        parsedHost.protocol = ServiceSettings.DEFAULT_PROTOCOL;","      }","","      if (!parsedHost.port) {","        if (parsedHost.protocol === Constants.HTTPS) {","          parsedHost.port = Constants.DEFAULT_HTTPS_PORT;","        } else {","          parsedHost.port = Constants.DEFAULT_HTTP_PORT;","        }","      }","","      parsedHost = url.format({","        protocol: parsedHost.protocol,","        port: parsedHost.port,","        hostname: parsedHost.hostname,","        pathname: parsedHost.pathname","      });","    }","","    return parsedHost;","  };","","  validate.isValidHost(host);","","  this.host = {","    primaryHost: parseHost(host.primaryHost),","    secondaryHost: parseHost(host.secondaryHost)","  };","};","","/**","* Performs a REST service request through HTTP expecting an input stream.","* @ignore","*","* @param {WebResource} webResource                        The webresource on which to perform the request.","* @param {string}      outputData                         The outgoing request data as a raw string.","* @param {object}      [options]                          The request options.","* @param {int}         [options.timeoutIntervalInMs]      The timeout interval, in milliseconds, to use for the request.","* @param {int}         [options.clientRequestTimeoutInMs] The timeout of client requests, in milliseconds, to use for the request.","* @param {function}    callback                           The response callback function.","*/","StorageServiceClient.prototype.performRequest = function (webResource, outputData, options, callback) {","  this._performRequest(webResource, { outputData: outputData }, options, callback);","};","","/**","* Performs a REST service request through HTTP expecting an input stream.","* @ignore","*","* @param {WebResource} webResource                        The webresource on which to perform the request.","* @param {Stream}      outputStream                       The outgoing request data as a stream.","* @param {object}      [options]                          The request options.","* @param {int}         [options.timeoutIntervalInMs]      The timeout interval, in milliseconds, to use for the request.","* @param {int}         [options.clientRequestTimeoutInMs] The timeout of client requests, in milliseconds, to use for the request.","* @param {function}    callback                           The response callback function.","*/","StorageServiceClient.prototype.performRequestOutputStream = function (webResource, outputStream, options, callback) {","  this._performRequest(webResource, { outputStream: outputStream }, options, callback);","};","","/**","* Performs a REST service request through HTTP expecting an input stream.","* @ignore","*","* @param {WebResource} webResource                        The webresource on which to perform the request.","* @param {string}      outputData                         The outgoing request data as a raw string.","* @param {Stream}      inputStream                        The ingoing response data as a stream.","* @param {object}      [options]                          The request options.","* @param {int}         [options.timeoutIntervalInMs]      The timeout interval, in milliseconds, to use for the request.","* @param {int}         [options.clientRequestTimeoutInMs] The timeout of client requests, in milliseconds, to use for the request.","* @param {function}    callback                           The response callback function.","*/","StorageServiceClient.prototype.performRequestInputStream = function (webResource, outputData, inputStream, options, callback) {","  this._performRequest(webResource, { outputData: outputData, inputStream: inputStream }, options, callback);","};","","/**","* Performs a REST service request through HTTP.","* @ignore","*","* @param {WebResource} webResource                        The webresource on which to perform the request.","* @param {object}      body                               The request body.","* @param {string}      [body.outputData]                  The outgoing request data as a raw string.","* @param {Stream}      [body.outputStream]                The outgoing request data as a stream.","* @param {Stream}      [body.inputStream]                 The ingoing response data as a stream.","* @param {object}      [options]                          The request options.","* @param {string}      [options.clientRequestId]          A string that represents the client request ID with a 1KB character limit.","* @param {int}         [options.timeoutIntervalInMs]      The timeout interval, in milliseconds, to use for the request.","* @param {int}         [options.clientRequestTimeoutInMs] The timeout of client requests, in milliseconds, to use for the request.","* @param {function}    callback                           The response callback function.","*/","StorageServiceClient.prototype._performRequest = function (webResource, body, options, callback) {","  var self = this;","","  // Sets a requestId on the webResource","  if(!options.clientRequestId) {","    options.clientRequestId = guid.v1();","  }","  ","  webResource.withHeader(HeaderConstants.CLIENT_REQUEST_ID, options.clientRequestId);","","  // Sets the user-agent string","  var userAgentComment = util.format('(NODE-VERSION %s; %s %s)', process.version, os.type(), os.release());","  webResource.withHeader(HeaderConstants.USER_AGENT, Constants.USER_AGENT_PRODUCT_NAME + '/' + Constants.USER_AGENT_PRODUCT_VERSION + ' ' + userAgentComment);","","  // Initialize the location that the request is going to be sent to.","  if(azureutil.objectIsNull(options.locationMode)) {","    options.locationMode = this.defaultLocationMode;","  }","","  // Initialize the location that the request can be sent to.","  if(azureutil.objectIsNull(options.requestLocationMode)) {","    options.requestLocationMode = defaultRequestLocationMode;","  }","","  // Initialize whether nagling is used or not.","  if(azureutil.objectIsNull(options.useNagleAlgorithm)) {","    options.useNagleAlgorithm = this.useNagleAlgorithm;","  }","","  this._initializeLocation(options);","  ","  // Initialize the operationExpiryTime","  this._setOperationExpiryTime(options);","","  // If the output stream already got sent to server and got error back, ","  // we should NOT retry within the SDK as the stream data is not valid anymore if we retry directly.","  // And it's very hard for SDK to re-wind the stream.","  //","  // If users want to retry on this kind of error, they can implement their own logic to parse the response and ","  // determine if they need to re-prepare a stream and call our SDK API to retry.","  //","  // Currently for blobs/files with size greater than 32MB (DEFAULT_SINGLE_BLOB_PUT_THRESHOLD_IN_BYTES), ","  // we'll send the steam by chunk buffers which doesn't have this issue.","  var outputStreamSent = false;","","  var operation = function (options, next) {","    self._validateLocation(options);","    var currentLocation = options.currentLocation;","    self._buildRequestOptions(webResource, body, options, function (err, finalRequestOptions) {","      if (err) {","        callback({ error: err, response: null }, function (finalRequestOptions, finalCallback) {","          finalCallback(finalRequestOptions);","        });","      } else {","        self.logger.log(Logger.LogLevels.DEBUG, 'FINAL REQUEST OPTIONS:\\n' + util.inspect(finalRequestOptions));","","        if(self._maximumExecutionTimeExceeded(Date.now(), options.operationExpiryTime)) {","          callback({ error: new TimeoutError(SR.MAXIMUM_EXECUTION_TIMEOUT_EXCEPTION), response: null }, function (finalRequestOptions, finalCallback) {","            finalCallback(finalRequestOptions);","          });","        } else {","          var processResponseCallback = function (error, response) {","            var responseObject;","","            if (error) {","              responseObject = { error: error, response: null };","            } else {","              responseObject = self._processResponse(webResource, response, options);","              responseObject.contentMD5 = response.contentMD5;","              responseObject.length = response.length;","            }","","            responseObject.operationEndTime = new Date();","            // Required for listing operations to make sure successive operations go to the same location.","            responseObject.targetLocation = currentLocation;","            responseObject.outputStreamSent = outputStreamSent;","","            callback(responseObject, next);","          };","","          var endResponse;","          var buildRequest = function (headersOnly, inputStream) {","            // Build request (if body was set before, request will process immediately, if not it'll wait for the piping to happen","            var requestStream;","","            var requestWithDefaults;","            ","            if(self.proxy) {","              if(requestWithDefaults === undefined) {","                requestWithDefaults = request.defaults({'proxy':self.proxy});","              }","            } else {","              requestWithDefaults = request;","            }","","            if (headersOnly) {","              requestStream = requestWithDefaults(finalRequestOptions);","","              requestStream.on('error', processResponseCallback);","              requestStream.on('response', function (response) {","                var isValid = WebResource.validResponse(response.statusCode);","                if (!isValid) {","                    // When getting invalid response, try to get the error message for future steps to extract the detailed error information","                    var contentLength = parseInt(response.headers['content-length']);","                    var errorMessageBuffer;","                    var index = 0;","                    if (contentLength !== undefined) {","                      errorMessageBuffer = new Buffer(contentLength);","                    }","                    ","                    requestStream.on('data', function (data) {","                      if (contentLength !== undefined) {","                        data.copy(errorMessageBuffer, index);","                        index += data.length;","                      } else {","                        if (!errorMessageBuffer) {","                          errorMessageBuffer = data;","                        } else {","                          errorMessageBuffer = Buffer.concat([errorMessageBuffer, data]);","                        }","                      }","                    });","                    requestStream.on('end', function () {","                      if (errorMessageBuffer) {","                        // Strip the UTF8 BOM following the same ways as 'request' module","                        if (errorMessageBuffer.length > 3 &&","                          errorMessageBuffer[0] === 239 &&","                          errorMessageBuffer[1] === 187 &&","                          errorMessageBuffer[2] === 191) {","                          response.body = errorMessageBuffer.toString('utf8', 3);","                        } else {","                          response.body = errorMessageBuffer.toString('utf8');","                        }","                      }","                      processResponseCallback(null, response);","                    });","                } else {","                  // Only pipe to the destination stream when we get a valid response from service","                  // Error message should NOT be piped to the destination stream","                  if (inputStream) {","                    requestStream.pipe(inputStream);","                  }","","                  var responseLength = 0;","                  var internalHash = new Md5Wrapper().createMd5Hash();","                  requestStream.on('data', function(data) {","                    responseLength += data.length;","                    internalHash.update(data);","                  });","                                  ","                  response.on('end', function () {","                    // Calculate and set MD5 here","                    if(azureutil.objectIsNull(options.disableContentMD5Validation) || options.disableContentMD5Validation === false) {","                      response.contentMD5 = internalHash.digest('base64');","                    }","                      ","                    response.length = responseLength;","                    endResponse = response;","                  });","                }","              });","            } else {","              requestStream = requestWithDefaults(finalRequestOptions, processResponseCallback);","            }","","            //If useNagleAlgorithm is not set or the value is set and is false, setNoDelay is set to true.","            if (azureutil.objectIsNull(options.useNagleAlgorithm) || options.useNagleAlgorithm === false) {","              requestStream.on('request', function(httpRequest) {","                httpRequest.setNoDelay(true);","              });","            }","","            // Workaround to avoid request from potentially setting unwanted (rejected) headers by the service","            var oldEnd = requestStream.end;","            requestStream.end = function () {","              if (finalRequestOptions.headers['content-length']) {","                requestStream.headers['content-length'] = finalRequestOptions.headers['content-length'];","              } else if (requestStream.headers['content-length']) {","                delete requestStream.headers['content-length'];","              }","","              oldEnd.call(requestStream);","            };","","            // Bubble events up -- This is when the request is going to be made.","            requestStream.on('response', function (response) {","              self.emit('receivedResponseEvent', response);","            });","","            return requestStream;","          };","","          if (body && body.outputData) {","            finalRequestOptions.body = body.outputData;","          }","","          // Pipe any input / output streams","          if (body && body.inputStream) {","            body.inputStream.on('close', function () {","              if (endResponse) {","                processResponseCallback(null, endResponse);","                endResponse = null;","              }","            });","            body.inputStream.on('end', function () {","              if (endResponse) {","                processResponseCallback(null, endResponse);","                endResponse = null;","              }","            });","            body.inputStream.on('finish', function () {","              if (endResponse) {","                processResponseCallback(null, endResponse);","                endResponse = null;","              }","            });","            buildRequest(true, body.inputStream);","          } else if (body && body.outputStream) {","            var sendUnchunked = function () {","              var size = finalRequestOptions.headers['content-length'] ?","                finalRequestOptions.headers['content-length'] :","                Constants.BlobConstants.MAX_SINGLE_UPLOAD_BLOB_SIZE_IN_BYTES;","","              var concatBuf = new Buffer(size);","              var index = 0;","","              body.outputStream.on('data', function (d) {","                outputStreamSent = true;","                if(self._maximumExecutionTimeExceeded(Date.now(), options.operationExpiryTime)) {","                  processResponseCallback(new TimeoutError(SR.MAXIMUM_EXECUTION_TIMEOUT_EXCEPTION));","                } else {","                  d.copy(concatBuf, index);","                  index += d.length;","                }","              }).on('end', function () {","                var requestStream = buildRequest();","                requestStream.write(concatBuf);","                requestStream.end();","              });","              if (azureutil.isStreamPaused(body.outputStream)) {","                body.outputStream.resume();","              }","            };","","            var sendStream = function () {","              // NOTE: workaround for an unexpected EPIPE exception when piping streams larger than 29 MB","              if (!azureutil.objectIsNull(finalRequestOptions.headers['content-length']) && finalRequestOptions.headers['content-length'] < 29 * 1024 * 1024) {","                body.outputStream.pipe(buildRequest());","                outputStreamSent = true;","","                if (azureutil.isStreamPaused(body.outputStream)) {","                  body.outputStream.resume();","                }","              } else {","                sendUnchunked();","              }","            };","","            if (!body.outputStream.readable) {","              // if the content length is zero, build the request and don't send a body","              if (finalRequestOptions.headers['content-length'] === 0) {","                buildRequest();","              } else {","                // otherwise, wait until we know the readable stream is actually valid before piping","                body.outputStream.on('open', function () {","                  sendStream();","                });","              }","            } else {","              sendStream();","            }","","            // This catches any errors that happen while creating the readable stream (usually invalid names)","            body.outputStream.on('error', function (error) {","              processResponseCallback(error);","            });","          } else {","            buildRequest();","          }","        }","      }","    });","  };","","  // The filter will do what it needs to the requestOptions and will provide a","  // function to be handled after the reply","  self.filter(options, function (postFiltersRequestOptions, nextPostCallback) {","    if(self._maximumExecutionTimeExceeded(Date.now() + postFiltersRequestOptions.retryInterval, postFiltersRequestOptions.operationExpiryTime)) {","      callback({ error: new TimeoutError(SR.MAXIMUM_EXECUTION_TIMEOUT_EXCEPTION), response: null}, function (postFiltersRequestOptions, finalCallback) {","        finalCallback(postFiltersRequestOptions);","      });","    } else {","      // If there is a filter, flow is:","      // filter -> operation -> process response","      if(postFiltersRequestOptions.retryContext) {","        var func = function() {","          operation(postFiltersRequestOptions, nextPostCallback);","        };","","        // Sleep for retryInterval before making the request","        setTimeout(func, postFiltersRequestOptions.retryInterval);","      } else {","        // No retry policy filter specified","        operation(postFiltersRequestOptions, nextPostCallback);","      }","    }","  });","};","","","/**","* Builds the request options to be passed to the http.request method.","* @ignore","* @param {WebResource} webResource The webresource where to build the options from.","* @param {object}      options     The request options.","* @param {function(error, requestOptions)}  callback  The callback function.","*/","StorageServiceClient.prototype._buildRequestOptions = function (webResource, body, options, callback) {","  webResource.withHeader(HeaderConstants.STORAGE_VERSION, this.apiVersion);","  webResource.withHeader(HeaderConstants.MS_DATE, new Date().toUTCString());","  if (!webResource.headers[HeaderConstants.ACCEPT]) {","    webResource.withHeader(HeaderConstants.ACCEPT, 'application/atom+xml,application/xml');","  }","  webResource.withHeader(HeaderConstants.ACCEPT_CHARSET, 'UTF-8');","","  // Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE' after Azure Storage 'Authorization header' calculation, ","  // which may result in a 403 authorization error. So add timestamp to GET/HEAD request URLs thus avoid the browser cache. ","  if (azureutil.isBrowser() && (","    webResource.method === Constants.HttpConstants.HttpVerbs.GET || ","    webResource.method === Constants.HttpConstants.HttpVerbs.HEAD)) {","    webResource.withQueryOption(HeaderConstants.FORCE_NO_CACHE_IN_BROWSER, new Date().getTime());","  }","","  if(azureutil.objectIsNull(options.timeoutIntervalInMs)) {","    options.timeoutIntervalInMs = this.defaultTimeoutIntervalInMs;","  }","","  if(azureutil.objectIsNull(options.clientRequestTimeoutInMs)) {","    options.clientRequestTimeoutInMs = this.defaultClientRequestTimeoutInMs;","  }","","  if(!azureutil.objectIsNull(options.timeoutIntervalInMs) && options.timeoutIntervalInMs > 0) {","    webResource.withQueryOption(QueryStringConstants.TIMEOUT, Math.ceil(options.timeoutIntervalInMs / 1000));","  }","  ","  if(options.accessConditions) {","    webResource.withHeader(HeaderConstants.IF_MATCH, options.accessConditions.EtagMatch);","    webResource.withHeader(HeaderConstants.IF_MODIFIED_SINCE, options.accessConditions.DateModifedSince);","    webResource.withHeader(HeaderConstants.IF_NONE_MATCH, options.accessConditions.EtagNonMatch);","    webResource.withHeader(HeaderConstants.IF_UNMODIFIED_SINCE, options.accessConditions.DateUnModifiedSince);","    webResource.withHeader(HeaderConstants.SEQUENCE_NUMBER_EQUAL, options.accessConditions.SequenceNumberEqual);","    webResource.withHeader(HeaderConstants.SEQUENCE_NUMBER_LESS_THAN, options.accessConditions.SequenceNumberLessThan);","    webResource.withHeader(HeaderConstants.SEQUENCE_NUMBER_LESS_THAN_OR_EQUAL, options.accessConditions.SequenceNumberLessThanOrEqual);","    webResource.withHeader(HeaderConstants.BLOB_CONDITION_MAX_SIZE, options.accessConditions.MaxBlobSize);","    webResource.withHeader(HeaderConstants.BLOB_CONDITION_APPEND_POSITION, options.accessConditions.MaxAppendPosition);","  }","","  if(options.sourceAccessConditions) {","    webResource.withHeader(HeaderConstants.SOURCE_IF_MATCH, options.sourceAccessConditions.EtagMatch);","    webResource.withHeader(HeaderConstants.SOURCE_IF_MODIFIED_SINCE, options.sourceAccessConditions.DateModifedSince);","    webResource.withHeader(HeaderConstants.SOURCE_IF_NONE_MATCH, options.sourceAccessConditions.EtagNonMatch);","    webResource.withHeader(HeaderConstants.SOURCE_IF_UNMODIFIED_SINCE, options.sourceAccessConditions.DateUnModifiedSince);","  }","  ","  if (!webResource.headers || webResource.headers[HeaderConstants.CONTENT_TYPE] === undefined) {","    // work around to add an empty content type header to prevent the request module from magically adding a content type.","    webResource.headers[HeaderConstants.CONTENT_TYPE] = '';","  } else if (webResource.headers && webResource.headers[HeaderConstants.CONTENT_TYPE] === null) {","    delete webResource.headers[HeaderConstants.CONTENT_TYPE];","  }","","  if (!webResource.headers || webResource.headers[HeaderConstants.CONTENT_LENGTH] === undefined) {","    if (body && body.outputData) {","      webResource.withHeader(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(body.outputData, 'UTF8'));","    } else if (webResource.headers[HeaderConstants.CONTENT_LENGTH] === undefined) {","      webResource.withHeader(HeaderConstants.CONTENT_LENGTH, 0);","    }","  } else if (webResource.headers && webResource.headers[HeaderConstants.CONTENT_LENGTH] === null) {","    delete webResource.headers[HeaderConstants.CONTENT_LENGTH];","  }","","  // Sets the request url in the web resource.","  this._setRequestUrl(webResource, options);","","  this.emit('sendingRequestEvent', webResource);","","  // Now that the web request is finalized, sign it","  this.storageCredentials.signRequest(webResource, function (error) {","    var requestOptions = null;","","    if (!error) {","      var targetUrl = webResource.uri;","","      requestOptions = {","        url: url.format(targetUrl),","        method: webResource.method,","        headers: webResource.headers,","        mode: 'disable-fetch'","      };","","      if (options) {","        //set encoding of response data. If set to null, the body is returned as a Buffer","        requestOptions.encoding = options.responseEncoding;","      }","      ","      if (options && options.clientRequestTimeoutInMs) {","        requestOptions.timeout = options.clientRequestTimeoutInMs;","      } else {","        requestOptions.timeout = Constants.DEFAULT_CLIENT_REQUEST_TIMEOUT_IN_MS; // 2 minutes","      }","    }","","    callback(error, requestOptions);","  });","};","","/**","* Process the response.","* @ignore","*","* @param {WebResource} webResource                The web resource that made the request.","* @param {Response}    response                   The response object.","* @param {Options}     options                    The response parsing options.","* @param {String}      options.payloadFormat      The payload format.","* @return The normalized responseObject.","*/","StorageServiceClient.prototype._processResponse = function (webResource, response, options) {","  var self = this;","","  function convertRawHeadersToHeaders(rawHeaders) {","    var headers = {};","    if(!rawHeaders) {","      return undefined;","    }","","    for(var i = 0; i < rawHeaders.length; i++) {","      var headerName;","      if (rawHeaders[i].indexOf(HeaderConstants.PREFIX_FOR_STORAGE_METADATA) === 0) {","        headerName = rawHeaders[i];","      } else {","        headerName = rawHeaders[i].toLowerCase();","      }","      headers[headerName] = rawHeaders[++i];","    }","","    return headers;","  }","","  var validResponse = WebResource.validResponse(response.statusCode);","  var rsp = StorageServiceClient._buildResponse(validResponse, response.body, convertRawHeadersToHeaders(response.rawHeaders) || response.headers, response.statusCode, response.md5);","  var responseObject;","","  if (validResponse && webResource.rawResponse) {","    responseObject = { error: null, response: rsp };","  } else {","    // attempt to parse the response body, errors will be returned in rsp.error without modifying the body","    rsp = StorageServiceClient._parseResponse(rsp, self.xml2jsSettings, options);","","    if (validResponse && !rsp.error) {","        responseObject = { error: null, response: rsp };","    } else {","      rsp.isSuccessful = false;","","      if (response.statusCode < 400 || response.statusCode >= 500) {","        this.logger.log(Logger.LogLevels.DEBUG,","            'ERROR code = ' + response.statusCode + ' :\\n' + util.inspect(rsp.body));","      }","","      // responseObject.error should contain normalized parser errors if they occured in _parseResponse","      // responseObject.response.body should contain the raw response body in that case","      var errorBody = rsp.body;","      if(rsp.error) {","        errorBody = rsp.error;","        delete rsp.error;","      }","","      if (!errorBody) {","        var code = Object.keys(HttpResponseCodes).filter(function (name) {","          if (HttpResponseCodes[name] === rsp.statusCode) {","            return name;","          }","        });","","        errorBody = { error: { code: code[0] } };","      }","","      var normalizedError = StorageServiceClient._normalizeError(errorBody, response);","      responseObject = { error: normalizedError, response: rsp };","    }","  }","","  this.logger.log(Logger.LogLevels.DEBUG, 'RESPONSE:\\n' + util.inspect(responseObject));","","  return responseObject;","};","","/**","* Associate a filtering operation with this StorageServiceClient. Filtering operations","* can include logging, automatically retrying, etc. Filter operations are objects","* that implement a method with the signature:","*","*     \"function handle (requestOptions, next)\".","*","* After doing its preprocessing on the request options, the method needs to call","* \"next\" passing a callback with the following signature:","* signature:","*","*     \"function (returnObject, finalCallback, next)\"","*","* In this callback, and after processing the returnObject (the response from the","* request to the server), the callback needs to either invoke next if it exists to","* continue processing other filters or simply invoke finalCallback otherwise to end","* up the service invocation.","*","* @param {Object} filter The new filter object.","* @return {StorageServiceClient} A new service client with the filter applied.","*/","StorageServiceClient.prototype.withFilter = function (newFilter) {","    // Create a new object with the same members as the current service","    var derived = _.clone(this);","","    // If the current service has a filter, merge it with the new filter","    // (allowing us to effectively pipeline a series of filters)","    var parentFilter = this.filter;","    var mergedFilter = newFilter;","    if (parentFilter !== undefined) {","      // The parentFilterNext is either the operation or the nextPipe function generated on a previous merge","      // Ordering is [f3 pre] -> [f2 pre] -> [f1 pre] -> operation -> [f1 post] -> [f2 post] -> [f3 post]","      mergedFilter = function (originalRequestOptions, parentFilterNext) {","        newFilter.handle(originalRequestOptions, function (postRequestOptions, newFilterCallback) {","          // handle parent filter pre and get Parent filter post","          var next = function (postPostRequestOptions, parentFilterCallback) {","            // The parentFilterNext is the filter next to the merged filter.","            // For 2 filters, that'd be the actual operation.","            parentFilterNext(postPostRequestOptions, function (responseObject, responseCallback, finalCallback) {","              parentFilterCallback(responseObject, finalCallback, function (postResponseObject) {","                newFilterCallback(postResponseObject, responseCallback, finalCallback);","              });","            });","          };","","          parentFilter(postRequestOptions, next);","        });","      };","    }","","    // Store the filter so it can be applied in performRequest","    derived.filter = mergedFilter;","    return derived;","  };","","/*","* Builds a response object with normalized key names.","* @ignore","*","* @param {Bool}     isSuccessful    Boolean value indicating if the request was successful","* @param {Object}   body            The response body.","* @param {Object}   headers         The response headers.","* @param {int}      statusCode      The response status code.","* @param {string}   md5             The response's content md5 hash.","* @return {Object} A response object.","*/","StorageServiceClient._buildResponse = function (isSuccessful, body, headers, statusCode, md5) {","  return {","    isSuccessful: isSuccessful,","    statusCode: statusCode,","    body: body,","    headers: headers,","    md5: md5","  };","};","","/**","* Parses a server response body from XML or JSON into a JS object.","* This is done using the xml2js library.","* @ignore","*","* @param {object}     response                   The response object with a property \"body\" with a XML or JSON string content.","* @param {object}     xml2jsSettings             The XML to json settings.","* @param {Options}    options                    The response parsing options.","* @param {String}     options.payloadFormat      The payload format.","* @return {object} The same response object with the body part as a JS object instead of a XML or JSON string.","*/","StorageServiceClient._parseResponse = function (response, xml2jsSettings, options) {","  function parseXml(body) {","    var parsed;","    var parser = new xml2js.Parser(xml2jsSettings);","    parser.parseString(azureutil.removeBOM(body.toString()), function (err, parsedBody) {","      if (err) {","        var xmlError = new SyntaxError('EXMLFORMAT');","        xmlError.innerError = err;","        throw xmlError;","      } else { parsed = parsedBody; }","    });","","    return parsed;","  }","","  if (response.body && Buffer.byteLength(response.body.toString()) > 0) {","    var contentType = '';","    if (response.headers && response.headers['content-type']) {","      contentType = response.headers['content-type'].toLowerCase();","    }","","    try {","      if (contentType.indexOf('application/json') !== -1) {","        if (options && options.payloadFormat && options.payloadFormat !== TableUtilities.PayloadFormat.NO_METADATA) {","          var parser = new Parser();","          parser.onValue = function (value) {","            response.body = value;","          };","          parser.write(response.body);","        } else {","          response.body = JSON.parse(response.body);","        }","      } else if (contentType.indexOf('application/xml') !== -1 || contentType.indexOf('application/atom+xml') !== -1) {","        response.body = parseXml(response.body);","      } else if (contentType.indexOf('text/html') !== -1) {","        response.body = response.body;","      } else {","        response.body = parseXml(response.body);","        // throw new SyntaxError(SR.CONTENT_TYPE_MISSING, null);","      }","    } catch (e) {","      response.error = e;","    }","  }","","  return response;","};","","/**","* Gets the storage settings.","*","* @param {string} [storageAccountOrConnectionString]  The storage account or the connection string.","* @param {string} [storageAccessKey]                  The storage access key.","* @param {string} [host]                              The host address.","* @param {object} [sasToken]                          The sas token.","*","* @return {StorageServiceSettings}","*/","StorageServiceClient.getStorageSettings = function (storageAccountOrConnectionString, storageAccessKey, host, sasToken, endpointSuffix) {","  var storageServiceSettings;","  if (storageAccountOrConnectionString && !storageAccessKey && !sasToken) {","    // If storageAccountOrConnectionString was passed and no accessKey was passed, assume connection string","    storageServiceSettings = StorageServiceSettings.createFromConnectionString(storageAccountOrConnectionString);","  } else if ((storageAccountOrConnectionString && storageAccessKey) || sasToken || host) {","    // Account and key or credentials or anonymous","    storageServiceSettings = StorageServiceSettings.createExplicitly(storageAccountOrConnectionString, storageAccessKey, host, sasToken, endpointSuffix);","  } else {","    // Use environment variables","    storageServiceSettings = StorageServiceSettings.createFromEnvironment();","  }","","  return storageServiceSettings;","};","","/**","* Sets the webResource's requestUrl based on the service client settings.","* @ignore","*","* @param {WebResource} webResource The web resource where to set the request url.","*/","StorageServiceClient.prototype._setRequestUrl = function (webResource, options) {","  // Normalize the path","  // Backup the original path of the webResource to make sure it works fine even this function get executed multiple times - like RetryFilter","  webResource.originalPath = webResource.originalPath || webResource.path;","  webResource.path = this._getPath(webResource.originalPath);","","  if(!this.host){","    throw new ArgumentNullError('this.host', SR.STORAGE_HOST_LOCATION_REQUIRED);","  }","","  var host = this.host.primaryHost;","","  if(!azureutil.objectIsNull(options) && options.currentLocation === Constants.StorageLocation.SECONDARY) {","    host = this.host.secondaryHost;","  }","","  if(host && host.lastIndexOf('/') !== (host.length - 1)){","    host = host + '/';","  }","  ","  var fullPath = url.format({pathname: webResource.path, query: webResource.queryString});","  webResource.uri = url.resolve(host, fullPath);","  webResource.path = url.parse(webResource.uri).pathname;","};","","/**","* Retrieves the normalized path to be used in a request.","* It also removes any leading \"/\" of the path in case","* it's there before.","* @ignore","* @param {string} path The path to be normalized.","* @return {string} The normalized path.","*/","StorageServiceClient.prototype._getPath = function (path) {","  if (path === null || path === undefined) {","    path = '';","  } else if (path.indexOf('/') === 0) {","    path = path.substring(1);","  }","","  return path;","};","","/**"," * Get the url of a given path"," */","StorageServiceClient.prototype._getUrl = function (path, sasToken, primary) {","  var host;","  if (!azureutil.objectIsNull(primary) && primary === false) {","    host = this.host.secondaryHost;","  } else {","    host = this.host.primaryHost;","  }","","  host = azureutil.trimPortFromUri(host);","  if(host && host.lastIndexOf('/') !== (host.length - 1)){","    host = host + '/';","  }","","  var query = qs.parse(sasToken);","  var fullPath = url.format({ pathname: this._getPath(path), query: query });","  return url.resolve(host, fullPath);","};","","/**","* Initializes the default filter.","* This filter is responsible for chaining the pre filters request into the operation and, after processing the response,","* pass it to the post processing filters. This method should only be invoked by the StorageServiceClient constructor.","* @ignore","*","*/","StorageServiceClient.prototype._initDefaultFilter = function () {","  this.filter = function (requestOptions, nextPreCallback) {","    if (nextPreCallback) {","      // Handle the next pre callback and pass the function to be handled as post call back.","      nextPreCallback(requestOptions, function (returnObject, finalCallback, nextPostCallback) {","        if (nextPostCallback) {","          nextPostCallback(returnObject);","        } else if (finalCallback) {","          finalCallback(returnObject);","        }","      });","    }","  };","};","","/**","* Retrieves the metadata headers from the response headers.","* @ignore","*","* @param {object} headers The metadata headers.","* @return {object} An object with the metadata headers (without the \"x-ms-\" prefix).","*/","StorageServiceClient.prototype.parseMetadataHeaders = function (headers) {","  var metadata = {};","","  if (!headers) {","    return metadata;","  }","","  for (var header in headers) {","    if (header.indexOf(HeaderConstants.PREFIX_FOR_STORAGE_METADATA) === 0) {","      var key = header.substr(HeaderConstants.PREFIX_FOR_STORAGE_METADATA.length, header.length - HeaderConstants.PREFIX_FOR_STORAGE_METADATA.length);","      metadata[key] = headers[header];","    }","  }","  ","  return metadata;","};","","/**","* Gets the properties of a storage account’s service, including Azure Storage Analytics.","* @ignore","*","* @this {StorageServiceClient}","* @param {object}       [options]                               The request options.","* @param {LocationMode} [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                               Please see StorageUtilities.LocationMode for the possible values.","* @param {int}          [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}          [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}          [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                               The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                               execution time is checked intermittently while performing requests, and before executing retries.","* @param {bool}         [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                               The default value is false.","* @param {errorOrResult}  callback                              `error` will contain information if an error occurs; otherwise, `result` will contain the properties ","*                                                               and `response` will contain information related to this operation.","*/","StorageServiceClient.prototype.getAccountServiceProperties = function (optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('getServiceProperties', function (v) {","    v.callback(callback);","  });","  ","  var options = extend(true, {}, userOptions);","  ","  var webResource = WebResource.get()","    .withQueryOption(QueryStringConstants.COMP, 'properties')","    .withQueryOption(QueryStringConstants.RESTYPE, 'service');","  ","  options.requestLocationMode = RequestLocationMode.PRIMARY_OR_SECONDARY;","  ","  var processResponseCallback = function (responseObject, next) {","    responseObject.servicePropertiesResult = null;","    if (!responseObject.error) {","      responseObject.servicePropertiesResult = ServicePropertiesResult.parse(responseObject.response.body.StorageServiceProperties);","    }","    ","    // function to be called after all filters","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.servicePropertiesResult, returnObject.response);","    };","    ","    // call the first filter","    next(responseObject, finalCallback);","  };","  ","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Sets the properties of a storage account’s service, including Azure Storage Analytics.","* You can also use this operation to set the default request version for all incoming requests that do not have a version specified.","*","* @this {StorageServiceClient}","* @param {object}             serviceProperties                        The service properties.","* @param {object}             [options]                                The request options.","* @param {LocationMode}       [options.locationMode]                   Specifies the location mode used to decide which location the request should be sent to. ","*                                                                      Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]            The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]       The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]       The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                      The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                      execution time is checked intermittently while performing requests, and before executing retries.","* @param {bool}               [options.useNagleAlgorithm]              Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                      The default value is false.","* @param {errorOrResponse}    callback                                 `error` will contain information","*                                                                      if an error occurs; otherwise, `response`","*                                                                      will contain information related to this operation.","*/","StorageServiceClient.prototype.setAccountServiceProperties = function (serviceProperties, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('setServiceProperties', function (v) {","    v.object(serviceProperties, 'serviceProperties');","    v.callback(callback);","  });","  ","  var options = extend(true, {}, userOptions);","  var servicePropertiesXml = ServicePropertiesResult.serialize(serviceProperties);","  ","  var webResource = WebResource.put()","    .withQueryOption(QueryStringConstants.COMP, 'properties')","    .withQueryOption(QueryStringConstants.RESTYPE, 'service')","    .withHeader(HeaderConstants.CONTENT_TYPE, 'application/xml;charset=\"utf-8\"')","    .withHeader(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(servicePropertiesXml))","    .withBody(servicePropertiesXml);","  ","  var processResponseCallback = function (responseObject, next) {","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.response);","    };","    ","    next(responseObject, finalCallback);","  };","  ","  this.performRequest(webResource, webResource.body, options, processResponseCallback);","};","","// Other functions","","/**","* Processes the error body into a normalized error object with all the properties lowercased.","*","* Error information may be returned by a service call with additional debugging information:","* http://msdn.microsoft.com/en-us/library/windowsazure/dd179382.aspx","*","* Table services returns these properties lowercased, example, \"code\" instead of \"Code\". So that the user","* can always expect the same format, this method lower cases everything.","*","* @ignore","*","* @param {Object} error The error object as returned by the service and parsed to JSON by the xml2json.","* @return {Object} The normalized error object with all properties lower cased.","*/","StorageServiceClient._normalizeError = function (error, response) {","  if (azureutil.objectIsString(error)) {","    return new StorageError(error, null);","  } else if (error) {","    var normalizedError = {};","","    // blob/queue errors should have error.Error, table errors should have error['odata.error']","    var errorProperties = error.Error || error.error || error['odata.error'] || error['m:error'] || error;","    normalizedError.code = errorProperties.message; // The message exists when there is error.Error.","    ","    for (var property in errorProperties) {","      if (errorProperties.hasOwnProperty(property)) {","        var key = property.toLowerCase();","        if(key.indexOf('m:') === 0) {","          key = key.substring(2);","        }","        ","        normalizedError[key] = errorProperties[property];","","        // if this is a table error, message is an object - flatten it to normalize with blob/queue errors","        // ex: \"message\":{\"lang\":\"en-US\",\"value\":\"The specified resource does not exist.\"} becomes message: \"The specified resource does not exist.\"","        if (key === 'message' && _.isObject(errorProperties[property])) {","          if (errorProperties[property]['value']) {","            normalizedError[key] = errorProperties[property]['value'];","          }","        }","      }","    }","","    // add status code and server request id if available","    if (response) {","      if (response.statusCode) {","        normalizedError.statusCode = response.statusCode;","      }","","      if (response.headers && response.headers['x-ms-request-id']) {","        normalizedError.requestId = response.headers['x-ms-request-id'];","      }","    }","","    var errorObject = new StorageError(normalizedError.code, normalizedError);","    return errorObject;","  }","","  return null;","};","","/*","* Sets proxy object specified by caller.","*","* @param {object}   proxy       proxy to use for tunneling","*                               {","*                                host: hostname","*                                port: port number","*                                proxyAuth: 'user:password' for basic auth","*                                headers: {...} headers for proxy server","*                                key: key for proxy server","*                                ca: ca for proxy server","*                                cert: cert for proxy server","*                               }","*                               if null or undefined, clears proxy","*/","StorageServiceClient.prototype.setProxy = function (proxy) {","  if (proxy) {","    this.proxy = proxy;","  } else {","    this.proxy = null;","  }","};","","/**","* Sets the service host default proxy from the environment.","* Can be overridden by calling _setProxyUrl or _setProxy","*","*/","StorageServiceClient.prototype._setDefaultProxy = function () {","  var proxyUrl = StorageServiceClient._loadEnvironmentProxyValue();","  if (proxyUrl) {","    var parsedUrl = url.parse(proxyUrl);","    if (!parsedUrl.port) {","      parsedUrl.port = 80;","    }","    this.setProxy(parsedUrl);","  } else {","    this.setProxy(null);","  }","};","","/*","* Loads the fields \"useProxy\" and respective protocol, port and url","* from the environment values HTTPS_PROXY and HTTP_PROXY","* in case those are set.","* @ignore","*","* @return {string} or null","*/","StorageServiceClient._loadEnvironmentProxyValue = function () {","  var proxyUrl = null;","  if (process.env[StorageServiceClientConstants.EnvironmentVariables.HTTPS_PROXY]) {","    proxyUrl = process.env[StorageServiceClientConstants.EnvironmentVariables.HTTPS_PROXY];","  } else if (process.env[StorageServiceClientConstants.EnvironmentVariables.HTTPS_PROXY.toLowerCase()]) {","    proxyUrl = process.env[StorageServiceClientConstants.EnvironmentVariables.HTTPS_PROXY.toLowerCase()];","  } else if (process.env[StorageServiceClientConstants.EnvironmentVariables.HTTP_PROXY]) {","    proxyUrl = process.env[StorageServiceClientConstants.EnvironmentVariables.HTTP_PROXY];","  } else if (process.env[StorageServiceClientConstants.EnvironmentVariables.HTTP_PROXY.toLowerCase()]) {","    proxyUrl = process.env[StorageServiceClientConstants.EnvironmentVariables.HTTP_PROXY.toLowerCase()];","  }","","  return proxyUrl;","};","","/**","* Initializes the location to which the operation is being sent to.","*/","StorageServiceClient.prototype._initializeLocation = function (options) {","  if(!azureutil.objectIsNull(options.locationMode)) {","    switch(options.locationMode) {","    case StorageUtilities.LocationMode.PRIMARY_ONLY:","    case StorageUtilities.LocationMode.PRIMARY_THEN_SECONDARY:","      options.currentLocation = Constants.StorageLocation.PRIMARY;","      break;","    case StorageUtilities.LocationMode.SECONDARY_ONLY:","    case StorageUtilities.LocationMode.SECONDARY_THEN_PRIMARY:","      options.currentLocation = Constants.StorageLocation.SECONDARY;","      break;","    default:","      throw new RangeError(util.format(SR.ARGUMENT_OUT_OF_RANGE_ERROR, 'locationMode', options.locationMode));","    }","  } else {","    options.locationMode = StorageUtilities.LocationMode.PRIMARY_ONLY;","    options.currentLocation = Constants.StorageLocation.PRIMARY;","  }","};","","/**","* Validates the location to which the operation is being sent to.","*/","StorageServiceClient.prototype._validateLocation = function (options) {","  if(this._invalidLocationMode(options.locationMode)) {","    throw new ArgumentNullError('host', SR.STORAGE_HOST_MISSING_LOCATION);","  }","","  switch(options.requestLocationMode) {","  case Constants.RequestLocationMode.PRIMARY_ONLY:","    if(options.locationMode === StorageUtilities.LocationMode.SECONDARY_ONLY) {","      throw new ArgumentError('host.primaryHost', SR.PRIMARY_ONLY_COMMAND);","    }","","    options.currentLocation = Constants.StorageLocation.PRIMARY;","    options.locationMode = StorageUtilities.LocationMode.PRIMARY_ONLY;","    break;","","  case Constants.RequestLocationMode.SECONDARY_ONLY:","    if(options.locationMode === StorageUtilities.LocationMode.PRIMARY_ONLY) {","      throw new ArgumentError('host.secondaryHost', SR.SECONDARY_ONLY_COMMAND);","    }","","    options.currentLocation = Constants.StorageLocation.SECONDARY;","    options.locationMode = StorageUtilities.LocationMode.SECONDARY_ONLY;","    break;","","  default:","   // no op","  }","};","","/**","* Checks whether we have the relevant host information based on the locationMode.","*/","StorageServiceClient.prototype._invalidLocationMode = function (locationMode) {","  switch(locationMode) {","  case StorageUtilities.LocationMode.PRIMARY_ONLY:","    return azureutil.objectIsNull(this.host.primaryHost);","  case StorageUtilities.LocationMode.SECONDARY_ONLY:","    return azureutil.objectIsNull(this.host.secondaryHost);","  default:","    return (azureutil.objectIsNull(this.host.primaryHost) || azureutil.objectIsNull(this.host.secondaryHost));","  }","};","","/**","* Checks to see if the maximum execution timeout provided has been exceeded.","*/","StorageServiceClient.prototype._maximumExecutionTimeExceeded = function (currentTime, expiryTime) {","  if(!azureutil.objectIsNull(expiryTime) && currentTime > expiryTime) {","    return true;","  } else {","    return false;","  }","};","","/**","* Sets the operation expiry time.","*/","StorageServiceClient.prototype._setOperationExpiryTime = function (options) {","  if(azureutil.objectIsNull(options.operationExpiryTime)) {","    if(!azureutil.objectIsNull(options.maximumExecutionTimeInMs)) {","      options.operationExpiryTime = Date.now() + options.maximumExecutionTimeInMs;","    } else if(this.defaultMaximumExecutionTimeInMs) {","      options.operationExpiryTime = Date.now() + this.defaultMaximumExecutionTimeInMs;","    }","  }","};","","module.exports = StorageServiceClient;",""],"l":{"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"30":1,"31":1,"32":1,"33":1,"34":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"43":1,"44":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"72":1,"73":0,"75":0,"77":0,"78":0,"79":0,"80":0,"82":0,"83":0,"86":0,"87":0,"90":0,"95":0,"96":0,"99":0,"100":0,"102":0,"109":0,"111":0,"113":0,"114":0,"117":1,"124":1,"125":0,"128":0,"129":0,"132":0,"134":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"149":0,"151":0,"152":0,"155":0,"156":0,"157":0,"159":0,"163":0,"171":0,"174":0,"176":0,"193":1,"194":0,"208":1,"209":0,"224":1,"225":0,"243":1,"244":0,"247":0,"248":0,"251":0,"254":0,"255":0,"258":0,"259":0,"263":0,"264":0,"268":0,"269":0,"272":0,"275":0,"286":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"297":0,"299":0,"300":0,"301":0,"304":0,"305":0,"307":0,"308":0,"310":0,"311":0,"312":0,"315":0,"317":0,"318":0,"320":0,"323":0,"324":0,"326":0,"328":0,"330":0,"331":0,"332":0,"335":0,"338":0,"339":0,"341":0,"342":0,"343":0,"344":0,"346":0,"347":0,"348":0,"349":0,"350":0,"353":0,"354":0,"355":0,"356":0,"358":0,"359":0,"361":0,"365":0,"366":0,"368":0,"372":0,"374":0,"377":0,"382":0,"383":0,"386":0,"387":0,"388":0,"389":0,"390":0,"393":0,"395":0,"396":0,"399":0,"400":0,"405":0,"409":0,"410":0,"411":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"424":0,"428":0,"429":0,"432":0,"435":0,"436":0,"440":0,"441":0,"442":0,"443":0,"444":0,"447":0,"448":0,"449":0,"450":0,"453":0,"454":0,"455":0,"456":0,"459":0,"460":0,"461":0,"462":0,"466":0,"467":0,"469":0,"470":0,"471":0,"472":0,"474":0,"475":0,"478":0,"479":0,"480":0,"482":0,"483":0,"487":0,"489":0,"490":0,"491":0,"493":0,"494":0,"497":0,"501":0,"503":0,"504":0,"507":0,"508":0,"512":0,"516":0,"517":0,"520":0,"529":0,"530":0,"531":0,"532":0,"537":0,"538":0,"539":0,"543":0,"546":0,"560":1,"561":0,"562":0,"563":0,"564":0,"566":0,"570":0,"573":0,"576":0,"577":0,"580":0,"581":0,"584":0,"585":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"600":0,"601":0,"602":0,"603":0,"604":0,"607":0,"609":0,"610":0,"611":0,"614":0,"615":0,"616":0,"617":0,"618":0,"620":0,"621":0,"625":0,"627":0,"630":0,"631":0,"633":0,"634":0,"636":0,"643":0,"645":0,"648":0,"649":0,"651":0,"655":0,"669":1,"670":0,"672":1,"673":0,"674":0,"675":0,"678":0,"679":0,"680":0,"681":0,"683":0,"685":0,"688":0,"691":0,"692":0,"693":0,"695":0,"696":0,"699":0,"701":0,"702":0,"704":0,"706":0,"707":0,"713":0,"714":0,"715":0,"716":0,"719":0,"720":0,"721":0,"722":0,"726":0,"729":0,"730":0,"734":0,"736":0,"760":1,"762":0,"766":0,"767":0,"768":0,"771":0,"772":0,"774":0,"777":0,"778":0,"779":0,"784":0,"790":0,"791":0,"805":1,"806":0,"826":1,"827":1,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"838":0,"841":0,"842":0,"843":0,"844":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"854":0,"856":0,"858":0,"859":0,"860":0,"861":0,"863":0,"867":0,"871":0,"884":1,"885":0,"886":0,"888":0,"889":0,"891":0,"894":0,"897":0,"906":1,"909":0,"910":0,"912":0,"913":0,"916":0,"918":0,"919":0,"922":0,"923":0,"926":0,"927":0,"928":0,"939":1,"940":0,"941":0,"942":0,"943":0,"946":0,"952":1,"953":0,"954":0,"955":0,"957":0,"960":0,"961":0,"962":0,"965":0,"966":0,"967":0,"977":1,"978":0,"979":0,"981":0,"982":0,"983":0,"984":0,"985":0,"999":1,"1000":0,"1002":0,"1003":0,"1006":0,"1007":0,"1008":0,"1009":0,"1013":0,"1034":1,"1035":0,"1036":0,"1038":0,"1039":0,"1042":0,"1044":0,"1048":0,"1050":0,"1051":0,"1052":0,"1053":0,"1057":0,"1058":0,"1062":0,"1065":0,"1088":1,"1089":0,"1090":0,"1092":0,"1093":0,"1094":0,"1097":0,"1098":0,"1100":0,"1107":0,"1108":0,"1109":0,"1112":0,"1115":0,"1134":1,"1135":0,"1136":0,"1137":0,"1138":0,"1141":0,"1142":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":0,"1151":0,"1155":0,"1156":0,"1157":0,"1164":0,"1165":0,"1166":0,"1169":0,"1170":0,"1174":0,"1175":0,"1178":0,"1196":1,"1197":0,"1198":0,"1200":0,"1209":1,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1216":0,"1218":0,"1230":1,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1242":0,"1248":1,"1249":0,"1250":0,"1253":0,"1254":0,"1257":0,"1258":0,"1260":0,"1263":0,"1264":0,"1271":1,"1272":0,"1273":0,"1276":0,"1278":0,"1279":0,"1282":0,"1283":0,"1284":0,"1287":0,"1288":0,"1291":0,"1292":0,"1293":0,"1303":1,"1304":0,"1306":0,"1308":0,"1310":0,"1317":1,"1318":0,"1319":0,"1321":0,"1328":1,"1329":0,"1330":0,"1331":0,"1332":0,"1333":0,"1338":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/validate.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/validate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":1,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":1,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":1,"178":0,"179":1,"180":0,"181":1,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":1,"204":0,"205":0,"206":1,"207":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},"fnMap":{"1":{"name":"initCallback","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":48}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":11},"end":{"line":35,"column":26}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":11},"end":{"line":40,"column":26}}},"4":{"name":"(anonymous_4)","line":43,"loc":{"start":{"line":43,"column":20},"end":{"line":43,"column":32}}},"5":{"name":"(anonymous_5)","line":56,"loc":{"start":{"line":56,"column":27},"end":{"line":56,"column":60}}},"6":{"name":"(anonymous_6)","line":59,"loc":{"start":{"line":59,"column":25},"end":{"line":59,"column":42}}},"7":{"name":"(anonymous_7)","line":64,"loc":{"start":{"line":64,"column":17},"end":{"line":64,"column":36}}},"8":{"name":"(anonymous_8)","line":80,"loc":{"start":{"line":80,"column":21},"end":{"line":80,"column":36}}},"9":{"name":"(anonymous_9)","line":93,"loc":{"start":{"line":93,"column":21},"end":{"line":93,"column":37}}},"10":{"name":"(anonymous_10)","line":122,"loc":{"start":{"line":122,"column":22},"end":{"line":122,"column":47}}},"11":{"name":"(anonymous_11)","line":127,"loc":{"start":{"line":127,"column":25},"end":{"line":127,"column":42}}},"12":{"name":"(anonymous_12)","line":146,"loc":{"start":{"line":146,"column":26},"end":{"line":146,"column":41}}},"13":{"name":"(anonymous_13)","line":162,"loc":{"start":{"line":162,"column":26},"end":{"line":162,"column":66}}},"14":{"name":"(anonymous_14)","line":172,"loc":{"start":{"line":172,"column":19},"end":{"line":172,"column":44}}},"15":{"name":"(anonymous_15)","line":196,"loc":{"start":{"line":196,"column":31},"end":{"line":196,"column":66}}},"16":{"name":"(anonymous_16)","line":198,"loc":{"start":{"line":198,"column":25},"end":{"line":198,"column":42}}},"17":{"name":"(anonymous_17)","line":219,"loc":{"start":{"line":219,"column":26},"end":{"line":219,"column":71}}},"18":{"name":"(anonymous_18)","line":222,"loc":{"start":{"line":222,"column":25},"end":{"line":222,"column":42}}},"19":{"name":"(anonymous_19)","line":244,"loc":{"start":{"line":244,"column":27},"end":{"line":244,"column":58}}},"20":{"name":"(anonymous_20)","line":246,"loc":{"start":{"line":246,"column":25},"end":{"line":246,"column":42}}},"21":{"name":"(anonymous_21)","line":266,"loc":{"start":{"line":266,"column":27},"end":{"line":266,"column":58}}},"22":{"name":"(anonymous_22)","line":269,"loc":{"start":{"line":269,"column":25},"end":{"line":269,"column":42}}},"23":{"name":"(anonymous_23)","line":289,"loc":{"start":{"line":289,"column":27},"end":{"line":289,"column":54}}},"24":{"name":"(anonymous_24)","line":292,"loc":{"start":{"line":292,"column":25},"end":{"line":292,"column":42}}},"25":{"name":"(anonymous_25)","line":325,"loc":{"start":{"line":325,"column":29},"end":{"line":325,"column":94}}},"26":{"name":"(anonymous_26)","line":328,"loc":{"start":{"line":328,"column":25},"end":{"line":328,"column":42}}},"27":{"name":"(anonymous_27)","line":358,"loc":{"start":{"line":358,"column":26},"end":{"line":358,"column":52}}},"28":{"name":"(anonymous_28)","line":359,"loc":{"start":{"line":359,"column":22},"end":{"line":359,"column":37}}},"29":{"name":"(anonymous_29)","line":377,"loc":{"start":{"line":377,"column":26},"end":{"line":377,"column":52}}},"30":{"name":"(anonymous_30)","line":380,"loc":{"start":{"line":380,"column":25},"end":{"line":380,"column":42}}},"31":{"name":"(anonymous_31)","line":398,"loc":{"start":{"line":398,"column":28},"end":{"line":398,"column":55}}},"32":{"name":"(anonymous_32)","line":401,"loc":{"start":{"line":401,"column":25},"end":{"line":401,"column":42}}},"33":{"name":"throwMissingArgument","line":416,"loc":{"start":{"line":416,"column":0},"end":{"line":416,"column":42}}},"34":{"name":"ArgumentValidator","line":420,"loc":{"start":{"line":420,"column":0},"end":{"line":420,"column":41}}},"35":{"name":"(anonymous_35)","line":425,"loc":{"start":{"line":425,"column":10},"end":{"line":425,"column":31}}},"36":{"name":"(anonymous_36)","line":432,"loc":{"start":{"line":432,"column":20},"end":{"line":432,"column":41}}},"37":{"name":"(anonymous_37)","line":438,"loc":{"start":{"line":438,"column":10},"end":{"line":438,"column":31}}},"38":{"name":"(anonymous_38)","line":445,"loc":{"start":{"line":445,"column":10},"end":{"line":445,"column":31}}},"39":{"name":"(anonymous_39)","line":451,"loc":{"start":{"line":451,"column":12},"end":{"line":451,"column":33}}},"40":{"name":"(anonymous_40)","line":458,"loc":{"start":{"line":458,"column":9},"end":{"line":458,"column":30}}},"41":{"name":"(anonymous_41)","line":464,"loc":{"start":{"line":464,"column":17},"end":{"line":464,"column":38}}},"42":{"name":"(anonymous_42)","line":470,"loc":{"start":{"line":470,"column":12},"end":{"line":470,"column":27}}},"43":{"name":"(anonymous_43)","line":475,"loc":{"start":{"line":475,"column":8},"end":{"line":475,"column":38}}},"44":{"name":"validateArgs","line":493,"loc":{"start":{"line":493,"column":0},"end":{"line":493,"column":53}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":30}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":47}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":44}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":67}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":34}},"7":{"start":{"line":24,"column":0},"end":{"line":24,"column":25}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":33}},"9":{"start":{"line":26,"column":0},"end":{"line":26,"column":41}},"10":{"start":{"line":27,"column":0},"end":{"line":27,"column":41}},"11":{"start":{"line":28,"column":0},"end":{"line":28,"column":49}},"12":{"start":{"line":30,"column":0},"end":{"line":30,"column":25}},"13":{"start":{"line":32,"column":0},"end":{"line":47,"column":1}},"14":{"start":{"line":33,"column":2},"end":{"line":33,"column":11}},"15":{"start":{"line":34,"column":2},"end":{"line":44,"column":3}},"16":{"start":{"line":35,"column":4},"end":{"line":38,"column":6}},"17":{"start":{"line":36,"column":6},"end":{"line":36,"column":25}},"18":{"start":{"line":37,"column":6},"end":{"line":37,"column":19}},"19":{"start":{"line":40,"column":4},"end":{"line":42,"column":6}},"20":{"start":{"line":41,"column":6},"end":{"line":41,"column":16}},"21":{"start":{"line":43,"column":4},"end":{"line":43,"column":35}},"22":{"start":{"line":46,"column":2},"end":{"line":46,"column":33}},"23":{"start":{"line":56,"column":0},"end":{"line":72,"column":2}},"24":{"start":{"line":57,"column":2},"end":{"line":57,"column":11}},"25":{"start":{"line":59,"column":2},"end":{"line":62,"column":5}},"26":{"start":{"line":60,"column":4},"end":{"line":60,"column":13}},"27":{"start":{"line":61,"column":4},"end":{"line":61,"column":18}},"28":{"start":{"line":64,"column":2},"end":{"line":68,"column":3}},"29":{"start":{"line":65,"column":4},"end":{"line":65,"column":57}},"30":{"start":{"line":67,"column":4},"end":{"line":67,"column":97}},"31":{"start":{"line":70,"column":2},"end":{"line":70,"column":13}},"32":{"start":{"line":71,"column":2},"end":{"line":71,"column":14}},"33":{"start":{"line":80,"column":0},"end":{"line":85,"column":2}},"34":{"start":{"line":81,"column":2},"end":{"line":83,"column":3}},"35":{"start":{"line":82,"column":4},"end":{"line":82,"column":69}},"36":{"start":{"line":84,"column":2},"end":{"line":84,"column":14}},"37":{"start":{"line":93,"column":0},"end":{"line":114,"column":2}},"38":{"start":{"line":94,"column":2},"end":{"line":111,"column":3}},"39":{"start":{"line":95,"column":4},"end":{"line":95,"column":75}},"40":{"start":{"line":97,"column":4},"end":{"line":97,"column":25}},"41":{"start":{"line":98,"column":4},"end":{"line":98,"column":73}},"42":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"43":{"start":{"line":100,"column":6},"end":{"line":100,"column":91}},"44":{"start":{"line":103,"column":4},"end":{"line":103,"column":82}},"45":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"46":{"start":{"line":105,"column":6},"end":{"line":105,"column":93}},"47":{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},"48":{"start":{"line":109,"column":6},"end":{"line":109,"column":77}},"49":{"start":{"line":113,"column":2},"end":{"line":113,"column":14}},"50":{"start":{"line":122,"column":0},"end":{"line":138,"column":2}},"51":{"start":{"line":123,"column":2},"end":{"line":123,"column":107}},"52":{"start":{"line":125,"column":2},"end":{"line":125,"column":11}},"53":{"start":{"line":127,"column":2},"end":{"line":130,"column":5}},"54":{"start":{"line":128,"column":4},"end":{"line":128,"column":13}},"55":{"start":{"line":129,"column":4},"end":{"line":129,"column":18}},"56":{"start":{"line":132,"column":2},"end":{"line":134,"column":3}},"57":{"start":{"line":133,"column":4},"end":{"line":133,"column":74}},"58":{"start":{"line":136,"column":2},"end":{"line":136,"column":13}},"59":{"start":{"line":137,"column":2},"end":{"line":137,"column":14}},"60":{"start":{"line":146,"column":0},"end":{"line":154,"column":2}},"61":{"start":{"line":147,"column":2},"end":{"line":147,"column":118}},"62":{"start":{"line":149,"column":2},"end":{"line":153,"column":3}},"63":{"start":{"line":150,"column":4},"end":{"line":150,"column":16}},"64":{"start":{"line":152,"column":4},"end":{"line":152,"column":96}},"65":{"start":{"line":162,"column":0},"end":{"line":170,"column":2}},"66":{"start":{"line":163,"column":2},"end":{"line":165,"column":3}},"67":{"start":{"line":164,"column":4},"end":{"line":164,"column":88}},"68":{"start":{"line":166,"column":2},"end":{"line":168,"column":3}},"69":{"start":{"line":167,"column":4},"end":{"line":167,"column":75}},"70":{"start":{"line":169,"column":2},"end":{"line":169,"column":14}},"71":{"start":{"line":172,"column":0},"end":{"line":189,"column":2}},"72":{"start":{"line":174,"column":2},"end":{"line":176,"column":3}},"73":{"start":{"line":175,"column":4},"end":{"line":175,"column":103}},"74":{"start":{"line":179,"column":2},"end":{"line":181,"column":3}},"75":{"start":{"line":180,"column":4},"end":{"line":180,"column":113}},"76":{"start":{"line":184,"column":2},"end":{"line":186,"column":3}},"77":{"start":{"line":185,"column":4},"end":{"line":185,"column":82}},"78":{"start":{"line":188,"column":2},"end":{"line":188,"column":14}},"79":{"start":{"line":196,"column":0},"end":{"line":211,"column":2}},"80":{"start":{"line":197,"column":2},"end":{"line":197,"column":11}},"81":{"start":{"line":198,"column":2},"end":{"line":201,"column":5}},"82":{"start":{"line":199,"column":4},"end":{"line":199,"column":13}},"83":{"start":{"line":200,"column":4},"end":{"line":200,"column":18}},"84":{"start":{"line":203,"column":2},"end":{"line":203,"column":59}},"85":{"start":{"line":205,"column":2},"end":{"line":210,"column":3}},"86":{"start":{"line":206,"column":4},"end":{"line":206,"column":15}},"87":{"start":{"line":207,"column":4},"end":{"line":207,"column":16}},"88":{"start":{"line":209,"column":4},"end":{"line":209,"column":27}},"89":{"start":{"line":219,"column":0},"end":{"line":237,"column":2}},"90":{"start":{"line":220,"column":2},"end":{"line":220,"column":11}},"91":{"start":{"line":222,"column":2},"end":{"line":225,"column":5}},"92":{"start":{"line":223,"column":4},"end":{"line":223,"column":13}},"93":{"start":{"line":224,"column":4},"end":{"line":224,"column":18}},"94":{"start":{"line":227,"column":2},"end":{"line":229,"column":3}},"95":{"start":{"line":228,"column":4},"end":{"line":228,"column":82}},"96":{"start":{"line":231,"column":2},"end":{"line":233,"column":3}},"97":{"start":{"line":232,"column":4},"end":{"line":232,"column":67}},"98":{"start":{"line":235,"column":2},"end":{"line":235,"column":13}},"99":{"start":{"line":236,"column":2},"end":{"line":236,"column":14}},"100":{"start":{"line":244,"column":0},"end":{"line":259,"column":2}},"101":{"start":{"line":245,"column":2},"end":{"line":245,"column":11}},"102":{"start":{"line":246,"column":2},"end":{"line":249,"column":5}},"103":{"start":{"line":247,"column":4},"end":{"line":247,"column":13}},"104":{"start":{"line":248,"column":4},"end":{"line":248,"column":18}},"105":{"start":{"line":251,"column":2},"end":{"line":251,"column":51}},"106":{"start":{"line":253,"column":2},"end":{"line":258,"column":3}},"107":{"start":{"line":254,"column":4},"end":{"line":254,"column":15}},"108":{"start":{"line":255,"column":4},"end":{"line":255,"column":16}},"109":{"start":{"line":257,"column":4},"end":{"line":257,"column":27}},"110":{"start":{"line":266,"column":0},"end":{"line":282,"column":2}},"111":{"start":{"line":267,"column":2},"end":{"line":267,"column":11}},"112":{"start":{"line":269,"column":2},"end":{"line":272,"column":5}},"113":{"start":{"line":270,"column":4},"end":{"line":270,"column":13}},"114":{"start":{"line":271,"column":4},"end":{"line":271,"column":18}},"115":{"start":{"line":274,"column":2},"end":{"line":274,"column":51}},"116":{"start":{"line":276,"column":2},"end":{"line":281,"column":3}},"117":{"start":{"line":277,"column":4},"end":{"line":277,"column":15}},"118":{"start":{"line":278,"column":4},"end":{"line":278,"column":16}},"119":{"start":{"line":280,"column":4},"end":{"line":280,"column":27}},"120":{"start":{"line":289,"column":0},"end":{"line":316,"column":2}},"121":{"start":{"line":290,"column":2},"end":{"line":290,"column":11}},"122":{"start":{"line":292,"column":2},"end":{"line":295,"column":5}},"123":{"start":{"line":293,"column":4},"end":{"line":293,"column":13}},"124":{"start":{"line":294,"column":4},"end":{"line":294,"column":18}},"125":{"start":{"line":297,"column":2},"end":{"line":299,"column":3}},"126":{"start":{"line":298,"column":4},"end":{"line":298,"column":90}},"127":{"start":{"line":301,"column":2},"end":{"line":303,"column":3}},"128":{"start":{"line":302,"column":4},"end":{"line":302,"column":100}},"129":{"start":{"line":305,"column":2},"end":{"line":307,"column":3}},"130":{"start":{"line":306,"column":4},"end":{"line":306,"column":68}},"131":{"start":{"line":309,"column":2},"end":{"line":315,"column":3}},"132":{"start":{"line":311,"column":4},"end":{"line":311,"column":15}},"133":{"start":{"line":312,"column":4},"end":{"line":312,"column":16}},"134":{"start":{"line":314,"column":4},"end":{"line":314,"column":68}},"135":{"start":{"line":325,"column":0},"end":{"line":351,"column":2}},"136":{"start":{"line":326,"column":2},"end":{"line":326,"column":11}},"137":{"start":{"line":328,"column":2},"end":{"line":331,"column":5}},"138":{"start":{"line":329,"column":4},"end":{"line":329,"column":13}},"139":{"start":{"line":330,"column":4},"end":{"line":330,"column":18}},"140":{"start":{"line":333,"column":2},"end":{"line":335,"column":3}},"141":{"start":{"line":334,"column":4},"end":{"line":334,"column":80}},"142":{"start":{"line":337,"column":2},"end":{"line":337,"column":18}},"143":{"start":{"line":338,"column":2},"end":{"line":347,"column":3}},"144":{"start":{"line":339,"column":4},"end":{"line":341,"column":5}},"145":{"start":{"line":340,"column":6},"end":{"line":340,"column":88}},"146":{"start":{"line":343,"column":4},"end":{"line":343,"column":39}},"147":{"start":{"line":344,"column":4},"end":{"line":346,"column":5}},"148":{"start":{"line":345,"column":6},"end":{"line":345,"column":111}},"149":{"start":{"line":349,"column":2},"end":{"line":349,"column":13}},"150":{"start":{"line":350,"column":2},"end":{"line":350,"column":14}},"151":{"start":{"line":358,"column":0},"end":{"line":370,"column":2}},"152":{"start":{"line":359,"column":2},"end":{"line":367,"column":4}},"153":{"start":{"line":360,"column":4},"end":{"line":360,"column":20}},"154":{"start":{"line":361,"column":4},"end":{"line":365,"column":5}},"155":{"start":{"line":362,"column":6},"end":{"line":364,"column":7}},"156":{"start":{"line":363,"column":8},"end":{"line":363,"column":31}},"157":{"start":{"line":366,"column":4},"end":{"line":366,"column":18}},"158":{"start":{"line":369,"column":2},"end":{"line":369,"column":87}},"159":{"start":{"line":377,"column":0},"end":{"line":391,"column":2}},"160":{"start":{"line":378,"column":2},"end":{"line":378,"column":11}},"161":{"start":{"line":380,"column":2},"end":{"line":383,"column":5}},"162":{"start":{"line":381,"column":4},"end":{"line":381,"column":13}},"163":{"start":{"line":382,"column":4},"end":{"line":382,"column":18}},"164":{"start":{"line":385,"column":2},"end":{"line":387,"column":3}},"165":{"start":{"line":386,"column":4},"end":{"line":386,"column":73}},"166":{"start":{"line":389,"column":2},"end":{"line":389,"column":13}},"167":{"start":{"line":390,"column":2},"end":{"line":390,"column":14}},"168":{"start":{"line":398,"column":0},"end":{"line":412,"column":2}},"169":{"start":{"line":399,"column":2},"end":{"line":399,"column":11}},"170":{"start":{"line":401,"column":2},"end":{"line":404,"column":5}},"171":{"start":{"line":402,"column":4},"end":{"line":402,"column":13}},"172":{"start":{"line":403,"column":4},"end":{"line":403,"column":18}},"173":{"start":{"line":406,"column":2},"end":{"line":408,"column":3}},"174":{"start":{"line":407,"column":4},"end":{"line":407,"column":82}},"175":{"start":{"line":410,"column":2},"end":{"line":410,"column":13}},"176":{"start":{"line":411,"column":2},"end":{"line":411,"column":14}},"177":{"start":{"line":416,"column":0},"end":{"line":418,"column":1}},"178":{"start":{"line":417,"column":2},"end":{"line":417,"column":111}},"179":{"start":{"line":420,"column":0},"end":{"line":422,"column":1}},"180":{"start":{"line":421,"column":2},"end":{"line":421,"column":27}},"181":{"start":{"line":424,"column":0},"end":{"line":491,"column":3}},"182":{"start":{"line":426,"column":4},"end":{"line":426,"column":27}},"183":{"start":{"line":427,"column":4},"end":{"line":429,"column":5}},"184":{"start":{"line":428,"column":6},"end":{"line":428,"column":112}},"185":{"start":{"line":433,"column":4},"end":{"line":435,"column":5}},"186":{"start":{"line":434,"column":6},"end":{"line":434,"column":102}},"187":{"start":{"line":439,"column":4},"end":{"line":439,"column":27}},"188":{"start":{"line":440,"column":4},"end":{"line":442,"column":5}},"189":{"start":{"line":441,"column":6},"end":{"line":441,"column":103}},"190":{"start":{"line":446,"column":4},"end":{"line":448,"column":5}},"191":{"start":{"line":447,"column":6},"end":{"line":447,"column":44}},"192":{"start":{"line":452,"column":4},"end":{"line":452,"column":27}},"193":{"start":{"line":453,"column":4},"end":{"line":455,"column":5}},"194":{"start":{"line":454,"column":6},"end":{"line":454,"column":104}},"195":{"start":{"line":459,"column":4},"end":{"line":461,"column":5}},"196":{"start":{"line":460,"column":6},"end":{"line":460,"column":44}},"197":{"start":{"line":465,"column":4},"end":{"line":467,"column":5}},"198":{"start":{"line":466,"column":6},"end":{"line":466,"column":128}},"199":{"start":{"line":471,"column":4},"end":{"line":471,"column":33}},"200":{"start":{"line":472,"column":4},"end":{"line":472,"column":35}},"201":{"start":{"line":476,"column":4},"end":{"line":478,"column":5}},"202":{"start":{"line":477,"column":6},"end":{"line":477,"column":61}},"203":{"start":{"line":493,"column":0},"end":{"line":496,"column":1}},"204":{"start":{"line":494,"column":2},"end":{"line":494,"column":54}},"205":{"start":{"line":495,"column":2},"end":{"line":495,"column":29}},"206":{"start":{"line":498,"column":0},"end":{"line":498,"column":46}},"207":{"start":{"line":499,"column":0},"end":{"line":499,"column":36}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"2":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"3":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"4":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":2},"end":{"line":94,"column":2}},{"start":{"line":94,"column":2},"end":{"line":94,"column":2}}]},"5":{"line":98,"type":"cond-expr","locations":[{"start":{"line":98,"column":49},"end":{"line":98,"column":53}},{"start":{"line":98,"column":56},"end":{"line":98,"column":72}}]},"6":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"7":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":8},"end":{"line":99,"column":31}},{"start":{"line":99,"column":35},"end":{"line":99,"column":72}}]},"8":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":51},"end":{"line":103,"column":60}},{"start":{"line":103,"column":63},"end":{"line":103,"column":81}}]},"9":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"10":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":33}},{"start":{"line":104,"column":37},"end":{"line":104,"column":76}}]},"11":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"12":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":8},"end":{"line":108,"column":32}},{"start":{"line":108,"column":36},"end":{"line":108,"column":62}}]},"13":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"14":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":2},"end":{"line":149,"column":2}},{"start":{"line":149,"column":2},"end":{"line":149,"column":2}}]},"15":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":2},"end":{"line":163,"column":2}},{"start":{"line":163,"column":2},"end":{"line":163,"column":2}}]},"16":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]},"17":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":2},"end":{"line":174,"column":2}},{"start":{"line":174,"column":2},"end":{"line":174,"column":2}}]},"18":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":179,"column":2}},{"start":{"line":179,"column":2},"end":{"line":179,"column":2}}]},"19":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":6},"end":{"line":179,"column":21}},{"start":{"line":179,"column":25},"end":{"line":179,"column":41}}]},"20":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":2},"end":{"line":184,"column":2}},{"start":{"line":184,"column":2},"end":{"line":184,"column":2}}]},"21":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"22":{"line":205,"type":"binary-expr","locations":[{"start":{"line":205,"column":6},"end":{"line":205,"column":16}},{"start":{"line":205,"column":20},"end":{"line":205,"column":60}}]},"23":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":2},"end":{"line":227,"column":2}},{"start":{"line":227,"column":2},"end":{"line":227,"column":2}}]},"24":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":2},"end":{"line":231,"column":2}},{"start":{"line":231,"column":2},"end":{"line":231,"column":2}}]},"25":{"line":231,"type":"binary-expr","locations":[{"start":{"line":231,"column":6},"end":{"line":231,"column":31}},{"start":{"line":231,"column":35},"end":{"line":231,"column":63}}]},"26":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":2},"end":{"line":253,"column":2}},{"start":{"line":253,"column":2},"end":{"line":253,"column":2}}]},"27":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":2},"end":{"line":276,"column":2}},{"start":{"line":276,"column":2},"end":{"line":276,"column":2}}]},"28":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":2},"end":{"line":297,"column":2}},{"start":{"line":297,"column":2},"end":{"line":297,"column":2}}]},"29":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":2},"end":{"line":301,"column":2}},{"start":{"line":301,"column":2},"end":{"line":301,"column":2}}]},"30":{"line":301,"type":"binary-expr","locations":[{"start":{"line":301,"column":6},"end":{"line":301,"column":22}},{"start":{"line":301,"column":26},"end":{"line":301,"column":43}}]},"31":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":2},"end":{"line":305,"column":2}},{"start":{"line":305,"column":2},"end":{"line":305,"column":2}}]},"32":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":2},"end":{"line":309,"column":2}},{"start":{"line":309,"column":2},"end":{"line":309,"column":2}}]},"33":{"line":309,"type":"binary-expr","locations":[{"start":{"line":309,"column":6},"end":{"line":309,"column":59}},{"start":{"line":309,"column":63},"end":{"line":309,"column":95}},{"start":{"line":309,"column":99},"end":{"line":309,"column":226}}]},"34":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":2},"end":{"line":333,"column":2}},{"start":{"line":333,"column":2},"end":{"line":333,"column":2}}]},"35":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":2},"end":{"line":338,"column":2}},{"start":{"line":338,"column":2},"end":{"line":338,"column":2}}]},"36":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":4},"end":{"line":339,"column":4}},{"start":{"line":339,"column":4},"end":{"line":339,"column":4}}]},"37":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":4},"end":{"line":344,"column":4}},{"start":{"line":344,"column":4},"end":{"line":344,"column":4}}]},"38":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":6},"end":{"line":362,"column":6}},{"start":{"line":362,"column":6},"end":{"line":362,"column":6}}]},"39":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":2},"end":{"line":385,"column":2}},{"start":{"line":385,"column":2},"end":{"line":385,"column":2}}]},"40":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":2},"end":{"line":406,"column":2}},{"start":{"line":406,"column":2},"end":{"line":406,"column":2}}]},"41":{"line":406,"type":"binary-expr","locations":[{"start":{"line":406,"column":6},"end":{"line":406,"column":11}},{"start":{"line":406,"column":15},"end":{"line":406,"column":25}}]},"42":{"line":427,"type":"if","locations":[{"start":{"line":427,"column":4},"end":{"line":427,"column":4}},{"start":{"line":427,"column":4},"end":{"line":427,"column":4}}]},"43":{"line":433,"type":"if","locations":[{"start":{"line":433,"column":4},"end":{"line":433,"column":4}},{"start":{"line":433,"column":4},"end":{"line":433,"column":4}}]},"44":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":4},"end":{"line":440,"column":4}},{"start":{"line":440,"column":4},"end":{"line":440,"column":4}}]},"45":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":4},"end":{"line":446,"column":4}},{"start":{"line":446,"column":4},"end":{"line":446,"column":4}}]},"46":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":4},"end":{"line":453,"column":4}},{"start":{"line":453,"column":4},"end":{"line":453,"column":4}}]},"47":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":4},"end":{"line":459,"column":4}},{"start":{"line":459,"column":4},"end":{"line":459,"column":4}}]},"48":{"line":459,"type":"binary-expr","locations":[{"start":{"line":459,"column":8},"end":{"line":459,"column":12}},{"start":{"line":459,"column":16},"end":{"line":459,"column":25}}]},"49":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":4},"end":{"line":465,"column":4}},{"start":{"line":465,"column":4},"end":{"line":465,"column":4}}]},"50":{"line":465,"type":"binary-expr","locations":[{"start":{"line":465,"column":8},"end":{"line":465,"column":12}},{"start":{"line":465,"column":16},"end":{"line":465,"column":32}}]},"51":{"line":476,"type":"if","locations":[{"start":{"line":476,"column":4},"end":{"line":476,"column":4}},{"start":{"line":476,"column":4},"end":{"line":476,"column":4}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var _ = require('underscore');","var util = require('util');","","var constants = require('./../util/constants');","var blobConstants = constants.BlobConstants;","var FileUtilities = require('./../../services/file/fileutilities');","var azureutil = require('./util');","var SR = require('./sr');","var check = require('validator');","var errors = require('../errors/errors');","var ArgumentError = errors.ArgumentError;","var ArgumentNullError = errors.ArgumentNullError;","","exports = module.exports;","","function initCallback(callbackParam, resultsCb) {","  var fail;","  if (callbackParam) {","    fail = function (err) {","      callbackParam(err);","      return false;","    };","  } else {","    fail = function (err) {","      throw err;","    };","    callbackParam = function () {};","  }","","  resultsCb(fail, callbackParam);","}","","/**","* Checks if the given value is a valid enumeration or not.","*","* @param {object} value     The value to validate.","* @param {object} list      The enumeration values.","* @return {boolean}","*/","exports.isValidEnumValue = function (value, list, callback) {","  var fail;","  ","  initCallback(callback, function (f, cb) {","    fail = f;","    callback = cb;","  });","","  if (!list.some(function (current) {","    return current.toLowerCase() === value.toLowerCase();","  })) {","    return fail(new RangeError(util.format('Invalid value: %s. Options are: %s.', value, list)));","  }","","  callback();","  return true;","};","","/**","* Creates a anonymous function that check if the given uri is valid or not.","*","* @param {string} uri     The uri to validate.","* @return {boolean}","*/","exports.isValidUri = function (uri) {","  if (!check.isURL(uri)){","    throw new URIError('The provided URI \"' + uri + '\" is invalid.');","  }","  return true;","};","","/**","* Checks if the given host is valid or not.","*","* @param {string|object} host     The host to validate.","* @return {boolean}","*/","exports.isValidHost= function (host) {","  if (azureutil.objectIsNull(host)) {","    throw new ArgumentNullError('host', SR.STORAGE_HOST_LOCATION_REQUIRED);","  } else {","    var storageHost = {};","    storageHost.primaryHost = _.isString(host) ? host : host.primaryHost;","    if (storageHost.primaryHost && !check.isURL(storageHost.primaryHost)){","      throw new URIError('The provided URI \"' + storageHost.primaryHost + '\" is invalid.');","    }","","    storageHost.secondaryHost = _.isString(host) ? undefined : host.secondaryHost;","    if (storageHost.secondaryHost && !check.isURL(storageHost.secondaryHost)){","      throw new URIError('The provided URI \"' + storageHost.secondaryHost + '\" is invalid.');","    }","","    if (!storageHost.primaryHost && !storageHost.secondaryHost) {","      throw new ArgumentNullError('host', SR.STORAGE_HOST_LOCATION_REQUIRED);","    }","  } ","","  return true;","};","","/**","* Checks if the given value is a valid UUID or not.","*","* @param {string|object} uuid     The uuid to validate.","* @return {boolean}","*/","exports.isValidUuid = function(uuid, callback) {","  var validUuidRegex = /^[a-zA-Z0-9]{8}\\-[a-zA-Z0-9]{4}\\-[a-zA-Z0-9]{4}\\-[a-zA-Z0-9]{4}\\-[a-zA-Z0-9]{12}$/;","","  var fail;","","  initCallback(callback, function (f, cb) {","    fail = f;","    callback = cb;","  });","","  if (!validUuidRegex.test(uuid)) {","    return fail(new SyntaxError('The value is not a valid UUID format.'));","  }","  ","  callback();","  return true;","};","","/**","* Creates a anonymous function that check if a given key is base 64 encoded.","*","* @param {string} key The key to validate.","* @return {function}","*/","exports.isBase64Encoded = function (key) {","  var isValidBase64String = key.match(/^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)$/);","","  if (isValidBase64String) {","    return true;","  } else {","    throw new SyntaxError('The provided account key ' + key + ' is not a valid base64 string.');","  }","};","","/**","* Validates a function.","*","* @param {object} function The function to validate.","* @return {function}","*/","exports.isValidFunction = function (functionObject, functionName) {","  if (!functionObject) {","    throw new ArgumentNullError('functionObject', functionName + ' must be specified.');","  }","  if(!_.isFunction(functionObject)){","    throw new TypeError(functionName + ' specified should be a function.');","  }","  return true;","};","","var getNameError = function(name, typeName) {","  // checks if name is null, undefined or empty","  if (azureutil.stringIsEmpty(name)) {","    return new ArgumentNullError('name', util.format('%s name must be a non empty string.', typeName));","  }","","  // check if name is between 3 and 63 characters","  if (name.length < 3 || name.length > 63) {","    return new ArgumentError('name', util.format('%s name must be between 3 and 63 characters long.', typeName));","  }","","  // check if name follows naming rules","  if (name.match(/^([a-z0-9]+(-[a-z0-9]+)*)$/) === null) {","    return new SyntaxError(util.format('%s name format is incorrect.', typeName));","  }","","  return null;","};","","/**","* Validates a container name.","*","* @param {string} containerName The container name.","*/","exports.containerNameIsValid = function (containerName, callback) {","  var fail;","  initCallback(callback, function (f, cb) {","    fail = f;","    callback = cb;","  });","","  var nameError = getNameError(containerName, 'Container');","","  if (!nameError || containerName.match(/^(\\$root|\\$logs)$/)) {","    callback();","    return true;","  } else {","    return fail(nameError);","  }","};","","/**","* Validates a blob name.","*","* @param {string} containerName The container name.","* @param {string} blobname      The blob name.","*/","exports.blobNameIsValid = function (containerName, blobName, callback) {","  var fail;","  ","  initCallback(callback, function (f, cb) {","    fail = f;","    callback = cb;","  });","  ","  if (!blobName) {","    return fail(new ArgumentNullError('blobName', 'Blob name is not specified.'));","  }","  ","  if (containerName === '$root' && blobName.indexOf('/') !== -1) {","    return fail(new SyntaxError('Blob name format is incorrect.'));","  }","  ","  callback();","  return true;","};","","/**","* Validates a share name.","*","* @param {string} shareName The share name.","*/","exports.shareNameIsValid = function (shareName, callback) {","  var fail;","  initCallback(callback, function (f, cb) {","    fail = f;","    callback = cb;","  });","","  var nameError = getNameError(shareName, 'Share');","","  if (!nameError) {","    callback();","    return true;","  } else {","    return fail(nameError);","  }","};","","/**","* Validates a queue name.","*","* @param {string} queueName The queue name.","*/","exports.queueNameIsValid = function (queueName, callback) {","  var fail;","","  initCallback(callback, function (f, cb) {","    fail = f;","    callback = cb;","  });","","  var nameError = getNameError(queueName, 'Queue');","","  if (!nameError) {","    callback();","    return true;","  } else {","    return fail(nameError);","  }","};","","/**","* Validates a table name.","*","* @param {string} table  The table name.","*/","exports.tableNameIsValid = function (table, callback) {","  var fail;","","  initCallback(callback, function (f, cb) {","    fail = f;","    callback = cb;","  });","","  if (azureutil.stringIsEmpty(table)) {","    return fail(new ArgumentNullError('table', 'Table name must be a non empty string.'));","  }","","  if (table.length < 3 || table.length > 63) {","    return fail(new ArgumentError('table', 'Table name must be between 3 and 63 characters long.'));","  }","","  if(table.toLowerCase() == 'tables') {","    return fail(new RangeError('Table name cannot be \\'Tables\\'.'));","  }","","  if (table.match(/^([A-Za-z][A-Za-z0-9]{2,62})$/) !== null || table === '$MetricsCapacityBlob' || table.match(/^(\\$Metrics(HourPrimary|MinutePrimary|HourSecondary|MinuteSecondary)?(Transactions)(Blob|Queue|Table))$/) !== null) ","  {","    callback();","    return true;","  } else {","    return fail(new SyntaxError('Table name format is incorrect.'));","  }","};","","/**","* Validates page ranges.","*","* @param {int} rangeStart             The range starting position.","* @param {int} rangeEnd               The range ending position.","* @param {int} writeBlockSizeInBytes  The block size.","*/","exports.pageRangesAreValid = function (rangeStart, rangeEnd, writeBlockSizeInBytes, callback) {","  var fail;","","  initCallback(callback, function (f, cb) {","    fail = f;","    callback = cb;","  });","","  if (rangeStart % 512 !== 0) {","    return fail(new RangeError('Start byte offset must be a multiple of 512.'));","  }","","  var size = null;","  if (!azureutil.objectIsNull(rangeEnd)) {","    if ((rangeEnd + 1) % 512 !== 0) {","      return fail(new RangeError('End byte offset must be a multiple of 512 minus 1.'));","    }","","    size = (rangeEnd - rangeStart) + 1;","    if (size > writeBlockSizeInBytes) {","      return fail(new RangeError('Page blob size cannot be larger than ' + writeBlockSizeInBytes + ' bytes.'));","    }","  }","  ","  callback();","  return true;","};","","/**","* Validates a blob type.","*","* @param {string} type  The type name.","*/","exports.blobTypeIsValid = function (type, callback) {","  var getEnumValues = function (obj) {","    var values = [];","    for (var prop in obj) {","      if (obj.hasOwnProperty(prop)) {","        values.push(obj[prop]);","      }","    }","    return values;","  };","  ","  return this.isValidEnumValue(type, getEnumValues(blobConstants.BlobTypes), callback);","};","","/**","* Validates share ACL type.","*","* @param {string} type  The type name.","*/","exports.shareACLIsValid = function (type, callback) {","  var fail;","  ","  initCallback(callback, function (f, cb) {","    fail = f;","    callback = cb;","  });","  ","  if (type != FileUtilities.SharePublicAccessType.OFF) {","    fail(new ArgumentError('type', 'The access type is not supported.'));","  }","","  callback();","  return true;","};","","/**","* Validates share quota value.","*","* @param {int} type  The quota value.","*/","exports.shareQuotaIsValid = function (quota, callback) {","  var fail;","  ","  initCallback(callback, function (f, cb) {","    fail = f;","    callback = cb;","  });","  ","  if (quota && quota <= 0) {","    fail(new RangeError('The share quota value, in GB, must be greater than 0.'));","  }","  ","  callback();","  return true;","};","","// common functions for validating arguments","","function throwMissingArgument(name, func) {","  throw new ArgumentNullError(name, 'Required argument ' + name + ' for function ' + func + ' is not defined');","}","","function ArgumentValidator(functionName) {","  this.func = functionName;","}","","_.extend(ArgumentValidator.prototype, {","  string: function (val, name) {","    this.exists(val, name);","    if (typeof val !== 'string') {","      throw new TypeError('Parameter ' + name + ' for function ' + this.func + ' should be a non-empty string');","    }","  },","","  stringAllowEmpty: function (val, name) {","    if (typeof val !== 'string') {","      throw new TypeError('Parameter ' + name + ' for function ' + this.func + ' should be a string');","    }","  },","","  object: function (val, name) {","    this.exists(val, name);","    if (typeof val !== 'object') {","      throw new TypeError('Parameter ' + name + ' for function ' + this.func + ' should be an object');","    }","  },","","  exists: function (val, name) {","    if (!val) {","      throwMissingArgument(name, this.func);","    }","  },","","  function: function (val, name) {","    this.exists(val, name);","    if (typeof val !== 'function') {","      throw new TypeError('Parameter ' + name + ' for function ' + this.func + ' should be a function');","    }","  },","","  value: function (val, name) {","    if (!val && val !== 0) {","      throwMissingArgument(name, this.func);","    }","  },","","  nonEmptyArray: function (val, name) {","    if (!val || val.length === 0) {","      throw new TypeError('Required array argument ' + name + ' for function ' + this.func + ' is either not defined or empty');","    }","  },","","  callback: function (val) {","    this.exists(val, 'callback');","    this.function(val, 'callback');","  },","","  test: function (predicate, message) {","    if (!predicate()) {","      throw new Error(message + ' in function ' + this.func);","    }","  },","","  tableNameIsValid: exports.tableNameIsValid,","  containerNameIsValid: exports.containerNameIsValid,","  shareNameIsValid: exports.shareNameIsValid,","  blobNameIsValid: exports.blobNameIsValid,","  pageRangesAreValid: exports.pageRangesAreValid,","  queueNameIsValid: exports.queueNameIsValid,","  blobTypeIsValid: exports.blobTypeIsValid,","  shareACLIsValid: exports.shareACLIsValid,","  shareQuotaIsValid: exports.shareQuotaIsValid,","  isValidEnumValue: exports.isValidEnumValue","});","","function validateArgs(functionName, validationRules) {","  var validator = new ArgumentValidator(functionName);","  validationRules(validator);","}","","exports.ArgumentValidator = ArgumentValidator;","exports.validateArgs = validateArgs;"],"l":{"17":1,"18":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"30":1,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"40":0,"41":0,"43":0,"46":0,"56":1,"57":0,"59":0,"60":0,"61":0,"64":0,"65":0,"67":0,"70":0,"71":0,"80":1,"81":0,"82":0,"84":0,"93":1,"94":0,"95":0,"97":0,"98":0,"99":0,"100":0,"103":0,"104":0,"105":0,"108":0,"109":0,"113":0,"122":1,"123":0,"125":0,"127":0,"128":0,"129":0,"132":0,"133":0,"136":0,"137":0,"146":1,"147":0,"149":0,"150":0,"152":0,"162":1,"163":0,"164":0,"166":0,"167":0,"169":0,"172":1,"174":0,"175":0,"179":0,"180":0,"184":0,"185":0,"188":0,"196":1,"197":0,"198":0,"199":0,"200":0,"203":0,"205":0,"206":0,"207":0,"209":0,"219":1,"220":0,"222":0,"223":0,"224":0,"227":0,"228":0,"231":0,"232":0,"235":0,"236":0,"244":1,"245":0,"246":0,"247":0,"248":0,"251":0,"253":0,"254":0,"255":0,"257":0,"266":1,"267":0,"269":0,"270":0,"271":0,"274":0,"276":0,"277":0,"278":0,"280":0,"289":1,"290":0,"292":0,"293":0,"294":0,"297":0,"298":0,"301":0,"302":0,"305":0,"306":0,"309":0,"311":0,"312":0,"314":0,"325":1,"326":0,"328":0,"329":0,"330":0,"333":0,"334":0,"337":0,"338":0,"339":0,"340":0,"343":0,"344":0,"345":0,"349":0,"350":0,"358":1,"359":0,"360":0,"361":0,"362":0,"363":0,"366":0,"369":0,"377":1,"378":0,"380":0,"381":0,"382":0,"385":0,"386":0,"389":0,"390":0,"398":1,"399":0,"401":0,"402":0,"403":0,"406":0,"407":0,"410":0,"411":0,"416":1,"417":0,"420":1,"421":0,"424":1,"426":0,"427":0,"428":0,"433":0,"434":0,"439":0,"440":0,"441":0,"446":0,"447":0,"452":0,"453":0,"454":0,"459":0,"460":0,"465":0,"466":0,"471":0,"472":0,"476":0,"477":0,"493":1,"494":0,"495":0,"498":1,"499":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/file/fileutilities.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/file/fileutilities.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":25}},"2":{"start":{"line":24,"column":0},"end":{"line":60,"column":2}},"3":{"start":{"line":62,"column":0},"end":{"line":62,"column":31}}},"branchMap":{},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Expose 'FileUtilities'.","exports = module.exports;","","/**","* Defines constants, enums, and utility functions for use with the File service.","* @namespace FileUtilities","*/","var FileUtilities = {","  /**","  * Permission types","  *","  * @const","  * @enum {string}","  */","  SharedAccessPermissions: {","    READ: 'r',","    CREATE: 'c',","    WRITE: 'w',","    DELETE: 'd',","    LIST: 'l'","  },","","  /**","  * Listing details.","  *","  * @const","  * @enum {string}","  */","  ListingDetails: {","    METADATA: 'metadata'","  },","","  /**","  * File and share public access types.","  *","  * @const","  * @enum {string}","  */","  SharePublicAccessType: {","    OFF: null,","    SHARE: 'share',","    FILE: 'file'","  }","};","","module.exports = FileUtilities;"],"l":{"18":1,"24":1,"62":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/services/servicesettings.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/services/servicesettings.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":1,"12":1,"13":1,"14":1,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":3,"60":3,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":3,"69":1,"70":0,"71":0,"72":1,"73":0,"74":0,"75":1,"76":0,"77":0,"78":1,"79":11,"80":11,"81":11,"82":11,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":3,"8":0,"9":0,"10":0,"11":0,"12":11,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":31,"loc":{"start":{"line":31,"column":19},"end":{"line":31,"column":42}}},"2":{"name":"(anonymous_2)","line":48,"loc":{"start":{"line":48,"column":34},"end":{"line":48,"column":62}}},"3":{"name":"(anonymous_3)","line":59,"loc":{"start":{"line":59,"column":26},"end":{"line":59,"column":46}}},"4":{"name":"(anonymous_4)","line":71,"loc":{"start":{"line":71,"column":31},"end":{"line":71,"column":70}}},"5":{"name":"(anonymous_5)","line":119,"loc":{"start":{"line":119,"column":23},"end":{"line":119,"column":71}}},"6":{"name":"(anonymous_6)","line":120,"loc":{"start":{"line":120,"column":9},"end":{"line":120,"column":33}}},"7":{"name":"(anonymous_7)","line":168,"loc":{"start":{"line":168,"column":18},"end":{"line":168,"column":34}}},"8":{"name":"(anonymous_8)","line":171,"loc":{"start":{"line":171,"column":18},"end":{"line":171,"column":42}}},"9":{"name":"(anonymous_9)","line":198,"loc":{"start":{"line":198,"column":21},"end":{"line":198,"column":33}}},"10":{"name":"(anonymous_10)","line":208,"loc":{"start":{"line":208,"column":19},"end":{"line":208,"column":31}}},"11":{"name":"(anonymous_11)","line":218,"loc":{"start":{"line":218,"column":22},"end":{"line":218,"column":34}}},"12":{"name":"(anonymous_12)","line":230,"loc":{"start":{"line":230,"column":26},"end":{"line":230,"column":53}}},"13":{"name":"(anonymous_13)","line":246,"loc":{"start":{"line":246,"column":31},"end":{"line":246,"column":51}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":40}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":41}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":31}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":45}},"6":{"start":{"line":24,"column":0},"end":{"line":24,"column":25}},"7":{"start":{"line":29,"column":0},"end":{"line":29,"column":43}},"8":{"start":{"line":31,"column":0},"end":{"line":34,"column":2}},"9":{"start":{"line":32,"column":2},"end":{"line":32,"column":49}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":32}},"11":{"start":{"line":36,"column":0},"end":{"line":36,"column":35}},"12":{"start":{"line":37,"column":0},"end":{"line":37,"column":45}},"13":{"start":{"line":39,"column":0},"end":{"line":39,"column":36}},"14":{"start":{"line":48,"column":0},"end":{"line":50,"column":2}},"15":{"start":{"line":49,"column":2},"end":{"line":49,"column":133}},"16":{"start":{"line":59,"column":0},"end":{"line":61,"column":2}},"17":{"start":{"line":60,"column":2},"end":{"line":60,"column":101}},"18":{"start":{"line":71,"column":0},"end":{"line":107,"column":2}},"19":{"start":{"line":72,"column":2},"end":{"line":72,"column":35}},"20":{"start":{"line":75,"column":2},"end":{"line":75,"column":42}},"21":{"start":{"line":76,"column":2},"end":{"line":104,"column":3}},"22":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"23":{"start":{"line":78,"column":8},"end":{"line":78,"column":17}},"24":{"start":{"line":81,"column":4},"end":{"line":81,"column":41}},"25":{"start":{"line":82,"column":4},"end":{"line":87,"column":5}},"26":{"start":{"line":83,"column":8},"end":{"line":83,"column":60}},"27":{"start":{"line":84,"column":11},"end":{"line":87,"column":5}},"28":{"start":{"line":86,"column":6},"end":{"line":86,"column":68}},"29":{"start":{"line":89,"column":4},"end":{"line":89,"column":46}},"30":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"31":{"start":{"line":93,"column":6},"end":{"line":93,"column":84}},"32":{"start":{"line":96,"column":4},"end":{"line":96,"column":49}},"33":{"start":{"line":98,"column":4},"end":{"line":103,"column":5}},"34":{"start":{"line":99,"column":6},"end":{"line":99,"column":42}},"35":{"start":{"line":102,"column":6},"end":{"line":102,"column":90}},"36":{"start":{"line":106,"column":2},"end":{"line":106,"column":32}},"37":{"start":{"line":119,"column":0},"end":{"line":159,"column":2}},"38":{"start":{"line":120,"column":2},"end":{"line":158,"column":4}},"39":{"start":{"line":121,"column":4},"end":{"line":121,"column":25}},"40":{"start":{"line":122,"column":4},"end":{"line":122,"column":21}},"41":{"start":{"line":124,"column":4},"end":{"line":128,"column":5}},"42":{"start":{"line":125,"column":6},"end":{"line":127,"column":7}},"43":{"start":{"line":126,"column":8},"end":{"line":126,"column":54}},"44":{"start":{"line":130,"column":4},"end":{"line":150,"column":5}},"45":{"start":{"line":131,"column":6},"end":{"line":149,"column":7}},"46":{"start":{"line":132,"column":8},"end":{"line":132,"column":78}},"47":{"start":{"line":135,"column":8},"end":{"line":148,"column":9}},"48":{"start":{"line":137,"column":10},"end":{"line":137,"column":75}},"49":{"start":{"line":138,"column":10},"end":{"line":138,"column":60}},"50":{"start":{"line":140,"column":10},"end":{"line":144,"column":11}},"51":{"start":{"line":142,"column":12},"end":{"line":142,"column":39}},"52":{"start":{"line":143,"column":12},"end":{"line":143,"column":28}},"53":{"start":{"line":145,"column":15},"end":{"line":148,"column":9}},"54":{"start":{"line":147,"column":10},"end":{"line":147,"column":22}},"55":{"start":{"line":152,"column":4},"end":{"line":157,"column":5}},"56":{"start":{"line":154,"column":6},"end":{"line":154,"column":38}},"57":{"start":{"line":156,"column":6},"end":{"line":156,"column":20}},"58":{"start":{"line":168,"column":0},"end":{"line":191,"column":2}},"59":{"start":{"line":169,"column":2},"end":{"line":169,"column":79}},"60":{"start":{"line":171,"column":2},"end":{"line":188,"column":4}},"61":{"start":{"line":172,"column":4},"end":{"line":172,"column":56}},"62":{"start":{"line":173,"column":4},"end":{"line":176,"column":5}},"63":{"start":{"line":175,"column":6},"end":{"line":175,"column":18}},"64":{"start":{"line":179,"column":4},"end":{"line":184,"column":5}},"65":{"start":{"line":180,"column":6},"end":{"line":183,"column":7}},"66":{"start":{"line":182,"column":8},"end":{"line":182,"column":20}},"67":{"start":{"line":187,"column":4},"end":{"line":187,"column":141}},"68":{"start":{"line":190,"column":2},"end":{"line":190,"column":50}},"69":{"start":{"line":198,"column":0},"end":{"line":201,"column":2}},"70":{"start":{"line":199,"column":2},"end":{"line":199,"column":30}},"71":{"start":{"line":200,"column":2},"end":{"line":200,"column":56}},"72":{"start":{"line":208,"column":0},"end":{"line":211,"column":2}},"73":{"start":{"line":209,"column":2},"end":{"line":209,"column":35}},"74":{"start":{"line":210,"column":2},"end":{"line":210,"column":62}},"75":{"start":{"line":218,"column":0},"end":{"line":221,"column":2}},"76":{"start":{"line":219,"column":2},"end":{"line":219,"column":35}},"77":{"start":{"line":220,"column":2},"end":{"line":220,"column":61}},"78":{"start":{"line":230,"column":0},"end":{"line":236,"column":2}},"79":{"start":{"line":231,"column":2},"end":{"line":231,"column":23}},"80":{"start":{"line":232,"column":2},"end":{"line":232,"column":33}},"81":{"start":{"line":233,"column":2},"end":{"line":233,"column":44}},"82":{"start":{"line":235,"column":2},"end":{"line":235,"column":21}},"83":{"start":{"line":246,"column":0},"end":{"line":262,"column":2}},"84":{"start":{"line":247,"column":2},"end":{"line":247,"column":79}},"85":{"start":{"line":249,"column":2},"end":{"line":259,"column":3}},"86":{"start":{"line":250,"column":4},"end":{"line":258,"column":5}},"87":{"start":{"line":251,"column":6},"end":{"line":251,"column":64}},"88":{"start":{"line":253,"column":6},"end":{"line":257,"column":7}},"89":{"start":{"line":254,"column":8},"end":{"line":254,"column":21}},"90":{"start":{"line":256,"column":8},"end":{"line":256,"column":37}},"91":{"start":{"line":261,"column":2},"end":{"line":261,"column":52}}},"branchMap":{"1":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":33},"end":{"line":32,"column":39}},{"start":{"line":32,"column":43},"end":{"line":32,"column":47}}]},"2":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":17},"end":{"line":33,"column":20}},{"start":{"line":33,"column":24},"end":{"line":33,"column":31}}]},"3":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]},"4":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"5":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":11},"end":{"line":84,"column":11}},{"start":{"line":84,"column":11},"end":{"line":84,"column":11}}]},"6":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"7":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"8":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":6},"end":{"line":125,"column":6}},{"start":{"line":125,"column":6},"end":{"line":125,"column":6}}]},"9":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":6},"end":{"line":131,"column":6}},{"start":{"line":131,"column":6},"end":{"line":131,"column":6}}]},"10":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":8}},{"start":{"line":135,"column":8},"end":{"line":135,"column":8}}]},"11":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":10},"end":{"line":140,"column":10}},{"start":{"line":140,"column":10},"end":{"line":140,"column":10}}]},"12":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":15},"end":{"line":145,"column":15}},{"start":{"line":145,"column":15},"end":{"line":145,"column":15}}]},"13":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]},"14":{"line":154,"type":"cond-expr","locations":[{"start":{"line":154,"column":24},"end":{"line":154,"column":30}},{"start":{"line":154,"column":33},"end":{"line":154,"column":37}}]},"15":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"16":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":6},"end":{"line":180,"column":6}},{"start":{"line":180,"column":6},"end":{"line":180,"column":6}}]},"17":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":250,"column":4}},{"start":{"line":250,"column":4},"end":{"line":250,"column":4}}]},"18":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":6},"end":{"line":253,"column":6}},{"start":{"line":253,"column":6},"end":{"line":253,"column":6}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var util = require('util');","","var azureUtil = require('../util/util');","var errors = require('../errors/errors');","var SR = require('../util/sr');","var Constants = require('../util/constants');","","exports = module.exports;","","/**","* The default protocol.","*/","exports.DEFAULT_PROTOCOL = Constants.HTTPS;","","var NoMatchError = function (msg, constr) {","  errors.captureStackTrace(this, constr || this);","  this.message = msg || 'Error';","};","","util.inherits(NoMatchError, Error);","NoMatchError.prototype.name = 'NoMatchError';","","exports.NoMatchError = NoMatchError;","","/**","* Throws an exception if the connection string format does not match any of the","* available formats.","*","* @param {string} connectionString The invalid formatted connection string.","* @return none","*/","exports.noMatchConnectionString = function (connectionString) {","  throw new NoMatchError('The provided connection string \"' + connectionString + '\" does not have complete configuration settings.');","};","","/**","* Throws an exception if the settings dont match any of the","* available formats.","*","* @param {object} settings The invalid settings.","* @return none","*/","exports.noMatchSettings = function (settings) {","  throw new NoMatchError('The provided settings ' + JSON.stringify(settings) + ' are not complete.');","};","","/**","* Parses the connection string and then validate that the parsed keys belong to","* the validSettingKeys","*","* @param {string} connectionString The user provided connection string.","* @param {array}  validKeys        The valid keys.","* @return {array} The tokenized connection string keys.","*/","exports.parseAndValidateKeys = function (connectionString, validKeys) {","  var parsedConnectionString = { };","","  // parse key/value pairs from connection string","  var pairs = connectionString.split(';');","  for (var m = 0; m < pairs.length; m++) {","    if (pairs[m].length === 0) {","        continue;","    }","","    var equalDex = pairs[m].indexOf('=');","    if (equalDex < 0) {","        throw new SyntaxError(SR.INVALID_CONNECTION_STRING);","    } else if (equalDex === 0) {","      // empty key name.","      throw new SyntaxError(SR.INVALID_CONNECTION_STRING_EMPTY_KEY);","    }","","    var key = pairs[m].substring(0, equalDex);","","    // assure that all given keys are valid.","    if (!azureUtil.inArrayInsensitive(key, validKeys)) {","      throw new SyntaxError(util.format(SR.INVALID_CONNECTION_STRING_BAD_KEY, key));","    }","","    var value = pairs[m].substring(equalDex + 1);","    ","    if(typeof parsedConnectionString[key] === 'undefined'){","      parsedConnectionString[key] = value;","    } else {","      // duplicate key name","      throw new SyntaxError(util.format(SR.INVALID_CONNECTION_STRING_DUPLICATE_KEY, key));","    }","  }","","  return parsedConnectionString;","};","","/**","* Creates an anonymous function that acts as predicate to perform a validation.","*","* @param array   {requirements} The array of conditions to satisfy.","* @param boolean {isRequired}   Either these conditions are all required or all","* optional.","* @param boolean {atLeastOne}   Indicates that at least one requirement must","* succeed.","* @return {function}","*/","exports.getValidator = function (requirements, isRequired, atLeastOne) {","  return function (userSettings) {","    var oneFound = false;","    var result = { };","","    for (var key in userSettings) {","      if (userSettings.hasOwnProperty(key)) {","        result[key.toLowerCase()] = userSettings[key];","      }","    }","","    for (var requirement in requirements) {","      if (requirements.hasOwnProperty(requirement)) {","        var settingName = requirements[requirement].SettingName.toLowerCase();","","        // Check if the setting name exists in the provided user settings.","        if (result[settingName]) {","          // Check if the provided user setting value is valid.","          var validationFunc = requirements[requirement].SettingConstraint;","          var isValid = validationFunc(result[settingName]);","","          if (isValid) {","            // Remove the setting as indicator for successful validation.","            delete result[settingName];","            oneFound = true;","          }","        } else if (isRequired) {","          // If required then fail because the setting does not exist","          return null;","        }","      }","    }","","    if (atLeastOne) {","      // At least one requirement must succeed, otherwise fail.","      return oneFound ? result : null;","    } else {","      return result;","    }","  };","};","","/**","* Creates a setting value condition that validates it is one of the","* passed valid values.","*","* @param {string} name The setting key name.","* @return {array}","*/","exports.setting = function (name) {","  var validValues = Array.prototype.slice.call(arguments, 1, arguments.length);","","  var predicate = function (settingValue) {","    var validValuesString = JSON.stringify(validValues);","    if (validValues.length === 0) {","      // No restrictions, succeed.","      return true;","    }","","    // Check to find if the settingValue is valid or not.","    for (var index = 0; index < validValues.length; index++) {","      if (settingValue.toString() == validValues[index].toString()) {","        // SettingValue is found in valid values set, succeed.","        return true;","      }","    }","","    // settingValue is missing in valid values set, fail.","    throw new RangeError('The provided config value ' + settingValue + ' does not belong to the valid values subset:\\n' + validValuesString);","  };","","  return exports.settingWithFunc(name, predicate);","};","","/**","* Creates an \"at lease one\" predicate for the provided list of requirements.","*","* @return callable","*/","exports.atLeastOne = function () {","  var allSettings = arguments;","  return exports.getValidator(allSettings, false, true);","};","","/**","* Creates an optional predicate for the provided list of requirements.","*","* @return {function}","*/","exports.optional = function () {","  var optionalSettings = arguments;","  return exports.getValidator(optionalSettings, false, false);","};","","/**","* Creates an required predicate for the provided list of requirements.","*","* @return {function}","*/","exports.allRequired = function () {","  var requiredSettings = arguments;","  return exports.getValidator(requiredSettings, true, false);","};","","/**","* Creates a setting value condition using the passed predicate.","*","* @param {string}   name      The setting key name.","* @param {function} predicate The setting value predicate.","* @return {array}","*/","exports.settingWithFunc = function (name, predicate) {","  var requirement = {};","  requirement.SettingName = name;","  requirement.SettingConstraint = predicate;","","  return requirement;","};","","","/**","* Tests to see if a given list of settings matches a set of filters exactly.","*","* @param array $settings The settings to check.","* @return boolean If any filter returns null, false. If there are any settings","* left over after all filters are processed, false. Otherwise true.","*/","exports.matchedSpecification = function (settings) {","  var constraints = Array.prototype.slice.call(arguments, 1, arguments.length);","","  for (var constraint in constraints) {","    if (constraints.hasOwnProperty(constraint)) {","      var remainingSettings = constraints[constraint](settings);","","      if (!remainingSettings) {","        return false;","      } else {","        settings = remainingSettings;","      }","    }","  }","","  return azureUtil.objectKeysLength(settings) === 0;","};"],"l":{"17":1,"19":1,"20":1,"21":1,"22":1,"24":1,"29":1,"31":1,"32":0,"33":0,"36":1,"37":1,"39":1,"48":1,"49":0,"59":1,"60":0,"71":1,"72":0,"75":0,"76":0,"77":0,"78":0,"81":0,"82":0,"83":0,"84":0,"86":0,"89":0,"92":0,"93":0,"96":0,"98":0,"99":0,"102":0,"106":0,"119":1,"120":0,"121":0,"122":0,"124":0,"125":0,"126":0,"130":0,"131":0,"132":0,"135":0,"137":0,"138":0,"140":0,"142":0,"143":0,"145":0,"147":0,"152":0,"154":0,"156":0,"168":1,"169":3,"171":3,"172":0,"173":0,"175":0,"179":0,"180":0,"182":0,"187":0,"190":3,"198":1,"199":0,"200":0,"208":1,"209":0,"210":0,"218":1,"219":0,"220":0,"230":1,"231":11,"232":11,"233":11,"235":11,"246":1,"247":0,"249":0,"250":0,"251":0,"253":0,"254":0,"256":0,"261":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/services/storageservicesettings.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/services/storageservicesettings.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":1,"124":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"StorageServiceSettings","line":88,"loc":{"start":{"line":88,"column":0},"end":{"line":88,"column":128}}},"2":{"name":"(anonymous_2)","line":116,"loc":{"start":{"line":116,"column":52},"end":{"line":116,"column":80}}},"3":{"name":"(anonymous_3)","line":131,"loc":{"start":{"line":131,"column":42},"end":{"line":131,"column":118}}},"4":{"name":"addIfNotNullOrEmpty","line":133,"loc":{"start":{"line":133,"column":2},"end":{"line":133,"column":42}}},"5":{"name":"(anonymous_5)","line":159,"loc":{"start":{"line":159,"column":47},"end":{"line":159,"column":59}}},"6":{"name":"(anonymous_6)","line":185,"loc":{"start":{"line":185,"column":44},"end":{"line":185,"column":64}}},"7":{"name":"(anonymous_7)","line":291,"loc":{"start":{"line":291,"column":62},"end":{"line":291,"column":82}}},"8":{"name":"(anonymous_8)","line":339,"loc":{"start":{"line":339,"column":55},"end":{"line":339,"column":75}}},"9":{"name":"(anonymous_9)","line":340,"loc":{"start":{"line":340,"column":24},"end":{"line":340,"column":65}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":25}},"3":{"start":{"line":22,"column":0},"end":{"line":22,"column":35}},"4":{"start":{"line":23,"column":0},"end":{"line":23,"column":51}},"5":{"start":{"line":24,"column":0},"end":{"line":24,"column":45}},"6":{"start":{"line":25,"column":0},"end":{"line":25,"column":76}},"7":{"start":{"line":26,"column":0},"end":{"line":26,"column":58}},"8":{"start":{"line":27,"column":0},"end":{"line":27,"column":43}},"9":{"start":{"line":28,"column":0},"end":{"line":28,"column":31}},"10":{"start":{"line":30,"column":0},"end":{"line":30,"column":116}},"11":{"start":{"line":31,"column":0},"end":{"line":31,"column":150}},"12":{"start":{"line":32,"column":0},"end":{"line":32,"column":133}},"13":{"start":{"line":33,"column":0},"end":{"line":33,"column":89}},"14":{"start":{"line":34,"column":0},"end":{"line":34,"column":121}},"15":{"start":{"line":35,"column":0},"end":{"line":35,"column":112}},"16":{"start":{"line":37,"column":0},"end":{"line":40,"column":2}},"17":{"start":{"line":42,"column":0},"end":{"line":45,"column":2}},"18":{"start":{"line":47,"column":0},"end":{"line":50,"column":2}},"19":{"start":{"line":52,"column":0},"end":{"line":55,"column":2}},"20":{"start":{"line":57,"column":0},"end":{"line":60,"column":2}},"21":{"start":{"line":62,"column":0},"end":{"line":74,"column":2}},"22":{"start":{"line":88,"column":0},"end":{"line":108,"column":1}},"23":{"start":{"line":89,"column":2},"end":{"line":89,"column":20}},"24":{"start":{"line":90,"column":2},"end":{"line":90,"column":18}},"25":{"start":{"line":92,"column":2},"end":{"line":96,"column":3}},"26":{"start":{"line":93,"column":4},"end":{"line":93,"column":39}},"27":{"start":{"line":95,"column":4},"end":{"line":95,"column":30}},"28":{"start":{"line":98,"column":2},"end":{"line":98,"column":36}},"29":{"start":{"line":99,"column":2},"end":{"line":99,"column":38}},"30":{"start":{"line":100,"column":2},"end":{"line":100,"column":38}},"31":{"start":{"line":101,"column":2},"end":{"line":101,"column":36}},"32":{"start":{"line":103,"column":2},"end":{"line":107,"column":3}},"33":{"start":{"line":104,"column":4},"end":{"line":104,"column":44}},"34":{"start":{"line":106,"column":4},"end":{"line":106,"column":34}},"35":{"start":{"line":116,"column":0},"end":{"line":129,"column":2}},"36":{"start":{"line":117,"column":2},"end":{"line":117,"column":92}},"37":{"start":{"line":119,"column":2},"end":{"line":128,"column":3}},"38":{"start":{"line":120,"column":4},"end":{"line":120,"column":72}},"39":{"start":{"line":122,"column":4},"end":{"line":127,"column":5}},"40":{"start":{"line":124,"column":6},"end":{"line":124,"column":64}},"41":{"start":{"line":126,"column":6},"end":{"line":126,"column":14}},"42":{"start":{"line":131,"column":0},"end":{"line":157,"column":2}},"43":{"start":{"line":132,"column":2},"end":{"line":132,"column":20}},"44":{"start":{"line":133,"column":2},"end":{"line":139,"column":3}},"45":{"start":{"line":134,"column":4},"end":{"line":138,"column":5}},"46":{"start":{"line":135,"column":6},"end":{"line":135,"column":28}},"47":{"start":{"line":136,"column":11},"end":{"line":138,"column":5}},"48":{"start":{"line":137,"column":6},"end":{"line":137,"column":28}},"49":{"start":{"line":142,"column":2},"end":{"line":149,"column":3}},"50":{"start":{"line":143,"column":4},"end":{"line":143,"column":46}},"51":{"start":{"line":144,"column":4},"end":{"line":144,"column":47}},"52":{"start":{"line":145,"column":4},"end":{"line":145,"column":47}},"53":{"start":{"line":146,"column":4},"end":{"line":146,"column":46}},"54":{"start":{"line":148,"column":4},"end":{"line":148,"column":103}},"55":{"start":{"line":151,"column":2},"end":{"line":151,"column":53}},"56":{"start":{"line":152,"column":2},"end":{"line":152,"column":54}},"57":{"start":{"line":153,"column":2},"end":{"line":153,"column":57}},"58":{"start":{"line":154,"column":2},"end":{"line":154,"column":56}},"59":{"start":{"line":156,"column":2},"end":{"line":156,"column":61}},"60":{"start":{"line":159,"column":0},"end":{"line":177,"column":2}},"61":{"start":{"line":160,"column":2},"end":{"line":160,"column":90}},"62":{"start":{"line":161,"column":2},"end":{"line":163,"column":3}},"63":{"start":{"line":162,"column":4},"end":{"line":162,"column":73}},"64":{"start":{"line":165,"column":2},"end":{"line":165,"column":121}},"65":{"start":{"line":166,"column":2},"end":{"line":168,"column":3}},"66":{"start":{"line":167,"column":4},"end":{"line":167,"column":79}},"67":{"start":{"line":170,"column":2},"end":{"line":170,"column":109}},"68":{"start":{"line":171,"column":2},"end":{"line":171,"column":114}},"69":{"start":{"line":172,"column":2},"end":{"line":174,"column":3}},"70":{"start":{"line":173,"column":4},"end":{"line":173,"column":103}},"71":{"start":{"line":176,"column":2},"end":{"line":176,"column":46}},"72":{"start":{"line":185,"column":0},"end":{"line":282,"column":2}},"73":{"start":{"line":187,"column":2},"end":{"line":191,"column":4}},"74":{"start":{"line":193,"column":2},"end":{"line":200,"column":3}},"75":{"start":{"line":194,"column":4},"end":{"line":197,"column":6}},"76":{"start":{"line":199,"column":4},"end":{"line":199,"column":63}},"77":{"start":{"line":203,"column":2},"end":{"line":217,"column":4}},"78":{"start":{"line":219,"column":2},"end":{"line":221,"column":3}},"79":{"start":{"line":220,"column":4},"end":{"line":220,"column":56}},"80":{"start":{"line":224,"column":2},"end":{"line":237,"column":4}},"81":{"start":{"line":239,"column":2},"end":{"line":241,"column":3}},"82":{"start":{"line":240,"column":4},"end":{"line":240,"column":56}},"83":{"start":{"line":244,"column":2},"end":{"line":256,"column":4}},"84":{"start":{"line":258,"column":2},"end":{"line":260,"column":3}},"85":{"start":{"line":259,"column":4},"end":{"line":259,"column":56}},"86":{"start":{"line":264,"column":2},"end":{"line":275,"column":4}},"87":{"start":{"line":277,"column":2},"end":{"line":279,"column":3}},"88":{"start":{"line":278,"column":4},"end":{"line":278,"column":56}},"89":{"start":{"line":281,"column":2},"end":{"line":281,"column":44}},"90":{"start":{"line":291,"column":0},"end":{"line":326,"column":2}},"91":{"start":{"line":292,"column":2},"end":{"line":294,"column":3}},"92":{"start":{"line":293,"column":4},"end":{"line":293,"column":59}},"93":{"start":{"line":296,"column":2},"end":{"line":296,"column":38}},"94":{"start":{"line":297,"column":2},"end":{"line":297,"column":34}},"95":{"start":{"line":298,"column":2},"end":{"line":298,"column":30}},"96":{"start":{"line":299,"column":2},"end":{"line":299,"column":36}},"97":{"start":{"line":301,"column":2},"end":{"line":304,"column":4}},"98":{"start":{"line":306,"column":2},"end":{"line":309,"column":4}},"99":{"start":{"line":311,"column":2},"end":{"line":314,"column":4}},"100":{"start":{"line":316,"column":2},"end":{"line":325,"column":4}},"101":{"start":{"line":339,"column":0},"end":{"line":416,"column":2}},"102":{"start":{"line":340,"column":2},"end":{"line":355,"column":4}},"103":{"start":{"line":341,"column":4},"end":{"line":341,"column":20}},"104":{"start":{"line":342,"column":4},"end":{"line":346,"column":5}},"105":{"start":{"line":343,"column":6},"end":{"line":343,"column":23}},"106":{"start":{"line":344,"column":6},"end":{"line":344,"column":75}},"107":{"start":{"line":345,"column":6},"end":{"line":345,"column":84}},"108":{"start":{"line":348,"column":4},"end":{"line":352,"column":5}},"109":{"start":{"line":349,"column":6},"end":{"line":349,"column":51}},"110":{"start":{"line":350,"column":6},"end":{"line":350,"column":151}},"111":{"start":{"line":351,"column":6},"end":{"line":351,"column":167}},"112":{"start":{"line":354,"column":4},"end":{"line":354,"column":23}},"113":{"start":{"line":357,"column":2},"end":{"line":360,"column":4}},"114":{"start":{"line":362,"column":2},"end":{"line":365,"column":4}},"115":{"start":{"line":367,"column":2},"end":{"line":370,"column":4}},"116":{"start":{"line":372,"column":2},"end":{"line":375,"column":4}},"117":{"start":{"line":377,"column":2},"end":{"line":380,"column":4}},"118":{"start":{"line":382,"column":2},"end":{"line":386,"column":97}},"119":{"start":{"line":388,"column":2},"end":{"line":392,"column":99}},"120":{"start":{"line":394,"column":2},"end":{"line":398,"column":99}},"121":{"start":{"line":400,"column":2},"end":{"line":404,"column":97}},"122":{"start":{"line":407,"column":2},"end":{"line":415,"column":4}},"123":{"start":{"line":418,"column":0},"end":{"line":418,"column":45}},"124":{"start":{"line":420,"column":0},"end":{"line":420,"column":50}}},"branchMap":{"1":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":2},"end":{"line":92,"column":2}},{"start":{"line":92,"column":2},"end":{"line":92,"column":2}}]},"2":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":6},"end":{"line":92,"column":14}},{"start":{"line":92,"column":18},"end":{"line":92,"column":37}}]},"3":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":2},"end":{"line":103,"column":2}},{"start":{"line":103,"column":2},"end":{"line":103,"column":2}}]},"4":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"5":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"6":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":7},"end":{"line":134,"column":32}},{"start":{"line":134,"column":36},"end":{"line":134,"column":62}}]},"7":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":11},"end":{"line":136,"column":11}},{"start":{"line":136,"column":11},"end":{"line":136,"column":11}}]},"8":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":15},"end":{"line":136,"column":39}},{"start":{"line":136,"column":43},"end":{"line":136,"column":68}}]},"9":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":142,"column":2}},{"start":{"line":142,"column":2},"end":{"line":142,"column":2}}]},"10":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":2},"end":{"line":161,"column":2}},{"start":{"line":161,"column":2},"end":{"line":161,"column":2}}]},"11":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]},"12":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"13":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":5},"end":{"line":172,"column":19}},{"start":{"line":172,"column":23},"end":{"line":172,"column":39}}]},"14":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]},"15":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":2},"end":{"line":219,"column":2}},{"start":{"line":219,"column":2},"end":{"line":219,"column":2}}]},"16":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":2},"end":{"line":239,"column":2}},{"start":{"line":239,"column":2},"end":{"line":239,"column":2}}]},"17":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":2},"end":{"line":258,"column":2}},{"start":{"line":258,"column":2},"end":{"line":258,"column":2}}]},"18":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":2},"end":{"line":277,"column":2}},{"start":{"line":277,"column":2},"end":{"line":277,"column":2}}]},"19":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":2},"end":{"line":292,"column":2}},{"start":{"line":292,"column":2},"end":{"line":292,"column":2}}]},"20":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":4},"end":{"line":342,"column":4}},{"start":{"line":342,"column":4},"end":{"line":342,"column":4}}]},"21":{"line":344,"type":"cond-expr","locations":[{"start":{"line":344,"column":51},"end":{"line":344,"column":55}},{"start":{"line":344,"column":58},"end":{"line":344,"column":74}}]},"22":{"line":345,"type":"cond-expr","locations":[{"start":{"line":345,"column":53},"end":{"line":345,"column":62}},{"start":{"line":345,"column":65},"end":{"line":345,"column":83}}]},"23":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":4},"end":{"line":348,"column":4}},{"start":{"line":348,"column":4},"end":{"line":348,"column":4}}]},"24":{"line":348,"type":"binary-expr","locations":[{"start":{"line":348,"column":8},"end":{"line":348,"column":14}},{"start":{"line":348,"column":18},"end":{"line":348,"column":29}},{"start":{"line":348,"column":33},"end":{"line":348,"column":36}}]},"25":{"line":349,"type":"cond-expr","locations":[{"start":{"line":349,"column":34},"end":{"line":349,"column":45}},{"start":{"line":349,"column":48},"end":{"line":349,"column":50}}]},"26":{"line":350,"type":"cond-expr","locations":[{"start":{"line":350,"column":58},"end":{"line":350,"column":81}},{"start":{"line":350,"column":84},"end":{"line":350,"column":150}}]},"27":{"line":351,"type":"cond-expr","locations":[{"start":{"line":351,"column":62},"end":{"line":351,"column":87}},{"start":{"line":351,"column":90},"end":{"line":351,"column":166}}]},"28":{"line":386,"type":"cond-expr","locations":[{"start":{"line":386,"column":23},"end":{"line":386,"column":47}},{"start":{"line":386,"column":50},"end":{"line":386,"column":95}}]},"29":{"line":392,"type":"cond-expr","locations":[{"start":{"line":392,"column":23},"end":{"line":392,"column":48}},{"start":{"line":392,"column":51},"end":{"line":392,"column":97}}]},"30":{"line":398,"type":"cond-expr","locations":[{"start":{"line":398,"column":23},"end":{"line":398,"column":48}},{"start":{"line":398,"column":51},"end":{"line":398,"column":97}}]},"31":{"line":404,"type":"cond-expr","locations":[{"start":{"line":404,"column":23},"end":{"line":404,"column":47}},{"start":{"line":404,"column":50},"end":{"line":404,"column":95}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","'use strict';","","var _ = require('underscore');","var url = require('url');","","var util = require('../util/util');","var ServiceSettings = require('./servicesettings');","var Constants = require('../util/constants');","var StorageServiceClientConstants = Constants.StorageServiceClientConstants;","var ConnectionStringKeys = Constants.ConnectionStringKeys;","var Validate = require('../util/validate');","var SR = require('../util/sr');","","var useDevelopmentStorageSetting = ServiceSettings.setting(ConnectionStringKeys.USE_DEVELOPMENT_STORAGE_NAME, true);","var developmentStorageProxyUriSetting = ServiceSettings.settingWithFunc(ConnectionStringKeys.DEVELOPMENT_STORAGE_PROXY_URI_NAME, Validate.isValidUri);","var defaultEndpointsProtocolSetting = ServiceSettings.setting(ConnectionStringKeys.DEFAULT_ENDPOINTS_PROTOCOL_NAME, 'http', 'https');","var accountNameSetting = ServiceSettings.setting(ConnectionStringKeys.ACCOUNT_NAME_NAME);","var accountKeySetting = ServiceSettings.settingWithFunc(ConnectionStringKeys.ACCOUNT_KEY_NAME, Validate.isBase64Encoded);","var sasSetting = ServiceSettings.settingWithFunc(ConnectionStringKeys.SHARED_ACCESS_SIGNATURE_NAME, _.isString);","","var blobEndpointSetting = ServiceSettings.settingWithFunc(","  ConnectionStringKeys.BLOB_ENDPOINT_NAME,","  Validate.isValidHost",");","","var queueEndpointSetting = ServiceSettings.settingWithFunc(","  ConnectionStringKeys.QUEUE_ENDPOINT_NAME,","  Validate.isValidHost",");","","var tableEndpointSetting = ServiceSettings.settingWithFunc(","  ConnectionStringKeys.TABLE_ENDPOINT_NAME,","  Validate.isValidHost",");","","var fileEndpointSetting = ServiceSettings.settingWithFunc(","  ConnectionStringKeys.FILE_ENDPOINT_NAME,","  Validate.isValidHost",");","","var endpointSuffixSetting = ServiceSettings.settingWithFunc(","  ConnectionStringKeys.ENDPOINT_SUFFIX_NAME,","  Validate.isValidHost",");","","var validKeys = [","  ConnectionStringKeys.USE_DEVELOPMENT_STORAGE_NAME,","  ConnectionStringKeys.DEVELOPMENT_STORAGE_PROXY_URI_NAME,","  ConnectionStringKeys.DEFAULT_ENDPOINTS_PROTOCOL_NAME,","  ConnectionStringKeys.ACCOUNT_NAME_NAME,","  ConnectionStringKeys.ACCOUNT_KEY_NAME,","  ConnectionStringKeys.SHARED_ACCESS_SIGNATURE_NAME,","  ConnectionStringKeys.BLOB_ENDPOINT_NAME,","  ConnectionStringKeys.QUEUE_ENDPOINT_NAME,","  ConnectionStringKeys.TABLE_ENDPOINT_NAME,","  ConnectionStringKeys.FILE_ENDPOINT_NAME,","  ConnectionStringKeys.ENDPOINT_SUFFIX_NAME","];","","/**","* Creates new storage service settings instance.","*","* @param {string} name                      The storage service name.","* @param {string} key                       The storage service key.","* @param {string} sasToken                  The storage service shared access signature token.","* @param {string} blobEndpoint              The storage service blob endpoint.","* @param {string} queueEndpoint             The storage service queue endpoint.","* @param {string} tableEndpoint             The storage service table endpoint.","* @param {string} fileEndpoint              The storage service file endpoint.","* @param {bool}   usePathStyleUri           Boolean value indicating wether to use path style uri or not.","*/","function StorageServiceSettings(name, key, sasToken, blobEndpoint, queueEndpoint, tableEndpoint, fileEndpoint, usePathStyleUri) {","  this._name = name;","  this._key = key;","","  if (sasToken && sasToken[0] === '?') {","    this._sasToken = sasToken.slice(1);","  } else {","    this._sasToken = sasToken;","  }","","  this._blobEndpoint = blobEndpoint;","  this._queueEndpoint = queueEndpoint;","  this._tableEndpoint = tableEndpoint;","  this._fileEndpoint = fileEndpoint;","","  if (usePathStyleUri) {","    this._usePathStyleUri = usePathStyleUri;","  } else {","    this._usePathStyleUri = false;","  }","}","","/**","* Creates a StorageServiceSettings object from the given connection string.","*","* @param {string} connectionString The storage settings connection string.","* @return {StorageServiceSettings}","*/","StorageServiceSettings.createFromConnectionString = function (connectionString) {","  var tokenizedSettings = ServiceSettings.parseAndValidateKeys(connectionString, validKeys);","","  try {","    return StorageServiceSettings.createFromSettings(tokenizedSettings);","  } catch (e) {","    if (e instanceof ServiceSettings.NoMatchError) {","      // Replace no match settings exception by no match connection string one.","      ServiceSettings.noMatchConnectionString(connectionString);","    } else {","      throw e;","    }","  }","};","","StorageServiceSettings.createExplicitly = function (storageAccount, storageAccessKey, host, sasToken, endpointSuffix) {","  var settings = {};","  function addIfNotNullOrEmpty(key, value){","    if(typeof value === 'string' && !util.stringIsEmpty(value)){","      settings[key] = value;","    } else if (typeof value == 'object' && !util.objectIsNull(value)) {","      settings[key] = value;","    }","  }","","  // Endpoints","  if (host) {","    addIfNotNullOrEmpty('blobendpoint', host);","    addIfNotNullOrEmpty('tableendpoint', host);","    addIfNotNullOrEmpty('queueendpoint', host);","    addIfNotNullOrEmpty('fileendpoint', host);","  } else {","    addIfNotNullOrEmpty('defaultendpointsprotocol', ServiceSettings.DEFAULT_PROTOCOL.split(':', 1)[0]);","  }","","  addIfNotNullOrEmpty('accountname', storageAccount);","  addIfNotNullOrEmpty('accountkey', storageAccessKey);","  addIfNotNullOrEmpty('sharedaccesssignature', sasToken);","  addIfNotNullOrEmpty('endpointsuffix', endpointSuffix);","","  return StorageServiceSettings.createFromSettings(settings);","};","","StorageServiceSettings.createFromEnvironment = function () {","  var emulated = process.env[StorageServiceClientConstants.EnvironmentVariables.EMULATED];","  if (emulated) {","    return StorageServiceSettings.getDevelopmentStorageAccountSettings();","  } ","","  var connectionString = process.env[StorageServiceClientConstants.EnvironmentVariables.AZURE_STORAGE_CONNECTION_STRING];","  if (connectionString) {","    return StorageServiceSettings.createFromConnectionString(connectionString);","  } ","","  var storageAccount = process.env[StorageServiceClientConstants.EnvironmentVariables.AZURE_STORAGE_ACCOUNT];","  var storageAccessKey = process.env[StorageServiceClientConstants.EnvironmentVariables.AZURE_STORAGE_ACCESS_KEY];","  if(storageAccount && storageAccessKey){","    return StorageServiceSettings.createExplicitly(storageAccount, storageAccessKey, null, null, null);","  }","","  throw new Error(SR.NO_CREDENTIALS_PROVIDED);","};","","/**","* Creates a StorageServiceSettings object from a set of settings.","*","* @param {object} settings The settings object.","* @return {StorageServiceSettings}","*/","StorageServiceSettings.createFromSettings = function (settings) {","  // Devstore case","  var matchedSpecs = ServiceSettings.matchedSpecification(","    settings,","    ServiceSettings.allRequired(useDevelopmentStorageSetting),","    ServiceSettings.optional(developmentStorageProxyUriSetting)","  );","","  if (matchedSpecs) {","    var proxyUri = util.tryGetValueInsensitive(","      ConnectionStringKeys.DEVELOPMENT_STORAGE_PROXY_URI_NAME,","      settings","    );","","    return this.getDevelopmentStorageAccountSettings(proxyUri);","  }","","  // Account/Key automatic case","  matchedSpecs = ServiceSettings.matchedSpecification(","    settings,","    ServiceSettings.allRequired(","      defaultEndpointsProtocolSetting,","      accountNameSetting,","      accountKeySetting","    ), ","    ServiceSettings.optional(","      blobEndpointSetting,","      queueEndpointSetting,","      tableEndpointSetting,","      fileEndpointSetting,","      endpointSuffixSetting","    )","  );","","  if (matchedSpecs) {  ","    return this._createStorageServiceSettings(settings);","  }","","  // Account/Key explicit case","  matchedSpecs = ServiceSettings.matchedSpecification(","    settings,","    ServiceSettings.allRequired(","      accountNameSetting,","      accountKeySetting","    ),","    ServiceSettings.atLeastOne(","      blobEndpointSetting,","      queueEndpointSetting,","      tableEndpointSetting,","      fileEndpointSetting,","      endpointSuffixSetting","    )","  );","","  if (matchedSpecs) {  ","    return this._createStorageServiceSettings(settings);","  }","","  // SAS case","  matchedSpecs = ServiceSettings.matchedSpecification(","    settings,","    ServiceSettings.allRequired(","      sasSetting","    ),","    ServiceSettings.atLeastOne(","      blobEndpointSetting,","      queueEndpointSetting,","      tableEndpointSetting,","      fileEndpointSetting,","      endpointSuffixSetting","    )","  );","","  if(matchedSpecs) {","    return this._createStorageServiceSettings(settings);","  }","","  // anonymous explicit case","  // Only blob anonymous access is valid.","  matchedSpecs = ServiceSettings.matchedSpecification(","    settings,","    ServiceSettings.allRequired(","      blobEndpointSetting","    ),","    ServiceSettings.optional(","      fileEndpointSetting,","      queueEndpointSetting,","      tableEndpointSetting,","      endpointSuffixSetting","    )","  );","","  if(matchedSpecs) {","    return this._createStorageServiceSettings(settings);","  }","","  ServiceSettings.noMatchSettings(settings);","};","","/**","* Returns a StorageServiceSettings with development storage credentials using","* the specified proxy Uri.","*","* @param {string} proxyUri The proxy endpoint to use.","* @return {StorageServiceSettings}","*/","StorageServiceSettings.getDevelopmentStorageAccountSettings = function (proxyUri) {","  if (!proxyUri) {","    proxyUri = StorageServiceClientConstants.DEV_STORE_URI;","  }","","  var parsedUri = url.parse(proxyUri);","  var scheme = parsedUri.protocol;","  var host   = parsedUri.host;","  var prefix = scheme + '//' + host;","","  var blobEndpoint = {","    primaryHost: prefix + ':10000' + '/' + StorageServiceClientConstants.DEVSTORE_STORAGE_ACCOUNT,","    secondaryHost: prefix + ':10000' + '/' + StorageServiceClientConstants.DEVSTORE_STORAGE_ACCOUNT + '-secondary'","  };","","  var queueEndpoint = {","    primaryHost: prefix + ':10001' + '/' + StorageServiceClientConstants.DEVSTORE_STORAGE_ACCOUNT,","    secondaryHost: prefix + ':10001' + '/' + StorageServiceClientConstants.DEVSTORE_STORAGE_ACCOUNT + '-secondary'","  };","","  var tableEndpoint = {","    primaryHost: prefix + ':10002' + '/' + StorageServiceClientConstants.DEVSTORE_STORAGE_ACCOUNT,","    secondaryHost: prefix + ':10002' + '/' + StorageServiceClientConstants.DEVSTORE_STORAGE_ACCOUNT + '-secondary'","  };","","  return new StorageServiceSettings(","    StorageServiceClientConstants.DEVSTORE_STORAGE_ACCOUNT,","    StorageServiceClientConstants.DEVSTORE_STORAGE_ACCESS_KEY,","    null,","    blobEndpoint,","    queueEndpoint,","    tableEndpoint,","    null,","    true","  );","};","","/**","* Creates StorageServiceSettings object given endpoints uri.","*","* @ignore","* @param {array}  settings         The service settings.","* @param {string} blobEndpointUri  The blob endpoint uri.","* @param {string} queueEndpointUri The queue endpoint uri.","* @param {string} tableEndpointUri The table endpoint uri.","* @param {string} fileEndpointUri  The file endpoint uri.","* @return {StorageServiceSettings}","*/","StorageServiceSettings._createStorageServiceSettings = function (settings) {","  var standardizeHost = function (host, accountName, scheme, dns){","    var storageHost;","    if (host) {","      storageHost = {};","      storageHost.primaryHost = _.isString(host) ? host : host.primaryHost;","      storageHost.secondaryHost = _.isString(host) ? undefined : host.secondaryHost;","    }","","    if (scheme && accountName && dns) {","      storageHost = storageHost ? storageHost : {};","      storageHost.primaryHost = storageHost.primaryHost ? storageHost.primaryHost : url.format({ protocol: scheme, hostname: accountName + '.' + dns});","      storageHost.secondaryHost = storageHost.secondaryHost ? storageHost.secondaryHost : url.format({ protocol: scheme, hostname: accountName + '-secondary.' + dns});","    }","","    return storageHost;","  };","","  var scheme = util.tryGetValueInsensitive(","    ConnectionStringKeys.DEFAULT_ENDPOINTS_PROTOCOL_NAME,","    settings","  );","","  var accountName = util.tryGetValueInsensitive(","    ConnectionStringKeys.ACCOUNT_NAME_NAME,","    settings","  );","","  var accountKey = util.tryGetValueInsensitive(","    ConnectionStringKeys.ACCOUNT_KEY_NAME,","    settings","  );","","  var sasToken = util.tryGetValueInsensitive(","    ConnectionStringKeys.SHARED_ACCESS_SIGNATURE_NAME,","    settings","  );","","  var endpointSuffix = util.tryGetValueInsensitive(","    ConnectionStringKeys.ENDPOINT_SUFFIX_NAME,","    settings","  );","","  var blobEndpoint = standardizeHost(","      util.tryGetValueInsensitive(ConnectionStringKeys.BLOB_ENDPOINT_NAME, settings),","      accountName,","      scheme,","      endpointSuffix ? 'blob.' + endpointSuffix : StorageServiceClientConstants.CLOUD_BLOB_HOST);","","  var queueEndpoint = standardizeHost(","      util.tryGetValueInsensitive(ConnectionStringKeys.QUEUE_ENDPOINT_NAME, settings),","      accountName,","      scheme,","      endpointSuffix ? 'queue.' + endpointSuffix : StorageServiceClientConstants.CLOUD_QUEUE_HOST);","","  var tableEndpoint = standardizeHost(","      util.tryGetValueInsensitive(ConnectionStringKeys.TABLE_ENDPOINT_NAME, settings),","      accountName,","      scheme,","      endpointSuffix ? 'table.' + endpointSuffix : StorageServiceClientConstants.CLOUD_TABLE_HOST);","","  var fileEndpoint = standardizeHost(","      util.tryGetValueInsensitive(ConnectionStringKeys.FILE_ENDPOINT_NAME, settings),","      accountName,","      scheme,","      endpointSuffix ? 'file.' + endpointSuffix : StorageServiceClientConstants.CLOUD_FILE_HOST);","","","  return new StorageServiceSettings(","    accountName,","    accountKey,","    sasToken,","    blobEndpoint,","    queueEndpoint,","    tableEndpoint,","    fileEndpoint","  );","};","","StorageServiceSettings.validKeys = validKeys;","","exports = module.exports = StorageServiceSettings;"],"l":{"19":1,"20":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"37":1,"42":1,"47":1,"52":1,"57":1,"62":1,"88":1,"89":0,"90":0,"92":0,"93":0,"95":0,"98":0,"99":0,"100":0,"101":0,"103":0,"104":0,"106":0,"116":1,"117":0,"119":0,"120":0,"122":0,"124":0,"126":0,"131":1,"132":0,"133":1,"134":0,"135":0,"136":0,"137":0,"142":0,"143":0,"144":0,"145":0,"146":0,"148":0,"151":0,"152":0,"153":0,"154":0,"156":0,"159":1,"160":0,"161":0,"162":0,"165":0,"166":0,"167":0,"170":0,"171":0,"172":0,"173":0,"176":0,"185":1,"187":0,"193":0,"194":0,"199":0,"203":0,"219":0,"220":0,"224":0,"239":0,"240":0,"244":0,"258":0,"259":0,"264":0,"277":0,"278":0,"281":0,"291":1,"292":0,"293":0,"296":0,"297":0,"298":0,"299":0,"301":0,"306":0,"311":0,"316":0,"339":1,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"348":0,"349":0,"350":0,"351":0,"354":0,"357":0,"362":0,"367":0,"372":0,"377":0,"382":0,"388":0,"394":0,"400":0,"407":0,"418":1,"420":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/models/servicepropertiesresult.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/models/servicepropertiesresult.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":1,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"serializeRetentionPolicy","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":46}}},"2":{"name":"serializeLogging","line":57,"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":39}}},"3":{"name":"serializeMetrics","line":103,"loc":{"start":{"line":103,"column":0},"end":{"line":103,"column":39}}},"4":{"name":"serializeCorsRules","line":138,"loc":{"start":{"line":138,"column":0},"end":{"line":138,"column":39}}},"5":{"name":"(anonymous_5)","line":140,"loc":{"start":{"line":140,"column":18},"end":{"line":140,"column":34}}},"6":{"name":"(anonymous_6)","line":190,"loc":{"start":{"line":190,"column":20},"end":{"line":190,"column":51}}},"7":{"name":"parseRetentionPolicy","line":227,"loc":{"start":{"line":227,"column":0},"end":{"line":227,"column":40}}},"8":{"name":"parseLogging","line":241,"loc":{"start":{"line":241,"column":0},"end":{"line":241,"column":33}}},"9":{"name":"parseMetrics","line":267,"loc":{"start":{"line":267,"column":0},"end":{"line":267,"column":33}}},"10":{"name":"parseCors","line":289,"loc":{"start":{"line":289,"column":0},"end":{"line":289,"column":27}}},"11":{"name":"(anonymous_11)","line":299,"loc":{"start":{"line":299,"column":21},"end":{"line":299,"column":40}}},"12":{"name":"(anonymous_12)","line":349,"loc":{"start":{"line":349,"column":16},"end":{"line":349,"column":48}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":39}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":45}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":70}},"5":{"start":{"line":24,"column":0},"end":{"line":24,"column":25}},"6":{"start":{"line":26,"column":0},"end":{"line":55,"column":1}},"7":{"start":{"line":27,"column":2},"end":{"line":54,"column":3}},"8":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"9":{"start":{"line":29,"column":6},"end":{"line":29,"column":18}},"10":{"start":{"line":32,"column":4},"end":{"line":32,"column":71}},"11":{"start":{"line":33,"column":4},"end":{"line":41,"column":5}},"12":{"start":{"line":34,"column":6},"end":{"line":36,"column":21}},"13":{"start":{"line":38,"column":6},"end":{"line":40,"column":22}},"14":{"start":{"line":43,"column":4},"end":{"line":51,"column":5}},"15":{"start":{"line":44,"column":6},"end":{"line":46,"column":21}},"16":{"start":{"line":47,"column":11},"end":{"line":51,"column":5}},"17":{"start":{"line":48,"column":6},"end":{"line":50,"column":22}},"18":{"start":{"line":53,"column":4},"end":{"line":53,"column":19}},"19":{"start":{"line":57,"column":0},"end":{"line":101,"column":1}},"20":{"start":{"line":58,"column":2},"end":{"line":66,"column":3}},"21":{"start":{"line":59,"column":4},"end":{"line":61,"column":16}},"22":{"start":{"line":63,"column":4},"end":{"line":65,"column":12}},"23":{"start":{"line":68,"column":2},"end":{"line":76,"column":3}},"24":{"start":{"line":69,"column":4},"end":{"line":71,"column":16}},"25":{"start":{"line":73,"column":4},"end":{"line":75,"column":12}},"26":{"start":{"line":78,"column":2},"end":{"line":86,"column":3}},"27":{"start":{"line":79,"column":4},"end":{"line":81,"column":16}},"28":{"start":{"line":83,"column":4},"end":{"line":85,"column":12}},"29":{"start":{"line":88,"column":2},"end":{"line":96,"column":3}},"30":{"start":{"line":89,"column":4},"end":{"line":91,"column":16}},"31":{"start":{"line":93,"column":4},"end":{"line":95,"column":12}},"32":{"start":{"line":98,"column":2},"end":{"line":98,"column":57}},"33":{"start":{"line":100,"column":2},"end":{"line":100,"column":17}},"34":{"start":{"line":103,"column":0},"end":{"line":136,"column":1}},"35":{"start":{"line":104,"column":2},"end":{"line":112,"column":3}},"36":{"start":{"line":105,"column":4},"end":{"line":107,"column":16}},"37":{"start":{"line":109,"column":4},"end":{"line":111,"column":12}},"38":{"start":{"line":114,"column":2},"end":{"line":122,"column":3}},"39":{"start":{"line":115,"column":4},"end":{"line":117,"column":16}},"40":{"start":{"line":119,"column":4},"end":{"line":121,"column":12}},"41":{"start":{"line":124,"column":2},"end":{"line":134,"column":3}},"42":{"start":{"line":125,"column":4},"end":{"line":133,"column":5}},"43":{"start":{"line":126,"column":6},"end":{"line":128,"column":18}},"44":{"start":{"line":129,"column":11},"end":{"line":133,"column":5}},"45":{"start":{"line":130,"column":6},"end":{"line":132,"column":14}},"46":{"start":{"line":135,"column":2},"end":{"line":135,"column":57}},"47":{"start":{"line":138,"column":0},"end":{"line":188,"column":1}},"48":{"start":{"line":139,"column":2},"end":{"line":187,"column":3}},"49":{"start":{"line":140,"column":4},"end":{"line":186,"column":7}},"50":{"start":{"line":141,"column":6},"end":{"line":141,"column":66}},"51":{"start":{"line":143,"column":6},"end":{"line":147,"column":7}},"52":{"start":{"line":144,"column":8},"end":{"line":146,"column":22}},"53":{"start":{"line":149,"column":6},"end":{"line":153,"column":7}},"54":{"start":{"line":150,"column":8},"end":{"line":152,"column":22}},"55":{"start":{"line":155,"column":6},"end":{"line":163,"column":7}},"56":{"start":{"line":156,"column":8},"end":{"line":158,"column":22}},"57":{"start":{"line":160,"column":8},"end":{"line":162,"column":22}},"58":{"start":{"line":165,"column":6},"end":{"line":173,"column":7}},"59":{"start":{"line":166,"column":8},"end":{"line":168,"column":22}},"60":{"start":{"line":170,"column":8},"end":{"line":172,"column":22}},"61":{"start":{"line":175,"column":6},"end":{"line":183,"column":7}},"62":{"start":{"line":176,"column":8},"end":{"line":178,"column":22}},"63":{"start":{"line":180,"column":8},"end":{"line":182,"column":22}},"64":{"start":{"line":185,"column":6},"end":{"line":185,"column":21}},"65":{"start":{"line":190,"column":0},"end":{"line":225,"column":2}},"66":{"start":{"line":191,"column":2},"end":{"line":191,"column":32}},"67":{"start":{"line":192,"column":2},"end":{"line":192,"column":120}},"68":{"start":{"line":194,"column":2},"end":{"line":198,"column":3}},"69":{"start":{"line":195,"column":4},"end":{"line":195,"column":62}},"70":{"start":{"line":196,"column":4},"end":{"line":196,"column":55}},"71":{"start":{"line":197,"column":4},"end":{"line":197,"column":19}},"72":{"start":{"line":200,"column":2},"end":{"line":204,"column":3}},"73":{"start":{"line":201,"column":4},"end":{"line":201,"column":67}},"74":{"start":{"line":202,"column":4},"end":{"line":202,"column":59}},"75":{"start":{"line":203,"column":4},"end":{"line":203,"column":19}},"76":{"start":{"line":206,"column":2},"end":{"line":210,"column":3}},"77":{"start":{"line":207,"column":4},"end":{"line":207,"column":69}},"78":{"start":{"line":208,"column":4},"end":{"line":208,"column":61}},"79":{"start":{"line":209,"column":4},"end":{"line":209,"column":19}},"80":{"start":{"line":212,"column":2},"end":{"line":216,"column":3}},"81":{"start":{"line":213,"column":4},"end":{"line":213,"column":59}},"82":{"start":{"line":214,"column":4},"end":{"line":214,"column":63}},"83":{"start":{"line":215,"column":4},"end":{"line":215,"column":19}},"84":{"start":{"line":218,"column":2},"end":{"line":222,"column":3}},"85":{"start":{"line":219,"column":4},"end":{"line":221,"column":19}},"86":{"start":{"line":224,"column":2},"end":{"line":224,"column":30}},"87":{"start":{"line":227,"column":0},"end":{"line":239,"column":1}},"88":{"start":{"line":228,"column":4},"end":{"line":228,"column":20}},"89":{"start":{"line":230,"column":4},"end":{"line":232,"column":5}},"90":{"start":{"line":231,"column":6},"end":{"line":231,"column":52}},"91":{"start":{"line":234,"column":4},"end":{"line":236,"column":5}},"92":{"start":{"line":235,"column":6},"end":{"line":235,"column":49}},"93":{"start":{"line":238,"column":4},"end":{"line":238,"column":18}},"94":{"start":{"line":241,"column":0},"end":{"line":265,"column":1}},"95":{"start":{"line":242,"column":2},"end":{"line":242,"column":19}},"96":{"start":{"line":244,"column":2},"end":{"line":246,"column":3}},"97":{"start":{"line":245,"column":4},"end":{"line":245,"column":41}},"98":{"start":{"line":248,"column":2},"end":{"line":250,"column":3}},"99":{"start":{"line":249,"column":4},"end":{"line":249,"column":50}},"100":{"start":{"line":252,"column":2},"end":{"line":254,"column":3}},"101":{"start":{"line":253,"column":4},"end":{"line":253,"column":46}},"102":{"start":{"line":256,"column":2},"end":{"line":258,"column":3}},"103":{"start":{"line":257,"column":4},"end":{"line":257,"column":48}},"104":{"start":{"line":260,"column":2},"end":{"line":262,"column":3}},"105":{"start":{"line":261,"column":4},"end":{"line":261,"column":79}},"106":{"start":{"line":264,"column":2},"end":{"line":264,"column":17}},"107":{"start":{"line":267,"column":0},"end":{"line":287,"column":1}},"108":{"start":{"line":268,"column":2},"end":{"line":268,"column":19}},"109":{"start":{"line":270,"column":2},"end":{"line":272,"column":3}},"110":{"start":{"line":271,"column":4},"end":{"line":271,"column":41}},"111":{"start":{"line":274,"column":2},"end":{"line":276,"column":3}},"112":{"start":{"line":275,"column":4},"end":{"line":275,"column":52}},"113":{"start":{"line":278,"column":2},"end":{"line":280,"column":3}},"114":{"start":{"line":279,"column":4},"end":{"line":279,"column":60}},"115":{"start":{"line":282,"column":2},"end":{"line":284,"column":3}},"116":{"start":{"line":283,"column":4},"end":{"line":283,"column":79}},"117":{"start":{"line":286,"column":2},"end":{"line":286,"column":17}},"118":{"start":{"line":289,"column":0},"end":{"line":347,"column":1}},"119":{"start":{"line":290,"column":2},"end":{"line":290,"column":16}},"120":{"start":{"line":292,"column":2},"end":{"line":344,"column":3}},"121":{"start":{"line":293,"column":4},"end":{"line":293,"column":36}},"122":{"start":{"line":294,"column":4},"end":{"line":296,"column":5}},"123":{"start":{"line":295,"column":8},"end":{"line":295,"column":32}},"124":{"start":{"line":298,"column":4},"end":{"line":298,"column":23}},"125":{"start":{"line":299,"column":4},"end":{"line":343,"column":7}},"126":{"start":{"line":300,"column":6},"end":{"line":300,"column":20}},"127":{"start":{"line":302,"column":6},"end":{"line":309,"column":7}},"128":{"start":{"line":303,"column":8},"end":{"line":308,"column":9}},"129":{"start":{"line":304,"column":10},"end":{"line":304,"column":66}},"130":{"start":{"line":307,"column":10},"end":{"line":307,"column":35}},"131":{"start":{"line":311,"column":6},"end":{"line":318,"column":7}},"132":{"start":{"line":312,"column":8},"end":{"line":317,"column":9}},"133":{"start":{"line":313,"column":10},"end":{"line":313,"column":66}},"134":{"start":{"line":316,"column":10},"end":{"line":316,"column":35}},"135":{"start":{"line":320,"column":6},"end":{"line":327,"column":7}},"136":{"start":{"line":321,"column":8},"end":{"line":326,"column":9}},"137":{"start":{"line":322,"column":10},"end":{"line":322,"column":66}},"138":{"start":{"line":325,"column":10},"end":{"line":325,"column":35}},"139":{"start":{"line":329,"column":6},"end":{"line":336,"column":7}},"140":{"start":{"line":330,"column":8},"end":{"line":335,"column":9}},"141":{"start":{"line":331,"column":10},"end":{"line":331,"column":66}},"142":{"start":{"line":334,"column":10},"end":{"line":334,"column":35}},"143":{"start":{"line":338,"column":6},"end":{"line":340,"column":7}},"144":{"start":{"line":339,"column":8},"end":{"line":339,"column":69}},"145":{"start":{"line":342,"column":6},"end":{"line":342,"column":31}},"146":{"start":{"line":346,"column":2},"end":{"line":346,"column":14}},"147":{"start":{"line":349,"column":0},"end":{"line":373,"column":2}},"148":{"start":{"line":350,"column":2},"end":{"line":350,"column":29}},"149":{"start":{"line":352,"column":2},"end":{"line":354,"column":3}},"150":{"start":{"line":353,"column":4},"end":{"line":353,"column":75}},"151":{"start":{"line":356,"column":2},"end":{"line":358,"column":3}},"152":{"start":{"line":357,"column":4},"end":{"line":357,"column":83}},"153":{"start":{"line":360,"column":2},"end":{"line":362,"column":3}},"154":{"start":{"line":361,"column":4},"end":{"line":361,"column":87}},"155":{"start":{"line":364,"column":2},"end":{"line":366,"column":3}},"156":{"start":{"line":365,"column":4},"end":{"line":365,"column":66}},"157":{"start":{"line":368,"column":2},"end":{"line":370,"column":3}},"158":{"start":{"line":369,"column":4},"end":{"line":369,"column":89}},"159":{"start":{"line":372,"column":2},"end":{"line":372,"column":27}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"5":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":11},"end":{"line":47,"column":11}},{"start":{"line":47,"column":11},"end":{"line":47,"column":11}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"7":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"8":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]},"9":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"10":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"11":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":2},"end":{"line":114,"column":2}},{"start":{"line":114,"column":2},"end":{"line":114,"column":2}}]},"12":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":124,"column":2}},{"start":{"line":124,"column":2},"end":{"line":124,"column":2}}]},"13":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":125,"column":4}},{"start":{"line":125,"column":4},"end":{"line":125,"column":4}}]},"14":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":11},"end":{"line":129,"column":11}},{"start":{"line":129,"column":11},"end":{"line":129,"column":11}}]},"15":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":2},"end":{"line":139,"column":2}},{"start":{"line":139,"column":2},"end":{"line":139,"column":2}}]},"16":{"line":139,"type":"binary-expr","locations":[{"start":{"line":139,"column":5},"end":{"line":139,"column":33}},{"start":{"line":139,"column":37},"end":{"line":139,"column":51}},{"start":{"line":139,"column":55},"end":{"line":139,"column":71}}]},"17":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":6},"end":{"line":143,"column":6}},{"start":{"line":143,"column":6},"end":{"line":143,"column":6}}]},"18":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":9},"end":{"line":143,"column":51}},{"start":{"line":143,"column":55},"end":{"line":143,"column":85}}]},"19":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":6},"end":{"line":149,"column":6}},{"start":{"line":149,"column":6},"end":{"line":149,"column":6}}]},"20":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":9},"end":{"line":149,"column":51}},{"start":{"line":149,"column":55},"end":{"line":149,"column":85}}]},"21":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":6},"end":{"line":155,"column":6}},{"start":{"line":155,"column":6},"end":{"line":155,"column":6}}]},"22":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":9},"end":{"line":155,"column":51}},{"start":{"line":155,"column":55},"end":{"line":155,"column":85}}]},"23":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":6},"end":{"line":165,"column":6}},{"start":{"line":165,"column":6},"end":{"line":165,"column":6}}]},"24":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":9},"end":{"line":165,"column":51}},{"start":{"line":165,"column":55},"end":{"line":165,"column":85}}]},"25":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":6},"end":{"line":175,"column":6}},{"start":{"line":175,"column":6},"end":{"line":175,"column":6}}]},"26":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":2},"end":{"line":194,"column":2}},{"start":{"line":194,"column":2},"end":{"line":194,"column":2}}]},"27":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":200,"column":2}},{"start":{"line":200,"column":2},"end":{"line":200,"column":2}}]},"28":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"29":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":2},"end":{"line":212,"column":2}},{"start":{"line":212,"column":2},"end":{"line":212,"column":2}}]},"30":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":2},"end":{"line":218,"column":2}},{"start":{"line":218,"column":2},"end":{"line":218,"column":2}}]},"31":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":4},"end":{"line":230,"column":4}},{"start":{"line":230,"column":4},"end":{"line":230,"column":4}}]},"32":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":4},"end":{"line":234,"column":4}},{"start":{"line":234,"column":4},"end":{"line":234,"column":4}}]},"33":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":2},"end":{"line":244,"column":2}},{"start":{"line":244,"column":2},"end":{"line":244,"column":2}}]},"34":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":2},"end":{"line":248,"column":2}},{"start":{"line":248,"column":2},"end":{"line":248,"column":2}}]},"35":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":2},"end":{"line":252,"column":2}},{"start":{"line":252,"column":2},"end":{"line":252,"column":2}}]},"36":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":2},"end":{"line":256,"column":2}},{"start":{"line":256,"column":2},"end":{"line":256,"column":2}}]},"37":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":2},"end":{"line":260,"column":2}},{"start":{"line":260,"column":2},"end":{"line":260,"column":2}}]},"38":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":2},"end":{"line":270,"column":2}},{"start":{"line":270,"column":2},"end":{"line":270,"column":2}}]},"39":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":2},"end":{"line":274,"column":2}},{"start":{"line":274,"column":2},"end":{"line":274,"column":2}}]},"40":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":2},"end":{"line":278,"column":2}},{"start":{"line":278,"column":2},"end":{"line":278,"column":2}}]},"41":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":2},"end":{"line":282,"column":2}},{"start":{"line":282,"column":2},"end":{"line":282,"column":2}}]},"42":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":2},"end":{"line":292,"column":2}},{"start":{"line":292,"column":2},"end":{"line":292,"column":2}}]},"43":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":4},"end":{"line":294,"column":4}},{"start":{"line":294,"column":4},"end":{"line":294,"column":4}}]},"44":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":6},"end":{"line":302,"column":6}},{"start":{"line":302,"column":6},"end":{"line":302,"column":6}}]},"45":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":8},"end":{"line":303,"column":8}},{"start":{"line":303,"column":8},"end":{"line":303,"column":8}}]},"46":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":6},"end":{"line":311,"column":6}},{"start":{"line":311,"column":6},"end":{"line":311,"column":6}}]},"47":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":8},"end":{"line":312,"column":8}},{"start":{"line":312,"column":8},"end":{"line":312,"column":8}}]},"48":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":6},"end":{"line":320,"column":6}},{"start":{"line":320,"column":6},"end":{"line":320,"column":6}}]},"49":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":8},"end":{"line":321,"column":8}},{"start":{"line":321,"column":8},"end":{"line":321,"column":8}}]},"50":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":6},"end":{"line":329,"column":6}},{"start":{"line":329,"column":6},"end":{"line":329,"column":6}}]},"51":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":8},"end":{"line":330,"column":8}},{"start":{"line":330,"column":8},"end":{"line":330,"column":8}}]},"52":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":6},"end":{"line":338,"column":6}},{"start":{"line":338,"column":6},"end":{"line":338,"column":6}}]},"53":{"line":352,"type":"if","locations":[{"start":{"line":352,"column":2},"end":{"line":352,"column":2}},{"start":{"line":352,"column":2},"end":{"line":352,"column":2}}]},"54":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":2},"end":{"line":356,"column":2}},{"start":{"line":356,"column":2},"end":{"line":356,"column":2}}]},"55":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":2},"end":{"line":360,"column":2}},{"start":{"line":360,"column":2},"end":{"line":360,"column":2}}]},"56":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":2},"end":{"line":364,"column":2}},{"start":{"line":364,"column":2},"end":{"line":364,"column":2}}]},"57":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":2},"end":{"line":368,"column":2}},{"start":{"line":368,"column":2},"end":{"line":368,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var _ = require('underscore');","var xmlbuilder = require('xmlbuilder');","","var Constants = require('../util/constants');","var ServicePropertiesConstants = Constants.ServicePropertiesConstants;","","exports = module.exports;","","function serializeRetentionPolicy(doc, policy){","  if(policy !== null){","    if (typeof policy === 'undefined'){","      policy = {};","    }","","    doc = doc.ele(ServicePropertiesConstants.RETENTION_POLICY_ELEMENT);","    if (typeof policy.Enabled !== 'undefined') {","      doc = doc.ele(ServicePropertiesConstants.ENABLED_ELEMENT)","                .txt(policy.Enabled)","               .up();","    } else {","      doc = doc.ele(ServicePropertiesConstants.ENABLED_ELEMENT)","                .txt(false)","                .up();","    }","","    if (typeof policy.Days !== 'undefined') {","      doc = doc.ele(ServicePropertiesConstants.DAYS_ELEMENT)","                .txt(policy.Days)","               .up();","    } else if (policy.Enabled === true){","      doc = doc.ele(ServicePropertiesConstants.DAYS_ELEMENT)","                .txt(1)","                .up();","    }","","    doc = doc.up();","  }","}","","function serializeLogging(doc, logging){","  if (typeof logging.Version !== 'undefined') {","    doc = doc.ele(ServicePropertiesConstants.VERSION_ELEMENT)","            .txt(logging.Version)","          .up();","  } else {","    doc = doc.ele(ServicePropertiesConstants.VERSION_ELEMENT)","        .txt(ServicePropertiesConstants.DEFAULT_ANALYTICS_VERSION)","      .up();","  }","","  if (typeof logging.Delete !== 'undefined') {","    doc = doc.ele(ServicePropertiesConstants.DELETE_ELEMENT)","            .txt(logging.Delete)","          .up();","  } else {","    doc = doc.ele(ServicePropertiesConstants.DELETE_ELEMENT)","        .txt(false)","      .up();","  }","","  if (typeof logging.Read !== 'undefined') {","    doc = doc.ele(ServicePropertiesConstants.READ_ELEMENT)","            .txt(logging.Read)","          .up();","  } else {","    doc = doc.ele(ServicePropertiesConstants.READ_ELEMENT)","        .txt(false)","      .up();","  }","","  if (typeof logging.Write !== 'undefined') {","    doc = doc.ele(ServicePropertiesConstants.WRITE_ELEMENT)","            .txt(logging.Write)","          .up();","  } else {","    doc = doc.ele(ServicePropertiesConstants.WRITE_ELEMENT)","        .txt(false)","      .up();","  }","","  serializeRetentionPolicy(doc, logging.RetentionPolicy);","","  doc = doc.up();","}","","function serializeMetrics(doc, metrics){","  if (typeof metrics.Version !== 'undefined') {","    doc = doc.ele(ServicePropertiesConstants.VERSION_ELEMENT)","            .txt(metrics.Version)","          .up();","  } else {","    doc = doc.ele(ServicePropertiesConstants.VERSION_ELEMENT)","        .txt(ServicePropertiesConstants.DEFAULT_ANALYTICS_VERSION)","      .up();","  }","","  if (typeof metrics.Enabled !== 'undefined') {","    doc = doc.ele(ServicePropertiesConstants.ENABLED_ELEMENT)","            .txt(metrics.Enabled)","          .up();","  } else {","    doc = doc.ele(ServicePropertiesConstants.ENABLED_ELEMENT)","        .txt(false)","      .up();","  }","","  if(metrics.Enabled) {","    if (typeof metrics.IncludeAPIs !== 'undefined') {","      doc = doc.ele(ServicePropertiesConstants.INCLUDE_APIS_ELEMENT)","              .txt(metrics.IncludeAPIs)","            .up();","    } else if (metrics.Enabled === true){","      doc = doc.ele(ServicePropertiesConstants.INCLUDE_APIS_ELEMENT)","          .txt(false)","        .up();","    }","  }","  serializeRetentionPolicy(doc, metrics.RetentionPolicy);","}","","function serializeCorsRules(doc, rules){","  if(typeof rules !== 'undefined' && rules !== null && _.isArray(rules)){","    rules.forEach(function (rule) {","      doc = doc.ele(ServicePropertiesConstants.CORS_RULE_ELEMENT);","      ","      if(typeof rule.AllowedMethods !== 'undefined' && _.isArray(rule.AllowedMethods)){","        doc = doc.ele(ServicePropertiesConstants.ALLOWED_METHODS_ELEMENT)","                .txt(rule.AllowedMethods.join(','))","                .up();","      }","","      if(typeof rule.AllowedOrigins !== 'undefined' && _.isArray(rule.AllowedOrigins)){","        doc = doc.ele(ServicePropertiesConstants.ALLOWED_ORIGINS_ELEMENT)","                .txt(rule.AllowedOrigins.join(','))","                .up();","      }","","      if(typeof rule.AllowedHeaders !== 'undefined' && _.isArray(rule.AllowedHeaders)){","        doc = doc.ele(ServicePropertiesConstants.ALLOWED_HEADERS_ELEMENT)","                .txt(rule.AllowedHeaders.join(','))","                .up();","      } else {","        doc = doc.ele(ServicePropertiesConstants.ALLOWED_HEADERS_ELEMENT)","                .txt('')","                .up();","      }","","      if(typeof rule.ExposedHeaders !== 'undefined' && _.isArray(rule.ExposedHeaders)){","        doc = doc.ele(ServicePropertiesConstants.EXPOSED_HEADERS_ELEMENT)","                .txt(rule.ExposedHeaders.join(','))","                .up();","      } else {","        doc = doc.ele(ServicePropertiesConstants.EXPOSED_HEADERS_ELEMENT)","                .txt('')","                .up();","      }","","      if(typeof rule.MaxAgeInSeconds !== 'undefined'){","        doc = doc.ele(ServicePropertiesConstants.MAX_AGE_IN_SECONDS_ELEMENT)","                .txt(rule.MaxAgeInSeconds)","                .up();","      } else {","        doc = doc.ele(ServicePropertiesConstants.MAX_AGE_IN_SECONDS_ELEMENT)","                .txt('0')","                .up();","      }","","      doc = doc.up();","    });","  }","}","","exports.serialize = function (servicePropertiesJs) {","  var doc = xmlbuilder.create();","  doc = doc.begin(ServicePropertiesConstants.STORAGE_SERVICE_PROPERTIES_ELEMENT, { version: '1.0', encoding: 'utf-8' });","","  if (servicePropertiesJs.Logging) {","    doc = doc.ele(ServicePropertiesConstants.LOGGING_ELEMENT);","    serializeLogging(doc, servicePropertiesJs.Logging);","    doc = doc.up();","  }","","  if (servicePropertiesJs.HourMetrics) {","    doc = doc.ele(ServicePropertiesConstants.HOUR_METRICS_ELEMENT);","    serializeMetrics(doc, servicePropertiesJs.HourMetrics);","    doc = doc.up();","  }","","  if (servicePropertiesJs.MinuteMetrics) {","    doc = doc.ele(ServicePropertiesConstants.MINUTE_METRICS_ELEMENT);","    serializeMetrics(doc, servicePropertiesJs.MinuteMetrics);","    doc = doc.up();","  }","","  if (servicePropertiesJs.Cors) {","    doc = doc.ele(ServicePropertiesConstants.CORS_ELEMENT);","    serializeCorsRules(doc, servicePropertiesJs.Cors.CorsRule);","    doc = doc.up();","  }","","  if (servicePropertiesJs.DefaultServiceVersion) {","    doc = doc.ele(ServicePropertiesConstants.DEFAULT_SERVICE_VERSION_ELEMENT)","               .txt(servicePropertiesJs.DefaultServiceVersion)","             .up();","  }","","  return doc.doc().toString();","};","","function parseRetentionPolicy(policyXml){","    var policy = {};","","    if (typeof policyXml.Enabled !== 'undefined') {","      policy.Enabled = policyXml.Enabled === 'true';","    }","","    if (typeof policyXml.Days !== 'undefined') {","      policy.Days = parseInt(policyXml.Days, 10);","    }","","    return policy;","}","","function parseLogging(loggingXml){","  var logging = {};","","  if (typeof loggingXml.Version !== 'undefined') {","    logging.Version = loggingXml.Version;","  }","","  if (typeof loggingXml.Delete !== 'undefined') {","    logging.Delete = loggingXml.Delete === 'true';","  }","","  if (typeof loggingXml.Read !== 'undefined') {","    logging.Read = loggingXml.Read === 'true';","  }","","  if (typeof loggingXml.Write !== 'undefined') {","    logging.Write = loggingXml.Write === 'true';","  }","","  if (typeof loggingXml.RetentionPolicy !== 'undefined') {","    logging.RetentionPolicy = parseRetentionPolicy(loggingXml.RetentionPolicy);","  }","","  return logging;","}","","function parseMetrics(metricsXml){","  var metrics = {};","","  if (typeof metricsXml.Version !== 'undefined') {","    metrics.Version = metricsXml.Version;","  }","","  if (typeof metricsXml.Enabled !== 'undefined') {","    metrics.Enabled = metricsXml.Enabled === 'true';","  }","","  if (typeof metricsXml.IncludeAPIs !== 'undefined') {","    metrics.IncludeAPIs = metricsXml.IncludeAPIs === 'true';","  }","","  if (typeof metricsXml.RetentionPolicy !== 'undefined') {","    metrics.RetentionPolicy = parseRetentionPolicy(metricsXml.RetentionPolicy);","  }","","  return metrics;","}","","function parseCors(corsXml){","  var cors = {};","","  if (typeof corsXml.CorsRule !== 'undefined') {","    var rulesXml = corsXml.CorsRule;","    if (!_.isArray(rulesXml)) {","        rulesXml = [ rulesXml ];","    }","","    cors.CorsRule = [];","    rulesXml.forEach(function (ruleXml) {","      var rule = {};","","      if(typeof ruleXml.AllowedMethods !== 'undefined'){","        if(ruleXml.AllowedMethods  !== ''){","          rule.AllowedMethods = ruleXml.AllowedMethods.split(',');","        }","        else {","          rule.AllowedMethods = [];","        }","      }","","      if(typeof ruleXml.AllowedOrigins !== 'undefined'){","        if(ruleXml.AllowedOrigins  !== ''){","          rule.AllowedOrigins = ruleXml.AllowedOrigins.split(',');","        }","        else {","          rule.AllowedOrigins = [];","        }","      }","","      if(typeof ruleXml.AllowedHeaders !== 'undefined'){","        if(ruleXml.AllowedHeaders  !== ''){","          rule.AllowedHeaders = ruleXml.AllowedHeaders.split(',');","        }","        else {","          rule.AllowedHeaders = [];","        }","      }","","      if(typeof ruleXml.ExposedHeaders !== 'undefined'){","        if(ruleXml.ExposedHeaders  !== ''){","          rule.ExposedHeaders = ruleXml.ExposedHeaders.split(',');","        }","        else {","          rule.ExposedHeaders = [];","        }","      }","","      if(typeof ruleXml.MaxAgeInSeconds !== 'undefined'){","        rule.MaxAgeInSeconds = parseInt(ruleXml.MaxAgeInSeconds, 10);","      }","","      cors.CorsRule.push(rule);","    });","  }","","  return cors;","}","","exports.parse = function (servicePropertiesXml) {","  var serviceProperties = {};","","  if (typeof servicePropertiesXml.Logging !== 'undefined') {","    serviceProperties.Logging = parseLogging(servicePropertiesXml.Logging); ","  }","","  if (typeof servicePropertiesXml.HourMetrics !== 'undefined') {","    serviceProperties.HourMetrics = parseMetrics(servicePropertiesXml.HourMetrics);","  }","","  if (typeof servicePropertiesXml.MinuteMetrics !== 'undefined') {","    serviceProperties.MinuteMetrics = parseMetrics(servicePropertiesXml.MinuteMetrics);","  }","","  if (typeof servicePropertiesXml.Cors !== 'undefined') {","    serviceProperties.Cors = parseCors(servicePropertiesXml.Cors);","  }","","  if (typeof servicePropertiesXml.DefaultServiceVersion !== 'undefined') {","    serviceProperties.DefaultServiceVersion = servicePropertiesXml.DefaultServiceVersion;","  }","","  return serviceProperties;","};"],"l":{"18":1,"19":1,"21":1,"22":1,"24":1,"26":1,"27":0,"28":0,"29":0,"32":0,"33":0,"34":0,"38":0,"43":0,"44":0,"47":0,"48":0,"53":0,"57":1,"58":0,"59":0,"63":0,"68":0,"69":0,"73":0,"78":0,"79":0,"83":0,"88":0,"89":0,"93":0,"98":0,"100":0,"103":1,"104":0,"105":0,"109":0,"114":0,"115":0,"119":0,"124":0,"125":0,"126":0,"129":0,"130":0,"135":0,"138":1,"139":0,"140":0,"141":0,"143":0,"144":0,"149":0,"150":0,"155":0,"156":0,"160":0,"165":0,"166":0,"170":0,"175":0,"176":0,"180":0,"185":0,"190":1,"191":0,"192":0,"194":0,"195":0,"196":0,"197":0,"200":0,"201":0,"202":0,"203":0,"206":0,"207":0,"208":0,"209":0,"212":0,"213":0,"214":0,"215":0,"218":0,"219":0,"224":0,"227":1,"228":0,"230":0,"231":0,"234":0,"235":0,"238":0,"241":1,"242":0,"244":0,"245":0,"248":0,"249":0,"252":0,"253":0,"256":0,"257":0,"260":0,"261":0,"264":0,"267":1,"268":0,"270":0,"271":0,"274":0,"275":0,"278":0,"279":0,"282":0,"283":0,"286":0,"289":1,"290":0,"292":0,"293":0,"294":0,"295":0,"298":0,"299":0,"300":0,"302":0,"303":0,"304":0,"307":0,"311":0,"312":0,"313":0,"316":0,"320":0,"321":0,"322":0,"325":0,"329":0,"330":0,"331":0,"334":0,"338":0,"339":0,"342":0,"346":0,"349":1,"350":0,"352":0,"353":0,"356":0,"357":0,"360":0,"361":0,"364":0,"365":0,"368":0,"369":0,"372":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/tableutilities.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/tableutilities.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":106,"loc":{"start":{"line":106,"column":20},"end":{"line":107,"column":2}}},"2":{"name":"(anonymous_2)","line":108,"loc":{"start":{"line":108,"column":25},"end":{"line":108,"column":48}}},"3":{"name":"(anonymous_3)","line":119,"loc":{"start":{"line":119,"column":14},"end":{"line":119,"column":30}}},"4":{"name":"(anonymous_4)","line":123,"loc":{"start":{"line":123,"column":14},"end":{"line":123,"column":30}}},"5":{"name":"(anonymous_5)","line":127,"loc":{"start":{"line":127,"column":15},"end":{"line":127,"column":31}}},"6":{"name":"(anonymous_6)","line":131,"loc":{"start":{"line":131,"column":16},"end":{"line":131,"column":32}}},"7":{"name":"(anonymous_7)","line":135,"loc":{"start":{"line":135,"column":15},"end":{"line":135,"column":31}}},"8":{"name":"(anonymous_8)","line":139,"loc":{"start":{"line":139,"column":13},"end":{"line":139,"column":29}}},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":15},"end":{"line":143,"column":31}}},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":17},"end":{"line":147,"column":33}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":25}},"2":{"start":{"line":24,"column":0},"end":{"line":152,"column":2}},"3":{"start":{"line":108,"column":4},"end":{"line":114,"column":8}},"4":{"start":{"line":109,"column":8},"end":{"line":109,"column":40}},"5":{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},"6":{"start":{"line":111,"column":10},"end":{"line":111,"column":37}},"7":{"start":{"line":113,"column":8},"end":{"line":113,"column":30}},"8":{"start":{"line":116,"column":6},"end":{"line":150,"column":6}},"9":{"start":{"line":120,"column":8},"end":{"line":120,"column":54}},"10":{"start":{"line":124,"column":8},"end":{"line":124,"column":54}},"11":{"start":{"line":128,"column":8},"end":{"line":128,"column":55}},"12":{"start":{"line":132,"column":8},"end":{"line":132,"column":56}},"13":{"start":{"line":136,"column":8},"end":{"line":136,"column":55}},"14":{"start":{"line":140,"column":8},"end":{"line":140,"column":53}},"15":{"start":{"line":144,"column":8},"end":{"line":144,"column":55}},"16":{"start":{"line":148,"column":8},"end":{"line":148,"column":57}},"17":{"start":{"line":154,"column":0},"end":{"line":154,"column":32}}},"branchMap":{"1":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":110,"column":8}},{"start":{"line":110,"column":8},"end":{"line":110,"column":8}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Expose 'HeaderConstants'.","exports = module.exports;","","/**","* Defines constants, enums, and utility functions for use with the Table service.","* @namespace TableUtilities","*/","var TableUtilities = {","  /**","  * Permission types.","  *","  * @const","  * @enum {string}","  */","  SharedAccessPermissions: {","    QUERY: 'r',","    ADD: 'a',","    UPDATE: 'u',","    DELETE: 'd'","  },","","  /**","  * Payload Format.","  *","  * @const","  * @enum {string}","  */","  PayloadFormat: {","    FULL_METADATA: 'application/json;odata=fullmetadata',","    MINIMAL_METADATA: 'application/json;odata=minimalmetadata',","    NO_METADATA: 'application/json;odata=nometadata'","  },","","  /**","  * Defines the set of Boolean operators for constructing queries.","  *","  * @const","  * @enum {string}","  */","  TableOperators: {","    AND: 'and',","    NOT: 'not',","    OR: 'or'","  },","","  /**","  * Filter property comparison operators.","  *","  * @const","  * @enum {string}","  */","  QueryComparisons: {","    EQUAL: 'eq',","    NOT_EQUAL: 'ne',","    GREATER_THAN: 'gt',","    GREATER_THAN_OR_EQUAL: 'ge',","    LESS_THAN: 'lt',","    LESS_THAN_OR_EQUAL: 'le'","  },","","  /**","  * Edm types.","  *","  * @const","  * @enum {string}","  */","  EdmType: {","    STRING: 'Edm.String',","    BINARY: 'Edm.Binary',","    INT64: 'Edm.Int64',","    INT32: 'Edm.Int32',","    DOUBLE: 'Edm.Double',","    DATETIME: 'Edm.DateTime',","    GUID: 'Edm.Guid',","    BOOLEAN: 'Edm.Boolean'","  },","","  /**","  * A helper to create table entities.","  *","  * @example","  * var entGen = TableUtilities.entityGenerator;","  * var entity = {  PartitionKey: entGen.String('part2'),","  *        RowKey: entGen.String('row1'),","  *        boolValue: entGen.Boolean(true),","  *        intValue: entGen.Int32(42),","  *        dateValue: entGen.DateTime(new Date(Date.UTC(2011, 10, 25))),","  *       };","  */","  entityGenerator: (function()","  {","    var EntityProperty = function (value, type) {","        var entityProperty = { _:value};","        if (type) {","          entityProperty['$'] = type;","        }","        return entityProperty;","      };","","      return {","      EntityProperty : EntityProperty,","      ","      Int32 : function(value) {","        return new EntityProperty(value, 'Edm.Int32');","      },","","      Int64 : function(value) {","        return new EntityProperty(value, 'Edm.Int64');","      },","","      Binary : function(value) {","        return new EntityProperty(value, 'Edm.Binary');","      },","","      Boolean : function(value) {","        return new EntityProperty(value, 'Edm.Boolean');","      },","","      String : function(value) {","        return new EntityProperty(value, 'Edm.String');","      },","","      Guid : function(value) {","        return new EntityProperty(value, 'Edm.Guid');","      },","","      Double : function(value) {","        return new EntityProperty(value, 'Edm.Double');","      },","","      DateTime : function(value) {","        return new EntityProperty(value, 'Edm.DateTime');","      }","    };","  })()","};","","module.exports = TableUtilities;"],"l":{"18":1,"24":1,"108":1,"109":0,"110":0,"111":0,"113":0,"116":1,"120":0,"124":0,"128":0,"132":0,"136":0,"140":0,"144":0,"148":0,"154":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/signing/sharedkey.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/signing/sharedkey.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":1,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"SharedKey","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":70}}},"2":{"name":"(anonymous_2)","line":67,"loc":{"start":{"line":67,"column":55},"end":{"line":67,"column":85}}},"3":{"name":"(anonymous_3)","line":68,"loc":{"start":{"line":68,"column":21},"end":{"line":68,"column":57}}},"4":{"name":"(anonymous_4)","line":74,"loc":{"start":{"line":74,"column":32},"end":{"line":74,"column":56}}},"5":{"name":"(anonymous_5)","line":135,"loc":{"start":{"line":135,"column":60},"end":{"line":135,"column":88}}},"6":{"name":"(anonymous_6)","line":136,"loc":{"start":{"line":136,"column":25},"end":{"line":136,"column":53}}},"7":{"name":"(anonymous_7)","line":168,"loc":{"start":{"line":168,"column":34},"end":{"line":168,"column":67}}},"8":{"name":"(anonymous_8)","line":169,"loc":{"start":{"line":169,"column":25},"end":{"line":169,"column":54}}},"9":{"name":"(anonymous_9)","line":207,"loc":{"start":{"line":207,"column":48},"end":{"line":207,"column":71}}},"10":{"name":"(anonymous_10)","line":221,"loc":{"start":{"line":221,"column":43},"end":{"line":221,"column":56}}},"11":{"name":"(anonymous_11)","line":226,"loc":{"start":{"line":226,"column":36},"end":{"line":226,"column":52}}},"12":{"name":"(anonymous_12)","line":251,"loc":{"start":{"line":251,"column":47},"end":{"line":251,"column":70}}},"13":{"name":"(anonymous_13)","line":263,"loc":{"start":{"line":263,"column":35},"end":{"line":263,"column":50}}},"14":{"name":"(anonymous_14)","line":265,"loc":{"start":{"line":265,"column":38},"end":{"line":265,"column":67}}},"15":{"name":"(anonymous_15)","line":304,"loc":{"start":{"line":304,"column":48},"end":{"line":304,"column":115}}},"16":{"name":"(anonymous_16)","line":305,"loc":{"start":{"line":305,"column":21},"end":{"line":305,"column":57}}},"17":{"name":"(anonymous_17)","line":311,"loc":{"start":{"line":311,"column":24},"end":{"line":311,"column":46}}},"18":{"name":"(anonymous_18)","line":317,"loc":{"start":{"line":317,"column":22},"end":{"line":317,"column":40}}},"19":{"name":"(anonymous_19)","line":327,"loc":{"start":{"line":327,"column":32},"end":{"line":327,"column":56}}},"20":{"name":"(anonymous_20)","line":430,"loc":{"start":{"line":430,"column":41},"end":{"line":430,"column":108}}},"21":{"name":"(anonymous_21)","line":431,"loc":{"start":{"line":431,"column":25},"end":{"line":431,"column":53}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":32}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":40}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":49}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":31}},"6":{"start":{"line":24,"column":0},"end":{"line":24,"column":41}},"7":{"start":{"line":25,"column":0},"end":{"line":25,"column":41}},"8":{"start":{"line":27,"column":0},"end":{"line":27,"column":45}},"9":{"start":{"line":28,"column":0},"end":{"line":28,"column":48}},"10":{"start":{"line":29,"column":0},"end":{"line":29,"column":58}},"11":{"start":{"line":30,"column":0},"end":{"line":30,"column":48}},"12":{"start":{"line":31,"column":0},"end":{"line":31,"column":70}},"13":{"start":{"line":41,"column":0},"end":{"line":46,"column":1}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":39}},"15":{"start":{"line":43,"column":2},"end":{"line":43,"column":43}},"16":{"start":{"line":44,"column":2},"end":{"line":44,"column":41}},"17":{"start":{"line":45,"column":2},"end":{"line":45,"column":53}},"18":{"start":{"line":67,"column":0},"end":{"line":113,"column":2}},"19":{"start":{"line":68,"column":2},"end":{"line":72,"column":4}},"20":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"21":{"start":{"line":70,"column":6},"end":{"line":70,"column":32}},"22":{"start":{"line":74,"column":2},"end":{"line":90,"column":4}},"23":{"start":{"line":75,"column":4},"end":{"line":81,"column":5}},"24":{"start":{"line":76,"column":6},"end":{"line":78,"column":7}},"25":{"start":{"line":77,"column":8},"end":{"line":77,"column":58}},"26":{"start":{"line":80,"column":6},"end":{"line":80,"column":78}},"27":{"start":{"line":83,"column":4},"end":{"line":89,"column":5}},"28":{"start":{"line":84,"column":6},"end":{"line":86,"column":7}},"29":{"start":{"line":85,"column":8},"end":{"line":85,"column":60}},"30":{"start":{"line":88,"column":6},"end":{"line":88,"column":80}},"31":{"start":{"line":92,"column":2},"end":{"line":92,"column":23}},"32":{"start":{"line":94,"column":2},"end":{"line":94,"column":105}},"33":{"start":{"line":97,"column":2},"end":{"line":107,"column":3}},"34":{"start":{"line":98,"column":4},"end":{"line":98,"column":61}},"35":{"start":{"line":100,"column":4},"end":{"line":100,"column":110}},"36":{"start":{"line":101,"column":4},"end":{"line":101,"column":121}},"37":{"start":{"line":102,"column":4},"end":{"line":102,"column":116}},"38":{"start":{"line":103,"column":4},"end":{"line":103,"column":104}},"39":{"start":{"line":104,"column":4},"end":{"line":104,"column":106}},"40":{"start":{"line":105,"column":4},"end":{"line":105,"column":112}},"41":{"start":{"line":106,"column":4},"end":{"line":106,"column":111}},"42":{"start":{"line":110,"column":2},"end":{"line":110,"column":124}},"43":{"start":{"line":112,"column":2},"end":{"line":112,"column":35}},"44":{"start":{"line":135,"column":0},"end":{"line":160,"column":2}},"45":{"start":{"line":136,"column":2},"end":{"line":147,"column":4}},"46":{"start":{"line":137,"column":4},"end":{"line":137,"column":25}},"47":{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},"48":{"start":{"line":139,"column":6},"end":{"line":139,"column":26}},"49":{"start":{"line":142,"column":4},"end":{"line":144,"column":5}},"50":{"start":{"line":143,"column":6},"end":{"line":143,"column":26}},"51":{"start":{"line":146,"column":4},"end":{"line":146,"column":23}},"52":{"start":{"line":149,"column":2},"end":{"line":157,"column":63}},"53":{"start":{"line":159,"column":2},"end":{"line":159,"column":40}},"54":{"start":{"line":168,"column":0},"end":{"line":200,"column":2}},"55":{"start":{"line":169,"column":2},"end":{"line":178,"column":4}},"56":{"start":{"line":171,"column":4},"end":{"line":177,"column":5}},"57":{"start":{"line":172,"column":6},"end":{"line":172,"column":18}},"58":{"start":{"line":173,"column":11},"end":{"line":177,"column":5}},"59":{"start":{"line":174,"column":6},"end":{"line":174,"column":18}},"60":{"start":{"line":176,"column":6},"end":{"line":176,"column":38}},"61":{"start":{"line":180,"column":2},"end":{"line":194,"column":48}},"62":{"start":{"line":196,"column":2},"end":{"line":196,"column":49}},"63":{"start":{"line":198,"column":2},"end":{"line":198,"column":110}},"64":{"start":{"line":199,"column":2},"end":{"line":199,"column":17}},"65":{"start":{"line":207,"column":0},"end":{"line":232,"column":2}},"66":{"start":{"line":208,"column":2},"end":{"line":208,"column":17}},"67":{"start":{"line":209,"column":2},"end":{"line":211,"column":3}},"68":{"start":{"line":210,"column":4},"end":{"line":210,"column":28}},"69":{"start":{"line":213,"column":2},"end":{"line":213,"column":63}},"70":{"start":{"line":216,"column":2},"end":{"line":216,"column":50}},"71":{"start":{"line":219,"column":2},"end":{"line":229,"column":3}},"72":{"start":{"line":220,"column":4},"end":{"line":220,"column":24}},"73":{"start":{"line":221,"column":4},"end":{"line":223,"column":7}},"74":{"start":{"line":222,"column":6},"end":{"line":222,"column":25}},"75":{"start":{"line":225,"column":4},"end":{"line":225,"column":35}},"76":{"start":{"line":226,"column":4},"end":{"line":228,"column":7}},"77":{"start":{"line":227,"column":6},"end":{"line":227,"column":99}},"78":{"start":{"line":231,"column":2},"end":{"line":231,"column":31}},"79":{"start":{"line":251,"column":0},"end":{"line":276,"column":2}},"80":{"start":{"line":253,"column":2},"end":{"line":253,"column":32}},"81":{"start":{"line":254,"column":2},"end":{"line":273,"column":3}},"82":{"start":{"line":255,"column":4},"end":{"line":255,"column":39}},"83":{"start":{"line":256,"column":4},"end":{"line":261,"column":5}},"84":{"start":{"line":257,"column":6},"end":{"line":260,"column":7}},"85":{"start":{"line":258,"column":8},"end":{"line":258,"column":83}},"86":{"start":{"line":259,"column":8},"end":{"line":259,"column":51}},"87":{"start":{"line":263,"column":4},"end":{"line":263,"column":110}},"88":{"start":{"line":263,"column":52},"end":{"line":263,"column":106}},"89":{"start":{"line":265,"column":4},"end":{"line":272,"column":7}},"90":{"start":{"line":266,"column":6},"end":{"line":266,"column":66}},"91":{"start":{"line":267,"column":6},"end":{"line":271,"column":7}},"92":{"start":{"line":268,"column":8},"end":{"line":268,"column":85}},"93":{"start":{"line":270,"column":8},"end":{"line":270,"column":72}},"94":{"start":{"line":275,"column":2},"end":{"line":275,"column":30}},"95":{"start":{"line":304,"column":0},"end":{"line":403,"column":2}},"96":{"start":{"line":305,"column":2},"end":{"line":309,"column":4}},"97":{"start":{"line":306,"column":4},"end":{"line":308,"column":5}},"98":{"start":{"line":307,"column":6},"end":{"line":307,"column":32}},"99":{"start":{"line":311,"column":2},"end":{"line":325,"column":4}},"100":{"start":{"line":313,"column":4},"end":{"line":324,"column":5}},"101":{"start":{"line":314,"column":6},"end":{"line":314,"column":52}},"102":{"start":{"line":316,"column":6},"end":{"line":316,"column":56}},"103":{"start":{"line":317,"column":6},"end":{"line":323,"column":7}},"104":{"start":{"line":318,"column":8},"end":{"line":318,"column":66}},"105":{"start":{"line":320,"column":8},"end":{"line":320,"column":26}},"106":{"start":{"line":322,"column":8},"end":{"line":322,"column":114}},"107":{"start":{"line":327,"column":2},"end":{"line":343,"column":4}},"108":{"start":{"line":328,"column":4},"end":{"line":334,"column":5}},"109":{"start":{"line":329,"column":6},"end":{"line":331,"column":7}},"110":{"start":{"line":330,"column":8},"end":{"line":330,"column":58}},"111":{"start":{"line":333,"column":6},"end":{"line":333,"column":78}},"112":{"start":{"line":336,"column":4},"end":{"line":342,"column":5}},"113":{"start":{"line":337,"column":6},"end":{"line":339,"column":7}},"114":{"start":{"line":338,"column":8},"end":{"line":338,"column":60}},"115":{"start":{"line":341,"column":6},"end":{"line":341,"column":80}},"116":{"start":{"line":346,"column":2},"end":{"line":346,"column":18}},"117":{"start":{"line":347,"column":2},"end":{"line":347,"column":19}},"118":{"start":{"line":348,"column":2},"end":{"line":348,"column":14}},"119":{"start":{"line":349,"column":2},"end":{"line":349,"column":16}},"120":{"start":{"line":351,"column":2},"end":{"line":356,"column":3}},"121":{"start":{"line":352,"column":4},"end":{"line":352,"column":35}},"122":{"start":{"line":353,"column":4},"end":{"line":353,"column":37}},"123":{"start":{"line":354,"column":4},"end":{"line":354,"column":31}},"124":{"start":{"line":355,"column":4},"end":{"line":355,"column":27}},"125":{"start":{"line":358,"column":2},"end":{"line":360,"column":3}},"126":{"start":{"line":359,"column":4},"end":{"line":359,"column":21}},"127":{"start":{"line":363,"column":2},"end":{"line":377,"column":3}},"128":{"start":{"line":364,"column":4},"end":{"line":364,"column":61}},"129":{"start":{"line":366,"column":4},"end":{"line":366,"column":104}},"130":{"start":{"line":367,"column":4},"end":{"line":367,"column":106}},"131":{"start":{"line":368,"column":4},"end":{"line":368,"column":116}},"132":{"start":{"line":369,"column":4},"end":{"line":369,"column":112}},"133":{"start":{"line":370,"column":4},"end":{"line":370,"column":111}},"134":{"start":{"line":373,"column":4},"end":{"line":373,"column":101}},"135":{"start":{"line":374,"column":4},"end":{"line":374,"column":97}},"136":{"start":{"line":375,"column":4},"end":{"line":375,"column":101}},"137":{"start":{"line":376,"column":4},"end":{"line":376,"column":97}},"138":{"start":{"line":380,"column":2},"end":{"line":380,"column":62}},"139":{"start":{"line":381,"column":2},"end":{"line":381,"column":92}},"140":{"start":{"line":384,"column":2},"end":{"line":384,"column":91}},"141":{"start":{"line":387,"column":2},"end":{"line":387,"column":80}},"142":{"start":{"line":388,"column":2},"end":{"line":394,"column":3}},"143":{"start":{"line":389,"column":4},"end":{"line":389,"column":88}},"144":{"start":{"line":390,"column":4},"end":{"line":390,"column":86}},"145":{"start":{"line":391,"column":4},"end":{"line":391,"column":94}},"146":{"start":{"line":392,"column":4},"end":{"line":392,"column":94}},"147":{"start":{"line":393,"column":4},"end":{"line":393,"column":100}},"148":{"start":{"line":397,"column":2},"end":{"line":397,"column":71}},"149":{"start":{"line":400,"column":2},"end":{"line":400,"column":221}},"150":{"start":{"line":402,"column":2},"end":{"line":402,"column":35}},"151":{"start":{"line":430,"column":0},"end":{"line":498,"column":2}},"152":{"start":{"line":431,"column":2},"end":{"line":442,"column":4}},"153":{"start":{"line":432,"column":4},"end":{"line":432,"column":25}},"154":{"start":{"line":433,"column":4},"end":{"line":435,"column":5}},"155":{"start":{"line":434,"column":6},"end":{"line":434,"column":26}},"156":{"start":{"line":437,"column":4},"end":{"line":439,"column":5}},"157":{"start":{"line":438,"column":6},"end":{"line":438,"column":26}},"158":{"start":{"line":441,"column":4},"end":{"line":441,"column":23}},"159":{"start":{"line":445,"column":2},"end":{"line":445,"column":19}},"160":{"start":{"line":446,"column":2},"end":{"line":446,"column":16}},"161":{"start":{"line":447,"column":2},"end":{"line":447,"column":14}},"162":{"start":{"line":448,"column":2},"end":{"line":452,"column":3}},"163":{"start":{"line":449,"column":4},"end":{"line":449,"column":37}},"164":{"start":{"line":450,"column":4},"end":{"line":450,"column":31}},"165":{"start":{"line":451,"column":4},"end":{"line":451,"column":27}},"166":{"start":{"line":455,"column":2},"end":{"line":457,"column":3}},"167":{"start":{"line":456,"column":4},"end":{"line":456,"column":22}},"168":{"start":{"line":459,"column":2},"end":{"line":459,"column":28}},"169":{"start":{"line":460,"column":2},"end":{"line":465,"column":3}},"170":{"start":{"line":462,"column":4},"end":{"line":462,"column":61}},"171":{"start":{"line":464,"column":4},"end":{"line":464,"column":81}},"172":{"start":{"line":467,"column":2},"end":{"line":474,"column":17}},"173":{"start":{"line":476,"column":2},"end":{"line":487,"column":3}},"174":{"start":{"line":477,"column":4},"end":{"line":479,"column":5}},"175":{"start":{"line":478,"column":6},"end":{"line":478,"column":66}},"176":{"start":{"line":480,"column":9},"end":{"line":487,"column":3}},"177":{"start":{"line":481,"column":4},"end":{"line":486,"column":63}},"178":{"start":{"line":489,"column":2},"end":{"line":495,"column":3}},"179":{"start":{"line":490,"column":4},"end":{"line":494,"column":105}},"180":{"start":{"line":497,"column":2},"end":{"line":497,"column":40}},"181":{"start":{"line":500,"column":0},"end":{"line":500,"column":27}}},"branchMap":{"1":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"2":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":37}},{"start":{"line":69,"column":41},"end":{"line":69,"column":71}}]},"3":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"4":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":6},"end":{"line":76,"column":6}},{"start":{"line":76,"column":6},"end":{"line":76,"column":6}}]},"5":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"6":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":6},"end":{"line":84,"column":6}},{"start":{"line":84,"column":6},"end":{"line":84,"column":6}}]},"7":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"8":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"9":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]},"10":{"line":150,"type":"cond-expr","locations":[{"start":{"line":150,"column":57},"end":{"line":150,"column":100}},{"start":{"line":150,"column":103},"end":{"line":150,"column":105}}]},"11":{"line":151,"type":"cond-expr","locations":[{"start":{"line":151,"column":57},"end":{"line":151,"column":97}},{"start":{"line":151,"column":100},"end":{"line":151,"column":102}}]},"12":{"line":152,"type":"cond-expr","locations":[{"start":{"line":152,"column":57},"end":{"line":152,"column":102}},{"start":{"line":152,"column":105},"end":{"line":152,"column":107}}]},"13":{"line":153,"type":"cond-expr","locations":[{"start":{"line":153,"column":57},"end":{"line":153,"column":94}},{"start":{"line":153,"column":97},"end":{"line":153,"column":99}}]},"14":{"line":154,"type":"cond-expr","locations":[{"start":{"line":154,"column":57},"end":{"line":154,"column":95}},{"start":{"line":154,"column":98},"end":{"line":154,"column":100}}]},"15":{"line":155,"type":"cond-expr","locations":[{"start":{"line":155,"column":57},"end":{"line":155,"column":105}},{"start":{"line":155,"column":108},"end":{"line":155,"column":110}}]},"16":{"line":156,"type":"cond-expr","locations":[{"start":{"line":156,"column":57},"end":{"line":156,"column":98}},{"start":{"line":156,"column":101},"end":{"line":156,"column":103}}]},"17":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]},"18":{"line":171,"type":"binary-expr","locations":[{"start":{"line":171,"column":8},"end":{"line":171,"column":53}},{"start":{"line":171,"column":58},"end":{"line":171,"column":99}},{"start":{"line":171,"column":103},"end":{"line":171,"column":139}}]},"19":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":11},"end":{"line":173,"column":11}},{"start":{"line":173,"column":11},"end":{"line":173,"column":11}}]},"20":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":15},"end":{"line":173,"column":44}},{"start":{"line":173,"column":48},"end":{"line":173,"column":89}}]},"21":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":2},"end":{"line":209,"column":2}},{"start":{"line":209,"column":2},"end":{"line":209,"column":2}}]},"22":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":2},"end":{"line":219,"column":2}},{"start":{"line":219,"column":2},"end":{"line":219,"column":2}}]},"23":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":2},"end":{"line":254,"column":2}},{"start":{"line":254,"column":2},"end":{"line":254,"column":2}}]},"24":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":6},"end":{"line":257,"column":6}},{"start":{"line":257,"column":6},"end":{"line":257,"column":6}}]},"25":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":6},"end":{"line":267,"column":6}},{"start":{"line":267,"column":6},"end":{"line":267,"column":6}}]},"26":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":4},"end":{"line":306,"column":4}},{"start":{"line":306,"column":4},"end":{"line":306,"column":4}}]},"27":{"line":306,"type":"binary-expr","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":37}},{"start":{"line":306,"column":41},"end":{"line":306,"column":71}}]},"28":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":4},"end":{"line":313,"column":4}},{"start":{"line":313,"column":4},"end":{"line":313,"column":4}}]},"29":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":6},"end":{"line":317,"column":6}},{"start":{"line":317,"column":6},"end":{"line":317,"column":6}}]},"30":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":4},"end":{"line":328,"column":4}},{"start":{"line":328,"column":4},"end":{"line":328,"column":4}}]},"31":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":6},"end":{"line":329,"column":6}},{"start":{"line":329,"column":6},"end":{"line":329,"column":6}}]},"32":{"line":336,"type":"if","locations":[{"start":{"line":336,"column":4},"end":{"line":336,"column":4}},{"start":{"line":336,"column":4},"end":{"line":336,"column":4}}]},"33":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":6},"end":{"line":337,"column":6}},{"start":{"line":337,"column":6},"end":{"line":337,"column":6}}]},"34":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":2},"end":{"line":351,"column":2}},{"start":{"line":351,"column":2},"end":{"line":351,"column":2}}]},"35":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":2},"end":{"line":358,"column":2}},{"start":{"line":358,"column":2},"end":{"line":358,"column":2}}]},"36":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":2},"end":{"line":363,"column":2}},{"start":{"line":363,"column":2},"end":{"line":363,"column":2}}]},"37":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":2},"end":{"line":388,"column":2}},{"start":{"line":388,"column":2},"end":{"line":388,"column":2}}]},"38":{"line":433,"type":"if","locations":[{"start":{"line":433,"column":4},"end":{"line":433,"column":4}},{"start":{"line":433,"column":4},"end":{"line":433,"column":4}}]},"39":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":4},"end":{"line":437,"column":4}},{"start":{"line":437,"column":4},"end":{"line":437,"column":4}}]},"40":{"line":448,"type":"if","locations":[{"start":{"line":448,"column":2},"end":{"line":448,"column":2}},{"start":{"line":448,"column":2},"end":{"line":448,"column":2}}]},"41":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":2},"end":{"line":455,"column":2}},{"start":{"line":455,"column":2},"end":{"line":455,"column":2}}]},"42":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":2},"end":{"line":460,"column":2}},{"start":{"line":460,"column":2},"end":{"line":460,"column":2}}]},"43":{"line":460,"type":"binary-expr","locations":[{"start":{"line":460,"column":6},"end":{"line":460,"column":61}},{"start":{"line":460,"column":65},"end":{"line":460,"column":118}}]},"44":{"line":467,"type":"cond-expr","locations":[{"start":{"line":467,"column":72},"end":{"line":467,"column":115}},{"start":{"line":467,"column":118},"end":{"line":467,"column":120}}]},"45":{"line":468,"type":"cond-expr","locations":[{"start":{"line":468,"column":57},"end":{"line":468,"column":94}},{"start":{"line":468,"column":97},"end":{"line":468,"column":99}}]},"46":{"line":469,"type":"cond-expr","locations":[{"start":{"line":469,"column":57},"end":{"line":469,"column":95}},{"start":{"line":469,"column":98},"end":{"line":469,"column":100}}]},"47":{"line":472,"type":"cond-expr","locations":[{"start":{"line":472,"column":57},"end":{"line":472,"column":105}},{"start":{"line":472,"column":108},"end":{"line":472,"column":110}}]},"48":{"line":473,"type":"cond-expr","locations":[{"start":{"line":473,"column":57},"end":{"line":473,"column":98}},{"start":{"line":473,"column":101},"end":{"line":473,"column":103}}]},"49":{"line":476,"type":"if","locations":[{"start":{"line":476,"column":2},"end":{"line":476,"column":2}},{"start":{"line":476,"column":2},"end":{"line":476,"column":2}}]},"50":{"line":477,"type":"if","locations":[{"start":{"line":477,"column":4},"end":{"line":477,"column":4}},{"start":{"line":477,"column":4},"end":{"line":477,"column":4}}]},"51":{"line":480,"type":"if","locations":[{"start":{"line":480,"column":9},"end":{"line":480,"column":9}},{"start":{"line":480,"column":9},"end":{"line":480,"column":9}}]},"52":{"line":482,"type":"cond-expr","locations":[{"start":{"line":482,"column":31},"end":{"line":482,"column":51}},{"start":{"line":482,"column":54},"end":{"line":482,"column":56}}]},"53":{"line":483,"type":"cond-expr","locations":[{"start":{"line":483,"column":31},"end":{"line":483,"column":57}},{"start":{"line":483,"column":60},"end":{"line":483,"column":62}}]},"54":{"line":484,"type":"cond-expr","locations":[{"start":{"line":484,"column":31},"end":{"line":484,"column":54}},{"start":{"line":484,"column":57},"end":{"line":484,"column":59}}]},"55":{"line":485,"type":"cond-expr","locations":[{"start":{"line":485,"column":31},"end":{"line":485,"column":54}},{"start":{"line":485,"column":57},"end":{"line":485,"column":59}}]},"56":{"line":486,"type":"cond-expr","locations":[{"start":{"line":486,"column":31},"end":{"line":486,"column":50}},{"start":{"line":486,"column":53},"end":{"line":486,"column":55}}]},"57":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":2},"end":{"line":489,"column":2}},{"start":{"line":489,"column":2},"end":{"line":489,"column":2}}]},"58":{"line":491,"type":"cond-expr","locations":[{"start":{"line":491,"column":55},"end":{"line":491,"column":94}},{"start":{"line":491,"column":97},"end":{"line":491,"column":99}}]},"59":{"line":492,"type":"cond-expr","locations":[{"start":{"line":492,"column":55},"end":{"line":492,"column":94}},{"start":{"line":492,"column":97},"end":{"line":492,"column":99}}]},"60":{"line":493,"type":"cond-expr","locations":[{"start":{"line":493,"column":55},"end":{"line":493,"column":92}},{"start":{"line":493,"column":95},"end":{"line":493,"column":97}}]},"61":{"line":494,"type":"cond-expr","locations":[{"start":{"line":494,"column":55},"end":{"line":494,"column":92}},{"start":{"line":494,"column":95},"end":{"line":494,"column":97}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var _ = require('underscore');","var qs = require('querystring');","","var azureutil = require('../util/util');","var HmacSha256Sign = require('./hmacsha256sign');","var SR = require('../util/sr');","var errors = require('../errors/errors');","var ArgumentError = errors.ArgumentError;","","var Constants = require('../util/constants');","var HeaderConstants = Constants.HeaderConstants;","var QueryStringConstants = Constants.QueryStringConstants;","var HeaderConstants = Constants.HeaderConstants;","var CompatibleVersionConstants = Constants.CompatibleVersionConstants;","","/**","* Creates a new SharedKey object.","*","* @constructor","* @param {string} storageAccount    The storage account.","* @param {string} storageAccessKey  The storage account's access key.","* @param {bool}   usePathStyleUri   Boolean value indicating if the path, or the hostname, should include the storage account.","*/","function SharedKey(storageAccount, storageAccessKey, usePathStyleUri) {","  this.storageAccount = storageAccount;","  this.storageAccessKey = storageAccessKey;","  this.usePathStyleUri = usePathStyleUri;","  this.signer = new HmacSha256Sign(storageAccessKey);","}","","/**","* Generates the shared access signature for a account.","* For more detailed information, refer to https://msdn.microsoft.com/en-us/library/azure/mt584140.aspx","*","* @param {object}                     sharedAccessPolicy                                The shared access policy.","* @param {SharedAccessServices}       sharedAccessPolicy.AccessPolicy.Services          The services (blob, file, queue, table) for a shared access signature associated with this shared access policy.","*                                                                                       Refer to `Constants.AccountSasConstants.Services`.","* @param {SharedAccessResourceTypes}  sharedAccessPolicy.AccessPolicy.ResourceTypes     The resource type for a shared access signature associated with this shared access policy.","*                                                                                       Refer to `Constants.AccountSasConstants.ResourceTypes`.","* @param {SharedAccessPermissions}    sharedAccessPolicy.AccessPolicy.Permissions       The permissions for a shared access signature. ","*                                                                                       Refer to `Constants.AccountSasConstants.Permissions`.","* @param {date}                       sharedAccessPolicy.AccessPolicy.Start             The time at which the Shared Access Signature becomes valid.","* @param {date}                       sharedAccessPolicy.AccessPolicy.Expiry            The time at which the Shared Access Signature becomes expired.","* @param {string}                     sharedAccessPolicy.AccessPolicy.IPAddressOrRange  An IP address or a range of IP addresses from which to accept requests. When specifying a range, note that the range is inclusive.","* @param {string}                     sharedAccessPolicy.AccessPolicy.Protocols         The protocols permitted for a request made with the account SAS. ","*                                                                                       Possible values are both HTTPS and HTTP (https,http) or HTTPS only (https). The default value is https,http. ","*                                                                                       Refer to `Constants.AccountSasConstants.Protocols`.","* @return {string} The shared access signature.","*/","SharedKey.prototype.generateAccountSignedQueryString = function (sharedAccessPolicy) {","  var addIfNotNull = function (queryString, name, value) {","    if (!azureutil.objectIsNull(name) && !azureutil.objectIsNull(value)) {","      queryString[name] = value;","    }","  };","","  var formatAccessPolicyDates = function (accessPolicy) {","    if (!azureutil.objectIsNull(accessPolicy.Start)) {","      if (!_.isDate(accessPolicy.Start)) {","        accessPolicy.Start = new Date(accessPolicy.Start);","      }"," ","      accessPolicy.Start = azureutil.truncatedISO8061Date(accessPolicy.Start);","    }","","    if (!azureutil.objectIsNull(accessPolicy.Expiry)) {","      if (!_.isDate(accessPolicy.Expiry)) {","        accessPolicy.Expiry = new Date(accessPolicy.Expiry);","      }","","      accessPolicy.Expiry = azureutil.truncatedISO8061Date(accessPolicy.Expiry);","    }","  };","","  var queryString = {};","","  addIfNotNull(queryString, QueryStringConstants.SIGNED_VERSION, HeaderConstants.TARGET_STORAGE_VERSION);","","  // add shared access policy params","  if (sharedAccessPolicy.AccessPolicy) {","    formatAccessPolicyDates(sharedAccessPolicy.AccessPolicy);","","    addIfNotNull(queryString, QueryStringConstants.SIGNED_SERVICES, sharedAccessPolicy.AccessPolicy.Services);","    addIfNotNull(queryString, QueryStringConstants.SIGNED_RESOURCE_TYPES, sharedAccessPolicy.AccessPolicy.ResourceTypes);","    addIfNotNull(queryString, QueryStringConstants.SIGNED_PERMISSIONS, sharedAccessPolicy.AccessPolicy.Permissions);","    addIfNotNull(queryString, QueryStringConstants.SIGNED_START, sharedAccessPolicy.AccessPolicy.Start);","    addIfNotNull(queryString, QueryStringConstants.SIGNED_EXPIRY, sharedAccessPolicy.AccessPolicy.Expiry);","    addIfNotNull(queryString, QueryStringConstants.SIGNED_IP, sharedAccessPolicy.AccessPolicy.IPAddressOrRange);","    addIfNotNull(queryString, QueryStringConstants.SIGNED_PROTOCOL, sharedAccessPolicy.AccessPolicy.Protocols);","  }","  ","  // add signature","  addIfNotNull(queryString, QueryStringConstants.SIGNATURE, this._generateAccountSharedAccessSignature(sharedAccessPolicy));","","  return qs.stringify(queryString);","};","","","/**","* Generates the signature part of the shared access signature for a account.","* For more detailed information, refer to https://msdn.microsoft.com/en-us/library/azure/mt584140.aspx","*","* @param {object}                     sharedAccessPolicy                                The shared access policy.","* @param {SharedAccessServices}       sharedAccessPolicy.AccessPolicy.Services          The services (blob, file, queue, table) for a shared access signature associated with this shared access policy.","*                                                                                       Refer to `Constants.AccountSasConstants.Services`.","* @param {SharedAccessResourceTypes}  sharedAccessPolicy.AccessPolicy.ResourceTypes     The resource type for a shared access signature associated with this shared access policy.","*                                                                                       Refer to `Constants.AccountSasConstants.ResourceTypes`.","* @param {SharedAccessPermissions}    sharedAccessPolicy.AccessPolicy.Permissions       The permissions for a shared access signature. ","*                                                                                       Refer to `Constants.AccountSasConstants.Permissions`.","* @param {date}                       sharedAccessPolicy.AccessPolicy.Start             The time at which the Shared Access Signature becomes valid.","* @param {date}                       sharedAccessPolicy.AccessPolicy.Expiry            The time at which the Shared Access Signature becomes expired.","* @param {string}                     sharedAccessPolicy.AccessPolicy.IPAddressOrRange  An IP address or a range of IP addresses from which to accept requests. When specifying a range, note that the range is inclusive.","* @param {string}                     sharedAccessPolicy.AccessPolicy.Protocols         The protocols permitted for a request made with the account SAS. ","*                                                                                       Possible values are both HTTPS and HTTP (https,http) or HTTPS only (https). The default value is https,http. ","*                                                                                       Refer to `Constants.AccountSasConstants.Protocols`.","* @return {string} The signature part of the shared access signature.","*/","SharedKey.prototype._generateAccountSharedAccessSignature = function(sharedAccessPolicy){","  var getvalueToAppend = function (value, noNewLine) {","    var returnValue = '';","    if (!azureutil.objectIsNull(value)) {","      returnValue = value;","    }","","    if (noNewLine !== true) {","      returnValue += '\\n';","    }","","    return returnValue;","  };  ","  ","  var stringToSign = getvalueToAppend(this.storageAccount) +","      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Permissions : '') +","      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Services : '') +","      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.ResourceTypes : '') +","      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Start : '') +","      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Expiry : '') +","      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.IPAddressOrRange : '') +","      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Protocols : '') +","      getvalueToAppend(HeaderConstants.TARGET_STORAGE_VERSION);","      ","  return this.signer.sign(stringToSign);  ","};","","/**","* Signs a request with the Authentication header.","*","* @param {WebResource} The webresource to be signed.","* @param {function(error)}  callback  The callback function.","*/","SharedKey.prototype.signRequest = function (webResource, callback) {","  var getvalueToAppend = function (value, headerName) {","    // Do not sign content-length 0 in 2014-08-16 and later","    if (headerName === HeaderConstants.CONTENT_LENGTH && (azureutil.objectIsNull(value[headerName]) || value[headerName].toString() === '0')) {","      return '\\n';","    } else if (azureutil.objectIsNull(value) || azureutil.objectIsNull(value[headerName])) {","      return '\\n';","    } else {","      return value[headerName] + '\\n';","    }","  };","","  var stringToSign =","    webResource.method + '\\n' +","    getvalueToAppend(webResource.headers, HeaderConstants.CONTENT_ENCODING) +","    getvalueToAppend(webResource.headers, HeaderConstants.CONTENT_LANGUAGE) +","    getvalueToAppend(webResource.headers, HeaderConstants.CONTENT_LENGTH) +","    getvalueToAppend(webResource.headers, HeaderConstants.CONTENT_MD5) +","    getvalueToAppend(webResource.headers, HeaderConstants.CONTENT_TYPE) +","    getvalueToAppend(webResource.headers, HeaderConstants.DATE) +","    getvalueToAppend(webResource.headers, HeaderConstants.IF_MODIFIED_SINCE) +","    getvalueToAppend(webResource.headers, HeaderConstants.IF_MATCH) +","    getvalueToAppend(webResource.headers, HeaderConstants.IF_NONE_MATCH) +","    getvalueToAppend(webResource.headers, HeaderConstants.IF_UNMODIFIED_SINCE) +","    getvalueToAppend(webResource.headers, HeaderConstants.RANGE) +","    this._getCanonicalizedHeaders(webResource) +","    this._getCanonicalizedResource(webResource);","","  var signature = this.signer.sign(stringToSign);","","  webResource.withHeader(HeaderConstants.AUTHORIZATION, 'SharedKey ' + this.storageAccount + ':' + signature);","  callback(null);","};","","/*","* Retrieves the webresource's canonicalized resource string.","* @param {WebResource} webResource The webresource to get the canonicalized resource string from.","* @return {string} The canonicalized resource string.","*/","SharedKey.prototype._getCanonicalizedResource = function (webResource) {","  var path = '/';","  if (webResource.path) {","    path = webResource.path;","  }","","  var canonicalizedResource = '/' + this.storageAccount + path;","","  // Get the raw query string values for signing","  var queryStringValues = webResource.queryString;","","  // Build the canonicalized resource by sorting the values by name.","  if (queryStringValues) {","    var paramNames = [];","    Object.keys(queryStringValues).forEach(function (n) {","      paramNames.push(n);","    });","","    paramNames = paramNames.sort();","    Object.keys(paramNames).forEach(function (name) {","      canonicalizedResource += '\\n' + paramNames[name] + ':' + queryStringValues[paramNames[name]];","    });","  }","","  return canonicalizedResource;","};","","/*","* Constructs the Canonicalized Headers string.","*","* To construct the CanonicalizedHeaders portion of the signature string,","* follow these steps: 1. Retrieve all headers for the resource that begin","* with x-ms-, including the x-ms-date header. 2. Convert each HTTP header","* name to lowercase. 3. Sort the headers lexicographically by header name,","* in ascending order. Each header may appear only once in the","* string. 4. Unfold the string by replacing any breaking white space with a","* single space. 5. Trim any white space around the colon in the header. 6.","* Finally, append a new line character to each canonicalized header in the","* resulting list. Construct the CanonicalizedHeaders string by","* concatenating all headers in this list into a single string.","*","* @param {object} The webresource object.","* @return {string} The canonicalized headers.","*/","SharedKey.prototype._getCanonicalizedHeaders = function (webResource) {","  // Build canonicalized headers","  var canonicalizedHeaders = '';","  if (webResource.headers) {","    var canonicalizedHeadersArray = [];","    for (var header in webResource.headers) {","      if (header.indexOf(HeaderConstants.PREFIX_FOR_STORAGE) === 0) {","        var headerItem = { canonicalized: header.toLowerCase(), original: header };","        canonicalizedHeadersArray.push(headerItem);","      }","    }","","    canonicalizedHeadersArray.sort(function(a, b) { return a.canonicalized.localeCompare(b.canonicalized); });","","    _.each(canonicalizedHeadersArray, function (currentHeaderItem) {","      var value = webResource.headers[currentHeaderItem.original];","      if (!azureutil.IsNullOrEmptyOrUndefinedOrWhiteSpace(value)) {","        canonicalizedHeaders += currentHeaderItem.canonicalized + ':' + value + '\\n';","      } else {","        canonicalizedHeaders += currentHeaderItem.canonicalized + ':\\n';","      }","    });","  }","","  return canonicalizedHeaders;","};","","/**","* Generates the query string for a shared access signature signing.","*","* @this {SharedAccessSignature}","* @param {string}                     serviceType                                         The service type.","* @param {string}                     path                                                The path to the resource.","* @param {object}                     sharedAccessPolicy                                  The shared access policy.","* @param {string}                     [sharedAccessPolicy.Id]                             The signed identifier.","* @param {SharedAccessPermissions}    [sharedAccessPolicy.AccessPolicy.Permissions]       The permission type.","* @param {date}                       [sharedAccessPolicy.AccessPolicy.Start]             The time at which the Shared Access Signature becomes valid.","* @param {date}                       [sharedAccessPolicy.AccessPolicy.Expiry]            The time at which the Shared Access Signature becomes expired.","* @param {string}                     [sharedAccessPolicy.AccessPolicy.IPAddressOrRange]  An IP address or a range of IP addresses from which to accept requests. When specifying a range, note that the range is inclusive.","* @param {string}                     [sharedAccessPolicy.AccessPolicy.Protocols]         The protocols permitted for a request made with the account SAS. ","*                                                                                         Possible values are both HTTPS and HTTP (https,http) or HTTPS only (https). The default value is https,http. ","* @param {string}                     sasVersion                                          A string indicating the desired SAS Version to use, in storage service version format. Value must be 2012-02-12 or later.","* @parma {ResourceTypes}              [args.resourceType]                                 The resource type, if the resource is a blob or container.  Null if the resource is a queue or table.","* @parma {ResourceTypes}              [args.tableName]                                    The table name, if the resource is a table.  Null if the resource is a blob orqueue.","* @parma {ResourceTypes}              [args.queryString]                                  The query string, if additional parameters are desired.","* @param {object}                     [args.headers]                                      The optional header values to set for a blob returned wth this SAS.","* @param {string}                     [args.headers.CacheControl]                         The value of the Cache-Control response header to be returned when this SAS is used.","* @param {string}                     [args.headers.ContentType]                          The value of the Content-Type response header to be returned when this SAS is used.","* @param {string}                     [args.headers.ContentEncoding]                      The value of the Content-Encoding response header to be returned when this SAS is used.","* @param {string}                     [args.headers.ContentLanguage]                      The value of the Content-Language response header to be returned when this SAS is used.","* @param {string}                     [args.headers.ContentDisposition]                   The value of the Content-Disposition response header to be returned when this SAS is used.","* @return {object} The shared access signature query string.","*/","SharedKey.prototype.generateSignedQueryString = function (serviceType, path, sharedAccessPolicy, sasVersion, args) {","  var addIfNotNull = function (queryString, name, value) {","    if (!azureutil.objectIsNull(name) && !azureutil.objectIsNull(value)) {","      queryString[name] = value;","    }","  };","","  var validateVersion = function (sasVersion) {","    // validate and add version","    if (azureutil.objectIsNull(sasVersion)) {","      return HeaderConstants.TARGET_STORAGE_VERSION;","    } else {","      var values = _.values(CompatibleVersionConstants);","      if (values.some(function(version) {","        return version.toLowerCase() === sasVersion.toLowerCase();","      })) {","        return sasVersion;","      } else {","        throw new ArgumentError('sasVersion', azureutil.stringFormat(SR.INVALID_SAS_VERSION, sasVersion, values));","      }","    }","  };","","  var formatAccessPolicyDates = function (accessPolicy) {","    if (!azureutil.objectIsNull(accessPolicy.Start)) {","      if (!_.isDate(accessPolicy.Start)) {","        accessPolicy.Start = new Date(accessPolicy.Start);","      }"," ","      accessPolicy.Start = azureutil.truncatedISO8061Date(accessPolicy.Start);","    }","","    if (!azureutil.objectIsNull(accessPolicy.Expiry)) {","      if (!_.isDate(accessPolicy.Expiry)) {","        accessPolicy.Expiry = new Date(accessPolicy.Expiry);","      }","","      accessPolicy.Expiry = azureutil.truncatedISO8061Date(accessPolicy.Expiry);","    }","  };","","  // set up optional args","  var queryString;","  var resourceType;","  var headers;","  var tableName;","  ","  if(args) {","    queryString = args.queryString;","    resourceType = args.resourceType;","    tableName = args.tableName;","    headers = args.headers;","  }","","  if(!queryString) {","    queryString = {};","  }","","  // add shared access policy params","  if (sharedAccessPolicy.AccessPolicy) {","    formatAccessPolicyDates(sharedAccessPolicy.AccessPolicy);","","    addIfNotNull(queryString, QueryStringConstants.SIGNED_START, sharedAccessPolicy.AccessPolicy.Start);","    addIfNotNull(queryString, QueryStringConstants.SIGNED_EXPIRY, sharedAccessPolicy.AccessPolicy.Expiry);","    addIfNotNull(queryString, QueryStringConstants.SIGNED_PERMISSIONS, sharedAccessPolicy.AccessPolicy.Permissions);","    addIfNotNull(queryString, QueryStringConstants.SIGNED_IP, sharedAccessPolicy.AccessPolicy.IPAddressOrRange);","    addIfNotNull(queryString, QueryStringConstants.SIGNED_PROTOCOL, sharedAccessPolicy.AccessPolicy.Protocols);","","    // tables only","    addIfNotNull(queryString, QueryStringConstants.STARTPK, sharedAccessPolicy.AccessPolicy.StartPk);","    addIfNotNull(queryString, QueryStringConstants.ENDPK, sharedAccessPolicy.AccessPolicy.EndPk);","    addIfNotNull(queryString, QueryStringConstants.STARTRK, sharedAccessPolicy.AccessPolicy.StartRk);","    addIfNotNull(queryString, QueryStringConstants.ENDRK, sharedAccessPolicy.AccessPolicy.EndRk);","  }","","  // validate and add version","  var validatedSASVersionString = validateVersion(sasVersion);","  addIfNotNull(queryString, QueryStringConstants.SIGNED_VERSION, validatedSASVersionString);","","  // add signed identifier","  addIfNotNull(queryString, QueryStringConstants.SIGNED_IDENTIFIER, sharedAccessPolicy.Id);","","  // blobs only","  addIfNotNull(queryString, QueryStringConstants.SIGNED_RESOURCE, resourceType);","  if (headers) {","    addIfNotNull(queryString, QueryStringConstants.CACHE_CONTROL, headers.cacheControl);","    addIfNotNull(queryString, QueryStringConstants.CONTENT_TYPE, headers.contentType);","    addIfNotNull(queryString, QueryStringConstants.CONTENT_ENCODING, headers.contentEncoding);","    addIfNotNull(queryString, QueryStringConstants.CONTENT_LANGUAGE, headers.contentLanguage);","    addIfNotNull(queryString, QueryStringConstants.CONTENT_DISPOSITION, headers.contentDisposition);","  }","","  // tables only","  addIfNotNull(queryString, QueryStringConstants.TABLENAME, tableName);","","  // add signature","  addIfNotNull(queryString, QueryStringConstants.SIGNATURE, this._generateSignature(serviceType, path, sharedAccessPolicy, validatedSASVersionString, {resourceType: resourceType, headers: headers, tableName: tableName}));","","  return qs.stringify(queryString);","};","","/**","* Generates the shared access signature for a resource.","*","* @this {SharedAccessSignature}","* @param {string}                     serviceType                                         The service type.","* @param {string}                     path                                                The path to the resource.","* @param {object}                     sharedAccessPolicy                                  The shared access policy.","* @param {string}                     [sharedAccessPolicy.Id]                             The signed identifier.","* @param {SharedAccessPermissions}    [sharedAccessPolicy.AccessPolicy.Permissions]       The permission type.","* @param {date}                       [sharedAccessPolicy.AccessPolicy.Start]             The time at which the Shared Access Signature becomes valid.","* @param {date}                       [sharedAccessPolicy.AccessPolicy.Expiry]            The time at which the Shared Access Signature becomes expired.","* @param {string}                     [sharedAccessPolicy.AccessPolicy.IPAddressOrRange]  An IP address or a range of IP addresses from which to accept requests. When specifying a range, note that the range is inclusive.","* @param {string}                     [sharedAccessPolicy.AccessPolicy.Protocols]         The protocols permitted for a request made with the account SAS. ","*                                                                                         Possible values are both HTTPS and HTTP (https,http) or HTTPS only (https). The default value is https,http.","* @param {string}                     sasVersion                                          A string indicating the desired SAS Version to use, in storage service version format. Value must be 2012-02-12 or later.","* @parma {ResourceTypes}              [args.resourceType]                                 The resource type, if the resource is a blob or container.  Null if the resource is a queue or table.","* @parma {ResourceTypes}              [args.tableName]                                    The table name, if the resource is a table.  Null if the resource is a blob or queue.","* @param {object}                     [args.headers]                                      The optional header values to set for a blob returned wth this SAS.","* @param {string}                     [args.headers.CacheControl]                         The value of the Cache-Control response header to be returned when this SAS is used.","* @param {string}                     [args.headers.ContentType]                          The value of the Content-Type response header to be returned when this SAS is used.","* @param {string}                     [args.headers.ContentEncoding]                      The value of the Content-Encoding response header to be returned when this SAS is used.","* @param {string}                     [args.headers.ContentLanguage]                      The value of the Content-Language response header to be returned when this SAS is used.","* @param {string}                     [args.headers.ContentDisposition]                   The value of the Content-Disposition response header to be returned when this SAS is used.","* @return {string} The shared access signature.","*/","SharedKey.prototype._generateSignature = function (serviceType, path, sharedAccessPolicy, sasVersion, args) {","  var getvalueToAppend = function (value, noNewLine) {","    var returnValue = '';","    if (!azureutil.objectIsNull(value)) {","      returnValue = value;","    }","","    if (noNewLine !== true) {","      returnValue += '\\n';","    }","","    return returnValue;","  };","","  // set up optional args","  var resourceType;","  var tableName;","  var headers;","  if(args) {","    resourceType = args.resourceType;","    tableName = args.tableName;","    headers = args.headers;","  }","","  // Add leading slash to path","  if (path.substr(0, 1) !== '/') {","    path = '/' + path;","  }","","  var canonicalizedResource;","  if (sasVersion === CompatibleVersionConstants.FEBRUARY_2012 || sasVersion === CompatibleVersionConstants.AUGUST_2013) {","    // Do not prepend service name for older versions","    canonicalizedResource = '/' + this.storageAccount + path;","  } else {","    canonicalizedResource = '/' + serviceType + '/' + this.storageAccount + path;","  }","","  var stringToSign = getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Permissions : '') +","      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Start : '') +","      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Expiry : '') +","      getvalueToAppend(canonicalizedResource) +","      getvalueToAppend(sharedAccessPolicy.Id) +","      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.IPAddressOrRange : '') +","      getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.Protocols : '') +","      sasVersion;","","  if(sasVersion == CompatibleVersionConstants.FEBRUARY_2012) {","    if(headers) {","      throw new ArgumentError('args.headers', SR.INVALID_HEADERS);","    }","  } else if (resourceType) {","    stringToSign += '\\n' +","    getvalueToAppend(headers ? headers.cacheControl : '') +","    getvalueToAppend(headers ? headers.contentDisposition : '') +","    getvalueToAppend(headers ? headers.contentEncoding : '') +","    getvalueToAppend(headers ? headers.contentLanguage : '') +","    getvalueToAppend(headers ? headers.contentType : '', true);","  }","","  if(tableName) {","    stringToSign += '\\n' + ","    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.StartPk : '') +","    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.StartRk : '') +","    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.EndPk : '') +","    getvalueToAppend(sharedAccessPolicy.AccessPolicy ? sharedAccessPolicy.AccessPolicy.EndRk : '', true);","  }","","  return this.signer.sign(stringToSign);","};","","module.exports = SharedKey;"],"l":{"18":1,"19":1,"21":1,"22":1,"23":1,"24":1,"25":1,"27":1,"28":1,"29":1,"30":1,"31":1,"41":1,"42":0,"43":0,"44":0,"45":0,"67":1,"68":0,"69":0,"70":0,"74":0,"75":0,"76":0,"77":0,"80":0,"83":0,"84":0,"85":0,"88":0,"92":0,"94":0,"97":0,"98":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"110":0,"112":0,"135":1,"136":0,"137":0,"138":0,"139":0,"142":0,"143":0,"146":0,"149":0,"159":0,"168":1,"169":0,"171":0,"172":0,"173":0,"174":0,"176":0,"180":0,"196":0,"198":0,"199":0,"207":1,"208":0,"209":0,"210":0,"213":0,"216":0,"219":0,"220":0,"221":0,"222":0,"225":0,"226":0,"227":0,"231":0,"251":1,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"263":0,"265":0,"266":0,"267":0,"268":0,"270":0,"275":0,"304":1,"305":0,"306":0,"307":0,"311":0,"313":0,"314":0,"316":0,"317":0,"318":0,"320":0,"322":0,"327":0,"328":0,"329":0,"330":0,"333":0,"336":0,"337":0,"338":0,"341":0,"346":0,"347":0,"348":0,"349":0,"351":0,"352":0,"353":0,"354":0,"355":0,"358":0,"359":0,"363":0,"364":0,"366":0,"367":0,"368":0,"369":0,"370":0,"373":0,"374":0,"375":0,"376":0,"380":0,"381":0,"384":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"397":0,"400":0,"402":0,"430":1,"431":0,"432":0,"433":0,"434":0,"437":0,"438":0,"441":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"455":0,"456":0,"459":0,"460":0,"462":0,"464":0,"467":0,"476":0,"477":0,"478":0,"480":0,"481":0,"489":0,"490":0,"497":0,"500":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/signing/hmacsha256sign.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/signing/hmacsha256sign.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"HmacSha256Sign","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":35}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":32},"end":{"line":36,"column":56}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":31}},"2":{"start":{"line":25,"column":0},"end":{"line":28,"column":1}},"3":{"start":{"line":26,"column":2},"end":{"line":26,"column":30}},"4":{"start":{"line":27,"column":2},"end":{"line":27,"column":65}},"5":{"start":{"line":36,"column":0},"end":{"line":41,"column":2}},"6":{"start":{"line":40,"column":2},"end":{"line":40,"column":108}},"7":{"start":{"line":43,"column":0},"end":{"line":43,"column":32}}},"branchMap":{},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var crypto = require('crypto');","","/**","* Creates a new HmacSHA256Sign object.","*","* @constructor","*/","function HmacSha256Sign(accessKey) {","  this._accessKey = accessKey;","  this._decodedAccessKey = new Buffer(this._accessKey, 'base64');","}","","/**","* Computes a signature for the specified string using the HMAC-SHA256 algorithm.","*","* @param {string} stringToSign The UTF-8-encoded string to sign.","* @return A String that contains the HMAC-SHA256-encoded signature.","*/","HmacSha256Sign.prototype.sign = function (stringToSign) {","  // Encoding the Signature","  // Signature=Base64(HMAC-SHA256(UTF8(StringToSign)))","","  return crypto.createHmac('sha256', this._decodedAccessKey).update(stringToSign, 'utf-8').digest('base64');","};","","module.exports = HmacSha256Sign;"],"l":{"18":1,"25":1,"26":0,"27":0,"36":1,"40":0,"43":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/signing/sharedaccesssignature.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/signing/sharedaccesssignature.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"SharedAccessSignature","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":41}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":46},"end":{"line":38,"column":79}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":47}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":33}},"4":{"start":{"line":26,"column":0},"end":{"line":29,"column":1}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":27}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":45}},"7":{"start":{"line":38,"column":0},"end":{"line":54,"column":2}},"8":{"start":{"line":39,"column":2},"end":{"line":43,"column":3}},"9":{"start":{"line":40,"column":4},"end":{"line":40,"column":27}},"10":{"start":{"line":42,"column":4},"end":{"line":42,"column":27}},"11":{"start":{"line":45,"column":2},"end":{"line":45,"column":35}},"12":{"start":{"line":48,"column":2},"end":{"line":52,"column":3}},"13":{"start":{"line":49,"column":4},"end":{"line":49,"column":129}},"14":{"start":{"line":51,"column":4},"end":{"line":51,"column":48}},"15":{"start":{"line":53,"column":2},"end":{"line":53,"column":17}},"16":{"start":{"line":56,"column":0},"end":{"line":56,"column":39}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"2":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","var HmacSha256Sign = require('./hmacsha256sign');","var Constants = require('./../util/constants');","var SR = require('./../util/sr');","","/**","* Creates a new SharedAccessSignature object.","*","* @constructor","* @param {string} sasToken    The sasToken.","*/","function SharedAccessSignature(sasToken) {","  this.sasToken = sasToken;","  this.signer = new HmacSha256Sign(sasToken);","}","","/**","* Signs a request with the signature header.","*","* @this {SharedAccessSignature}","* @param {WebResource} The webresource to be signed.","* @param {function(error)}  callback  The callback function.","*/","SharedAccessSignature.prototype.signRequest = function (webResource, callback) {","  if (webResource.uri.indexOf('?') === -1) {","    webResource.uri += '?';","  } else {","    webResource.uri += '&';","  }","","  webResource.uri += this.sasToken;","","  // Add the api-version","  if (this.sasToken.indexOf('api-version') == -1) {","    webResource.uri += '&' + Constants.QueryStringConstants.API_VERSION + '=' + Constants.HeaderConstants.TARGET_STORAGE_VERSION;","  } else {","    throw new SyntaxError(SR.INVALID_SAS_TOKEN);","  }","  callback(null);","};","","module.exports = SharedAccessSignature;",""],"l":{"16":1,"17":1,"18":1,"26":1,"27":0,"28":0,"38":1,"39":0,"40":0,"42":0,"45":0,"48":0,"49":0,"51":0,"53":0,"56":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/models/servicestatsparser.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/models/servicestatsparser.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":16},"end":{"line":18,"column":43}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":25}},"2":{"start":{"line":18,"column":0},"end":{"line":34,"column":2}},"3":{"start":{"line":19,"column":2},"end":{"line":19,"column":24}},"4":{"start":{"line":21,"column":2},"end":{"line":31,"column":3}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":37}},"6":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"7":{"start":{"line":25,"column":6},"end":{"line":25,"column":81}},"8":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"9":{"start":{"line":29,"column":6},"end":{"line":29,"column":103}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":22}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"4":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":74}},{"start":{"line":28,"column":78},"end":{"line":28,"column":128}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","exports = module.exports;","","exports.parse = function (serviceStatsXml) {","  var serviceStats = {};","","  if (typeof serviceStatsXml.GeoReplication !== 'undefined') {   ","    serviceStats.GeoReplication = {};","","    if (typeof serviceStatsXml.GeoReplication.Status !== 'undefined') {","      serviceStats.GeoReplication.Status = serviceStatsXml.GeoReplication.Status;","    }","","    if (typeof serviceStatsXml.GeoReplication.LastSyncTime !== 'undefined' && serviceStatsXml.GeoReplication.LastSyncTime !== '') {","      serviceStats.GeoReplication.LastSyncTime = new Date(serviceStatsXml.GeoReplication.LastSyncTime);","    }","  }","","  return serviceStats;","};"],"l":{"16":1,"18":1,"19":0,"21":0,"22":0,"24":0,"25":0,"28":0,"29":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/models/aclresult.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/models/aclresult.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":34,"loc":{"start":{"line":34,"column":20},"end":{"line":34,"column":51}}},"2":{"name":"(anonymous_2)","line":40,"loc":{"start":{"line":40,"column":17},"end":{"line":40,"column":32}}},"3":{"name":"(anonymous_3)","line":92,"loc":{"start":{"line":92,"column":16},"end":{"line":92,"column":48}}},"4":{"name":"(anonymous_4)","line":101,"loc":{"start":{"line":101,"column":33},"end":{"line":101,"column":61}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":39}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":40}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":49}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":45}},"6":{"start":{"line":24,"column":0},"end":{"line":24,"column":42}},"7":{"start":{"line":26,"column":0},"end":{"line":26,"column":25}},"8":{"start":{"line":34,"column":0},"end":{"line":90,"column":2}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":32}},"10":{"start":{"line":36,"column":2},"end":{"line":36,"column":98}},"11":{"start":{"line":38,"column":2},"end":{"line":38,"column":46}},"12":{"start":{"line":39,"column":2},"end":{"line":88,"column":3}},"13":{"start":{"line":40,"column":4},"end":{"line":87,"column":7}},"14":{"start":{"line":41,"column":6},"end":{"line":41,"column":50}},"15":{"start":{"line":42,"column":6},"end":{"line":47,"column":43}},"16":{"start":{"line":49,"column":6},"end":{"line":62,"column":7}},"17":{"start":{"line":50,"column":8},"end":{"line":50,"column":48}},"18":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"19":{"start":{"line":52,"column":10},"end":{"line":52,"column":52}},"20":{"start":{"line":56,"column":8},"end":{"line":56,"column":60}},"21":{"start":{"line":58,"column":8},"end":{"line":61,"column":18}},"22":{"start":{"line":64,"column":6},"end":{"line":77,"column":7}},"23":{"start":{"line":65,"column":8},"end":{"line":65,"column":50}},"24":{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},"25":{"start":{"line":67,"column":10},"end":{"line":67,"column":54}},"26":{"start":{"line":71,"column":8},"end":{"line":71,"column":62}},"27":{"start":{"line":73,"column":8},"end":{"line":76,"column":18}},"28":{"start":{"line":79,"column":6},"end":{"line":84,"column":7}},"29":{"start":{"line":80,"column":8},"end":{"line":83,"column":18}},"30":{"start":{"line":86,"column":6},"end":{"line":86,"column":26}},"31":{"start":{"line":89,"column":2},"end":{"line":89,"column":30}},"32":{"start":{"line":92,"column":0},"end":{"line":122,"column":2}},"33":{"start":{"line":93,"column":2},"end":{"line":93,"column":29}},"34":{"start":{"line":95,"column":2},"end":{"line":95,"column":119}},"35":{"start":{"line":96,"column":2},"end":{"line":119,"column":3}},"36":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"37":{"start":{"line":98,"column":6},"end":{"line":98,"column":54}},"38":{"start":{"line":101,"column":4},"end":{"line":118,"column":7}},"39":{"start":{"line":102,"column":6},"end":{"line":102,"column":28}},"40":{"start":{"line":103,"column":6},"end":{"line":115,"column":7}},"41":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"42":{"start":{"line":105,"column":10},"end":{"line":105,"column":86}},"43":{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},"44":{"start":{"line":109,"column":10},"end":{"line":109,"column":88}},"45":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"46":{"start":{"line":113,"column":10},"end":{"line":113,"column":78}},"47":{"start":{"line":117,"column":6},"end":{"line":117,"column":60}},"48":{"start":{"line":121,"column":2},"end":{"line":121,"column":27}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"2":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":6}},{"start":{"line":49,"column":6},"end":{"line":49,"column":6}}]},"3":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":8}},{"start":{"line":51,"column":8},"end":{"line":51,"column":8}}]},"4":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":6}},{"start":{"line":64,"column":6},"end":{"line":64,"column":6}}]},"5":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":66,"column":8}},{"start":{"line":66,"column":8},"end":{"line":66,"column":8}}]},"6":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":6}},{"start":{"line":79,"column":6},"end":{"line":79,"column":6}}]},"7":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":96,"column":2}},{"start":{"line":96,"column":2},"end":{"line":96,"column":2}}]},"8":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"9":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":6},"end":{"line":103,"column":6}},{"start":{"line":103,"column":6},"end":{"line":103,"column":6}}]},"10":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":8}},{"start":{"line":104,"column":8},"end":{"line":104,"column":8}}]},"11":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":8},"end":{"line":108,"column":8}},{"start":{"line":108,"column":8},"end":{"line":108,"column":8}}]},"12":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":8}},{"start":{"line":112,"column":8},"end":{"line":112,"column":8}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var _ = require('underscore');","var xmlbuilder = require('xmlbuilder');","","var azureutil = require('../util/util');","var ISO8061Date = require('../util/iso8061date');","var Constants = require('../util/constants');","var AclConstants = Constants.AclConstants;","","exports = module.exports;","","/**","* Builds an XML representation for container acl permissions.","*","* @param  {Object.<string, AccessPolicy>}  entity The signed identifiers.","* @return {string} The XML container acl permissions.","*/","exports.serialize = function (signedIdentifiersJs) {","  var doc = xmlbuilder.create();","  doc = doc.begin(AclConstants.SIGNED_IDENTIFIERS_ELEMENT, { version: '1.0', encoding: 'utf-8' });","","  var keys = Object.keys(signedIdentifiersJs);","  if (keys.length > 0) {","    keys.forEach(function (key) {","      var accessPolicy = signedIdentifiersJs[key];","      doc = doc","        .ele(AclConstants.SIGNED_IDENTIFIER_ELEMENT)","          .ele(AclConstants.ID)","            .txt(key)","          .up()","          .ele(AclConstants.ACCESS_POLICY);","","      if (accessPolicy.Start) {","        var startIsoString = accessPolicy.Start;","        if (!_.isDate(startIsoString)) {","          startIsoString = new Date(startIsoString);","        }","","        // Convert to expected ISO 8061 date format","        startIsoString = ISO8061Date.format(startIsoString);","","        doc = doc","            .ele(AclConstants.START)","              .txt(startIsoString)","            .up();","      }","","      if (accessPolicy.Expiry) {","        var expiryIsoString = accessPolicy.Expiry;","        if (!_.isDate(expiryIsoString)) {","          expiryIsoString = new Date(expiryIsoString);","        }","","        // Convert to expected ISO 8061 date format","        expiryIsoString = ISO8061Date.format(expiryIsoString);","","        doc = doc","            .ele(AclConstants.EXPIRY)","              .txt(expiryIsoString)","            .up();","      }","","      if (accessPolicy.Permissions) {","        doc = doc","            .ele(AclConstants.PERMISSION)","              .txt(accessPolicy.Permissions)","            .up();","      }","","      doc = doc.up().up();","    });","  }","  return doc.doc().toString();","};","","exports.parse = function (signedIdentifiersXml) {","  var signedIdentifiers = {};","","  signedIdentifiersXml = azureutil.tryGetValueChain(signedIdentifiersXml, [ 'SignedIdentifiers', 'SignedIdentifier' ]);","  if (signedIdentifiersXml) {","    if (!_.isArray(signedIdentifiersXml)) {","      signedIdentifiersXml = [ signedIdentifiersXml ];","    }","","    signedIdentifiersXml.forEach(function (signedIdentifier) {","      var accessPolicy = {};","      if (signedIdentifier.AccessPolicy) {","        if (signedIdentifier.AccessPolicy.Start) {","          accessPolicy.Start = ISO8061Date.parse(signedIdentifier.AccessPolicy.Start);","        }","","        if (signedIdentifier.AccessPolicy.Expiry) {","          accessPolicy.Expiry = ISO8061Date.parse(signedIdentifier.AccessPolicy.Expiry);","        }","","        if (signedIdentifier.AccessPolicy.Permission) {","          accessPolicy.Permissions = signedIdentifier.AccessPolicy.Permission;","        }","      }","","      signedIdentifiers[signedIdentifier.Id] = accessPolicy;","    });","  }","","  return signedIdentifiers;","};"],"l":{"18":1,"19":1,"21":1,"22":1,"23":1,"24":1,"26":1,"34":1,"35":0,"36":0,"38":0,"39":0,"40":0,"41":0,"42":0,"49":0,"50":0,"51":0,"52":0,"56":0,"58":0,"64":0,"65":0,"66":0,"67":0,"71":0,"73":0,"79":0,"80":0,"86":0,"89":0,"92":1,"93":0,"95":0,"96":0,"97":0,"98":0,"101":0,"102":0,"103":0,"104":0,"105":0,"108":0,"109":0,"112":0,"113":0,"117":0,"121":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/iso8061date.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/iso8061date.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":15},"end":{"line":17,"column":36}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":17},"end":{"line":34,"column":33}}},"3":{"name":"(anonymous_3)","line":45,"loc":{"start":{"line":45,"column":16},"end":{"line":45,"column":42}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":24,"column":2}},"2":{"start":{"line":18,"column":2},"end":{"line":18,"column":24}},"3":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"4":{"start":{"line":20,"column":4},"end":{"line":20,"column":30}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"6":{"start":{"line":34,"column":0},"end":{"line":37,"column":2}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":38}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":66}},"9":{"start":{"line":45,"column":0},"end":{"line":66,"column":2}},"10":{"start":{"line":46,"column":2},"end":{"line":46,"column":40}},"11":{"start":{"line":47,"column":2},"end":{"line":47,"column":32}},"12":{"start":{"line":48,"column":2},"end":{"line":48,"column":33}},"13":{"start":{"line":49,"column":2},"end":{"line":49,"column":31}},"14":{"start":{"line":50,"column":2},"end":{"line":50,"column":13}},"15":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"16":{"start":{"line":52,"column":4},"end":{"line":52,"column":28}},"17":{"start":{"line":55,"column":2},"end":{"line":63,"column":5}},"18":{"start":{"line":65,"column":2},"end":{"line":65,"column":14}}},"branchMap":{"1":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var rightPad = function (n, number) {","  var currentN = '' + n;","  while (currentN.length < number) {","    currentN = currentN + '0';","  }","","  return currentN;","};","","/**","* Formats a date into an iso 8061 string.","*","* @param {date}    date The date to format.","* @param {bool}    skipMilliseconds Boolean value indicating if the miliseconds part of the date should not be included.","* @param {integer} millisecondsPading Number of digits to left pad the miliseconds.","* @return {string} The date formated in the ISO 8061 date format.","*/","exports.format = function (date) {","  var dateString = date.toISOString();","  return dateString.substring(0, dateString.length - 1) + '0000Z';","};","","/**","* Parses an ISO 8061 date string into a date object.","*","* @param {string} stringDateTime The string with the date to parse in the ISO 8061 format.","* @return {date} The parsed date.","*/","exports.parse = function (stringDateTime) {","  var parts = stringDateTime.split('T');","  var ymd = parts[0].split('-');","  var time = parts[1].split('.');","  var hms = time[0].split(':');","  var ms = 0;","  if (time[1]) {","    ms = time[1].split('Z');","  }","","  var date = new Date(Date.UTC(","    parseInt(ymd[0], 10),","    parseInt(ymd[1], 10) - 1,","    parseInt(ymd[2], 10),","    parseInt(hms[0], 10),","    parseInt(hms[1], 10),","    parseInt(hms[2], 10),","    Math.round(parseInt(rightPad(ms[0], 7), 10) / 10000)","  ));","","  return date;","};"],"l":{"17":1,"18":0,"19":0,"20":0,"23":0,"34":1,"35":0,"36":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"55":0,"65":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/filters/linearretrypolicyfilter.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/filters/linearretrypolicyfilter.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"LinearRetryPolicyFilter","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":60}}},"2":{"name":"(anonymous_2)","line":58,"loc":{"start":{"line":58,"column":48},"end":{"line":58,"column":86}}},"3":{"name":"(anonymous_3)","line":71,"loc":{"start":{"line":71,"column":43},"end":{"line":71,"column":75}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":55}},"2":{"start":{"line":36,"column":0},"end":{"line":39,"column":1}},"3":{"start":{"line":37,"column":2},"end":{"line":37,"column":97}},"4":{"start":{"line":38,"column":2},"end":{"line":38,"column":109}},"5":{"start":{"line":44,"column":0},"end":{"line":44,"column":66}},"6":{"start":{"line":49,"column":0},"end":{"line":49,"column":55}},"7":{"start":{"line":58,"column":0},"end":{"line":63,"column":2}},"8":{"start":{"line":59,"column":2},"end":{"line":59,"column":101}},"9":{"start":{"line":60,"column":2},"end":{"line":60,"column":47}},"10":{"start":{"line":62,"column":2},"end":{"line":62,"column":75}},"11":{"start":{"line":71,"column":0},"end":{"line":73,"column":2}},"12":{"start":{"line":72,"column":2},"end":{"line":72,"column":56}},"13":{"start":{"line":75,"column":0},"end":{"line":75,"column":41}}},"branchMap":{"1":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":33},"end":{"line":37,"column":43}},{"start":{"line":37,"column":46},"end":{"line":37,"column":96}}]},"2":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":39},"end":{"line":38,"column":52}},{"start":{"line":38,"column":55},"end":{"line":38,"column":108}}]},"3":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":68},"end":{"line":59,"column":95}},{"start":{"line":59,"column":98},"end":{"line":59,"column":100}}]},"4":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":19},"end":{"line":59,"column":33}},{"start":{"line":59,"column":37},"end":{"line":59,"column":64}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","//","'use strict';"," ","var RetryPolicyFilter = require('./retrypolicyfilter');","","/**","* Creates a new LinearRetryPolicyFilter instance.","* @class","* The LinearRetryPolicyFilter allows you to retry operations,","* using an linear back-off interval between retries.","* To apply a filter to service operations, use `withFilter`","* and specify the filter to be used when creating a service.","* @constructor","* @param {number} [retryCount=3]            The client retry count.","* @param {number} [retryInterval=30000]     The client retry interval, in milliseconds.","*","* @example","* var azure = require('azure-storage');","* var retryOperations = new azure.LinearRetryPolicyFilter();","* var blobService = azure.createBlobService().withFilter(retryOperations)","*/","function LinearRetryPolicyFilter(retryCount, retryInterval) {","  this.retryCount = retryCount ? retryCount : LinearRetryPolicyFilter.DEFAULT_CLIENT_RETRY_COUNT;","  this.retryInterval = retryInterval ? retryInterval : LinearRetryPolicyFilter.DEFAULT_CLIENT_RETRY_INTERVAL;","}","","/**","* Represents the default client retry interval, in milliseconds.","*/","LinearRetryPolicyFilter.DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;","","/**","* Represents the default client retry count.","*/","LinearRetryPolicyFilter.DEFAULT_CLIENT_RETRY_COUNT = 3;","","/**","* Determines if the operation should be retried and how long to wait until the next retry.","*"," * @param {number} statusCode       The HTTP status code."," * @param {object} requestOptions   The request options."," * @return {retryInfo} Information about whether the operation qualifies for a retry and the retryInterval.","*/","LinearRetryPolicyFilter.prototype.shouldRetry = function (statusCode, requestOptions) {","  var retryData = (requestOptions && requestOptions.retryContext) ? requestOptions.retryContext : {};","  retryData.retryInterval = this.retryInterval;","","  return RetryPolicyFilter._shouldRetryOnError(statusCode, requestOptions);","};","","/**","* Handles an operation with a linear retry policy.","*","* @param {Object}   requestOptions The original request options.","* @param {function} next           The next filter to be handled.","*/","LinearRetryPolicyFilter.prototype.handle = function (requestOptions, next) {","  RetryPolicyFilter._handle(this, requestOptions, next);","};","","module.exports = LinearRetryPolicyFilter;",""],"l":{"18":1,"36":1,"37":0,"38":0,"44":1,"49":1,"58":1,"59":0,"60":0,"62":0,"71":1,"72":0,"75":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/filters/retrypolicyfilter.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/filters/retrypolicyfilter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0,0,0,0,0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0],"36":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"RetryPolicyFilter","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":54}}},"2":{"name":"(anonymous_2)","line":65,"loc":{"start":{"line":65,"column":37},"end":{"line":65,"column":69}}},"3":{"name":"(anonymous_3)","line":75,"loc":{"start":{"line":75,"column":28},"end":{"line":75,"column":66}}},"4":{"name":"(anonymous_4)","line":91,"loc":{"start":{"line":91,"column":18},"end":{"line":91,"column":30}}},"5":{"name":"(anonymous_5)","line":95,"loc":{"start":{"line":95,"column":32},"end":{"line":95,"column":89}}},"6":{"name":"(anonymous_6)","line":198,"loc":{"start":{"line":198,"column":40},"end":{"line":198,"column":78}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":40}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":45}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":59}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}},"5":{"start":{"line":44,"column":0},"end":{"line":47,"column":1}},"6":{"start":{"line":45,"column":2},"end":{"line":45,"column":91}},"7":{"start":{"line":46,"column":2},"end":{"line":46,"column":103}},"8":{"start":{"line":52,"column":0},"end":{"line":52,"column":60}},"9":{"start":{"line":57,"column":0},"end":{"line":57,"column":49}},"10":{"start":{"line":65,"column":0},"end":{"line":67,"column":2}},"11":{"start":{"line":66,"column":2},"end":{"line":66,"column":56}},"12":{"start":{"line":75,"column":0},"end":{"line":196,"column":2}},"13":{"start":{"line":77,"column":2},"end":{"line":77,"column":55}},"14":{"start":{"line":78,"column":2},"end":{"line":78,"column":40}},"15":{"start":{"line":81,"column":2},"end":{"line":87,"column":4}},"16":{"start":{"line":89,"column":2},"end":{"line":89,"column":25}},"17":{"start":{"line":90,"column":2},"end":{"line":90,"column":27}},"18":{"start":{"line":91,"column":2},"end":{"line":193,"column":4}},"19":{"start":{"line":94,"column":4},"end":{"line":192,"column":5}},"20":{"start":{"line":95,"column":6},"end":{"line":191,"column":9}},"21":{"start":{"line":97,"column":8},"end":{"line":103,"column":9}},"22":{"start":{"line":98,"column":10},"end":{"line":100,"column":11}},"23":{"start":{"line":99,"column":12},"end":{"line":99,"column":83}},"24":{"start":{"line":102,"column":10},"end":{"line":102,"column":70}},"25":{"start":{"line":108,"column":8},"end":{"line":108,"column":250}},"26":{"start":{"line":110,"column":8},"end":{"line":110,"column":153}},"27":{"start":{"line":111,"column":8},"end":{"line":111,"column":178}},"28":{"start":{"line":112,"column":8},"end":{"line":112,"column":54}},"29":{"start":{"line":114,"column":8},"end":{"line":116,"column":9}},"30":{"start":{"line":115,"column":10},"end":{"line":115,"column":36}},"31":{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},"32":{"start":{"line":120,"column":10},"end":{"line":120,"column":134}},"33":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"34":{"start":{"line":125,"column":10},"end":{"line":125,"column":55}},"35":{"start":{"line":132,"column":8},"end":{"line":190,"column":9}},"36":{"start":{"line":145,"column":10},"end":{"line":149,"column":11}},"37":{"start":{"line":146,"column":12},"end":{"line":146,"column":63}},"38":{"start":{"line":148,"column":12},"end":{"line":148,"column":65}},"39":{"start":{"line":154,"column":10},"end":{"line":158,"column":11}},"40":{"start":{"line":156,"column":12},"end":{"line":156,"column":80}},"41":{"start":{"line":157,"column":12},"end":{"line":157,"column":73}},"42":{"start":{"line":165,"column":10},"end":{"line":165,"column":139}},"43":{"start":{"line":166,"column":10},"end":{"line":176,"column":11}},"44":{"start":{"line":167,"column":12},"end":{"line":167,"column":84}},"45":{"start":{"line":168,"column":12},"end":{"line":170,"column":13}},"46":{"start":{"line":169,"column":14},"end":{"line":169,"column":35}},"47":{"start":{"line":172,"column":12},"end":{"line":172,"column":91}},"48":{"start":{"line":175,"column":12},"end":{"line":175,"column":50}},"49":{"start":{"line":178,"column":10},"end":{"line":180,"column":11}},"50":{"start":{"line":179,"column":12},"end":{"line":179,"column":70}},"51":{"start":{"line":182,"column":10},"end":{"line":182,"column":73}},"52":{"start":{"line":183,"column":10},"end":{"line":183,"column":22}},"53":{"start":{"line":185,"column":10},"end":{"line":189,"column":11}},"54":{"start":{"line":186,"column":12},"end":{"line":186,"column":43}},"55":{"start":{"line":187,"column":17},"end":{"line":189,"column":11}},"56":{"start":{"line":188,"column":12},"end":{"line":188,"column":40}},"57":{"start":{"line":195,"column":2},"end":{"line":195,"column":14}},"58":{"start":{"line":198,"column":0},"end":{"line":231,"column":2}},"59":{"start":{"line":199,"column":2},"end":{"line":199,"column":101}},"60":{"start":{"line":202,"column":2},"end":{"line":228,"column":3}},"61":{"start":{"line":204,"column":4},"end":{"line":207,"column":5}},"62":{"start":{"line":205,"column":6},"end":{"line":205,"column":34}},"63":{"start":{"line":206,"column":6},"end":{"line":206,"column":23}},"64":{"start":{"line":210,"column":4},"end":{"line":227,"column":5}},"65":{"start":{"line":211,"column":6},"end":{"line":223,"column":7}},"66":{"start":{"line":213,"column":8},"end":{"line":218,"column":9}},"67":{"start":{"line":214,"column":10},"end":{"line":214,"column":34}},"68":{"start":{"line":215,"column":10},"end":{"line":215,"column":37}},"69":{"start":{"line":217,"column":10},"end":{"line":217,"column":38}},"70":{"start":{"line":219,"column":13},"end":{"line":223,"column":7}},"71":{"start":{"line":221,"column":8},"end":{"line":221,"column":35}},"72":{"start":{"line":222,"column":8},"end":{"line":222,"column":41}},"73":{"start":{"line":224,"column":11},"end":{"line":227,"column":5}},"74":{"start":{"line":226,"column":6},"end":{"line":226,"column":34}},"75":{"start":{"line":230,"column":2},"end":{"line":230,"column":19}},"76":{"start":{"line":233,"column":0},"end":{"line":233,"column":35}}},"branchMap":{"1":{"line":45,"type":"cond-expr","locations":[{"start":{"line":45,"column":33},"end":{"line":45,"column":43}},{"start":{"line":45,"column":46},"end":{"line":45,"column":90}}]},"2":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":39},"end":{"line":46,"column":52}},{"start":{"line":46,"column":55},"end":{"line":46,"column":102}}]},"3":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"4":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":97,"column":8}},{"start":{"line":97,"column":8},"end":{"line":97,"column":8}}]},"5":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":10},"end":{"line":98,"column":10}},{"start":{"line":98,"column":10},"end":{"line":98,"column":10}}]},"6":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":33},"end":{"line":108,"column":108}},{"start":{"line":108,"column":115},"end":{"line":108,"column":136}},{"start":{"line":108,"column":140},"end":{"line":108,"column":180}},{"start":{"line":108,"column":186},"end":{"line":108,"column":204}},{"start":{"line":108,"column":208},"end":{"line":108,"column":247}}]},"7":{"line":110,"type":"cond-expr","locations":[{"start":{"line":110,"column":83},"end":{"line":110,"column":145}},{"start":{"line":110,"column":148},"end":{"line":110,"column":152}}]},"8":{"line":111,"type":"cond-expr","locations":[{"start":{"line":111,"column":61},"end":{"line":111,"column":64}},{"start":{"line":111,"column":68},"end":{"line":111,"column":154}}]},"9":{"line":111,"type":"cond-expr","locations":[{"start":{"line":111,"column":116},"end":{"line":111,"column":119}},{"start":{"line":111,"column":122},"end":{"line":111,"column":154}}]},"10":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":114,"column":8}},{"start":{"line":114,"column":8},"end":{"line":114,"column":8}}]},"11":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":8},"end":{"line":119,"column":8}},{"start":{"line":119,"column":8},"end":{"line":119,"column":8}}]},"12":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":124,"column":8}},{"start":{"line":124,"column":8},"end":{"line":124,"column":8}}]},"13":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":132,"column":8}},{"start":{"line":132,"column":8},"end":{"line":132,"column":8}}]},"14":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":12},"end":{"line":133,"column":42}},{"start":{"line":133,"column":46},"end":{"line":133,"column":64}},{"start":{"line":133,"column":68},"end":{"line":133,"column":114}},{"start":{"line":133,"column":118},"end":{"line":133,"column":140}},{"start":{"line":135,"column":15},"end":{"line":135,"column":61}},{"start":{"line":135,"column":65},"end":{"line":135,"column":84}},{"start":{"line":137,"column":16},"end":{"line":137,"column":58}},{"start":{"line":138,"column":16},"end":{"line":138,"column":55}},{"start":{"line":139,"column":16},"end":{"line":139,"column":61}},{"start":{"line":140,"column":16},"end":{"line":140,"column":56}},{"start":{"line":141,"column":16},"end":{"line":141,"column":55}}]},"15":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":10},"end":{"line":145,"column":10}},{"start":{"line":145,"column":10},"end":{"line":145,"column":10}}]},"16":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":10},"end":{"line":154,"column":10}},{"start":{"line":154,"column":10},"end":{"line":154,"column":10}}]},"17":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":14},"end":{"line":154,"column":31}},{"start":{"line":154,"column":36},"end":{"line":154,"column":117}}]},"18":{"line":165,"type":"cond-expr","locations":[{"start":{"line":165,"column":97},"end":{"line":165,"column":115}},{"start":{"line":165,"column":118},"end":{"line":165,"column":138}}]},"19":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":10},"end":{"line":166,"column":10}},{"start":{"line":166,"column":10},"end":{"line":166,"column":10}}]},"20":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":12},"end":{"line":168,"column":12}},{"start":{"line":168,"column":12},"end":{"line":168,"column":12}}]},"21":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":10},"end":{"line":178,"column":10}},{"start":{"line":178,"column":10},"end":{"line":178,"column":10}}]},"22":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":10},"end":{"line":185,"column":10}},{"start":{"line":185,"column":10},"end":{"line":185,"column":10}}]},"23":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":17},"end":{"line":187,"column":17}},{"start":{"line":187,"column":17},"end":{"line":187,"column":17}}]},"24":{"line":199,"type":"cond-expr","locations":[{"start":{"line":199,"column":68},"end":{"line":199,"column":95}},{"start":{"line":199,"column":98},"end":{"line":199,"column":100}}]},"25":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":19},"end":{"line":199,"column":33}},{"start":{"line":199,"column":37},"end":{"line":199,"column":64}}]},"26":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":2},"end":{"line":202,"column":2}},{"start":{"line":202,"column":2},"end":{"line":202,"column":2}}]},"27":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":6},"end":{"line":202,"column":23}},{"start":{"line":202,"column":27},"end":{"line":202,"column":44}}]},"28":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":4},"end":{"line":204,"column":4}},{"start":{"line":204,"column":4},"end":{"line":204,"column":4}}]},"29":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":8},"end":{"line":204,"column":25}},{"start":{"line":204,"column":29},"end":{"line":204,"column":46}}]},"30":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":210,"column":4}},{"start":{"line":210,"column":4},"end":{"line":210,"column":4}}]},"31":{"line":210,"type":"binary-expr","locations":[{"start":{"line":210,"column":8},"end":{"line":210,"column":22}},{"start":{"line":210,"column":26},"end":{"line":210,"column":71}}]},"32":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":6},"end":{"line":211,"column":6}},{"start":{"line":211,"column":6},"end":{"line":211,"column":6}}]},"33":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":8},"end":{"line":213,"column":8}},{"start":{"line":213,"column":8},"end":{"line":213,"column":8}}]},"34":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":13},"end":{"line":219,"column":13}},{"start":{"line":219,"column":13},"end":{"line":219,"column":13}}]},"35":{"line":219,"type":"binary-expr","locations":[{"start":{"line":219,"column":17},"end":{"line":219,"column":36}},{"start":{"line":219,"column":40},"end":{"line":219,"column":57}},{"start":{"line":219,"column":61},"end":{"line":219,"column":77}}]},"36":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":11},"end":{"line":224,"column":11}},{"start":{"line":224,"column":11},"end":{"line":224,"column":11}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var azureutil = require('../util/util');","var Constants = require('../util/constants');","var StorageUtilities = require('../util/storageutilities');","var extend = require('util')._extend;","","/**","* Creates a new RetryPolicyFilter instance.","* @class","* The RetryPolicyFilter allows you to retry operations,","* using a custom retry policy. Users are responsible to ","* define the shouldRetry method.","* To apply a filter to service operations, use `withFilter`","* and specify the filter to be used when creating a service.","* @constructor","* @param {number} [retryCount=30000]        The client retry count.","* @param {number} [retryInterval=3]     The client retry interval, in milliseconds.","*","* @example","* var azure = require('azure-storage');","* var retryPolicy = new azure.RetryPolicyFilter();","* retryPolicy.retryCount = 3;","* retryPolicy.retryInterval = 3000;","* retryPolicy.shouldRetry = function(statusCode, retryContext) {","*","* };","* var blobService = azure.createBlobService().withFilter(retryPolicy);","*/","function RetryPolicyFilter(retryCount, retryInterval) {","  this.retryCount = retryCount ? retryCount : RetryPolicyFilter.DEFAULT_CLIENT_RETRY_COUNT;","  this.retryInterval = retryInterval ? retryInterval : RetryPolicyFilter.DEFAULT_CLIENT_RETRY_INTERVAL;","}","","/**","* Represents the default client retry interval, in milliseconds.","*/","RetryPolicyFilter.DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;","","/**","* Represents the default client retry count.","*/","RetryPolicyFilter.DEFAULT_CLIENT_RETRY_COUNT = 3;","","/**","* Handles an operation with a retry policy.","*","* @param {Object}   requestOptions The original request options.","* @param {function} next           The next filter to be handled.","*/","RetryPolicyFilter.prototype.handle = function (requestOptions, next) {","  RetryPolicyFilter._handle(this, requestOptions, next);","};","","/**","* Handles an operation with a retry policy.","*","* @param {Object}   requestOptions The original request options.","* @param {function} next           The next filter to be handled.","*/","RetryPolicyFilter._handle = function (self, requestOptions, next) {","","  var retryRequestOptions = extend({}, requestOptions);","  retryRequestOptions.retryInterval = 0;","","  // Initialize retryContext because that will be passed to the shouldRetry method which users will implement ","  retryRequestOptions.retryContext = {","    retryCount: 0,","    error: null,","    retryInterval: retryRequestOptions.retryInterval,","    locationMode: retryRequestOptions.locationMode,","    currentLocation: retryRequestOptions.currentLocation","  };","","  var lastPrimaryAttempt;","  var lastSecondaryAttempt;","  var operation = function () {","    // retry policies dont really do anything to the request options","    // so move on to next","    if (next) {","      next(retryRequestOptions, function (returnObject, finalCallback, nextPostCallback) {","        // Previous operation ended so update the retry data","        if (returnObject.error) {","          if (retryRequestOptions.retryContext.error) {","            returnObject.error.innerError = retryRequestOptions.retryContext.error;","          }","","          retryRequestOptions.retryContext.error = returnObject.error;","        }","","        // If a request sent to the secondary location fails with 404 (Not Found), it is possible","        // that the resource replication is not finished yet. So, in case of 404 only in the secondary","        // location, the failure should still be retryable.","        var secondaryNotFound = (retryRequestOptions.currentLocation === Constants.StorageLocation.SECONDARY) && ((returnObject.response && returnObject.response.statusCode === 404) || (returnObject.error && returnObject.error.code === 'ENOTFOUND'));"," ","        var notExceedMaxRetryCount = retryRequestOptions.retryContext.retryCount ? retryRequestOptions.retryContext.retryCount <= self.retryCount : true;","        var retryInfo = self.shouldRetry(secondaryNotFound ? 500 : (azureutil.objectIsNull(returnObject.response) ? 306 : returnObject.response.statusCode), retryRequestOptions);","        retryRequestOptions.retryContext.retryCount++;","","        if (retryInfo.ignore) {","          returnObject.error = null;","        }","","        // If the custom retry logic(shouldRetry) does not return a targetLocation, calculate based on the previous location and locationMode.","        if(azureutil.objectIsNull(retryInfo.targetLocation)) {","          retryInfo.targetLocation = azureutil.getNextLocation(retryRequestOptions.currentLocation, retryRequestOptions.locationMode);","        }","","        // If the custom retry logic(shouldRetry) does not return a retryInterval, try to set it to the value on the instance if it is available. Otherwise, the default(30000) will be used.","        if(azureutil.objectIsNull(retryInfo.retryInterval)) {","          retryInfo.retryInterval = self.retryInterval;","        }","        ","        // Only in the case of success from server but client side failure like MD5 or length mismatch, returnObject.retryable has a value(we explicitly set it to false). ","        // In this case, we should not retry the request.","        // If the output stream already get sent to server and get error back, ","        // we should NOT retry within the SDK as the stream data is not valid anymore if we retry directly.","        if (","            !returnObject.outputStreamSent && returnObject.error && azureutil.objectIsNull(returnObject.retryable) && notExceedMaxRetryCount &&","            (","              (!azureutil.objectIsNull(returnObject.response) && retryInfo.retryable) || ","              (","                returnObject.error.code === 'ECONNREFUSED' ||","                returnObject.error.code === 'ETIMEDOUT' ||","                returnObject.error.code === 'ESOCKETTIMEDOUT' || ","                returnObject.error.code === 'ECONNRESET' || ","                returnObject.error.code === 'EAI_AGAIN'","              )","            )","          ) {","          if (retryRequestOptions.currentLocation === Constants.StorageLocation.PRIMARY) {","            lastPrimaryAttempt = returnObject.operationEndTime;","          } else {","            lastSecondaryAttempt = returnObject.operationEndTime;","          }","","          // Moreover, in case of 404 when trying the secondary location, instead of retrying on the","          // secondary, further requests should be sent only to the primary location, as it most","          // probably has a higher chance of succeeding there.","          if (secondaryNotFound && (retryRequestOptions.locationMode !== StorageUtilities.LocationMode.SECONDARY_ONLY))","          {","            retryInfo.locationMode = StorageUtilities.LocationMode.PRIMARY_ONLY;","            retryInfo.targetLocation = Constants.StorageLocation.PRIMARY;","          }","","          // Now is the time to calculate the exact retry interval. ShouldRetry call above already","          // returned back how long two requests to the same location should be apart from each other.","          // However, for the reasons explained above, the time spent between the last attempt to","          // the target location and current time must be subtracted from the total retry interval","          // that ShouldRetry returned.","          var lastAttemptTime = retryInfo.targetLocation === Constants.StorageLocation.PRIMARY ? lastPrimaryAttempt : lastSecondaryAttempt;","          if (!azureutil.objectIsNull(lastAttemptTime)) {","            var sinceLastAttempt = new Date().getTime() - lastAttemptTime.getTime();","            if (sinceLastAttempt < 0) {","              sinceLastAttempt = 0;","            }","","            retryRequestOptions.retryInterval = retryInfo.retryInterval - sinceLastAttempt;","          }","          else {","            retryRequestOptions.retryInterval = 0;","          }","","          if(!azureutil.objectIsNull(retryInfo.locationMode)) {","            retryRequestOptions.locationMode = retryInfo.locationMode;","          }","","          retryRequestOptions.currentLocation = retryInfo.targetLocation;","          operation();","        } else {","          if (nextPostCallback) {","            nextPostCallback(returnObject);","          } else if (finalCallback) {","            finalCallback(returnObject);","          }","        }","      });","    }","  };","","  operation();","};","","RetryPolicyFilter._shouldRetryOnError = function (statusCode, requestOptions) {","  var retryInfo = (requestOptions && requestOptions.retryContext) ? requestOptions.retryContext : {};","","  // Non-timeout Cases","  if (statusCode >= 300 && statusCode != 408) {","    // Always no retry on \"not implemented\" and \"version not supported\"","    if (statusCode == 501 || statusCode == 505) {","      retryInfo.retryable = false;","      return retryInfo;","    }","    ","    // When absorbConditionalErrorsOnRetry is set (for append blob)","    if (requestOptions && requestOptions.absorbConditionalErrorsOnRetry) {","      if (statusCode == 412) {","        // When appending block with precondition failure and their was a server error before, we ignore the error.","        if (retryInfo.lastServerError) {","          retryInfo.ignore = true;","          retryInfo.retryable = true;","        } else {","          retryInfo.retryable = false;","        }","      } else if (retryInfo.retryable && statusCode >= 500 && statusCode < 600) {","        // Retry on the server error","        retryInfo.retryable = true;","        retryInfo.lastServerError = true;","      }","    } else if (statusCode < 500) {","      // No retry on the client error","      retryInfo.retryable = false;","    }","  }","","  return retryInfo;","};","","module.exports = RetryPolicyFilter;",""],"l":{"17":1,"18":1,"19":1,"20":1,"44":1,"45":0,"46":0,"52":1,"57":1,"65":1,"66":0,"75":1,"77":0,"78":0,"81":0,"89":0,"90":0,"91":0,"94":0,"95":0,"97":0,"98":0,"99":0,"102":0,"108":0,"110":0,"111":0,"112":0,"114":0,"115":0,"119":0,"120":0,"124":0,"125":0,"132":0,"145":0,"146":0,"148":0,"154":0,"156":0,"157":0,"165":0,"166":0,"167":0,"168":0,"169":0,"172":0,"175":0,"178":0,"179":0,"182":0,"183":0,"185":0,"186":0,"187":0,"188":0,"195":0,"198":1,"199":0,"202":0,"204":0,"205":0,"206":0,"210":0,"211":0,"213":0,"214":0,"215":0,"217":0,"219":0,"221":0,"222":0,"224":0,"226":0,"230":0,"233":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/filters/exponentialretrypolicyfilter.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/filters/exponentialretrypolicyfilter.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"ExponentialRetryPolicyFilter","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":101}}},"2":{"name":"(anonymous_2)","line":72,"loc":{"start":{"line":72,"column":53},"end":{"line":72,"column":91}}},"3":{"name":"(anonymous_3)","line":91,"loc":{"start":{"line":91,"column":48},"end":{"line":91,"column":80}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":19,"column":55}},"2":{"start":{"line":38,"column":0},"end":{"line":43,"column":1}},"3":{"start":{"line":39,"column":2},"end":{"line":39,"column":102}},"4":{"start":{"line":40,"column":2},"end":{"line":40,"column":114}},"5":{"start":{"line":41,"column":2},"end":{"line":41,"column":127}},"6":{"start":{"line":42,"column":2},"end":{"line":42,"column":127}},"7":{"start":{"line":48,"column":0},"end":{"line":48,"column":71}},"8":{"start":{"line":53,"column":0},"end":{"line":53,"column":60}},"9":{"start":{"line":58,"column":0},"end":{"line":58,"column":75}},"10":{"start":{"line":63,"column":0},"end":{"line":63,"column":74}},"11":{"start":{"line":72,"column":0},"end":{"line":83,"column":2}},"12":{"start":{"line":73,"column":2},"end":{"line":73,"column":101}},"13":{"start":{"line":76,"column":2},"end":{"line":76,"column":61}},"14":{"start":{"line":77,"column":2},"end":{"line":77,"column":134}},"15":{"start":{"line":78,"column":2},"end":{"line":78,"column":37}},"16":{"start":{"line":80,"column":2},"end":{"line":80,"column":100}},"17":{"start":{"line":82,"column":2},"end":{"line":82,"column":75}},"18":{"start":{"line":91,"column":0},"end":{"line":93,"column":2}},"19":{"start":{"line":92,"column":2},"end":{"line":92,"column":56}},"20":{"start":{"line":95,"column":0},"end":{"line":95,"column":46}}},"branchMap":{"1":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":33},"end":{"line":39,"column":43}},{"start":{"line":39,"column":46},"end":{"line":39,"column":101}}]},"2":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":39},"end":{"line":40,"column":52}},{"start":{"line":40,"column":55},"end":{"line":40,"column":113}}]},"3":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":45},"end":{"line":41,"column":61}},{"start":{"line":41,"column":64},"end":{"line":41,"column":126}}]},"4":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":45},"end":{"line":42,"column":61}},{"start":{"line":42,"column":64},"end":{"line":42,"column":126}}]},"5":{"line":73,"type":"cond-expr","locations":[{"start":{"line":73,"column":68},"end":{"line":73,"column":95}},{"start":{"line":73,"column":98},"end":{"line":73,"column":100}}]},"6":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":19},"end":{"line":73,"column":33}},{"start":{"line":73,"column":37},"end":{"line":73,"column":64}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","'use strict';","","var RetryPolicyFilter = require('./retrypolicyfilter');","/**","* Creates a new 'ExponentialRetryPolicyFilter' instance.","* @class","* The ExponentialRetryPolicyFilter allows you to retry operations,","* using an exponential back-off interval between retries.","* To apply a filter to service operations, use `withFilter`","* and specify the filter to be used when creating a service.","* @constructor","* @param {number} [retryCount=3]            The client retry count.","* @param {number} [retryInterval=30000]     The client retry interval, in milliseconds.","* @param {number} [minRetryInterval=3000]   The minimum retry interval, in milliseconds.","* @param {number} [maxRetryInterval=90000]  The maximum retry interval, in milliseconds.","* ","* @example","* var azure = require('azure-storage');","* var retryOperations = new azure.ExponentialRetryPolicyFilter();","* var blobService = azure.createBlobService().withFilter(retryOperations)","*/","function ExponentialRetryPolicyFilter(retryCount, retryInterval, minRetryInterval, maxRetryInterval) {","  this.retryCount = retryCount ? retryCount : ExponentialRetryPolicyFilter.DEFAULT_CLIENT_RETRY_COUNT;","  this.retryInterval = retryInterval ? retryInterval : ExponentialRetryPolicyFilter.DEFAULT_CLIENT_RETRY_INTERVAL;","  this.minRetryInterval = minRetryInterval ? minRetryInterval : ExponentialRetryPolicyFilter.DEFAULT_CLIENT_MIN_RETRY_INTERVAL;","  this.maxRetryInterval = maxRetryInterval ? maxRetryInterval : ExponentialRetryPolicyFilter.DEFAULT_CLIENT_MAX_RETRY_INTERVAL;","}","","/**","* Represents the default client retry interval, in milliseconds.","*/","ExponentialRetryPolicyFilter.DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;","","/**","* Represents the default client retry count.","*/","ExponentialRetryPolicyFilter.DEFAULT_CLIENT_RETRY_COUNT = 3;","","/**","* Represents the default maximum retry interval, in milliseconds.","*/","ExponentialRetryPolicyFilter.DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;","","/**","* Represents the default minimum retry interval, in milliseconds.","*/","ExponentialRetryPolicyFilter.DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;","","/**"," * Determines if the operation should be retried and how long to wait until the next retry."," *"," * @param {number} statusCode The HTTP status code."," * @param {object} requestOptions  The request options."," * @return {retryInfo} Information about whether the operation qualifies for a retry and the retryInterval."," */","ExponentialRetryPolicyFilter.prototype.shouldRetry = function (statusCode, requestOptions) {","  var retryData = (requestOptions && requestOptions.retryContext) ? requestOptions.retryContext : {};","","  // Adjust retry interval","  var incrementDelta = Math.pow(2, retryData.retryCount) - 1;","  var boundedRandDelta = this.retryInterval * 0.8 + Math.floor(Math.random() * (this.retryInterval * 1.2 - this.retryInterval * 0.8));","  incrementDelta *= boundedRandDelta;","      ","  retryData.retryInterval = Math.min(this.minRetryInterval + incrementDelta, this.maxRetryInterval);","","  return RetryPolicyFilter._shouldRetryOnError(statusCode, requestOptions);","};","","/**","* Handles an operation with an exponential retry policy.","*","* @param {Object}   requestOptions The original request options.","* @param {function} next           The next filter to be handled.","*/","ExponentialRetryPolicyFilter.prototype.handle = function (requestOptions, next) {","  RetryPolicyFilter._handle(this, requestOptions, next);","};","","module.exports = ExponentialRetryPolicyFilter;",""],"l":{"19":1,"38":1,"39":0,"40":0,"41":0,"42":0,"48":1,"53":1,"58":1,"63":1,"72":1,"73":0,"76":0,"77":0,"78":0,"80":0,"82":0,"91":1,"92":0,"95":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/streams/batchoperation.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/streams/batchoperation.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":1,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":1,"67":0,"68":1,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":1,"154":0,"155":1,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":1,"179":1,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":1,"201":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"fnMap":{"1":{"name":"BatchOperation","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":39}}},"2":{"name":"(anonymous_2)","line":95,"loc":{"start":{"line":95,"column":42},"end":{"line":95,"column":64}}},"3":{"name":"(anonymous_3)","line":106,"loc":{"start":{"line":106,"column":43},"end":{"line":106,"column":54}}},"4":{"name":"(anonymous_4)","line":123,"loc":{"start":{"line":123,"column":54},"end":{"line":123,"column":65}}},"5":{"name":"(anonymous_5)","line":132,"loc":{"start":{"line":132,"column":40},"end":{"line":132,"column":51}}},"6":{"name":"(anonymous_6)","line":139,"loc":{"start":{"line":139,"column":40},"end":{"line":139,"column":60}}},"7":{"name":"(anonymous_7)","line":153,"loc":{"start":{"line":153,"column":42},"end":{"line":153,"column":53}}},"8":{"name":"(anonymous_8)","line":162,"loc":{"start":{"line":162,"column":33},"end":{"line":162,"column":45}}},"9":{"name":"(anonymous_9)","line":169,"loc":{"start":{"line":169,"column":34},"end":{"line":169,"column":46}}},"10":{"name":"(anonymous_10)","line":179,"loc":{"start":{"line":179,"column":30},"end":{"line":179,"column":56}}},"11":{"name":"(anonymous_11)","line":191,"loc":{"start":{"line":191,"column":41},"end":{"line":191,"column":62}}},"12":{"name":"(anonymous_12)","line":208,"loc":{"start":{"line":208,"column":53},"end":{"line":208,"column":74}}},"13":{"name":"(anonymous_13)","line":210,"loc":{"start":{"line":210,"column":9},"end":{"line":210,"column":26}}},"14":{"name":"(anonymous_14)","line":247,"loc":{"start":{"line":247,"column":54},"end":{"line":247,"column":75}}},"15":{"name":"(anonymous_15)","line":285,"loc":{"start":{"line":285,"column":44},"end":{"line":285,"column":56}}},"16":{"name":"(anonymous_16)","line":301,"loc":{"start":{"line":301,"column":46},"end":{"line":301,"column":58}}},"17":{"name":"(anonymous_17)","line":315,"loc":{"start":{"line":315,"column":54},"end":{"line":315,"column":66}}},"18":{"name":"(anonymous_18)","line":343,"loc":{"start":{"line":343,"column":29},"end":{"line":343,"column":43}}},"19":{"name":"RestOperation","line":350,"loc":{"start":{"line":350,"column":0},"end":{"line":350,"column":49}}},"20":{"name":"(anonymous_20)","line":365,"loc":{"start":{"line":365,"column":13},"end":{"line":365,"column":26}}},"21":{"name":"(anonymous_21)","line":378,"loc":{"start":{"line":378,"column":27},"end":{"line":378,"column":39}}},"22":{"name":"CommonOperation","line":390,"loc":{"start":{"line":390,"column":0},"end":{"line":390,"column":50}}},"23":{"name":"(anonymous_23)","line":402,"loc":{"start":{"line":402,"column":13},"end":{"line":402,"column":27}}},"24":{"name":"(anonymous_24)","line":410,"loc":{"start":{"line":410,"column":27},"end":{"line":410,"column":39}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":29}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":50}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":23}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":40}},"7":{"start":{"line":24,"column":0},"end":{"line":24,"column":46}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":45}},"9":{"start":{"line":26,"column":0},"end":{"line":26,"column":41}},"10":{"start":{"line":27,"column":0},"end":{"line":27,"column":41}},"11":{"start":{"line":29,"column":0},"end":{"line":29,"column":95}},"12":{"start":{"line":30,"column":0},"end":{"line":30,"column":35}},"13":{"start":{"line":32,"column":0},"end":{"line":32,"column":38}},"14":{"start":{"line":33,"column":0},"end":{"line":33,"column":49}},"15":{"start":{"line":34,"column":0},"end":{"line":34,"column":45}},"16":{"start":{"line":35,"column":0},"end":{"line":35,"column":73}},"17":{"start":{"line":46,"column":0},"end":{"line":76,"column":1}},"18":{"start":{"line":47,"column":2},"end":{"line":49,"column":3}},"19":{"start":{"line":48,"column":4},"end":{"line":48,"column":17}},"20":{"start":{"line":51,"column":2},"end":{"line":51,"column":19}},"21":{"start":{"line":52,"column":2},"end":{"line":52,"column":68}},"22":{"start":{"line":53,"column":2},"end":{"line":53,"column":93}},"23":{"start":{"line":54,"column":2},"end":{"line":54,"column":58}},"24":{"start":{"line":55,"column":2},"end":{"line":55,"column":50}},"25":{"start":{"line":56,"column":2},"end":{"line":56,"column":59}},"26":{"start":{"line":57,"column":2},"end":{"line":57,"column":48}},"27":{"start":{"line":59,"column":2},"end":{"line":59,"column":37}},"28":{"start":{"line":60,"column":2},"end":{"line":60,"column":31}},"29":{"start":{"line":61,"column":2},"end":{"line":61,"column":22}},"30":{"start":{"line":62,"column":2},"end":{"line":62,"column":21}},"31":{"start":{"line":63,"column":2},"end":{"line":63,"column":23}},"32":{"start":{"line":66,"column":2},"end":{"line":66,"column":27}},"33":{"start":{"line":69,"column":2},"end":{"line":69,"column":28}},"34":{"start":{"line":72,"column":2},"end":{"line":72,"column":28}},"35":{"start":{"line":75,"column":2},"end":{"line":75,"column":24}},"36":{"start":{"line":81,"column":0},"end":{"line":88,"column":2}},"37":{"start":{"line":90,"column":0},"end":{"line":90,"column":47}},"38":{"start":{"line":95,"column":0},"end":{"line":101,"column":2}},"39":{"start":{"line":96,"column":2},"end":{"line":100,"column":3}},"40":{"start":{"line":97,"column":4},"end":{"line":97,"column":35}},"41":{"start":{"line":98,"column":4},"end":{"line":98,"column":45}},"42":{"start":{"line":99,"column":4},"end":{"line":99,"column":46}},"43":{"start":{"line":106,"column":0},"end":{"line":118,"column":2}},"44":{"start":{"line":111,"column":2},"end":{"line":111,"column":24}},"45":{"start":{"line":112,"column":2},"end":{"line":114,"column":3}},"46":{"start":{"line":113,"column":4},"end":{"line":113,"column":22}},"47":{"start":{"line":115,"column":2},"end":{"line":117,"column":111}},"48":{"start":{"line":123,"column":0},"end":{"line":127,"column":2}},"49":{"start":{"line":124,"column":2},"end":{"line":124,"column":47}},"50":{"start":{"line":125,"column":2},"end":{"line":125,"column":70}},"51":{"start":{"line":126,"column":2},"end":{"line":126,"column":36}},"52":{"start":{"line":132,"column":0},"end":{"line":134,"column":2}},"53":{"start":{"line":133,"column":2},"end":{"line":133,"column":43}},"54":{"start":{"line":139,"column":0},"end":{"line":148,"column":2}},"55":{"start":{"line":140,"column":2},"end":{"line":140,"column":35}},"56":{"start":{"line":141,"column":2},"end":{"line":141,"column":43}},"57":{"start":{"line":142,"column":2},"end":{"line":142,"column":49}},"58":{"start":{"line":143,"column":2},"end":{"line":143,"column":26}},"59":{"start":{"line":144,"column":2},"end":{"line":144,"column":181}},"60":{"start":{"line":146,"column":2},"end":{"line":146,"column":32}},"61":{"start":{"line":147,"column":2},"end":{"line":147,"column":32}},"62":{"start":{"line":153,"column":0},"end":{"line":157,"column":2}},"63":{"start":{"line":154,"column":2},"end":{"line":154,"column":30}},"64":{"start":{"line":155,"column":2},"end":{"line":155,"column":82}},"65":{"start":{"line":156,"column":2},"end":{"line":156,"column":26}},"66":{"start":{"line":162,"column":0},"end":{"line":164,"column":2}},"67":{"start":{"line":163,"column":2},"end":{"line":163,"column":22}},"68":{"start":{"line":169,"column":0},"end":{"line":174,"column":2}},"69":{"start":{"line":170,"column":2},"end":{"line":173,"column":3}},"70":{"start":{"line":171,"column":4},"end":{"line":171,"column":25}},"71":{"start":{"line":172,"column":4},"end":{"line":172,"column":38}},"72":{"start":{"line":179,"column":0},"end":{"line":186,"column":2}},"73":{"start":{"line":181,"column":2},"end":{"line":185,"column":3}},"74":{"start":{"line":182,"column":4},"end":{"line":182,"column":15}},"75":{"start":{"line":184,"column":4},"end":{"line":184,"column":38}},"76":{"start":{"line":191,"column":0},"end":{"line":202,"column":2}},"77":{"start":{"line":192,"column":2},"end":{"line":192,"column":85}},"78":{"start":{"line":193,"column":2},"end":{"line":193,"column":53}},"79":{"start":{"line":195,"column":2},"end":{"line":199,"column":3}},"80":{"start":{"line":196,"column":4},"end":{"line":196,"column":20}},"81":{"start":{"line":198,"column":4},"end":{"line":198,"column":22}},"82":{"start":{"line":201,"column":2},"end":{"line":201,"column":26}},"83":{"start":{"line":208,"column":0},"end":{"line":242,"column":2}},"84":{"start":{"line":209,"column":2},"end":{"line":209,"column":18}},"85":{"start":{"line":210,"column":2},"end":{"line":241,"column":4}},"86":{"start":{"line":211,"column":4},"end":{"line":211,"column":28}},"87":{"start":{"line":212,"column":4},"end":{"line":219,"column":5}},"88":{"start":{"line":213,"column":6},"end":{"line":213,"column":46}},"89":{"start":{"line":214,"column":6},"end":{"line":214,"column":100}},"90":{"start":{"line":215,"column":6},"end":{"line":215,"column":26}},"91":{"start":{"line":217,"column":6},"end":{"line":217,"column":49}},"92":{"start":{"line":218,"column":6},"end":{"line":218,"column":84}},"93":{"start":{"line":221,"column":4},"end":{"line":221,"column":45}},"94":{"start":{"line":222,"column":4},"end":{"line":236,"column":5}},"95":{"start":{"line":223,"column":6},"end":{"line":223,"column":49}},"96":{"start":{"line":224,"column":6},"end":{"line":224,"column":128}},"97":{"start":{"line":225,"column":11},"end":{"line":236,"column":5}},"98":{"start":{"line":226,"column":6},"end":{"line":226,"column":49}},"99":{"start":{"line":227,"column":6},"end":{"line":233,"column":7}},"100":{"start":{"line":228,"column":8},"end":{"line":228,"column":51}},"101":{"start":{"line":229,"column":13},"end":{"line":233,"column":7}},"102":{"start":{"line":230,"column":8},"end":{"line":230,"column":105}},"103":{"start":{"line":232,"column":8},"end":{"line":232,"column":138}},"104":{"start":{"line":235,"column":6},"end":{"line":235,"column":49}},"105":{"start":{"line":238,"column":4},"end":{"line":238,"column":30}},"106":{"start":{"line":239,"column":4},"end":{"line":239,"column":21}},"107":{"start":{"line":240,"column":4},"end":{"line":240,"column":16}},"108":{"start":{"line":247,"column":0},"end":{"line":279,"column":2}},"109":{"start":{"line":248,"column":2},"end":{"line":248,"column":48}},"110":{"start":{"line":249,"column":2},"end":{"line":251,"column":3}},"111":{"start":{"line":250,"column":4},"end":{"line":250,"column":40}},"112":{"start":{"line":253,"column":2},"end":{"line":278,"column":3}},"113":{"start":{"line":255,"column":4},"end":{"line":260,"column":5}},"114":{"start":{"line":256,"column":6},"end":{"line":256,"column":100}},"115":{"start":{"line":259,"column":6},"end":{"line":259,"column":36}},"116":{"start":{"line":263,"column":4},"end":{"line":263,"column":38}},"117":{"start":{"line":264,"column":4},"end":{"line":264,"column":28}},"118":{"start":{"line":265,"column":4},"end":{"line":265,"column":47}},"119":{"start":{"line":266,"column":4},"end":{"line":266,"column":29}},"120":{"start":{"line":268,"column":4},"end":{"line":270,"column":5}},"121":{"start":{"line":269,"column":6},"end":{"line":269,"column":33}},"122":{"start":{"line":272,"column":4},"end":{"line":272,"column":38}},"123":{"start":{"line":273,"column":9},"end":{"line":278,"column":3}},"124":{"start":{"line":274,"column":4},"end":{"line":274,"column":30}},"125":{"start":{"line":277,"column":4},"end":{"line":277,"column":28}},"126":{"start":{"line":285,"column":0},"end":{"line":296,"column":2}},"127":{"start":{"line":286,"column":2},"end":{"line":291,"column":3}},"128":{"start":{"line":287,"column":4},"end":{"line":287,"column":23}},"129":{"start":{"line":288,"column":4},"end":{"line":288,"column":88}},"130":{"start":{"line":289,"column":4},"end":{"line":289,"column":49}},"131":{"start":{"line":290,"column":4},"end":{"line":290,"column":16}},"132":{"start":{"line":294,"column":2},"end":{"line":294,"column":28}},"133":{"start":{"line":295,"column":2},"end":{"line":295,"column":15}},"134":{"start":{"line":301,"column":0},"end":{"line":308,"column":2}},"135":{"start":{"line":302,"column":2},"end":{"line":302,"column":35}},"136":{"start":{"line":302,"column":22},"end":{"line":302,"column":35}},"137":{"start":{"line":303,"column":2},"end":{"line":306,"column":3}},"138":{"start":{"line":304,"column":4},"end":{"line":304,"column":32}},"139":{"start":{"line":305,"column":4},"end":{"line":305,"column":16}},"140":{"start":{"line":307,"column":2},"end":{"line":307,"column":15}},"141":{"start":{"line":315,"column":0},"end":{"line":336,"column":2}},"142":{"start":{"line":316,"column":2},"end":{"line":316,"column":23}},"143":{"start":{"line":317,"column":2},"end":{"line":334,"column":3}},"144":{"start":{"line":318,"column":4},"end":{"line":318,"column":36}},"145":{"start":{"line":319,"column":4},"end":{"line":333,"column":5}},"146":{"start":{"line":321,"column":6},"end":{"line":327,"column":7}},"147":{"start":{"line":322,"column":8},"end":{"line":326,"column":9}},"148":{"start":{"line":323,"column":10},"end":{"line":323,"column":19}},"149":{"start":{"line":325,"column":10},"end":{"line":325,"column":20}},"150":{"start":{"line":330,"column":6},"end":{"line":332,"column":7}},"151":{"start":{"line":331,"column":8},"end":{"line":331,"column":17}},"152":{"start":{"line":335,"column":2},"end":{"line":335,"column":12}},"153":{"start":{"line":343,"column":0},"end":{"line":345,"column":2}},"154":{"start":{"line":344,"column":2},"end":{"line":344,"column":7}},"155":{"start":{"line":350,"column":0},"end":{"line":383,"column":1}},"156":{"start":{"line":351,"column":2},"end":{"line":351,"column":38}},"157":{"start":{"line":352,"column":2},"end":{"line":352,"column":24}},"158":{"start":{"line":353,"column":2},"end":{"line":353,"column":33}},"159":{"start":{"line":356,"column":2},"end":{"line":356,"column":55}},"160":{"start":{"line":357,"column":2},"end":{"line":357,"column":34}},"161":{"start":{"line":358,"column":2},"end":{"line":362,"column":3}},"162":{"start":{"line":359,"column":4},"end":{"line":359,"column":15}},"163":{"start":{"line":361,"column":4},"end":{"line":361,"column":30}},"164":{"start":{"line":363,"column":2},"end":{"line":363,"column":84}},"165":{"start":{"line":365,"column":2},"end":{"line":376,"column":4}},"166":{"start":{"line":366,"column":4},"end":{"line":366,"column":40}},"167":{"start":{"line":367,"column":4},"end":{"line":375,"column":5}},"168":{"start":{"line":368,"column":6},"end":{"line":368,"column":108}},"169":{"start":{"line":370,"column":6},"end":{"line":370,"column":38}},"170":{"start":{"line":370,"column":14},"end":{"line":370,"column":38}},"171":{"start":{"line":371,"column":6},"end":{"line":371,"column":34}},"172":{"start":{"line":372,"column":6},"end":{"line":372,"column":43}},"173":{"start":{"line":373,"column":6},"end":{"line":373,"column":52}},"174":{"start":{"line":374,"column":6},"end":{"line":374,"column":44}},"175":{"start":{"line":378,"column":2},"end":{"line":382,"column":4}},"176":{"start":{"line":379,"column":4},"end":{"line":381,"column":5}},"177":{"start":{"line":380,"column":6},"end":{"line":380,"column":62}},"178":{"start":{"line":385,"column":0},"end":{"line":385,"column":45}},"179":{"start":{"line":390,"column":0},"end":{"line":416,"column":1}},"180":{"start":{"line":391,"column":2},"end":{"line":391,"column":38}},"181":{"start":{"line":392,"column":2},"end":{"line":392,"column":24}},"182":{"start":{"line":393,"column":2},"end":{"line":393,"column":33}},"183":{"start":{"line":394,"column":2},"end":{"line":394,"column":21}},"184":{"start":{"line":395,"column":2},"end":{"line":400,"column":3}},"185":{"start":{"line":396,"column":4},"end":{"line":396,"column":34}},"186":{"start":{"line":398,"column":4},"end":{"line":398,"column":30}},"187":{"start":{"line":399,"column":4},"end":{"line":399,"column":19}},"188":{"start":{"line":401,"column":2},"end":{"line":401,"column":83}},"189":{"start":{"line":402,"column":2},"end":{"line":408,"column":4}},"190":{"start":{"line":403,"column":4},"end":{"line":403,"column":37}},"191":{"start":{"line":403,"column":13},"end":{"line":403,"column":37}},"192":{"start":{"line":404,"column":4},"end":{"line":404,"column":32}},"193":{"start":{"line":405,"column":4},"end":{"line":405,"column":41}},"194":{"start":{"line":406,"column":4},"end":{"line":406,"column":50}},"195":{"start":{"line":407,"column":4},"end":{"line":407,"column":46}},"196":{"start":{"line":410,"column":2},"end":{"line":415,"column":4}},"197":{"start":{"line":411,"column":4},"end":{"line":413,"column":5}},"198":{"start":{"line":412,"column":6},"end":{"line":412,"column":62}},"199":{"start":{"line":414,"column":4},"end":{"line":414,"column":56}},"200":{"start":{"line":418,"column":0},"end":{"line":418,"column":49}},"201":{"start":{"line":420,"column":0},"end":{"line":420,"column":32}}},"branchMap":{"1":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":24},"end":{"line":35,"column":45}},{"start":{"line":35,"column":49},"end":{"line":35,"column":72}}]},"2":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"3":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":16},"end":{"line":52,"column":30}},{"start":{"line":52,"column":34},"end":{"line":52,"column":67}}]},"4":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":30},"end":{"line":53,"column":58}},{"start":{"line":53,"column":62},"end":{"line":53,"column":92}}]},"5":{"line":56,"type":"cond-expr","locations":[{"start":{"line":56,"column":52},"end":{"line":56,"column":53}},{"start":{"line":56,"column":56},"end":{"line":56,"column":58}}]},"6":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":96,"column":2}},{"start":{"line":96,"column":2},"end":{"line":96,"column":2}}]},"7":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":2},"end":{"line":112,"column":2}},{"start":{"line":112,"column":2},"end":{"line":112,"column":2}}]},"8":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":5},"end":{"line":112,"column":22}},{"start":{"line":112,"column":26},"end":{"line":112,"column":43}}]},"9":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":9},"end":{"line":115,"column":66}},{"start":{"line":116,"column":4},"end":{"line":116,"column":23}},{"start":{"line":117,"column":5},"end":{"line":117,"column":46}},{"start":{"line":117,"column":50},"end":{"line":117,"column":109}}]},"10":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":2},"end":{"line":170,"column":2}},{"start":{"line":170,"column":2},"end":{"line":170,"column":2}}]},"11":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":2},"end":{"line":181,"column":2}},{"start":{"line":181,"column":2},"end":{"line":181,"column":2}}]},"12":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":5},"end":{"line":181,"column":16}},{"start":{"line":181,"column":20},"end":{"line":181,"column":35}}]},"13":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"14":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"15":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":222,"column":4}},{"start":{"line":222,"column":4},"end":{"line":222,"column":4}}]},"16":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":11},"end":{"line":225,"column":11}},{"start":{"line":225,"column":11},"end":{"line":225,"column":11}}]},"17":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":6},"end":{"line":227,"column":6}},{"start":{"line":227,"column":6},"end":{"line":227,"column":6}}]},"18":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":13},"end":{"line":229,"column":13}},{"start":{"line":229,"column":13},"end":{"line":229,"column":13}}]},"19":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"20":{"line":249,"type":"binary-expr","locations":[{"start":{"line":249,"column":6},"end":{"line":249,"column":16}},{"start":{"line":249,"column":20},"end":{"line":249,"column":31}}]},"21":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":2},"end":{"line":253,"column":2}},{"start":{"line":253,"column":2},"end":{"line":253,"column":2}}]},"22":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":6},"end":{"line":253,"column":15}},{"start":{"line":253,"column":19},"end":{"line":253,"column":32}}]},"23":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":4},"end":{"line":255,"column":4}},{"start":{"line":255,"column":4},"end":{"line":255,"column":4}}]},"24":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":4},"end":{"line":268,"column":4}},{"start":{"line":268,"column":4},"end":{"line":268,"column":4}}]},"25":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":9},"end":{"line":273,"column":9}},{"start":{"line":273,"column":9},"end":{"line":273,"column":9}}]},"26":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":2},"end":{"line":286,"column":2}},{"start":{"line":286,"column":2},"end":{"line":286,"column":2}}]},"27":{"line":286,"type":"binary-expr","locations":[{"start":{"line":286,"column":5},"end":{"line":286,"column":25}},{"start":{"line":286,"column":29},"end":{"line":286,"column":56}},{"start":{"line":286,"column":60},"end":{"line":286,"column":89}}]},"28":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":2},"end":{"line":302,"column":2}},{"start":{"line":302,"column":2},"end":{"line":302,"column":2}}]},"29":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":2},"end":{"line":303,"column":2}},{"start":{"line":303,"column":2},"end":{"line":303,"column":2}}]},"30":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":5},"end":{"line":303,"column":28}},{"start":{"line":303,"column":32},"end":{"line":303,"column":72}}]},"31":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":4},"end":{"line":319,"column":4}},{"start":{"line":319,"column":4},"end":{"line":319,"column":4}}]},"32":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":6},"end":{"line":321,"column":6}},{"start":{"line":321,"column":6},"end":{"line":321,"column":6}}]},"33":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":8},"end":{"line":322,"column":8}},{"start":{"line":322,"column":8},"end":{"line":322,"column":8}}]},"34":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":6},"end":{"line":330,"column":6}},{"start":{"line":330,"column":6},"end":{"line":330,"column":6}}]},"35":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":2},"end":{"line":358,"column":2}},{"start":{"line":358,"column":2},"end":{"line":358,"column":2}}]},"36":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":4},"end":{"line":367,"column":4}},{"start":{"line":367,"column":4},"end":{"line":367,"column":4}}]},"37":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":6},"end":{"line":370,"column":6}},{"start":{"line":370,"column":6},"end":{"line":370,"column":6}}]},"38":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":4},"end":{"line":379,"column":4}},{"start":{"line":379,"column":4},"end":{"line":379,"column":4}}]},"39":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":2},"end":{"line":395,"column":2}},{"start":{"line":395,"column":2},"end":{"line":395,"column":2}}]},"40":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":4},"end":{"line":403,"column":4}},{"start":{"line":403,"column":4},"end":{"line":403,"column":4}}]},"41":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":4},"end":{"line":411,"column":4}},{"start":{"line":411,"column":4},"end":{"line":411,"column":4}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var util = require('util');","var http = require('http');","var https = require('https');","var EventEmitter = require('events').EventEmitter;","var os = require('os');","","var azureutil = require('../util/util');","var Logger = require('../diagnostics/logger');","var Constants = require('../util/constants');","var errors = require('../errors/errors');","var ArgumentError = errors.ArgumentError;","","var DEFAULT_OPERATION_MEMORY_USAGE = Constants.BlobConstants.DEFAULT_WRITE_BLOCK_SIZE_IN_BYTES;","var DEFAULT_GLOBAL_CONCURRENCY = 5; //Default http connection limitation for nodejs","","var SystemTotalMemory = os.totalmem();","var CriticalFreeMemory = 0.1 * SystemTotalMemory;","var nodeVersion = azureutil.getNodeVersion();","var enableReuseSocket = nodeVersion.major > 0 || nodeVersion.minor >= 10;","","/**","* Concurrently execute batch operations and call operation callback randomly or in sequence.","* Random mode is for uploading.","*   1. Fire user callback when the operation is done.","* Sequence mode is for downloading.","*   1. Fire user callback when the operation is done and all previous operations and callback has finished.","*   2. BatchOperation guarantees the user callback is fired one by one.","*   3. The next user callback can't be fired until the current one is completed.","*/","function BatchOperation(name, options) {","  if (!options) {","    options = {};","  }","","  this.name = name;","  this.logger = options.logger || new Logger(Logger.LogLevels.INFO);","  this.operationMemoryUsage = options.operationMemoryUsage || DEFAULT_OPERATION_MEMORY_USAGE;","  this.callbackInOrder = options.callbackInOrder === true;","  this.callInOrder = options.callInOrder === true;","  this._currentOperationId = this.callbackInOrder ? 1 : -1;","  this.concurrency = DEFAULT_GLOBAL_CONCURRENCY;","","  this._emitter = new EventEmitter();","  this._enableComplete = false;","  this._ended = false;","  this._error = null;","  this._paused = false;","","  //Total operations count(queued and active and connected)","  this._totalOperation = 0;","","  //Action operations count(The operations which are connecting to remote or executing callback or queued for executing)","  this._activeOperation = 0;","","  //Queued operations count(The operations which are connecting to remote or queued for executing)","  this._queuedOperation = 0;","","  //finished operation should be removed from this array","  this._operations = [];","}","","/**","* Operation state","*/","var OperationState = {","  INITED : 'inited',","  QUEUED : 'queued',","  RUNNING : 'running',","  COMPLETE : 'complete',","  CALLBACK : 'callback',","  ERROR : 'error'","};","","BatchOperation.OperationState = OperationState;","","/**","* Set batch operation concurrency","*/","BatchOperation.prototype.setConcurrency = function(concurrency) {","  if (concurrency) {","    this.concurrency = concurrency;","    http.Agent.maxSockets = this.concurrency;","    https.Agent.maxSockets = this.concurrency;","  }","};","","/**","* Is the workload heavy and It can be used to determine whether we could queue operations","*/","BatchOperation.prototype.IsWorkloadHeavy = function() {","  //Only support one batch operation for now.","  //In order to work with the multiple batch operation, we can use global operation track objects","  //BatchOperation acquire a bunch of operation ids from global and allocated ids to RestOperation","  //RestOperation start to run in order of id","  var sharedRequest = 1;","  if(enableReuseSocket && !this.callInOrder) {","    sharedRequest = 2;","  }","  return this._activeOperation >= sharedRequest * this.concurrency ||","    this._isLowMemory() ||","    (this._activeOperation >= this.concurrency && this._getApproximateMemoryUsage() > 0.5 * SystemTotalMemory);","};","","/**","* get the approximate memory usage for batch operation","*/","BatchOperation.prototype._getApproximateMemoryUsage = function() {","  var currentUsage = process.memoryUsage().rss;","  var futureUsage = this._queuedOperation * this.operationMemoryUsage;","  return currentUsage + futureUsage;","};","","/**","* get the approximate free memory","*/","BatchOperation.prototype._isLowMemory = function() {","  return os.freemem() < CriticalFreeMemory;","};","","/**","* Add a operation into batch operation","*/","BatchOperation.prototype.addOperation = function(operation) {","  this._operations.push(operation);","  operation.status = OperationState.QUEUED;","  operation.operationId = ++this._totalOperation;","  this._queuedOperation++;","  this.logger.debug(util.format('Add operation %d into batch operation %s. Active: %s; Queued: %s', operation.operationId, this.name, this._activeOperation, this._queuedOperation));","  //Immediately start the idle operation if workload isn't heavy","  this._runOperation(operation);","  return this.IsWorkloadHeavy();","};","","/**","* Enable batch operation complete when there is no operation to run.","*/","BatchOperation.prototype.enableComplete = function() {","  this._enableComplete = true;","  this.logger.debug(util.format('Enable batch operation %s complete', this.name));","  this._tryEmitEndEvent();","};","","/**","* Stop firing user call back","*/","BatchOperation.prototype.pause = function () {","  this._paused = true;","};","","/**","* Start firing user call back","*/","BatchOperation.prototype.resume = function () {","  if (this._paused) {","    this._paused = false;","    this._fireOperationUserCallback();","  }","};","","/**","* Add event listener","*/","BatchOperation.prototype.on = function(event, listener) {","  // only emit end if the batch has completed all operations","  if(this._ended && event === 'end') {","    listener();","  } else {","    this._emitter.on(event, listener);","  }","};","","/**","* Run operation","*/","BatchOperation.prototype._runOperation = function (operation) {","  this.logger.debug(util.format('Operation %d start to run', operation.operationId));","  var cb = this.getBatchOperationCallback(operation);","","  if(this._error) {","    cb(this._error);//Directly call the callback with previous error.","  } else {","    operation.run(cb);","  }","","  this._activeOperation++;","};","","/**","* Return an general operation call back.","* This callback is used to update the internal status and fire user's callback when operation is complete.","*/","BatchOperation.prototype.getBatchOperationCallback = function (operation) {","  var self = this;","  return function (error) {","    self._queuedOperation--;","    if (error) {","      operation.status = OperationState.ERROR;","      self.logger.debug(util.format('Operation %d failed. Error %s', operation.operationId, error));","      self._error = error;","    } else {","      operation.status = OperationState.CALLBACK;","      self.logger.debug(util.format('Operation %d succeed', operation.operationId));","    }","","    operation._callbackArguments = arguments;","    if (self._paused) {","      operation.status = OperationState.CALLBACK;","      self.logger.debug(util.format('Batch operation paused and Operation %d wait for firing callback', operation.operationId));","    } else if (self.callbackInOrder) {","      operation.status = OperationState.CALLBACK;","      if (self._currentOperationId === operation.operationId) {","        self._fireOperationUserCallback(operation);","      } else if (self._currentOperationId > operation.operationId) {","        throw new Error('Debug error: current callback operation id cannot be larger than operation id');","      } else {","        self.logger.debug(util.format('Operation %d is waiting for firing callback %s', operation.operationId, self._currentOperationId));","      }","    } else {","      self._fireOperationUserCallback(operation);","    }","","    self._tryEmitDrainEvent();","    operation = null;","    self = null;","  };","};","","/**","* Fire user's call back","*/","BatchOperation.prototype._fireOperationUserCallback = function (operation) {","  var index = this._getCallbackOperationIndex();","  if (!operation && index != -1) {","    operation = this._operations[index];","  }","","  if (operation && !this._paused) {","    // fire the callback, if exists","    if (operation._userCallback) {","      this.logger.debug(util.format('Fire user call back for operation %d', operation.operationId));","      // make sure UserCallback is a sync operation in sequence mode.","      // both async and sync operations are available for random mode.","      operation._fireUserCallback();","    }","    ","    // remove the operation from the array and decrement the counter","    this._operations.splice(index, 1);","    this._activeOperation--;","    operation.status = OperationState.COMPLETE;","    index = operation = null;","","    if (this.callbackInOrder) {","      this._currentOperationId++;","    }","","    this._fireOperationUserCallback();","  } else if (this._paused) {","    this._tryEmitDrainEvent();","  } else {","    // check if batch has ended and if so emit end event","    this._tryEmitEndEvent();","  }","};","","/**","* Try to emit the BatchOperation end event","* End event means all the operation and callback already finished.","*/","BatchOperation.prototype._tryEmitEndEvent = function () {","  if(this._enableComplete && this._activeOperation === 0 && this._operations.length === 0) {","    this._ended = true;","    this.logger.debug(util.format('Batch operation %s emits the end event', this.name));","    this._emitter.emit('end', this._error, null);","    return true;","  }","  ","  // Workaround to recover from the 'hang' edge case. _tryEmitEndEvent function is not supposed to be called if the bacth is not really completed.","  this._tryEmitDrainEvent();","  return false;","};","","/**","* Try to emit the drain event","*/","BatchOperation.prototype._tryEmitDrainEvent = function () {","  if (!this._emitter) return false;","  if(!this.IsWorkloadHeavy() || this._activeOperation < this.concurrency) {","    this._emitter.emit('drain');","    return true;","  }","  return false;","};","","/**","* Get the current active operation index.","* Only the active operation could call user's callback in sequence model.","* The other finished but not active operations should wait for wake up.","*/","BatchOperation.prototype._getCallbackOperationIndex = function () {","  var operation = null;","  for (var i = 0; i < this._operations.length; i++) {","    operation = this._operations[i];","    if (this.callbackInOrder) {","      //Sequence mode","      if (operation.operationId == this._currentOperationId) {","        if (operation.status === OperationState.CALLBACK) {","          return i;","        } else {","          return -1;","        }","      }","    } else {","      //Random mode","      if (operation.status === OperationState.CALLBACK) {","        return i;","      }","    }","  }","  return -1;","};","","/**","* Do nothing and directly call the callback.","* In random mode, the user callback will be called immediately","* In sequence mode, the user callback will be called after the previous callback has been called","*/","BatchOperation.noOperation = function (cb) {","  cb();","};","","/**","* Rest operation in sdk","*/","function RestOperation(serviceClient, operation) {","  this.status = OperationState.Inited;","  this.operationId = -1;","  this._callbackArguments = null;","","  // setup callback and args","  this._userCallback = arguments[arguments.length - 1];","  var sliceEnd = arguments.length;","  if(azureutil.objectIsFunction(this._userCallback)) {","    sliceEnd--;","  } else {","    this._userCallback = null;","  }","  var operationArguments = Array.prototype.slice.call(arguments).slice(2, sliceEnd);","","  this.run = function(cb) {","    var func = serviceClient[operation];","    if(!func) {","      throw new ArgumentError('operation', util.format('Unknown operation %s in serviceclient', operation));","    } else {","      if(!cb) cb = this._userCallback;","      operationArguments.push(cb);","      this.status = OperationState.RUNNING;","      func.apply(serviceClient, operationArguments);","      operationArguments = operation = null;","    }","  };","","  this._fireUserCallback = function () {","    if(this._userCallback) {","      this._userCallback.apply(null, this._callbackArguments);","    }","  };","}","","BatchOperation.RestOperation = RestOperation;","","/**","* Common operation wrapper","*/","function CommonOperation(operationFunc, callback) {","  this.status = OperationState.Inited;","  this.operationId = -1;","  this._callbackArguments = null;","  var sliceStart = 2;","  if (azureutil.objectIsFunction(callback)) {","    this._userCallback = callback;","  } else {","    this._userCallback = null;","    sliceStart = 1;","  }","  var operationArguments = Array.prototype.slice.call(arguments).slice(sliceStart);","  this.run = function (cb) {","    if (!cb) cb = this._userCallback;","    operationArguments.push(cb);","    this.status = OperationState.RUNNING;","    operationFunc.apply(null, operationArguments);","    operationArguments = operationFunc = null;","  };","  ","  this._fireUserCallback = function () {","    if (this._userCallback) {","      this._userCallback.apply(null, this._callbackArguments);","    }","    this._userCallback = this._callbackArguments = null;","  };","}","","BatchOperation.CommonOperation = CommonOperation;","","module.exports = BatchOperation;",""],"l":{"17":1,"18":1,"19":1,"20":1,"21":1,"23":1,"24":1,"25":1,"26":1,"27":1,"29":1,"30":1,"32":1,"33":1,"34":1,"35":1,"46":1,"47":0,"48":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"60":0,"61":0,"62":0,"63":0,"66":0,"69":0,"72":0,"75":0,"81":1,"90":1,"95":1,"96":0,"97":0,"98":0,"99":0,"106":1,"111":0,"112":0,"113":0,"115":0,"123":1,"124":0,"125":0,"126":0,"132":1,"133":0,"139":1,"140":0,"141":0,"142":0,"143":0,"144":0,"146":0,"147":0,"153":1,"154":0,"155":0,"156":0,"162":1,"163":0,"169":1,"170":0,"171":0,"172":0,"179":1,"181":0,"182":0,"184":0,"191":1,"192":0,"193":0,"195":0,"196":0,"198":0,"201":0,"208":1,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"217":0,"218":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"232":0,"235":0,"238":0,"239":0,"240":0,"247":1,"248":0,"249":0,"250":0,"253":0,"255":0,"256":0,"259":0,"263":0,"264":0,"265":0,"266":0,"268":0,"269":0,"272":0,"273":0,"274":0,"277":0,"285":1,"286":0,"287":0,"288":0,"289":0,"290":0,"294":0,"295":0,"301":1,"302":0,"303":0,"304":0,"305":0,"307":0,"315":1,"316":0,"317":0,"318":0,"319":0,"321":0,"322":0,"323":0,"325":0,"330":0,"331":0,"335":0,"343":1,"344":0,"350":1,"351":0,"352":0,"353":0,"356":0,"357":0,"358":0,"359":0,"361":0,"363":0,"365":0,"366":0,"367":0,"368":0,"370":0,"371":0,"372":0,"373":0,"374":0,"378":0,"379":0,"380":0,"385":1,"390":1,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"398":0,"399":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"410":0,"411":0,"412":0,"414":0,"418":1,"420":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/streams/chunkallocator.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/streams/chunkallocator.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"ChunkAllocator","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":45}}},"2":{"name":"(anonymous_2)","line":40,"loc":{"start":{"line":40,"column":37},"end":{"line":40,"column":52}}},"3":{"name":"(anonymous_3)","line":55,"loc":{"start":{"line":55,"column":46},"end":{"line":55,"column":61}}},"4":{"name":"(anonymous_4)","line":77,"loc":{"start":{"line":77,"column":45},"end":{"line":77,"column":56}}},"5":{"name":"(anonymous_5)","line":97,"loc":{"start":{"line":97,"column":41},"end":{"line":97,"column":58}}}},"statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":34,"column":1}},"2":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"3":{"start":{"line":24,"column":2},"end":{"line":24,"column":18}},"4":{"start":{"line":27,"column":2},"end":{"line":27,"column":30}},"5":{"start":{"line":30,"column":2},"end":{"line":30,"column":34}},"6":{"start":{"line":33,"column":2},"end":{"line":33,"column":27}},"7":{"start":{"line":40,"column":0},"end":{"line":50,"column":2}},"8":{"start":{"line":41,"column":2},"end":{"line":41,"column":45}},"9":{"start":{"line":42,"column":2},"end":{"line":46,"column":3}},"10":{"start":{"line":45,"column":4},"end":{"line":45,"column":30}},"11":{"start":{"line":48,"column":2},"end":{"line":48,"column":16}},"12":{"start":{"line":49,"column":2},"end":{"line":49,"column":16}},"13":{"start":{"line":55,"column":0},"end":{"line":72,"column":2}},"14":{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},"15":{"start":{"line":58,"column":4},"end":{"line":58,"column":16}},"16":{"start":{"line":62,"column":2},"end":{"line":64,"column":3}},"17":{"start":{"line":63,"column":4},"end":{"line":63,"column":29}},"18":{"start":{"line":67,"column":2},"end":{"line":71,"column":3}},"19":{"start":{"line":68,"column":4},"end":{"line":68,"column":28}},"20":{"start":{"line":70,"column":4},"end":{"line":70,"column":16}},"21":{"start":{"line":77,"column":0},"end":{"line":92,"column":2}},"22":{"start":{"line":78,"column":2},"end":{"line":78,"column":46}},"23":{"start":{"line":81,"column":2},"end":{"line":81,"column":37}},"24":{"start":{"line":81,"column":30},"end":{"line":81,"column":37}},"25":{"start":{"line":84,"column":2},"end":{"line":84,"column":58}},"26":{"start":{"line":87,"column":2},"end":{"line":87,"column":35}},"27":{"start":{"line":88,"column":2},"end":{"line":91,"column":3}},"28":{"start":{"line":89,"column":4},"end":{"line":89,"column":45}},"29":{"start":{"line":90,"column":4},"end":{"line":90,"column":28}},"30":{"start":{"line":97,"column":0},"end":{"line":118,"column":2}},"31":{"start":{"line":98,"column":2},"end":{"line":102,"column":3}},"32":{"start":{"line":100,"column":4},"end":{"line":100,"column":18}},"33":{"start":{"line":101,"column":4},"end":{"line":101,"column":11}},"34":{"start":{"line":105,"column":2},"end":{"line":109,"column":3}},"35":{"start":{"line":106,"column":4},"end":{"line":106,"column":28}},"36":{"start":{"line":108,"column":4},"end":{"line":108,"column":18}},"37":{"start":{"line":112,"column":2},"end":{"line":112,"column":16}},"38":{"start":{"line":115,"column":2},"end":{"line":117,"column":3}},"39":{"start":{"line":116,"column":4},"end":{"line":116,"column":20}},"40":{"start":{"line":120,"column":0},"end":{"line":120,"column":32}}},"branchMap":{"1":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":19},"end":{"line":30,"column":27}},{"start":{"line":30,"column":31},"end":{"line":30,"column":33}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"3":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"4":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"5":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"6":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"7":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":17},"end":{"line":84,"column":52}},{"start":{"line":84,"column":56},"end":{"line":84,"column":57}}]},"8":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":98,"column":2}},{"start":{"line":98,"column":2},"end":{"line":98,"column":2}}]},"9":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"10":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","/**","* Chunked memory pool allocator.","* It could dramatically reduce the memory usage.","* However, it can't dramatically reduce the CPU time since GC in v8 is very efficient.","*/","function ChunkAllocator(chunkSize, maxCount) {","  // Track the unused buffers and number of used buffers","  this._pool = [];","  this._inuse = 0;","","  // Buffer size","  this._chunkSize = chunkSize;","","  // If total memory is larger than this._chunkSize * this._maxCount, the buffer pool is not used.","  this._maxCount = maxCount || 10;","","  // Immediately add a buffer to the pool.","  this._extendMemoryPool();","}","","/**","* Synchronously require a buffer","* Caller should be aware of that the content of buffer is random since the Buffer.fill is Time-consumed opreation.","*/","ChunkAllocator.prototype.getBuffer = function(size) {","  var buffer = this._getBufferFromPool(size);","  if (buffer === null) {","    // Either the total memory is larger than this._chunkSize * this._maxCount","    // Or, the size does not match the chunk size of the pool","    buffer = new Buffer(size);","  }","","  this._inuse++;","  return buffer;","};","","/**","* Get buffer from the current memory pool.","*/","ChunkAllocator.prototype._getBufferFromPool = function(size) {","  // Return null if the given size does not match the chunk size of the buffer pool.","  if(size !== this._chunkSize) {","    return null;","  } ","","  // Extend the memory pool if it is empty.","  if(this._pool.length === 0) {","    this._extendMemoryPool();","  }","","  // If the pool is not empty, return a buffer.","  if(this._pool.length !== 0) {","    return this._pool.pop();","  } else {","    return null;","  }","};","","/**","* Extend the memory pool if the maximum size has not been reached.","*/","ChunkAllocator.prototype._extendMemoryPool = function() {","  var total = this._pool.length + this._inuse;","","  // If the total is larger than the max, do not allocate more memory.","  if(total >= this._maxCount) return;","","  // Calculate the new number of buffers, equal to the total*2 bounded by 1 and the maxCount","  var nextSize = Math.min(total * 2, this._maxCount) || 1;","","  // Add more buffers.","  var increment = nextSize - total;","  for(var i = 0; i < increment; i++) {","    var buffer = new Buffer(this._chunkSize);","    this._pool.push(buffer);","  }","};","","/**","* Release the buffer.","*/","ChunkAllocator.prototype.releaseBuffer = function(buffer) {","  if(buffer.length !== this._chunkSize) {","    // Directly delete the buffer if bufferSize is invalid and wait for GC.","    buffer = null;","    return;","  }","","  // Add the buffer to the pool if it is not full, otherwise delete it","  if (this._pool.length < this._maxCount) {","    this._pool.push(buffer);","  } else {","    buffer = null;","  }","","  // Decrement _inuse ","  this._inuse--;","","  // _inuse could be below zero if a buffer is released which was not returned by getBuffer","  if(this._inuse < 0) {","    this._inuse = 0;","  }","};","","module.exports = ChunkAllocator;",""],"l":{"21":1,"23":0,"24":0,"27":0,"30":0,"33":0,"40":1,"41":0,"42":0,"45":0,"48":0,"49":0,"55":1,"57":0,"58":0,"62":0,"63":0,"67":0,"68":0,"70":0,"77":1,"78":0,"81":0,"84":0,"87":0,"88":0,"89":0,"90":0,"97":1,"98":0,"100":0,"101":0,"105":0,"106":0,"108":0,"112":0,"115":0,"116":0,"120":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/streams/chunkstream.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/streams/chunkstream.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":0,"27":1,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":1,"49":0,"50":0,"51":1,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1,"108":0,"109":0,"110":0,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":1,"140":0,"141":0,"142":0,"143":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"ChunkStream","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":30}}},"2":{"name":"(anonymous_2)","line":64,"loc":{"start":{"line":64,"column":43},"end":{"line":64,"column":63}}},"3":{"name":"(anonymous_3)","line":71,"loc":{"start":{"line":71,"column":40},"end":{"line":71,"column":57}}},"4":{"name":"(anonymous_4)","line":80,"loc":{"start":{"line":80,"column":28},"end":{"line":80,"column":59}}},"5":{"name":"(anonymous_5)","line":104,"loc":{"start":{"line":104,"column":31},"end":{"line":104,"column":43}}},"6":{"name":"(anonymous_6)","line":110,"loc":{"start":{"line":110,"column":30},"end":{"line":110,"column":42}}},"7":{"name":"(anonymous_7)","line":116,"loc":{"start":{"line":116,"column":32},"end":{"line":116,"column":44}}},"8":{"name":"(anonymous_8)","line":124,"loc":{"start":{"line":124,"column":30},"end":{"line":124,"column":57}}},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":36},"end":{"line":137,"column":52}}},"10":{"name":"(anonymous_10)","line":177,"loc":{"start":{"line":177,"column":40},"end":{"line":177,"column":57}}},"11":{"name":"(anonymous_11)","line":210,"loc":{"start":{"line":210,"column":46},"end":{"line":210,"column":73}}},"12":{"name":"(anonymous_12)","line":228,"loc":{"start":{"line":228,"column":45},"end":{"line":228,"column":56}}},"13":{"name":"(anonymous_13)","line":238,"loc":{"start":{"line":238,"column":43},"end":{"line":238,"column":55}}},"14":{"name":"(anonymous_14)","line":257,"loc":{"start":{"line":257,"column":43},"end":{"line":257,"column":54}}},"15":{"name":"(anonymous_15)","line":270,"loc":{"start":{"line":270,"column":38},"end":{"line":270,"column":57}}},"16":{"name":"(anonymous_16)","line":289,"loc":{"start":{"line":289,"column":30},"end":{"line":289,"column":41}}},"17":{"name":"(anonymous_17)","line":296,"loc":{"start":{"line":296,"column":31},"end":{"line":296,"column":42}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":31}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":43}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":45}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":75}},"6":{"start":{"line":32,"column":0},"end":{"line":57,"column":1}},"7":{"start":{"line":33,"column":2},"end":{"line":33,"column":27}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":39}},"9":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"10":{"start":{"line":37,"column":4},"end":{"line":37,"column":17}},"11":{"start":{"line":40,"column":2},"end":{"line":40,"column":60}},"12":{"start":{"line":42,"column":2},"end":{"line":42,"column":27}},"13":{"start":{"line":44,"column":2},"end":{"line":44,"column":31}},"14":{"start":{"line":45,"column":2},"end":{"line":45,"column":19}},"15":{"start":{"line":46,"column":2},"end":{"line":46,"column":38}},"16":{"start":{"line":47,"column":2},"end":{"line":47,"column":28}},"17":{"start":{"line":48,"column":2},"end":{"line":48,"column":23}},"18":{"start":{"line":49,"column":2},"end":{"line":49,"column":22}},"19":{"start":{"line":50,"column":2},"end":{"line":50,"column":31}},"20":{"start":{"line":51,"column":2},"end":{"line":51,"column":30}},"21":{"start":{"line":52,"column":2},"end":{"line":52,"column":27}},"22":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"23":{"start":{"line":55,"column":4},"end":{"line":55,"column":53}},"24":{"start":{"line":59,"column":0},"end":{"line":59,"column":42}},"25":{"start":{"line":64,"column":0},"end":{"line":66,"column":2}},"26":{"start":{"line":65,"column":2},"end":{"line":65,"column":30}},"27":{"start":{"line":71,"column":0},"end":{"line":75,"column":2}},"28":{"start":{"line":72,"column":2},"end":{"line":74,"column":3}},"29":{"start":{"line":73,"column":4},"end":{"line":73,"column":37}},"30":{"start":{"line":80,"column":0},"end":{"line":102,"column":2}},"31":{"start":{"line":81,"column":2},"end":{"line":88,"column":3}},"32":{"start":{"line":82,"column":4},"end":{"line":82,"column":15}},"33":{"start":{"line":83,"column":4},"end":{"line":83,"column":17}},"34":{"start":{"line":84,"column":4},"end":{"line":84,"column":20}},"35":{"start":{"line":85,"column":9},"end":{"line":88,"column":3}},"36":{"start":{"line":86,"column":4},"end":{"line":86,"column":18}},"37":{"start":{"line":87,"column":4},"end":{"line":87,"column":20}},"38":{"start":{"line":90,"column":2},"end":{"line":92,"column":3}},"39":{"start":{"line":91,"column":4},"end":{"line":91,"column":32}},"40":{"start":{"line":94,"column":2},"end":{"line":94,"column":27}},"41":{"start":{"line":95,"column":2},"end":{"line":95,"column":30}},"42":{"start":{"line":97,"column":2},"end":{"line":99,"column":3}},"43":{"start":{"line":98,"column":4},"end":{"line":98,"column":25}},"44":{"start":{"line":101,"column":2},"end":{"line":101,"column":19}},"45":{"start":{"line":104,"column":0},"end":{"line":108,"column":2}},"46":{"start":{"line":105,"column":2},"end":{"line":105,"column":22}},"47":{"start":{"line":107,"column":2},"end":{"line":107,"column":17}},"48":{"start":{"line":110,"column":0},"end":{"line":114,"column":2}},"49":{"start":{"line":111,"column":2},"end":{"line":111,"column":21}},"50":{"start":{"line":113,"column":2},"end":{"line":113,"column":17}},"51":{"start":{"line":116,"column":0},"end":{"line":119,"column":2}},"52":{"start":{"line":117,"column":2},"end":{"line":117,"column":40}},"53":{"start":{"line":118,"column":2},"end":{"line":118,"column":21}},"54":{"start":{"line":124,"column":0},"end":{"line":132,"column":2}},"55":{"start":{"line":125,"column":2},"end":{"line":127,"column":3}},"56":{"start":{"line":126,"column":4},"end":{"line":126,"column":32}},"57":{"start":{"line":129,"column":2},"end":{"line":129,"column":36}},"58":{"start":{"line":131,"column":2},"end":{"line":131,"column":23}},"59":{"start":{"line":137,"column":0},"end":{"line":172,"column":2}},"60":{"start":{"line":138,"column":2},"end":{"line":140,"column":3}},"61":{"start":{"line":139,"column":4},"end":{"line":139,"column":28}},"62":{"start":{"line":141,"column":2},"end":{"line":141,"column":29}},"63":{"start":{"line":142,"column":2},"end":{"line":142,"column":21}},"64":{"start":{"line":143,"column":2},"end":{"line":171,"column":24}},"65":{"start":{"line":144,"column":4},"end":{"line":144,"column":22}},"66":{"start":{"line":145,"column":4},"end":{"line":145,"column":57}},"67":{"start":{"line":147,"column":4},"end":{"line":169,"column":5}},"68":{"start":{"line":149,"column":6},"end":{"line":149,"column":64}},"69":{"start":{"line":150,"column":6},"end":{"line":150,"column":13}},"70":{"start":{"line":151,"column":11},"end":{"line":169,"column":5}},"71":{"start":{"line":152,"column":6},"end":{"line":159,"column":7}},"72":{"start":{"line":154,"column":8},"end":{"line":154,"column":22}},"73":{"start":{"line":157,"column":8},"end":{"line":157,"column":66}},"74":{"start":{"line":158,"column":8},"end":{"line":158,"column":43}},"75":{"start":{"line":160,"column":6},"end":{"line":160,"column":19}},"76":{"start":{"line":164,"column":6},"end":{"line":164,"column":68}},"77":{"start":{"line":165,"column":6},"end":{"line":165,"column":74}},"78":{"start":{"line":166,"column":6},"end":{"line":166,"column":27}},"79":{"start":{"line":167,"column":6},"end":{"line":167,"column":29}},"80":{"start":{"line":168,"column":6},"end":{"line":168,"column":41}},"81":{"start":{"line":170,"column":4},"end":{"line":170,"column":33}},"82":{"start":{"line":177,"column":0},"end":{"line":205,"column":2}},"83":{"start":{"line":178,"column":2},"end":{"line":178,"column":47}},"84":{"start":{"line":179,"column":2},"end":{"line":183,"column":4}},"85":{"start":{"line":185,"column":2},"end":{"line":185,"column":27}},"86":{"start":{"line":187,"column":2},"end":{"line":202,"column":3}},"87":{"start":{"line":190,"column":4},"end":{"line":199,"column":5}},"88":{"start":{"line":191,"column":6},"end":{"line":195,"column":7}},"89":{"start":{"line":194,"column":8},"end":{"line":194,"column":91}},"90":{"start":{"line":196,"column":6},"end":{"line":198,"column":7}},"91":{"start":{"line":197,"column":8},"end":{"line":197,"column":37}},"92":{"start":{"line":200,"column":9},"end":{"line":202,"column":3}},"93":{"start":{"line":201,"column":4},"end":{"line":201,"column":33}},"94":{"start":{"line":204,"column":2},"end":{"line":204,"column":35}},"95":{"start":{"line":210,"column":0},"end":{"line":223,"column":2}},"96":{"start":{"line":211,"column":2},"end":{"line":211,"column":36}},"97":{"start":{"line":211,"column":26},"end":{"line":211,"column":36}},"98":{"start":{"line":212,"column":2},"end":{"line":212,"column":42}},"99":{"start":{"line":212,"column":24},"end":{"line":212,"column":42}},"100":{"start":{"line":213,"column":2},"end":{"line":216,"column":3}},"101":{"start":{"line":214,"column":4},"end":{"line":214,"column":45}},"102":{"start":{"line":215,"column":4},"end":{"line":215,"column":33}},"103":{"start":{"line":217,"column":2},"end":{"line":217,"column":77}},"104":{"start":{"line":218,"column":2},"end":{"line":218,"column":37}},"105":{"start":{"line":220,"column":2},"end":{"line":222,"column":3}},"106":{"start":{"line":221,"column":4},"end":{"line":221,"column":58}},"107":{"start":{"line":228,"column":0},"end":{"line":233,"column":2}},"108":{"start":{"line":229,"column":2},"end":{"line":229,"column":41}},"109":{"start":{"line":230,"column":2},"end":{"line":232,"column":3}},"110":{"start":{"line":231,"column":4},"end":{"line":231,"column":33}},"111":{"start":{"line":238,"column":0},"end":{"line":252,"column":2}},"112":{"start":{"line":239,"column":2},"end":{"line":239,"column":17}},"113":{"start":{"line":240,"column":2},"end":{"line":246,"column":3}},"114":{"start":{"line":241,"column":4},"end":{"line":241,"column":15}},"115":{"start":{"line":242,"column":9},"end":{"line":246,"column":3}},"116":{"start":{"line":243,"column":4},"end":{"line":243,"column":23}},"117":{"start":{"line":245,"column":4},"end":{"line":245,"column":58}},"118":{"start":{"line":248,"column":2},"end":{"line":248,"column":22}},"119":{"start":{"line":249,"column":2},"end":{"line":249,"column":31}},"120":{"start":{"line":251,"column":2},"end":{"line":251,"column":13}},"121":{"start":{"line":257,"column":0},"end":{"line":265,"column":2}},"122":{"start":{"line":258,"column":2},"end":{"line":258,"column":33}},"123":{"start":{"line":259,"column":2},"end":{"line":264,"column":3}},"124":{"start":{"line":260,"column":4},"end":{"line":260,"column":43}},"125":{"start":{"line":262,"column":4},"end":{"line":262,"column":34}},"126":{"start":{"line":263,"column":4},"end":{"line":263,"column":18}},"127":{"start":{"line":270,"column":0},"end":{"line":284,"column":2}},"128":{"start":{"line":271,"column":2},"end":{"line":271,"column":37}},"129":{"start":{"line":271,"column":17},"end":{"line":271,"column":37}},"130":{"start":{"line":272,"column":2},"end":{"line":283,"column":3}},"131":{"start":{"line":273,"column":4},"end":{"line":273,"column":104}},"132":{"start":{"line":275,"column":4},"end":{"line":282,"column":5}},"133":{"start":{"line":276,"column":6},"end":{"line":278,"column":7}},"134":{"start":{"line":277,"column":8},"end":{"line":277,"column":54}},"135":{"start":{"line":279,"column":6},"end":{"line":279,"column":26}},"136":{"start":{"line":281,"column":6},"end":{"line":281,"column":47}},"137":{"start":{"line":289,"column":0},"end":{"line":291,"column":2}},"138":{"start":{"line":290,"column":2},"end":{"line":290,"column":22}},"139":{"start":{"line":296,"column":0},"end":{"line":302,"column":2}},"140":{"start":{"line":297,"column":2},"end":{"line":301,"column":3}},"141":{"start":{"line":298,"column":4},"end":{"line":298,"column":25}},"142":{"start":{"line":300,"column":4},"end":{"line":300,"column":23}},"143":{"start":{"line":304,"column":0},"end":{"line":304,"column":29}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":24},"end":{"line":40,"column":45}},{"start":{"line":40,"column":49},"end":{"line":40,"column":59}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"4":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]},"5":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"6":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":9},"end":{"line":85,"column":9}},{"start":{"line":85,"column":9},"end":{"line":85,"column":9}}]},"7":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"8":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"9":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":2},"end":{"line":125,"column":2}},{"start":{"line":125,"column":2},"end":{"line":125,"column":2}}]},"10":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":2},"end":{"line":138,"column":2}},{"start":{"line":138,"column":2},"end":{"line":138,"column":2}}]},"11":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":147,"column":4}},{"start":{"line":147,"column":4},"end":{"line":147,"column":4}}]},"12":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":11},"end":{"line":151,"column":11}},{"start":{"line":151,"column":11},"end":{"line":151,"column":11}}]},"13":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":6},"end":{"line":152,"column":6}},{"start":{"line":152,"column":6},"end":{"line":152,"column":6}}]},"14":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":9},"end":{"line":152,"column":39}},{"start":{"line":152,"column":43},"end":{"line":152,"column":78}}]},"15":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":2},"end":{"line":187,"column":2}},{"start":{"line":187,"column":2},"end":{"line":187,"column":2}}]},"16":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":4},"end":{"line":190,"column":4}},{"start":{"line":190,"column":4},"end":{"line":190,"column":4}}]},"17":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":6}},{"start":{"line":191,"column":6},"end":{"line":191,"column":6}}]},"18":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":6},"end":{"line":196,"column":6}},{"start":{"line":196,"column":6},"end":{"line":196,"column":6}}]},"19":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":9},"end":{"line":200,"column":9}},{"start":{"line":200,"column":9},"end":{"line":200,"column":9}}]},"20":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":2},"end":{"line":211,"column":2}},{"start":{"line":211,"column":2},"end":{"line":211,"column":2}}]},"21":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":2},"end":{"line":212,"column":2}},{"start":{"line":212,"column":2},"end":{"line":212,"column":2}}]},"22":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":2},"end":{"line":213,"column":2}},{"start":{"line":213,"column":2},"end":{"line":213,"column":2}}]},"23":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":2},"end":{"line":220,"column":2}},{"start":{"line":220,"column":2},"end":{"line":220,"column":2}}]},"24":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":2},"end":{"line":230,"column":2}},{"start":{"line":230,"column":2},"end":{"line":230,"column":2}}]},"25":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":2},"end":{"line":240,"column":2}},{"start":{"line":240,"column":2},"end":{"line":240,"column":2}}]},"26":{"line":240,"type":"binary-expr","locations":[{"start":{"line":240,"column":6},"end":{"line":240,"column":19}},{"start":{"line":240,"column":23},"end":{"line":240,"column":53}}]},"27":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":9},"end":{"line":242,"column":9}},{"start":{"line":242,"column":9},"end":{"line":242,"column":9}}]},"28":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":2},"end":{"line":259,"column":2}},{"start":{"line":259,"column":2},"end":{"line":259,"column":2}}]},"29":{"line":259,"type":"binary-expr","locations":[{"start":{"line":259,"column":5},"end":{"line":259,"column":20}},{"start":{"line":259,"column":24},"end":{"line":259,"column":49}}]},"30":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":2},"end":{"line":271,"column":2}},{"start":{"line":271,"column":2},"end":{"line":271,"column":2}}]},"31":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":2},"end":{"line":272,"column":2}},{"start":{"line":272,"column":2},"end":{"line":272,"column":2}}]},"32":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":4},"end":{"line":275,"column":4}},{"start":{"line":275,"column":4},"end":{"line":275,"column":4}}]},"33":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":6},"end":{"line":276,"column":6}},{"start":{"line":276,"column":6},"end":{"line":276,"column":6}}]},"34":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":2},"end":{"line":297,"column":2}},{"start":{"line":297,"column":2},"end":{"line":297,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var stream = require('stream');","var util = require('util');","","var Md5Wrapper = require('../md5-wrapper');","var Constants = require('../util/constants');","var bufferSize = Constants.BlobConstants.DEFAULT_WRITE_BLOCK_SIZE_IN_BYTES;","","/**","*  Chunk stream","*  1. Calculate md5","*  2. Track reading offset","*  3. Work with customize memory allocator","*  4. Buffer data from stream.","*  @param {object} options stream.Readable options","*/","function ChunkStream(options) {","  stream.Stream.call(this);","  this.writable = this.readable = true;","","  if (!options) {","    options = {};","  }","","  this._highWaterMark = options.highWaterMark || bufferSize;","","  this._paused = undefined; //True/false is the external status from users.","","  this._isStreamOpened = false;","  this._offset = 0;","  this._allocator = options.allocator;","  this._streamEnded = false;","  this._md5hash = null;","  this._buffer = null;","  this._internalBufferSize = 0;","  this._outputLengthLimit = 0;","  this._md5sum = undefined;","","  if (options.calcContentMd5) {","    this._md5hash = new Md5Wrapper().createMd5Hash();","  }","}","","util.inherits(ChunkStream, stream.Stream);","","/**","* Set the memory allocator.","*/","ChunkStream.prototype.setMemoryAllocator = function(allocator) {","  this._allocator = allocator;","};","","/**","* Set the output length.","*/","ChunkStream.prototype.setOutputLength = function(length) {","  if (length) {","    this._outputLengthLimit = length;","  }","};","","/**","* Internal stream ended","*/","ChunkStream.prototype.end = function (chunk, encoding, cb) {","  if (typeof chunk === 'function') {","    cb = chunk;","    chunk = null;","    encoding = null;","  } else if (typeof encoding === 'function') {","    cb = encoding;","    encoding = null;","  }","","  if (chunk) {","    this.write(chunk, encoding);","  }","","  this._streamEnded = true;","  this._flushInternalBuffer();","  ","  if (cb) {","    this.once('end', cb);","  }","","  this.emit('end');","};","","ChunkStream.prototype.finish = function () {","  this.emit('finish');","","  this.destroy();","};","","ChunkStream.prototype.error = function () {","  this.emit('error');","","  this.destroy();","};","","ChunkStream.prototype.destroy = function () {","  this.writable = this.readable = false;","  this.emit('close');","};","","/**","* Add event listener","*/","ChunkStream.prototype.write = function (chunk, encoding) {","  if (!this._isStreamOpened) {","    this._isStreamOpened = true;","  }","","  this._buildChunk(chunk, encoding);","","  return !this._paused;","};","","/**","* Buffer the data into a chunk and emit it","*/","ChunkStream.prototype._buildChunk = function (data) {","  if (typeof data == 'string') {","    data = new Buffer(data);","  }","  var dataSize = data.length;","  var dataOffset = 0;","  do {","    var buffer = null;","    var targetSize = this._internalBufferSize + dataSize;","","    if (targetSize < this._highWaterMark) {","      // add the data to the internal buffer and return as it is not yet full","      this._copyToInternalBuffer(data, dataOffset, data.length);","      return;","    } else if (targetSize == this._highWaterMark){","      if(this._internalBufferSize === 0 && data.length === this._highWaterMark) {","        // set the buffer to the data passed in to avoid creating a new buffer","        buffer = data;","      } else {","        // add the data to the internal buffer and pop that buffer","        this._copyToInternalBuffer(data, dataOffset, data.length);","        buffer = this._popInternalBuffer();","      }","      dataSize = 0;","    } else {","      // add data to the internal buffer until its full, then return it","      // set the dataSize parameter so that additional data is not lost","      var copySize = this._highWaterMark - this._internalBufferSize;","      this._copyToInternalBuffer(data, dataOffset, dataOffset + copySize);","      dataSize -= copySize;","      dataOffset += copySize;","      buffer = this._popInternalBuffer();","    }","    this._emitBufferData(buffer);","  } while(dataSize > 0);","};","","/**","* Emit the buffer","*/","ChunkStream.prototype._emitBufferData = function(buffer) {","  var newOffset = this._offset + buffer.length;","  var range = {","    start : this._offset,","    end : newOffset - 1,","    size : buffer.length","  };","","  this._offset = newOffset;","  ","  if (this._outputLengthLimit > 0) {","    // When the start postion is larger than the limit, no data will be consumed though there is an event to be emitted.","    // So the buffer should not be calculated.","    if (range.start <= this._outputLengthLimit) {","      if (this._offset > this._outputLengthLimit) {","        // Don't use negative end parameter which means the index starting from the end of the buffer","        // to be compatible with node 0.8.","        buffer = buffer.slice(0, buffer.length - (this._offset - this._outputLengthLimit));","      }","      if (this._md5hash) {","        this._md5hash.update(buffer);","      }","    }","  } else if (this._md5hash) {","    this._md5hash.update(buffer);","  }","","  this.emit('data', buffer, range);","};","","/**","* Copy data into internal buffer","*/","ChunkStream.prototype._copyToInternalBuffer = function(data, start, end) {","  if(start === undefined) start = 0;","  if(end === undefined) end = data.length;","  if (!this._buffer) {","    this._buffer = this._allocateNewBuffer();","    this._internalBufferSize = 0;","  }","  var copied = data.copy(this._buffer, this._internalBufferSize, start, end);","  this._internalBufferSize += copied;","","  if(copied != (end - start)) {","    throw new Error('Can not copy entire data to buffer');","  }","};","","/**","* Flush internal buffer","*/","ChunkStream.prototype._flushInternalBuffer = function() {","  var buffer = this._popInternalBuffer();","  if (buffer) {","    this._emitBufferData(buffer);","  }","};","","/**","* Pop internal buffer","*/","ChunkStream.prototype._popInternalBuffer = function () {","  var buf = null;","  if (!this._buffer || this._internalBufferSize === 0) {","    buf = null;","  } else if(this._internalBufferSize == this._highWaterMark) {","    buf = this._buffer;","  } else {","    buf = this._buffer.slice(0, this._internalBufferSize);","  }","","  this._buffer = null;","  this._internalBufferSize = 0;","","  return buf;","};","","/**","* Allocate a buffer","*/","ChunkStream.prototype._allocateNewBuffer = function() {","  var size = this._highWaterMark;","  if(this._allocator && this._allocator.getBuffer) {","    return this._allocator.getBuffer(size);","  } else {","    var buffer = new Buffer(size);","    return buffer;","  }","};","","/**","* Get file content md5 when read completely.","*/","ChunkStream.prototype.getContentMd5 = function(encoding) {","  if (!encoding) encoding = 'base64';","  if(!this._md5hash) {","    throw new Error('Can\\'t get content md5, please set the calcContentMd5 option for FileReadStream.');","  } else {","    if (this._streamEnded) {","      if (!this._md5sum) {","        this._md5sum = this._md5hash.digest(encoding);","      }","      return this._md5sum;","    } else {","      throw new Error('Stream has not ended.');","    }","  }","};","","/**","* Pause chunk stream","*/","ChunkStream.prototype.pause = function() {","  this._paused = true;","};","","/**","* Resume read stream","*/","ChunkStream.prototype.resume = function() {","  if (this._paused) {","    this._paused = false;","","    this.emit('drain');","  }","};","","module.exports = ChunkStream;"],"l":{"17":1,"18":1,"20":1,"21":1,"22":1,"32":1,"33":0,"34":0,"36":0,"37":0,"40":0,"42":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"54":0,"55":0,"59":1,"64":1,"65":0,"71":1,"72":0,"73":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"90":0,"91":0,"94":0,"95":0,"97":0,"98":0,"101":0,"104":1,"105":0,"107":0,"110":1,"111":0,"113":0,"116":1,"117":0,"118":0,"124":1,"125":0,"126":0,"129":0,"131":0,"137":1,"138":0,"139":0,"141":0,"142":0,"143":0,"144":0,"145":0,"147":0,"149":0,"150":0,"151":0,"152":0,"154":0,"157":0,"158":0,"160":0,"164":0,"165":0,"166":0,"167":0,"168":0,"170":0,"177":1,"178":0,"179":0,"185":0,"187":0,"190":0,"191":0,"194":0,"196":0,"197":0,"200":0,"201":0,"204":0,"210":1,"211":0,"212":0,"213":0,"214":0,"215":0,"217":0,"218":0,"220":0,"221":0,"228":1,"229":0,"230":0,"231":0,"238":1,"239":0,"240":0,"241":0,"242":0,"243":0,"245":0,"248":0,"249":0,"251":0,"257":1,"258":0,"259":0,"260":0,"262":0,"263":0,"270":1,"271":0,"272":0,"273":0,"275":0,"276":0,"277":0,"279":0,"281":0,"289":1,"290":0,"296":1,"297":0,"298":0,"300":0,"304":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/streams/chunkstreamwithstream.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/streams/chunkstreamwithstream.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":1,"31":0,"32":0,"33":1,"34":0,"35":0,"36":1,"37":0,"38":0,"39":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"ChunkStreamWithStream","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":48}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":37},"end":{"line":43,"column":63}}},"3":{"name":"(anonymous_3)","line":66,"loc":{"start":{"line":66,"column":39},"end":{"line":66,"column":70}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":40},"end":{"line":78,"column":52}}},"5":{"name":"(anonymous_5)","line":87,"loc":{"start":{"line":87,"column":41},"end":{"line":87,"column":52}}},"6":{"name":"(anonymous_6)","line":93,"loc":{"start":{"line":93,"column":41},"end":{"line":93,"column":53}}},"7":{"name":"(anonymous_7)","line":98,"loc":{"start":{"line":98,"column":42},"end":{"line":98,"column":54}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":43}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":50}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":27}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":42}},"5":{"start":{"line":30,"column":0},"end":{"line":36,"column":1}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":34}},"7":{"start":{"line":33,"column":2},"end":{"line":33,"column":17}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":24}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":46}},"10":{"start":{"line":38,"column":0},"end":{"line":38,"column":50}},"11":{"start":{"line":43,"column":0},"end":{"line":61,"column":2}},"12":{"start":{"line":44,"column":2},"end":{"line":48,"column":3}},"13":{"start":{"line":45,"column":4},"end":{"line":45,"column":15}},"14":{"start":{"line":47,"column":4},"end":{"line":47,"column":58}},"15":{"start":{"line":50,"column":2},"end":{"line":58,"column":3}},"16":{"start":{"line":51,"column":4},"end":{"line":54,"column":5}},"17":{"start":{"line":52,"column":6},"end":{"line":52,"column":34}},"18":{"start":{"line":53,"column":6},"end":{"line":53,"column":59}},"19":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"20":{"start":{"line":56,"column":6},"end":{"line":56,"column":28}},"21":{"start":{"line":60,"column":2},"end":{"line":60,"column":14}},"22":{"start":{"line":66,"column":0},"end":{"line":73,"column":2}},"23":{"start":{"line":67,"column":2},"end":{"line":71,"column":3}},"24":{"start":{"line":68,"column":4},"end":{"line":68,"column":27}},"25":{"start":{"line":70,"column":4},"end":{"line":70,"column":17}},"26":{"start":{"line":72,"column":2},"end":{"line":72,"column":60}},"27":{"start":{"line":78,"column":0},"end":{"line":82,"column":2}},"28":{"start":{"line":79,"column":2},"end":{"line":79,"column":41}},"29":{"start":{"line":81,"column":2},"end":{"line":81,"column":23}},"30":{"start":{"line":87,"column":0},"end":{"line":91,"column":2}},"31":{"start":{"line":88,"column":2},"end":{"line":88,"column":42}},"32":{"start":{"line":90,"column":2},"end":{"line":90,"column":24}},"33":{"start":{"line":93,"column":0},"end":{"line":96,"column":2}},"34":{"start":{"line":94,"column":2},"end":{"line":94,"column":42}},"35":{"start":{"line":95,"column":2},"end":{"line":95,"column":49}},"36":{"start":{"line":98,"column":0},"end":{"line":101,"column":2}},"37":{"start":{"line":99,"column":2},"end":{"line":99,"column":43}},"38":{"start":{"line":100,"column":2},"end":{"line":100,"column":48}},"39":{"start":{"line":103,"column":0},"end":{"line":103,"column":39}}},"branchMap":{"1":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":5},"end":{"line":44,"column":20}},{"start":{"line":44,"column":24},"end":{"line":44,"column":41}}]},"3":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"5":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"6":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var ChunkStream = require('./chunkstream');","var EventEmitter = require('events').EventEmitter;","var util = require('util');","var azureutil = require('./../util/util');","","/**","*  Chunk stream","*  1. Calculate md5","*  2. Track reading offset","*  3. Work with customize memory allocator","*  4. Buffer data from stream.","*  @param {object} options stream.Readable options","*/","function ChunkStreamWithStream(stream, options) {","  ChunkStream.call(this, options);","","  stream.pause(); // Pause stream and wait for data listener. It's useful for node v0.8","  this._stream = stream;","  this._stream.on('end', this.end.bind(this)); // Should catch the end event for node v0.8","}","","util.inherits(ChunkStreamWithStream, ChunkStream);","","/**","* Add event listener","*/","ChunkStreamWithStream.prototype.on = function(event, listener) {","  if(event === 'end' && this._streamEnded) {","    listener(); //Directly call the end event when stream already ended","  } else {","    EventEmitter.prototype.on.call(this, event, listener);","  }","","  if (event === 'data') {","    if (!this._isStreamOpened) {","      this._isStreamOpened = true;","      this._stream.on('data', this._buildChunk.bind(this));","    }","    if (this._paused === undefined) {","      this._stream.resume();","    }","  }","  ","  return this;","};","","/**","* Stop stream from external","*/","ChunkStreamWithStream.prototype.stop = function (chunk, encoding, cb) {","  if (azureutil.objectIsFunction(this._stream.destroy)) {","    this._stream.destroy();","  } else {","    this.pause();","  }","  ChunkStream.prototype.end.call(this, chunk, encoding, cb);","};","","/**","* Pause chunk stream","*/","ChunkStreamWithStream.prototype.pause = function () {","  ChunkStream.prototype.pause.call(this);","","  this._stream.pause();","};","","/**","* Resume read stream","*/","ChunkStreamWithStream.prototype.resume = function() {","  ChunkStream.prototype.resume.call(this);","","  this._stream.resume();","};","","ChunkStreamWithStream.prototype.finish = function () {","  ChunkStream.prototype.finish.call(this);","  this._stream.emit.call(this._stream, 'finish');","};","","ChunkStreamWithStream.prototype.destroy = function () {","  ChunkStream.prototype.destroy.call(this);","  this._stream.emit.call(this._stream, 'close');","};","","module.exports = ChunkStreamWithStream;",""],"l":{"17":1,"18":1,"19":1,"20":1,"30":1,"31":0,"33":0,"34":0,"35":0,"38":1,"43":1,"44":0,"45":0,"47":0,"50":0,"51":0,"52":0,"53":0,"55":0,"56":0,"60":0,"66":1,"67":0,"68":0,"70":0,"72":0,"78":1,"79":0,"81":0,"87":1,"88":0,"90":0,"93":1,"94":0,"95":0,"98":1,"99":0,"100":0,"103":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/streams/filereadstream.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/streams/filereadstream.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"FileReadStream","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":39}}},"2":{"name":"(anonymous_2)","line":69,"loc":{"start":{"line":69,"column":33},"end":{"line":69,"column":45}}},"3":{"name":"(anonymous_3)","line":72,"loc":{"start":{"line":72,"column":33},"end":{"line":72,"column":53}}},"4":{"name":"(anonymous_4)","line":85,"loc":{"start":{"line":85,"column":30},"end":{"line":85,"column":56}}},"5":{"name":"(anonymous_5)","line":97,"loc":{"start":{"line":97,"column":38},"end":{"line":97,"column":53}}},"6":{"name":"(anonymous_6)","line":109,"loc":{"start":{"line":109,"column":42},"end":{"line":109,"column":59}}},"7":{"name":"(anonymous_7)","line":118,"loc":{"start":{"line":118,"column":37},"end":{"line":118,"column":48}}},"8":{"name":"(anonymous_8)","line":121,"loc":{"start":{"line":121,"column":22},"end":{"line":121,"column":33}}},"9":{"name":"(anonymous_9)","line":131,"loc":{"start":{"line":131,"column":66},"end":{"line":131,"column":105}}},"10":{"name":"(anonymous_10)","line":176,"loc":{"start":{"line":176,"column":41},"end":{"line":176,"column":60}}},"11":{"name":"(anonymous_11)","line":195,"loc":{"start":{"line":195,"column":33},"end":{"line":195,"column":44}}},"12":{"name":"(anonymous_12)","line":202,"loc":{"start":{"line":202,"column":34},"end":{"line":202,"column":45}}},"13":{"name":"(anonymous_13)","line":214,"loc":{"start":{"line":214,"column":34},"end":{"line":214,"column":46}}},"14":{"name":"(anonymous_14)","line":218,"loc":{"start":{"line":218,"column":35},"end":{"line":218,"column":47}}},"15":{"name":"close","line":226,"loc":{"start":{"line":226,"column":2},"end":{"line":226,"column":21}}},"16":{"name":"(anonymous_16)","line":227,"loc":{"start":{"line":227,"column":29},"end":{"line":227,"column":43}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":31}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":23}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":43}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":45}},"7":{"start":{"line":24,"column":0},"end":{"line":24,"column":75}},"8":{"start":{"line":26,"column":0},"end":{"line":26,"column":50}},"9":{"start":{"line":36,"column":0},"end":{"line":62,"column":1}},"10":{"start":{"line":37,"column":2},"end":{"line":37,"column":27}},"11":{"start":{"line":38,"column":2},"end":{"line":38,"column":23}},"12":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":17}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":26}},"15":{"start":{"line":45,"column":2},"end":{"line":45,"column":28}},"16":{"start":{"line":46,"column":2},"end":{"line":46,"column":18}},"17":{"start":{"line":47,"column":2},"end":{"line":47,"column":29}},"18":{"start":{"line":48,"column":2},"end":{"line":48,"column":60}},"19":{"start":{"line":49,"column":2},"end":{"line":49,"column":19}},"20":{"start":{"line":50,"column":2},"end":{"line":50,"column":27}},"21":{"start":{"line":51,"column":2},"end":{"line":51,"column":38}},"22":{"start":{"line":52,"column":2},"end":{"line":52,"column":24}},"23":{"start":{"line":54,"column":2},"end":{"line":54,"column":23}},"24":{"start":{"line":55,"column":2},"end":{"line":55,"column":27}},"25":{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},"26":{"start":{"line":58,"column":4},"end":{"line":58,"column":53}},"27":{"start":{"line":61,"column":2},"end":{"line":61,"column":15}},"28":{"start":{"line":64,"column":0},"end":{"line":64,"column":45}},"29":{"start":{"line":69,"column":0},"end":{"line":80,"column":2}},"30":{"start":{"line":70,"column":2},"end":{"line":70,"column":18}},"31":{"start":{"line":71,"column":2},"end":{"line":71,"column":18}},"32":{"start":{"line":72,"column":2},"end":{"line":79,"column":5}},"33":{"start":{"line":73,"column":4},"end":{"line":78,"column":5}},"34":{"start":{"line":74,"column":6},"end":{"line":74,"column":32}},"35":{"start":{"line":76,"column":6},"end":{"line":76,"column":20}},"36":{"start":{"line":77,"column":6},"end":{"line":77,"column":28}},"37":{"start":{"line":85,"column":0},"end":{"line":92,"column":2}},"38":{"start":{"line":86,"column":2},"end":{"line":89,"column":3}},"39":{"start":{"line":87,"column":4},"end":{"line":87,"column":25}},"40":{"start":{"line":88,"column":4},"end":{"line":88,"column":21}},"41":{"start":{"line":91,"column":2},"end":{"line":91,"column":63}},"42":{"start":{"line":97,"column":0},"end":{"line":104,"column":2}},"43":{"start":{"line":98,"column":2},"end":{"line":103,"column":3}},"44":{"start":{"line":99,"column":4},"end":{"line":99,"column":43}},"45":{"start":{"line":101,"column":4},"end":{"line":101,"column":34}},"46":{"start":{"line":102,"column":4},"end":{"line":102,"column":18}},"47":{"start":{"line":109,"column":0},"end":{"line":113,"column":2}},"48":{"start":{"line":110,"column":2},"end":{"line":112,"column":3}},"49":{"start":{"line":111,"column":4},"end":{"line":111,"column":42}},"50":{"start":{"line":118,"column":0},"end":{"line":171,"column":2}},"51":{"start":{"line":119,"column":2},"end":{"line":119,"column":18}},"52":{"start":{"line":120,"column":2},"end":{"line":125,"column":3}},"53":{"start":{"line":121,"column":4},"end":{"line":123,"column":7}},"54":{"start":{"line":122,"column":6},"end":{"line":122,"column":23}},"55":{"start":{"line":124,"column":4},"end":{"line":124,"column":11}},"56":{"start":{"line":127,"column":2},"end":{"line":129,"column":3}},"57":{"start":{"line":128,"column":4},"end":{"line":128,"column":11}},"58":{"start":{"line":130,"column":2},"end":{"line":130,"column":52}},"59":{"start":{"line":131,"column":2},"end":{"line":170,"column":5}},"60":{"start":{"line":132,"column":4},"end":{"line":135,"column":5}},"61":{"start":{"line":133,"column":6},"end":{"line":133,"column":32}},"62":{"start":{"line":134,"column":6},"end":{"line":134,"column":13}},"63":{"start":{"line":137,"column":4},"end":{"line":143,"column":5}},"64":{"start":{"line":138,"column":6},"end":{"line":141,"column":7}},"65":{"start":{"line":139,"column":8},"end":{"line":139,"column":33}},"66":{"start":{"line":140,"column":8},"end":{"line":140,"column":25}},"67":{"start":{"line":142,"column":6},"end":{"line":142,"column":13}},"68":{"start":{"line":145,"column":4},"end":{"line":149,"column":6}},"69":{"start":{"line":151,"column":4},"end":{"line":151,"column":13}},"70":{"start":{"line":152,"column":4},"end":{"line":158,"column":5}},"71":{"start":{"line":153,"column":6},"end":{"line":153,"column":24}},"72":{"start":{"line":155,"column":6},"end":{"line":155,"column":44}},"73":{"start":{"line":157,"column":6},"end":{"line":157,"column":38}},"74":{"start":{"line":160,"column":4},"end":{"line":162,"column":5}},"75":{"start":{"line":161,"column":6},"end":{"line":161,"column":33}},"76":{"start":{"line":164,"column":4},"end":{"line":164,"column":35}},"77":{"start":{"line":167,"column":4},"end":{"line":167,"column":30}},"78":{"start":{"line":168,"column":4},"end":{"line":168,"column":38}},"79":{"start":{"line":169,"column":4},"end":{"line":169,"column":21}},"80":{"start":{"line":176,"column":0},"end":{"line":190,"column":2}},"81":{"start":{"line":177,"column":2},"end":{"line":177,"column":37}},"82":{"start":{"line":177,"column":17},"end":{"line":177,"column":37}},"83":{"start":{"line":178,"column":2},"end":{"line":189,"column":3}},"84":{"start":{"line":179,"column":4},"end":{"line":179,"column":104}},"85":{"start":{"line":181,"column":4},"end":{"line":188,"column":5}},"86":{"start":{"line":182,"column":6},"end":{"line":184,"column":7}},"87":{"start":{"line":183,"column":8},"end":{"line":183,"column":54}},"88":{"start":{"line":185,"column":6},"end":{"line":185,"column":26}},"89":{"start":{"line":187,"column":6},"end":{"line":187,"column":55}},"90":{"start":{"line":195,"column":0},"end":{"line":197,"column":2}},"91":{"start":{"line":196,"column":2},"end":{"line":196,"column":22}},"92":{"start":{"line":202,"column":0},"end":{"line":212,"column":2}},"93":{"start":{"line":203,"column":2},"end":{"line":203,"column":35}},"94":{"start":{"line":204,"column":2},"end":{"line":211,"column":3}},"95":{"start":{"line":205,"column":4},"end":{"line":205,"column":25}},"96":{"start":{"line":207,"column":4},"end":{"line":210,"column":5}},"97":{"start":{"line":209,"column":6},"end":{"line":209,"column":23}},"98":{"start":{"line":214,"column":0},"end":{"line":216,"column":2}},"99":{"start":{"line":215,"column":2},"end":{"line":215,"column":17}},"100":{"start":{"line":218,"column":0},"end":{"line":246,"column":2}},"101":{"start":{"line":219,"column":2},"end":{"line":221,"column":3}},"102":{"start":{"line":220,"column":4},"end":{"line":220,"column":11}},"103":{"start":{"line":223,"column":2},"end":{"line":223,"column":18}},"104":{"start":{"line":224,"column":2},"end":{"line":224,"column":24}},"105":{"start":{"line":226,"column":2},"end":{"line":237,"column":3}},"106":{"start":{"line":227,"column":4},"end":{"line":234,"column":7}},"107":{"start":{"line":228,"column":6},"end":{"line":233,"column":7}},"108":{"start":{"line":229,"column":8},"end":{"line":229,"column":32}},"109":{"start":{"line":232,"column":8},"end":{"line":232,"column":27}},"110":{"start":{"line":235,"column":4},"end":{"line":235,"column":20}},"111":{"start":{"line":236,"column":4},"end":{"line":236,"column":27}},"112":{"start":{"line":240,"column":2},"end":{"line":243,"column":3}},"113":{"start":{"line":241,"column":4},"end":{"line":241,"column":29}},"114":{"start":{"line":242,"column":4},"end":{"line":242,"column":11}},"115":{"start":{"line":245,"column":2},"end":{"line":245,"column":10}},"116":{"start":{"line":248,"column":0},"end":{"line":248,"column":32}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"2":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":24},"end":{"line":48,"column":45}},{"start":{"line":48,"column":49},"end":{"line":48,"column":59}}]},"3":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"4":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"5":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"6":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":22}},{"start":{"line":86,"column":26},"end":{"line":86,"column":52}}]},"7":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":98,"column":2}},{"start":{"line":98,"column":2},"end":{"line":98,"column":2}}]},"8":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":5},"end":{"line":98,"column":20}},{"start":{"line":98,"column":24},"end":{"line":98,"column":49}}]},"9":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":2},"end":{"line":110,"column":2}},{"start":{"line":110,"column":2},"end":{"line":110,"column":2}}]},"10":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":5},"end":{"line":110,"column":20}},{"start":{"line":110,"column":24},"end":{"line":110,"column":53}}]},"11":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":2},"end":{"line":120,"column":2}},{"start":{"line":120,"column":2},"end":{"line":120,"column":2}}]},"12":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]},"13":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":6},"end":{"line":127,"column":18}},{"start":{"line":127,"column":22},"end":{"line":127,"column":39}}]},"14":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":132,"column":4}},{"start":{"line":132,"column":4},"end":{"line":132,"column":4}}]},"15":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]},"16":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":6},"end":{"line":138,"column":6}},{"start":{"line":138,"column":6},"end":{"line":138,"column":6}}]},"17":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]},"18":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":160,"column":4}},{"start":{"line":160,"column":4},"end":{"line":160,"column":4}}]},"19":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":177,"column":2}},{"start":{"line":177,"column":2},"end":{"line":177,"column":2}}]},"20":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":178,"column":2}},{"start":{"line":178,"column":2},"end":{"line":178,"column":2}}]},"21":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"22":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":6},"end":{"line":182,"column":6}},{"start":{"line":182,"column":6},"end":{"line":182,"column":6}}]},"23":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":2},"end":{"line":204,"column":2}},{"start":{"line":204,"column":2},"end":{"line":204,"column":2}}]},"24":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"25":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":2},"end":{"line":219,"column":2}},{"start":{"line":219,"column":2},"end":{"line":219,"column":2}}]},"26":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":13},"end":{"line":227,"column":15}},{"start":{"line":227,"column":19},"end":{"line":227,"column":27}}]},"27":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":6},"end":{"line":228,"column":6}},{"start":{"line":228,"column":6},"end":{"line":228,"column":6}}]},"28":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":2},"end":{"line":240,"column":2}},{"start":{"line":240,"column":2},"end":{"line":240,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var stream = require('stream');","var util = require('util');","var fs = require('fs');","var validator = require('validator');","","var Md5Wrapper = require('../md5-wrapper');","var Constants = require('../util/constants');","var bufferSize = Constants.BlobConstants.DEFAULT_WRITE_BLOCK_SIZE_IN_BYTES;","","var EventEmitter = require('events').EventEmitter;","","/**","*  File read stream","*  1. Calculate md5","*  2. Track reading offset","*  3. Work with customize memory allocator","*  4. Buffer data from stream.","*  @param {object} options stream.Readable options","*/","function FileReadStream(path, options) {","  stream.Stream.call(this);","  this.readable = true;","","  if(!options) {","    options = {};","  }","","  this._destroyed = false;","  this._streamEnded = false;","  this._fd = null;","  this._fileName = undefined;","  this._highWaterMark = options.highWaterMark || bufferSize;","  this._offset = 0;","  this._paused = undefined;","  this._allocator = options.allocator;","  this._fileName = path;","","  this._md5hash = null;","  this._md5sum = undefined;","","  if (options.calcContentMd5) {","    this._md5hash = new Md5Wrapper().createMd5Hash();","  }","","  this._open();","}","","util.inherits(FileReadStream, stream.Stream);","","/**","* Open file","*/","FileReadStream.prototype._open = function () {","  var flags = 'r';","  var self = this;","  fs.open(this._fileName, flags, function(error, fd) {","    if (error) {","      self.emit('error', error);","    } else {","      self._fd = fd;","      self.emit('open', fd);","    }","  });","};","","/**","* Add event listener","*/","FileReadStream.prototype.on = function(event, listener) {","  if (event === 'data' && this._paused === undefined) {","    this._paused = false;","    this._emitData();","  }","","  return EventEmitter.prototype.on.call(this, event, listener);","};","","/**","* Get buffer","*/","FileReadStream.prototype._getBuffer = function(size) {","  if(this._allocator && this._allocator.getBuffer) {","    return this._allocator.getBuffer(size);","  } else {","    var buffer = new Buffer(size);","    return buffer;","  }","};","","/**","* Release buffer","*/","FileReadStream.prototype._releaseBuffer = function(buffer) {","  if(this._allocator && this._allocator.releaseBuffer) {","    this._allocator.releaseBuffer(buffer);","  }","};","","/**","* Emit the data from file","*/","FileReadStream.prototype._emitData = function() {","  var self = this;","  if(!this._fd) {","    this.once('open', function() {","      self._emitData();","    });","    return;","  }","","  if (this._paused || this._streamEnded) {","    return;","  }","  var buffer = this._getBuffer(this._highWaterMark);","  fs.read(this._fd, buffer, 0, this._highWaterMark, this._offset, function(error, bytesRead, readBuffer) {","    if (error) {","      self.emit('error', error);","      return;","    }","","    if(bytesRead === 0) {","      if(!self._streamEnded) {","        self._streamEnded = true;","        self.emit('end');","      }","      return;","    }","","    var range = {","      start : self._offset,","      end : self._offset + bytesRead - 1,","      size : bytesRead","    };","","    var data;","    if(bytesRead == self._highWaterMark) {","      data = readBuffer;","    } else {","      data = readBuffer.slice(0, bytesRead);","      //Release the current buffer since we created a new one","      self._releaseBuffer(readBuffer);","    }","","    if(self._md5hash) {","      self._md5hash.update(data);","    }","","    self.emit('data', data, range);","","    // cleanup","    self._offset += bytesRead;","    buffer = readBuffer = data = null;","    self._emitData();","  });","};","","/**","* Get file content md5 when read completely.","*/","FileReadStream.prototype.getContentMd5 = function(encoding) {","  if (!encoding) encoding = 'base64';","  if(!this._md5hash) {","    throw new Error('Can\\'t get content md5, please set the calcContentMd5 option for FileReadStream.');","  } else {","    if (this._streamEnded) {","      if (!this._md5sum) {","        this._md5sum = this._md5hash.digest(encoding);","      }","      return this._md5sum;","    } else {","      throw new Error('FileReadStream has not ended.');","    }","  }","};","","/**","* Pause chunk stream","*/","FileReadStream.prototype.pause = function() {","  this._paused = true;","};","","/**","* Resume read stream","*/","FileReadStream.prototype.resume = function() {","  var previousState = this._paused;","  if (this._paused) {","    this._paused = false;","","    if(previousState === true) {","      //Only start to emit data when it's in pause state","      this._emitData();","    }","  }","};","","FileReadStream.prototype.finish = function () {","  this.destroy();","};","","FileReadStream.prototype.destroy = function () {","  if (this._destroyed) {","    return;","  }","","  var self = this;","  this.readable = false;","","  function close(fd) {","    fs.close(fd || self._fd, function(err) {","      if (err) {","        self.emit('error', err);","      }","      else {","        self.emit('close');","      }","    });","    self._fd = null;","    self._destroyed = true;","  }","","  // when the stream is closed immediately after creating it","  if (!validator.isInt(this._fd)) {","    this.once('open', close);","    return;","  }","","  close();","};","","module.exports = FileReadStream;",""],"l":{"17":1,"18":1,"19":1,"20":1,"22":1,"23":1,"24":1,"26":1,"36":1,"37":0,"38":0,"40":0,"41":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"54":0,"55":0,"57":0,"58":0,"61":0,"64":1,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"76":0,"77":0,"85":1,"86":0,"87":0,"88":0,"91":0,"97":1,"98":0,"99":0,"101":0,"102":0,"109":1,"110":0,"111":0,"118":1,"119":0,"120":0,"121":0,"122":0,"124":0,"127":0,"128":0,"130":0,"131":0,"132":0,"133":0,"134":0,"137":0,"138":0,"139":0,"140":0,"142":0,"145":0,"151":0,"152":0,"153":0,"155":0,"157":0,"160":0,"161":0,"164":0,"167":0,"168":0,"169":0,"176":1,"177":0,"178":0,"179":0,"181":0,"182":0,"183":0,"185":0,"187":0,"195":1,"196":0,"202":1,"203":0,"204":0,"205":0,"207":0,"209":0,"214":1,"215":0,"218":1,"219":0,"220":0,"223":0,"224":0,"226":1,"227":0,"228":0,"229":0,"232":0,"235":0,"236":0,"240":0,"241":0,"242":0,"245":0,"248":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/streams/speedsummary.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/streams/speedsummary.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"SpeedSummary","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":29}}},"2":{"name":"toHumanReadableSize","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":40}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":43},"end":{"line":51,"column":67}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":44},"end":{"line":69,"column":58}}},"5":{"name":"(anonymous_5)","line":87,"loc":{"start":{"line":87,"column":41},"end":{"line":87,"column":65}}},"6":{"name":"(anonymous_6)","line":95,"loc":{"start":{"line":95,"column":34},"end":{"line":95,"column":58}}},"7":{"name":"(anonymous_7)","line":105,"loc":{"start":{"line":105,"column":43},"end":{"line":105,"column":91}}},"8":{"name":"(anonymous_8)","line":119,"loc":{"start":{"line":119,"column":45},"end":{"line":119,"column":56}}},"9":{"name":"(anonymous_9)","line":136,"loc":{"start":{"line":136,"column":35},"end":{"line":136,"column":49}}},"10":{"name":"(anonymous_10)","line":145,"loc":{"start":{"line":145,"column":38},"end":{"line":145,"column":61}}},"11":{"name":"(anonymous_11)","line":168,"loc":{"start":{"line":168,"column":50},"end":{"line":168,"column":65}}},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":9},"end":{"line":170,"column":35}}},"13":{"name":"(anonymous_13)","line":186,"loc":{"start":{"line":186,"column":38},"end":{"line":186,"column":62}}},"14":{"name":"(anonymous_14)","line":197,"loc":{"start":{"line":197,"column":41},"end":{"line":197,"column":65}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":40}},"3":{"start":{"line":23,"column":0},"end":{"line":33,"column":1}},"4":{"start":{"line":24,"column":2},"end":{"line":24,"column":19}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":31}},"6":{"start":{"line":26,"column":2},"end":{"line":26,"column":33}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":54}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":28}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":59}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":26}},"11":{"start":{"line":31,"column":2},"end":{"line":31,"column":29}},"12":{"start":{"line":32,"column":2},"end":{"line":32,"column":24}},"13":{"start":{"line":38,"column":0},"end":{"line":46,"column":1}},"14":{"start":{"line":39,"column":2},"end":{"line":39,"column":24}},"15":{"start":{"line":39,"column":12},"end":{"line":39,"column":24}},"16":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"17":{"start":{"line":41,"column":4},"end":{"line":41,"column":12}},"18":{"start":{"line":43,"column":2},"end":{"line":43,"column":68}},"19":{"start":{"line":44,"column":2},"end":{"line":44,"column":55}},"20":{"start":{"line":45,"column":2},"end":{"line":45,"column":58}},"21":{"start":{"line":51,"column":0},"end":{"line":63,"column":2}},"22":{"start":{"line":52,"column":2},"end":{"line":52,"column":23}},"23":{"start":{"line":53,"column":2},"end":{"line":53,"column":61}},"24":{"start":{"line":54,"column":2},"end":{"line":61,"column":3}},"25":{"start":{"line":55,"column":4},"end":{"line":55,"column":39}},"26":{"start":{"line":56,"column":4},"end":{"line":56,"column":18}},"27":{"start":{"line":57,"column":4},"end":{"line":57,"column":37}},"28":{"start":{"line":58,"column":4},"end":{"line":58,"column":18}},"29":{"start":{"line":59,"column":4},"end":{"line":59,"column":32}},"30":{"start":{"line":60,"column":4},"end":{"line":60,"column":143}},"31":{"start":{"line":62,"column":2},"end":{"line":62,"column":17}},"32":{"start":{"line":69,"column":0},"end":{"line":82,"column":2}},"33":{"start":{"line":70,"column":2},"end":{"line":81,"column":3}},"34":{"start":{"line":71,"column":4},"end":{"line":73,"column":5}},"35":{"start":{"line":72,"column":6},"end":{"line":72,"column":14}},"36":{"start":{"line":74,"column":4},"end":{"line":74,"column":67}},"37":{"start":{"line":76,"column":4},"end":{"line":80,"column":5}},"38":{"start":{"line":77,"column":6},"end":{"line":77,"column":17}},"39":{"start":{"line":79,"column":6},"end":{"line":79,"column":15}},"40":{"start":{"line":87,"column":0},"end":{"line":90,"column":2}},"41":{"start":{"line":88,"column":2},"end":{"line":88,"column":50}},"42":{"start":{"line":89,"column":2},"end":{"line":89,"column":79}},"43":{"start":{"line":95,"column":0},"end":{"line":100,"column":2}},"44":{"start":{"line":96,"column":2},"end":{"line":96,"column":29}},"45":{"start":{"line":97,"column":2},"end":{"line":97,"column":50}},"46":{"start":{"line":98,"column":2},"end":{"line":98,"column":65}},"47":{"start":{"line":99,"column":2},"end":{"line":99,"column":83}},"48":{"start":{"line":105,"column":0},"end":{"line":114,"column":2}},"49":{"start":{"line":106,"column":2},"end":{"line":108,"column":3}},"50":{"start":{"line":107,"column":4},"end":{"line":107,"column":20}},"51":{"start":{"line":109,"column":2},"end":{"line":109,"column":38}},"52":{"start":{"line":110,"column":2},"end":{"line":112,"column":3}},"53":{"start":{"line":111,"column":4},"end":{"line":111,"column":46}},"54":{"start":{"line":113,"column":2},"end":{"line":113,"column":15}},"55":{"start":{"line":119,"column":0},"end":{"line":131,"column":2}},"56":{"start":{"line":120,"column":2},"end":{"line":120,"column":23}},"57":{"start":{"line":121,"column":2},"end":{"line":121,"column":20}},"58":{"start":{"line":122,"column":2},"end":{"line":129,"column":3}},"59":{"start":{"line":123,"column":4},"end":{"line":123,"column":39}},"60":{"start":{"line":123,"column":30},"end":{"line":123,"column":39}},"61":{"start":{"line":124,"column":4},"end":{"line":128,"column":5}},"62":{"start":{"line":125,"column":6},"end":{"line":125,"column":45}},"63":{"start":{"line":127,"column":6},"end":{"line":127,"column":34}},"64":{"start":{"line":130,"column":2},"end":{"line":130,"column":36}},"65":{"start":{"line":136,"column":0},"end":{"line":140,"column":2}},"66":{"start":{"line":137,"column":2},"end":{"line":137,"column":27}},"67":{"start":{"line":138,"column":2},"end":{"line":138,"column":25}},"68":{"start":{"line":139,"column":2},"end":{"line":139,"column":27}},"69":{"start":{"line":145,"column":0},"end":{"line":163,"column":2}},"70":{"start":{"line":146,"column":2},"end":{"line":146,"column":23}},"71":{"start":{"line":147,"column":2},"end":{"line":147,"column":53}},"72":{"start":{"line":148,"column":2},"end":{"line":162,"column":3}},"73":{"start":{"line":149,"column":4},"end":{"line":149,"column":41}},"74":{"start":{"line":150,"column":4},"end":{"line":158,"column":5}},"75":{"start":{"line":151,"column":6},"end":{"line":151,"column":28}},"76":{"start":{"line":152,"column":6},"end":{"line":152,"column":32}},"77":{"start":{"line":153,"column":11},"end":{"line":158,"column":5}},"78":{"start":{"line":154,"column":6},"end":{"line":154,"column":33}},"79":{"start":{"line":156,"column":6},"end":{"line":156,"column":82}},"80":{"start":{"line":157,"column":6},"end":{"line":157,"column":38}},"81":{"start":{"line":160,"column":4},"end":{"line":160,"column":50}},"82":{"start":{"line":161,"column":4},"end":{"line":161,"column":51}},"83":{"start":{"line":168,"column":0},"end":{"line":181,"column":2}},"84":{"start":{"line":169,"column":2},"end":{"line":169,"column":18}},"85":{"start":{"line":170,"column":2},"end":{"line":180,"column":4}},"86":{"start":{"line":171,"column":4},"end":{"line":179,"column":5}},"87":{"start":{"line":172,"column":6},"end":{"line":172,"column":23}},"88":{"start":{"line":173,"column":6},"end":{"line":177,"column":7}},"89":{"start":{"line":174,"column":8},"end":{"line":174,"column":24}},"90":{"start":{"line":176,"column":8},"end":{"line":176,"column":28}},"91":{"start":{"line":178,"column":6},"end":{"line":178,"column":31}},"92":{"start":{"line":186,"column":0},"end":{"line":192,"column":2}},"93":{"start":{"line":187,"column":2},"end":{"line":191,"column":3}},"94":{"start":{"line":188,"column":4},"end":{"line":188,"column":47}},"95":{"start":{"line":190,"column":4},"end":{"line":190,"column":26}},"96":{"start":{"line":197,"column":0},"end":{"line":203,"column":2}},"97":{"start":{"line":198,"column":2},"end":{"line":202,"column":3}},"98":{"start":{"line":199,"column":4},"end":{"line":199,"column":50}},"99":{"start":{"line":201,"column":4},"end":{"line":201,"column":29}},"100":{"start":{"line":205,"column":0},"end":{"line":205,"column":30}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"3":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":10}},{"start":{"line":40,"column":14},"end":{"line":40,"column":22}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"5":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"6":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"7":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":7},"end":{"line":71,"column":11}},{"start":{"line":71,"column":15},"end":{"line":71,"column":23}}]},"8":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"9":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"10":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":2},"end":{"line":110,"column":2}},{"start":{"line":110,"column":2},"end":{"line":110,"column":2}}]},"11":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":123,"column":4}},{"start":{"line":123,"column":4},"end":{"line":123,"column":4}}]},"12":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]},"13":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":2}},{"start":{"line":148,"column":2},"end":{"line":148,"column":2}}]},"14":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":4},"end":{"line":150,"column":4}},{"start":{"line":150,"column":4},"end":{"line":150,"column":4}}]},"15":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":11},"end":{"line":153,"column":11}},{"start":{"line":153,"column":11},"end":{"line":153,"column":11}}]},"16":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]},"17":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":6},"end":{"line":173,"column":6}},{"start":{"line":173,"column":6},"end":{"line":173,"column":6}}]},"18":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":10},"end":{"line":173,"column":19}},{"start":{"line":173,"column":23},"end":{"line":173,"column":37}},{"start":{"line":173,"column":42},"end":{"line":173,"column":57}}]},"19":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":2},"end":{"line":187,"column":2}},{"start":{"line":187,"column":2},"end":{"line":187,"column":2}}]},"20":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":2},"end":{"line":198,"column":2}},{"start":{"line":198,"column":2},"end":{"line":198,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var util = require('util');","var azureutil = require('../util/util');","","/**","* Blob upload/download speed summary","*/","function SpeedSummary (name) {","  this.name = name;","  this._startTime = Date.now();","  this._timeWindowInSeconds = 10;","  this._timeWindow = this._timeWindowInSeconds * 1000;","  this._totalWindowSize = 0;","  this._speedTracks = new Array(this._timeWindowInSeconds);","  this._speedTrackPtr = 0;","  this.totalSize = undefined;","  this.completeSize = 0;","}","","/**","* Convert the size to human readable size","*/","function toHumanReadableSize(size, len) {","  if(!size) return '0B';","  if (!len || len <= 0) {","    len = 2;","  }","  var units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];","  var i = Math.floor( Math.log(size) / Math.log(1024));","  return (size/Math.pow(1024, i)).toFixed(len) + units[i];","}","","/**","* Get running seconds","*/","SpeedSummary.prototype.getElapsedSeconds = function(humanReadable) {","  var now = Date.now();","  var seconds = parseInt((now - this._startTime) / 1000, 10);","  if (humanReadable !== false) {","    var s = parseInt(seconds % 60, 10);","    seconds /= 60;","    var m = Math.floor(seconds % 60);","    seconds /= 60;","    var h = Math.floor(seconds);","    seconds = util.format('%s:%s:%s', azureutil.zeroPaddingString(h, 2), azureutil.zeroPaddingString(m, 2), azureutil.zeroPaddingString(s, 2));","  }","  return seconds;","};","","/**","* Get complete percentage","* @param {int} len The number of digits after the decimal point.","*/","SpeedSummary.prototype.getCompletePercent = function(len) {","  if (this.totalSize) {","    if(!len || len <= 0) {","      len = 1;","    }","    return (this.completeSize * 100 / this.totalSize).toFixed(len);","  } else {","    if(this.totalSize === 0) {","      return 100;","    } else {","      return 0;","    }","  }","};","","/**","* Get average upload/download speed","*/","SpeedSummary.prototype.getAverageSpeed = function(humanReadable) {","  var elapsedTime = this.getElapsedSeconds(false);","  return this._getInternalSpeed(this.completeSize, elapsedTime, humanReadable);","};","","/**","* Get instant speed","*/","SpeedSummary.prototype.getSpeed = function(humanReadable) {","  this._refreshSpeedTracks();","  var elapsedTime = this.getElapsedSeconds(false);","  elapsedTime = Math.min(elapsedTime, this._timeWindowInSeconds);","  return this._getInternalSpeed(this._totalWindowSize, elapsedTime, humanReadable);","};","","/**","* Get internal speed","*/","SpeedSummary.prototype._getInternalSpeed = function(totalSize, elapsedTime, humanReadable) {","  if (elapsedTime <= 0) {","    elapsedTime = 1;","  }","  var speed = totalSize / elapsedTime;","  if(humanReadable !== false) {","    speed = toHumanReadableSize(speed) + '/s';","  }","  return speed;","};","","/**","* Refresh speed tracks","*/","SpeedSummary.prototype._refreshSpeedTracks = function() {","  var now = Date.now();","  var totalSize = 0;","  for(var i = 0; i < this._speedTracks.length; i++) {","    if(!this._speedTracks[i]) continue;","    if(now - this._speedTracks[i].timeStamp <= this._timeWindow) {","      totalSize += this._speedTracks[i].size;","    } else {","      this._speedTracks[i] = null;","    }","  }","  this._totalWindowSize = totalSize;","};","","/**","* Increment the complete data size","*/","SpeedSummary.prototype.increment = function(len) {","  this.completeSize += len;","  this._recordSpeed(len);","  return this.completeSize;","};","","/**","* record complete size into speed tracks","*/","SpeedSummary.prototype._recordSpeed = function(completeSize) {","  var now = Date.now();","  var track = this._speedTracks[this._speedTrackPtr];","  if(track) {","    var timeDiff = now - track.timeStamp;","    if(timeDiff > this._timeWindow) {","      track.timeStamp = now;","      track.size = completeSize;","    } else if(timeDiff <= 1000) { //1 seconds","      track.size += completeSize;","    } else {","      this._speedTrackPtr = (this._speedTrackPtr + 1) % this._timeWindowInSeconds;","      this._recordSpeed(completeSize);","    }","  } else {","    track = {timeStamp : now, size: completeSize};","    this._speedTracks[this._speedTrackPtr] = track;","  }","};","","/**","* Get auto increment function","*/","SpeedSummary.prototype.getAutoIncrementFunction = function(size) {","  var self = this;","  return function(error, retValue) {","    if(!error) {","      var doneSize = 0;","      if((!retValue && retValue !== 0) || isNaN(retValue)) {","        doneSize = size;","      } else {","        doneSize = retValue;","      }","      self.increment(doneSize);","    }","  };","};","","/**","* Get total size","*/","SpeedSummary.prototype.getTotalSize = function(humanReadable) {","  if (humanReadable !== false) {","    return toHumanReadableSize(this.totalSize);","  } else {","    return this.totalSize;","  }","};","","/**","* Get completed data size","*/","SpeedSummary.prototype.getCompleteSize = function(humanReadable) {","  if (humanReadable !== false) {","    return toHumanReadableSize(this.completeSize);","  } else {","    return this.completeSize;","  }","};","","module.exports = SpeedSummary;",""],"l":{"17":1,"18":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"38":1,"39":0,"40":0,"41":0,"43":0,"44":0,"45":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"62":0,"69":1,"70":0,"71":0,"72":0,"74":0,"76":0,"77":0,"79":0,"87":1,"88":0,"89":0,"95":1,"96":0,"97":0,"98":0,"99":0,"105":1,"106":0,"107":0,"109":0,"110":0,"111":0,"113":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"127":0,"130":0,"136":1,"137":0,"138":0,"139":0,"145":1,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"156":0,"157":0,"160":0,"161":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"176":0,"178":0,"186":1,"187":0,"188":0,"190":0,"197":1,"198":0,"199":0,"201":0,"205":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/streams/readablefs.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/streams/readablefs.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":27},"end":{"line":26,"column":51}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":45}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":23}},"3":{"start":{"line":26,"column":0},"end":{"line":32,"column":2}},"4":{"start":{"line":27,"column":2},"end":{"line":27,"column":50}},"5":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"6":{"start":{"line":29,"column":4},"end":{"line":29,"column":31}},"7":{"start":{"line":31,"column":2},"end":{"line":31,"column":16}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var rs = require('readable-stream').Readable;","var fs = require('fs');","","/*","* As far as streams support goes, we can get the node 0.10 stream API in node 0.8. ","* Use the readable-stream module (https://www.npmjs.org/package/readable-stream) which is ","* essentially a copy of the stream modules from core node 0.10 and it just works on both 0.8 and 0.10. ","*/","","exports.createReadStream = function(path, options) {","  var stream = fs.createReadStream(path, options);","  if (/^v0\\.8\\./.test(process.version)) {","    stream = rs().wrap(stream);","  }","  return stream;","};"],"l":{"17":1,"18":1,"26":1,"27":0,"28":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/date.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/date.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":29,"loc":{"start":{"line":29,"column":22},"end":{"line":29,"column":38}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":23},"end":{"line":41,"column":40}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":25},"end":{"line":53,"column":44}}},"4":{"name":"(anonymous_4)","line":65,"loc":{"start":{"line":65,"column":25},"end":{"line":65,"column":44}}}},"statementMap":{"1":{"start":{"line":29,"column":0},"end":{"line":33,"column":2}},"2":{"start":{"line":30,"column":2},"end":{"line":30,"column":24}},"3":{"start":{"line":31,"column":2},"end":{"line":31,"column":38}},"4":{"start":{"line":32,"column":2},"end":{"line":32,"column":14}},"5":{"start":{"line":41,"column":0},"end":{"line":45,"column":2}},"6":{"start":{"line":42,"column":2},"end":{"line":42,"column":24}},"7":{"start":{"line":43,"column":2},"end":{"line":43,"column":41}},"8":{"start":{"line":44,"column":2},"end":{"line":44,"column":14}},"9":{"start":{"line":53,"column":0},"end":{"line":57,"column":2}},"10":{"start":{"line":54,"column":2},"end":{"line":54,"column":24}},"11":{"start":{"line":55,"column":2},"end":{"line":55,"column":47}},"12":{"start":{"line":56,"column":2},"end":{"line":56,"column":14}},"13":{"start":{"line":65,"column":0},"end":{"line":69,"column":2}},"14":{"start":{"line":66,"column":2},"end":{"line":66,"column":24}},"15":{"start":{"line":67,"column":2},"end":{"line":67,"column":47}},"16":{"start":{"line":68,"column":2},"end":{"line":68,"column":14}}},"branchMap":{},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","/**","* Date/time related helper functions","* @module date","* ","*/","","/**","* Generates a Date object which is in the given days from now.","* ","* @param {int} days The days timespan.","* @return {Date}","*/","exports.daysFromNow = function (days) {","  var date = new Date();","  date.setDate(date.getDate() + days);","  return date;","};","","/**","* Generates a Date object which is in the given hours from now.","*","* @param {int} hours The hours timespan.","* @return {Date}","*/","exports.hoursFromNow = function (hours) {","  var date = new Date();","  date.setHours(date.getHours() + hours);","  return date;","};","","/**","* Generates a Date object which is in the given minutes from now.","*","* @param {int} minutes The minutes timespan.","* @return {Date}","*/","exports.minutesFromNow = function (minutes) {","  var date = new Date();","  date.setMinutes(date.getMinutes() + minutes);","  return date;","};","","/**","* Generates a Date object which is in the given seconds from now.","*","* @param {int} seconds The seconds timespan.","* @return {Date}","*/","exports.secondsFromNow = function (seconds) {","  var date = new Date();","  date.setSeconds(date.getSeconds() + seconds);","  return date;","};"],"l":{"29":1,"30":0,"31":0,"32":0,"41":1,"42":0,"43":0,"44":0,"53":1,"54":0,"55":0,"56":0,"65":1,"66":0,"67":0,"68":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/accesscondition.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/util/accesscondition.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":33,"loc":{"start":{"line":33,"column":33},"end":{"line":33,"column":45}}},"2":{"name":"(anonymous_2)","line":44,"loc":{"start":{"line":44,"column":39},"end":{"line":44,"column":51}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":36},"end":{"line":57,"column":48}}},"4":{"name":"(anonymous_4)","line":72,"loc":{"start":{"line":72,"column":39},"end":{"line":72,"column":55}}},"5":{"name":"(anonymous_5)","line":87,"loc":{"start":{"line":87,"column":35},"end":{"line":87,"column":51}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":43},"end":{"line":102,"column":59}}},"7":{"name":"(anonymous_7)","line":117,"loc":{"start":{"line":117,"column":46},"end":{"line":117,"column":62}}},"8":{"name":"(anonymous_8)","line":132,"loc":{"start":{"line":132,"column":47},"end":{"line":132,"column":73}}},"9":{"name":"(anonymous_9)","line":147,"loc":{"start":{"line":147,"column":50},"end":{"line":147,"column":76}}},"10":{"name":"(anonymous_10)","line":162,"loc":{"start":{"line":162,"column":57},"end":{"line":162,"column":83}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":26,"column":25}},"2":{"start":{"line":33,"column":0},"end":{"line":35,"column":2}},"3":{"start":{"line":34,"column":2},"end":{"line":34,"column":12}},"4":{"start":{"line":44,"column":0},"end":{"line":48,"column":2}},"5":{"start":{"line":45,"column":2},"end":{"line":45,"column":27}},"6":{"start":{"line":46,"column":2},"end":{"line":46,"column":37}},"7":{"start":{"line":47,"column":2},"end":{"line":47,"column":25}},"8":{"start":{"line":57,"column":0},"end":{"line":61,"column":2}},"9":{"start":{"line":58,"column":2},"end":{"line":58,"column":27}},"10":{"start":{"line":59,"column":2},"end":{"line":59,"column":34}},"11":{"start":{"line":60,"column":2},"end":{"line":60,"column":25}},"12":{"start":{"line":72,"column":0},"end":{"line":76,"column":2}},"13":{"start":{"line":73,"column":2},"end":{"line":73,"column":27}},"14":{"start":{"line":74,"column":2},"end":{"line":74,"column":38}},"15":{"start":{"line":75,"column":2},"end":{"line":75,"column":25}},"16":{"start":{"line":87,"column":0},"end":{"line":91,"column":2}},"17":{"start":{"line":88,"column":2},"end":{"line":88,"column":27}},"18":{"start":{"line":89,"column":2},"end":{"line":89,"column":35}},"19":{"start":{"line":90,"column":2},"end":{"line":90,"column":25}},"20":{"start":{"line":102,"column":0},"end":{"line":106,"column":2}},"21":{"start":{"line":103,"column":2},"end":{"line":103,"column":27}},"22":{"start":{"line":104,"column":2},"end":{"line":104,"column":42}},"23":{"start":{"line":105,"column":2},"end":{"line":105,"column":25}},"24":{"start":{"line":117,"column":0},"end":{"line":121,"column":2}},"25":{"start":{"line":118,"column":2},"end":{"line":118,"column":27}},"26":{"start":{"line":119,"column":2},"end":{"line":119,"column":45}},"27":{"start":{"line":120,"column":2},"end":{"line":120,"column":25}},"28":{"start":{"line":132,"column":0},"end":{"line":136,"column":2}},"29":{"start":{"line":133,"column":2},"end":{"line":133,"column":27}},"30":{"start":{"line":134,"column":2},"end":{"line":134,"column":55}},"31":{"start":{"line":135,"column":2},"end":{"line":135,"column":25}},"32":{"start":{"line":147,"column":0},"end":{"line":151,"column":2}},"33":{"start":{"line":148,"column":2},"end":{"line":148,"column":27}},"34":{"start":{"line":149,"column":2},"end":{"line":149,"column":58}},"35":{"start":{"line":150,"column":2},"end":{"line":150,"column":25}},"36":{"start":{"line":162,"column":0},"end":{"line":166,"column":2}},"37":{"start":{"line":163,"column":2},"end":{"line":163,"column":27}},"38":{"start":{"line":164,"column":2},"end":{"line":164,"column":65}},"39":{"start":{"line":165,"column":2},"end":{"line":165,"column":25}}},"branchMap":{},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Expose 'AccessCondition'.","","/**","* Defines constants, enums, and utility functions for use with storage access condition.","* @namespace","*/","","'use strict';","","exports = module.exports;","","/**","* Constructs an empty access condition.","*","* @return {object} An empty AccessCondition object","*/","exports.generateEmptyCondition = function () {","  return {};","};","","/**","* Constructs an access condition such that an operation will be performed only if the resource does not exist on the service","*","* Setting this access condition modifies the request to include the HTTP If-None-Match conditional header","","* @return {AccessConditions} An AccessCondition object that represents a condition that checks for nonexistence","*/","exports.generateIfNotExistsCondition = function () {","  var accessCondition = {};","  accessCondition.EtagNonMatch = '*';","  return accessCondition;","};","","/**","* Constructs an access condition such that an operation will be performed only if the resource exists on the service","*","* Setting this access condition modifies the request to include the HTTP If-Match conditional header","","* @return {AccessConditions} An AccessCondition object that represents a condition that checks for existence","*/","exports.generateIfExistsCondition = function () {","  var accessCondition = {};","  accessCondition.EtagMatch = '*';","  return accessCondition;","};","","/**","* Constructs an access condition such that an operation will be performed only if the resource's ETag value ","* does not match the specified ETag value","*","* Setting this access condition modifies the request to include the HTTP If-None-Match conditional header","*","* @param  {string} etag                    The ETag value to check against the resource's ETag","* @return {AccessConditions}               An AccessCondition object that represents the If-None-Match condition","*/","exports.generateIfNoneMatchCondition = function (etag) {","  var accessCondition = {};","  accessCondition.EtagNonMatch = etag;","  return accessCondition;","};","","/**","* Constructs an access condition such that an operation will be performed only if the resource's ETag value","* matches the specified ETag value","*","* Setting this access condition modifies the request to include the HTTP If-Match conditional header","*","* @param  {string} etag                    The ETag value to check against the resource's ETag","* @return {AccessConditions}               An AccessCondition object that represents the If-Match condition","*/","exports.generateIfMatchCondition = function (etag) {","  var accessCondition = {};","  accessCondition.EtagMatch = etag;","  return accessCondition;","};","","/**","* Constructs an access condition such that an operation will be performed only if the resource has been","* modified since the specified time","*","* Setting this access condition modifies the request to include the HTTP If-Modified-Since conditional header","*","* @param  {Date|string}  time              A date object specifying the time since which the resource must have been modified","* @return {AccessConditions}               An AccessCondition object that represents the If-Modified-Since condition","*/","exports.generateIfModifiedSinceCondition = function (time) {","  var accessCondition = {};","  accessCondition.DateModifedSince = time;","  return accessCondition;","};","","/**","* Constructs an access condition such that an operation will be performed only if the resource has not been","* modified since the specified time","*","* Setting this access condition modifies the request to include the HTTP If-Unmodified-Since conditional header","*","* @param  {Date|string}    time            A date object specifying the time since which the resource must have not been modified","* @return {AccessConditions}               An AccessCondition object that represents the If-Unmodified-Since condition","*/","exports.generateIfNotModifiedSinceCondition = function (time) {","  var accessCondition = {};","  accessCondition.DateUnModifiedSince = time;","  return accessCondition;","};","","/**","* Constructs an access condition such that an operation will be performed only if the resource's sequence number","* is equal to the specified value","*","* Setting this access condition modifies the request to include the HTTP x-ms-if-sequence-number-eq conditional header","*","* @param  {Number|string}    sequenceNumber    A date object specifying the time since which the resource must have not been modified","* @return {AccessConditions}                   An AccessCondition object that represents the If-Unmodified-Since condition","*/","exports.generateSequenceNumberEqualCondition = function (sequenceNumber) {","  var accessCondition = {};","  accessCondition.SequenceNumberEqual = sequenceNumber;","  return accessCondition;","};","","/**","* Constructs an access condition such that an operation will be performed only if the resource's sequence number","* is less than the specified value","*","* Setting this access condition modifies the request to include the HTTP x-ms-if-sequence-number-lt conditional header","*","* @param  {Number|string}    sequenceNumber    A date object specifying the time since which the resource must have not been modified","* @return {AccessConditions}                   An AccessCondition object that represents the If-Unmodified-Since condition","*/","exports.generateSequenceNumberLessThanCondition = function (sequenceNumber) {","  var accessCondition = {};","  accessCondition.SequenceNumberLessThan = sequenceNumber;","  return accessCondition;","};","","/**","* Constructs an access condition such that an operation will be performed only if the resource's sequence number","* is less than or equal to the specified value","*","* Setting this access condition modifies the request to include the HTTP x-ms-if-sequence-number-le conditional header","*","* @param  {Number|string}    sequenceNumber    A date object specifying the time since which the resource must have not been modified","* @return {AccessConditions}                   An AccessCondition object that represents the If-Unmodified-Since condition","*/","exports.generateSequenceNumberLessThanOrEqualCondition = function (sequenceNumber) {","  var accessCondition = {};","  accessCondition.SequenceNumberLessThanOrEqual = sequenceNumber;","  return accessCondition;","};"],"l":{"26":1,"33":1,"34":0,"44":1,"45":0,"46":0,"47":0,"57":1,"58":0,"59":0,"60":0,"72":1,"73":0,"74":0,"75":0,"87":1,"88":0,"89":0,"90":0,"102":1,"103":0,"104":0,"105":0,"117":1,"118":0,"119":0,"120":0,"132":1,"133":0,"134":0,"135":0,"147":1,"148":0,"149":0,"150":0,"162":1,"163":0,"164":0,"165":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/internal/sharedkeytable.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/internal/sharedkeytable.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"SharedKeyTable","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":75}}},"2":{"name":"(anonymous_2)","line":49,"loc":{"start":{"line":49,"column":39},"end":{"line":49,"column":72}}},"3":{"name":"(anonymous_3)","line":50,"loc":{"start":{"line":50,"column":25},"end":{"line":50,"column":42}}},"4":{"name":"(anonymous_4)","line":76,"loc":{"start":{"line":76,"column":53},"end":{"line":76,"column":76}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":54}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":38}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":33}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":48}},"7":{"start":{"line":24,"column":0},"end":{"line":24,"column":58}},"8":{"start":{"line":34,"column":0},"end":{"line":39,"column":1}},"9":{"start":{"line":35,"column":2},"end":{"line":38,"column":21}},"10":{"start":{"line":41,"column":0},"end":{"line":41,"column":41}},"11":{"start":{"line":49,"column":0},"end":{"line":69,"column":2}},"12":{"start":{"line":50,"column":2},"end":{"line":56,"column":4}},"13":{"start":{"line":51,"column":4},"end":{"line":55,"column":5}},"14":{"start":{"line":52,"column":6},"end":{"line":52,"column":18}},"15":{"start":{"line":54,"column":6},"end":{"line":54,"column":26}},"16":{"start":{"line":58,"column":2},"end":{"line":63,"column":50}},"17":{"start":{"line":65,"column":2},"end":{"line":65,"column":49}},"18":{"start":{"line":67,"column":2},"end":{"line":67,"column":110}},"19":{"start":{"line":68,"column":2},"end":{"line":68,"column":17}},"20":{"start":{"line":76,"column":0},"end":{"line":90,"column":2}},"21":{"start":{"line":77,"column":2},"end":{"line":77,"column":17}},"22":{"start":{"line":78,"column":2},"end":{"line":80,"column":3}},"23":{"start":{"line":79,"column":4},"end":{"line":79,"column":28}},"24":{"start":{"line":82,"column":2},"end":{"line":82,"column":63}},"25":{"start":{"line":84,"column":2},"end":{"line":84,"column":50}},"26":{"start":{"line":85,"column":2},"end":{"line":87,"column":3}},"27":{"start":{"line":86,"column":4},"end":{"line":86,"column":85}},"28":{"start":{"line":89,"column":2},"end":{"line":89,"column":31}},"29":{"start":{"line":92,"column":0},"end":{"line":92,"column":32}}},"branchMap":{"1":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"2":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]},"3":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var util = require('util');","var azureCommon = require('./../../../common/common');","var SharedKey = azureCommon.SharedKey;","var azureutil = azureCommon.util;","var Constants = azureCommon.Constants;","var HeaderConstants = Constants.HeaderConstants;","var QueryStringConstants = Constants.QueryStringConstants;","","/**","* Creates a new SharedKeyTable object.","*","* @constructor","* @param {string} storageAccount    The storage account.","* @param {string} storageAccessKey  The storage account's access key.","* @param {bool}   usePathStyleUri   Boolean value indicating if the path, or the hostname, should include the storage account.","*/","function SharedKeyTable(storageAccount, storageAccessKey, usePathStyleUri) {","  SharedKeyTable['super_'].call(this,","    storageAccount,","    storageAccessKey,","    usePathStyleUri);","}","","util.inherits(SharedKeyTable, SharedKey);","","/**","* Signs a request with the Authentication header.","*","* @param {WebResource} The webresource to be signed.","* @param {function(error)}  callback  The callback function.","*/","SharedKeyTable.prototype.signRequest = function (webResource, callback) {","  var getvalueToAppend = function (value) {","    if (azureutil.objectIsNull(value)) {","      return '\\n';","    } else {","      return value + '\\n';","    }","  };","","  var stringToSign =","      webResource.method + '\\n' +","      getvalueToAppend(webResource.headers[HeaderConstants.CONTENT_MD5]) +","      getvalueToAppend(webResource.headers[HeaderConstants.CONTENT_TYPE]) +","      getvalueToAppend(webResource.headers[HeaderConstants.MS_DATE]) +","      this._getCanonicalizedResource(webResource);","","  var signature = this.signer.sign(stringToSign);","","  webResource.withHeader(HeaderConstants.AUTHORIZATION, 'SharedKey ' + this.storageAccount + ':' + signature);","  callback(null);","};","","/*","* Retrieves the webresource's canonicalized resource string.","* @param {WebResource} webResource The webresource to get the canonicalized resource string from.","* @return {string} The canonicalized resource string.","*/","SharedKeyTable.prototype._getCanonicalizedResource = function (webResource) {","  var path = '/';","  if (webResource.path) {","    path = webResource.path;","  }","","  var canonicalizedResource = '/' + this.storageAccount + path;","","  var queryStringValues = webResource.queryString;","  if (queryStringValues[QueryStringConstants.COMP]) {","    canonicalizedResource += '?comp=' + queryStringValues[QueryStringConstants.COMP];","  }","","  return canonicalizedResource;","};","","module.exports = SharedKeyTable;"],"l":{"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"34":1,"35":0,"41":1,"49":1,"50":0,"51":0,"52":0,"54":0,"58":0,"65":0,"67":0,"68":0,"76":1,"77":0,"78":0,"79":0,"82":0,"84":0,"85":0,"86":0,"89":0,"92":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/internal/requesthandler.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/internal/requesthandler.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"getEntityPath","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":57}}},"2":{"name":"(anonymous_2)","line":70,"loc":{"start":{"line":70,"column":37},"end":{"line":70,"column":92}}},"3":{"name":"(anonymous_3)","line":126,"loc":{"start":{"line":126,"column":40},"end":{"line":126,"column":81}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":54}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":42}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":24}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":38}},"6":{"start":{"line":22,"column":0},"end":{"line":22,"column":48}},"7":{"start":{"line":23,"column":0},"end":{"line":23,"column":46}},"8":{"start":{"line":24,"column":0},"end":{"line":24,"column":53}},"9":{"start":{"line":26,"column":0},"end":{"line":26,"column":25}},"10":{"start":{"line":36,"column":0},"end":{"line":49,"column":1}},"11":{"start":{"line":37,"column":2},"end":{"line":37,"column":29}},"12":{"start":{"line":39,"column":2},"end":{"line":46,"column":3}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":54}},"14":{"start":{"line":42,"column":4},"end":{"line":42,"column":42}},"15":{"start":{"line":43,"column":4},"end":{"line":43,"column":160}},"16":{"start":{"line":45,"column":4},"end":{"line":45,"column":46}},"17":{"start":{"line":48,"column":2},"end":{"line":48,"column":14}},"18":{"start":{"line":70,"column":0},"end":{"line":118,"column":2}},"19":{"start":{"line":71,"column":2},"end":{"line":71,"column":25}},"20":{"start":{"line":72,"column":2},"end":{"line":104,"column":3}},"21":{"start":{"line":73,"column":4},"end":{"line":74,"column":132}},"22":{"start":{"line":76,"column":4},"end":{"line":76,"column":21}},"23":{"start":{"line":77,"column":4},"end":{"line":77,"column":15}},"24":{"start":{"line":79,"column":4},"end":{"line":83,"column":5}},"25":{"start":{"line":80,"column":6},"end":{"line":80,"column":51}},"26":{"start":{"line":82,"column":6},"end":{"line":82,"column":86}},"27":{"start":{"line":85,"column":4},"end":{"line":89,"column":5}},"28":{"start":{"line":86,"column":6},"end":{"line":86,"column":39}},"29":{"start":{"line":88,"column":6},"end":{"line":88,"column":74}},"30":{"start":{"line":91,"column":4},"end":{"line":91,"column":58}},"31":{"start":{"line":93,"column":4},"end":{"line":103,"column":5}},"32":{"start":{"line":94,"column":6},"end":{"line":94,"column":42}},"33":{"start":{"line":95,"column":11},"end":{"line":103,"column":5}},"34":{"start":{"line":96,"column":6},"end":{"line":96,"column":44}},"35":{"start":{"line":97,"column":11},"end":{"line":103,"column":5}},"36":{"start":{"line":98,"column":6},"end":{"line":98,"column":42}},"37":{"start":{"line":99,"column":11},"end":{"line":103,"column":5}},"38":{"start":{"line":100,"column":6},"end":{"line":100,"column":42}},"39":{"start":{"line":102,"column":6},"end":{"line":102,"column":74}},"40":{"start":{"line":106,"column":2},"end":{"line":108,"column":3}},"41":{"start":{"line":107,"column":4},"end":{"line":107,"column":100}},"42":{"start":{"line":110,"column":2},"end":{"line":110,"column":33}},"43":{"start":{"line":111,"column":2},"end":{"line":113,"column":3}},"44":{"start":{"line":112,"column":4},"end":{"line":112,"column":74}},"45":{"start":{"line":115,"column":2},"end":{"line":115,"column":104}},"46":{"start":{"line":117,"column":2},"end":{"line":117,"column":21}},"47":{"start":{"line":126,"column":0},"end":{"line":135,"column":2}},"48":{"start":{"line":127,"column":2},"end":{"line":131,"column":3}},"49":{"start":{"line":128,"column":4},"end":{"line":130,"column":89}},"50":{"start":{"line":133,"column":2},"end":{"line":134,"column":103}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"2":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":40}},{"start":{"line":39,"column":44},"end":{"line":39,"column":72}}]},"3":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]},"4":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":64},"end":{"line":74,"column":94}},{"start":{"line":74,"column":97},"end":{"line":74,"column":130}}]},"5":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"6":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"7":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":4}},{"start":{"line":93,"column":4},"end":{"line":93,"column":4}}]},"8":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":11},"end":{"line":95,"column":11}},{"start":{"line":95,"column":11},"end":{"line":95,"column":11}}]},"9":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":15},"end":{"line":95,"column":60}},{"start":{"line":95,"column":64},"end":{"line":95,"column":119}}]},"10":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":11},"end":{"line":97,"column":11}},{"start":{"line":97,"column":11},"end":{"line":97,"column":11}}]},"11":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":15},"end":{"line":97,"column":62}},{"start":{"line":97,"column":66},"end":{"line":97,"column":123}}]},"12":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":11},"end":{"line":99,"column":11}},{"start":{"line":99,"column":11},"end":{"line":99,"column":11}}]},"13":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"14":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":6},"end":{"line":106,"column":52}},{"start":{"line":106,"column":56},"end":{"line":106,"column":103}},{"start":{"line":106,"column":107},"end":{"line":106,"column":152}}]},"15":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":53},"end":{"line":107,"column":91}},{"start":{"line":107,"column":95},"end":{"line":107,"column":98}}]},"16":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"17":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":54}},{"start":{"line":111,"column":58},"end":{"line":111,"column":106}}]},"18":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var util = require('util');","var azureCommon = require('./../../../common/common');","var WebResource = azureCommon.WebResource;","var SR = azureCommon.SR;","var Constants = azureCommon.Constants;","var HeaderConstants = Constants.HeaderConstants;","var TableConstants = Constants.TableConstants;","var entityResult = require('../models/entityresult');","","exports = module.exports;","","/**","* Retrieves the entity path from the table name and an entity descriptor.","* @ignore","*","* @param {string}   table         The table name.","* @param {object}   entity        The entity descriptor.","* @return {string} The entity path.","*/","function getEntityPath (tableName, partitionKey, rowKey) {","  var path = '/' + tableName;","","  if (typeof (partitionKey) === 'string' && typeof (rowKey) === 'string') {","    // Escape single quotes according to OData Protocol Specification: \"single quotes within string literals are represented as two consecutive single quotes\".","    partitionKey = partitionKey.replace(/'/g, '\\'\\'');","    rowKey = rowKey.replace(/'/g, '\\'\\'');","    path = path + '(PartitionKey=\\'' + encodeURIComponent(partitionKey.toString('utf8')) + '\\',RowKey=\\'' + encodeURIComponent(rowKey.toString('utf8')) + '\\')';","  } else {","    throw new Error(SR.INCORRECT_ENTITY_KEYS);","  }","","  return path;","}","","/**","* Constructs the web resource for a table operation.","*","* @param {string}             operation                           The operation to perform.","* @param {string}             table                               The table name.","* @param {object}             entityDescriptor                    The entity descriptor.","* @param {object}             [options]                           The create options or callback function.","* @param {boolean}            [options.checkEtag]                 Boolean value indicating weather the etag should be matched or not.","* @param {string}             [options.echoContent]               Whether or not to return the entity upon a successful insert. Default to false.","* @param {string}             [options.payloadFormat]             The payload format to use for the request.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @return {webResource}","*/","exports.constructEntityWebResource = function (operation, table, entityDescriptor, options) {","  var webResource = null;","  if (operation === TableConstants.Operations.INSERT) {","    webResource = WebResource.post(table)","      .withHeader(HeaderConstants.PREFER, options.echoContent ? HeaderConstants.PREFER_CONTENT : HeaderConstants.PREFER_NO_CONTENT);","  } else {","    var partitionKey;","    var rowKey;","","    if (typeof (entityDescriptor.PartitionKey) === 'string') {","      partitionKey = entityDescriptor.PartitionKey;","    } else {","      partitionKey = entityDescriptor.PartitionKey[TableConstants.ODATA_VALUE_MARKER];","    }","","    if (typeof (entityDescriptor.RowKey) === 'string') {","      rowKey = entityDescriptor.RowKey;","    } else {","      rowKey = entityDescriptor.RowKey[TableConstants.ODATA_VALUE_MARKER];","    }","","    var path = getEntityPath(table, partitionKey, rowKey);","","    if (operation === TableConstants.Operations.DELETE) {","      webResource = WebResource.del(path);","    } else if (operation === TableConstants.Operations.MERGE || operation === TableConstants.Operations.INSERT_OR_MERGE) {","      webResource = WebResource.merge(path);","    } else if (operation === TableConstants.Operations.REPLACE || operation === TableConstants.Operations.INSERT_OR_REPLACE) {","      webResource = WebResource.put(path);","    } else if (operation === TableConstants.Operations.RETRIEVE) {","      webResource = WebResource.get(path);","    } else {","      throw new Error(util.format(SR.INVALID_TABLE_OPERATION, operation));","    }","  }","","  if (operation === TableConstants.Operations.DELETE || operation === TableConstants.Operations.REPLACE || operation === TableConstants.Operations.MERGE) {","    webResource.withHeader(HeaderConstants.IF_MATCH, entityResult.getEtag(entityDescriptor) || '*');","  }","","  var entitySerializedDescriptor;","  if (!(operation === TableConstants.Operations.DELETE || operation === TableConstants.Operations.RETRIEVE)) {","    entitySerializedDescriptor = entityResult.serialize(entityDescriptor);","  }","","  exports.setTableRequestHeadersAndBody(webResource, entitySerializedDescriptor, options.payloadFormat);","","  return webResource;","};","","/**","* Sets the table request headers.","*","* @param {string}             webResource       The webResource to add headers to.","* @param {object}             [body]            The body of the request.","*/","exports.setTableRequestHeadersAndBody = function (webResource, body, acceptType) {","  if (body) {","    webResource.withHeader(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(body, 'utf8'))","      .withBody(body)","      .withHeader(HeaderConstants.CONTENT_TYPE, HeaderConstants.JSON_CONTENT_TYPE_VALUE);","  }","","  webResource.withHeader(HeaderConstants.ACCEPT, acceptType)","    .withHeader(HeaderConstants.MAX_DATA_SERVICE_VERSION, TableConstants.DEFAULT_DATA_SERVICE_VERSION);","};"],"l":{"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"26":1,"36":1,"37":0,"39":0,"41":0,"42":0,"43":0,"45":0,"48":0,"70":1,"71":0,"72":0,"73":0,"76":0,"77":0,"79":0,"80":0,"82":0,"85":0,"86":0,"88":0,"91":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"102":0,"106":0,"107":0,"110":0,"111":0,"112":0,"115":0,"117":0,"126":1,"127":0,"128":0,"133":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/models/entityresult.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/models/entityresult.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":20},"end":{"line":26,"column":38}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":21},"end":{"line":30,"column":98}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":22},"end":{"line":39,"column":99}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":18},"end":{"line":56,"column":36}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":54}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":38}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":46}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":48}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":55}},"6":{"start":{"line":24,"column":0},"end":{"line":24,"column":25}},"7":{"start":{"line":26,"column":0},"end":{"line":28,"column":2}},"8":{"start":{"line":27,"column":2},"end":{"line":27,"column":44}},"9":{"start":{"line":30,"column":0},"end":{"line":37,"column":2}},"10":{"start":{"line":31,"column":2},"end":{"line":31,"column":18}},"11":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"12":{"start":{"line":33,"column":4},"end":{"line":33,"column":116}},"13":{"start":{"line":36,"column":2},"end":{"line":36,"column":16}},"14":{"start":{"line":39,"column":0},"end":{"line":54,"column":2}},"15":{"start":{"line":40,"column":2},"end":{"line":40,"column":18}},"16":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"17":{"start":{"line":42,"column":4},"end":{"line":42,"column":120}},"18":{"start":{"line":45,"column":2},"end":{"line":51,"column":3}},"19":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"20":{"start":{"line":47,"column":6},"end":{"line":47,"column":56}},"21":{"start":{"line":50,"column":4},"end":{"line":50,"column":109}},"22":{"start":{"line":53,"column":2},"end":{"line":53,"column":16}},"23":{"start":{"line":56,"column":0},"end":{"line":62,"column":2}},"24":{"start":{"line":57,"column":2},"end":{"line":57,"column":11}},"25":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"26":{"start":{"line":59,"column":4},"end":{"line":59,"column":61}},"27":{"start":{"line":61,"column":2},"end":{"line":61,"column":14}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"2":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"3":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"4":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":22}},{"start":{"line":45,"column":26},"end":{"line":45,"column":78}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"7":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":12}},{"start":{"line":58,"column":16},"end":{"line":58,"column":60}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var azureCommon = require('./../../../common/common');","var Constants = azureCommon.Constants;","var TableConstants = Constants.TableConstants;","var HeaderConstants = Constants.HeaderConstants;","var odataHandler = require('../internal/odatahandler');","","exports = module.exports;","","exports.serialize = function (entity) {","  return odataHandler.serializeJson(entity);","};","","exports.parseQuery = function (response, autoResolveProperties, propertyResolver, entityResolver) {","  var result = {};","  if (response.body) {","    result = odataHandler.parseJsonEntities(response.body, autoResolveProperties, propertyResolver, entityResolver);","  }","","  return result;","};","","exports.parseEntity = function (response, autoResolveProperties, propertyResolver, entityResolver) {","  var result = {};","  if (response.body) {","    result = odataHandler.parseJsonSingleEntity(response.body, autoResolveProperties, propertyResolver, entityResolver);","  }","","  if (response.headers && response.headers[HeaderConstants.ETAG.toLowerCase()]) {","    if (!result[TableConstants.ODATA_METADATA_MARKER]) {","      result[TableConstants.ODATA_METADATA_MARKER] = {};","    }","","    result[TableConstants.ODATA_METADATA_MARKER].etag = response.headers[HeaderConstants.ETAG.toLowerCase()];","  }","","  return result;","};","","exports.getEtag = function (entity) {","  var etag;","  if (entity && entity[TableConstants.ODATA_METADATA_MARKER]) {","    etag = entity[TableConstants.ODATA_METADATA_MARKER].etag;","  } ","  return etag;","};"],"l":{"18":1,"19":1,"20":1,"21":1,"22":1,"24":1,"26":1,"27":0,"30":1,"31":0,"32":0,"33":0,"36":0,"39":1,"40":0,"41":0,"42":0,"45":0,"46":0,"47":0,"50":0,"53":0,"56":1,"57":0,"58":0,"59":0,"61":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/internal/odatahandler.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/internal/odatahandler.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":35,"loc":{"start":{"line":35,"column":24},"end":{"line":35,"column":42}}},"2":{"name":"normalizeEntityProperty","line":36,"loc":{"start":{"line":36,"column":2},"end":{"line":36,"column":45}}},"3":{"name":"(anonymous_3)","line":72,"loc":{"start":{"line":72,"column":17},"end":{"line":72,"column":38}}},"4":{"name":"(anonymous_4)","line":107,"loc":{"start":{"line":107,"column":26},"end":{"line":107,"column":46}}},"5":{"name":"(anonymous_5)","line":139,"loc":{"start":{"line":139,"column":28},"end":{"line":139,"column":105}}},"6":{"name":"(anonymous_6)","line":155,"loc":{"start":{"line":155,"column":32},"end":{"line":155,"column":109}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":54}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":33}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":24}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":38}},"6":{"start":{"line":24,"column":0},"end":{"line":24,"column":41}},"7":{"start":{"line":26,"column":0},"end":{"line":26,"column":64}},"8":{"start":{"line":27,"column":0},"end":{"line":27,"column":69}},"9":{"start":{"line":29,"column":0},"end":{"line":29,"column":25}},"10":{"start":{"line":35,"column":0},"end":{"line":86,"column":2}},"11":{"start":{"line":36,"column":2},"end":{"line":49,"column":3}},"12":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"13":{"start":{"line":38,"column":6},"end":{"line":38,"column":29}},"14":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"15":{"start":{"line":42,"column":6},"end":{"line":42,"column":22}},"16":{"start":{"line":45,"column":4},"end":{"line":45,"column":33}},"17":{"start":{"line":46,"column":4},"end":{"line":46,"column":97}},"18":{"start":{"line":48,"column":4},"end":{"line":48,"column":18}},"19":{"start":{"line":51,"column":2},"end":{"line":51,"column":18}},"20":{"start":{"line":52,"column":2},"end":{"line":70,"column":3}},"21":{"start":{"line":54,"column":4},"end":{"line":69,"column":5}},"22":{"start":{"line":55,"column":6},"end":{"line":55,"column":63}},"23":{"start":{"line":56,"column":6},"end":{"line":68,"column":7}},"24":{"start":{"line":57,"column":8},"end":{"line":57,"column":74}},"25":{"start":{"line":58,"column":8},"end":{"line":58,"column":72}},"26":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"27":{"start":{"line":61,"column":10},"end":{"line":61,"column":54}},"28":{"start":{"line":64,"column":8},"end":{"line":64,"column":66}},"29":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"30":{"start":{"line":66,"column":10},"end":{"line":66,"column":79}},"31":{"start":{"line":72,"column":2},"end":{"line":83,"column":4}},"32":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"33":{"start":{"line":74,"column":6},"end":{"line":74,"column":24}},"34":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"35":{"start":{"line":77,"column":6},"end":{"line":77,"column":25}},"36":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"37":{"start":{"line":80,"column":6},"end":{"line":80,"column":19}},"38":{"start":{"line":82,"column":4},"end":{"line":82,"column":17}},"39":{"start":{"line":85,"column":2},"end":{"line":85,"column":42}},"40":{"start":{"line":107,"column":0},"end":{"line":118,"column":2}},"41":{"start":{"line":108,"column":2},"end":{"line":108,"column":18}},"42":{"start":{"line":110,"column":2},"end":{"line":115,"column":3}},"43":{"start":{"line":111,"column":4},"end":{"line":114,"column":5}},"44":{"start":{"line":112,"column":6},"end":{"line":112,"column":47}},"45":{"start":{"line":113,"column":6},"end":{"line":113,"column":26}},"46":{"start":{"line":117,"column":2},"end":{"line":117,"column":16}},"47":{"start":{"line":139,"column":0},"end":{"line":153,"column":2}},"48":{"start":{"line":140,"column":2},"end":{"line":152,"column":3}},"49":{"start":{"line":141,"column":4},"end":{"line":141,"column":110}},"50":{"start":{"line":143,"column":4},"end":{"line":143,"column":20}},"51":{"start":{"line":145,"column":4},"end":{"line":149,"column":5}},"52":{"start":{"line":146,"column":6},"end":{"line":146,"column":40}},"53":{"start":{"line":147,"column":6},"end":{"line":147,"column":117}},"54":{"start":{"line":148,"column":6},"end":{"line":148,"column":26}},"55":{"start":{"line":151,"column":4},"end":{"line":151,"column":18}},"56":{"start":{"line":155,"column":0},"end":{"line":217,"column":2}},"57":{"start":{"line":156,"column":2},"end":{"line":156,"column":31}},"58":{"start":{"line":157,"column":2},"end":{"line":157,"column":106}},"59":{"start":{"line":158,"column":2},"end":{"line":158,"column":25}},"60":{"start":{"line":161,"column":2},"end":{"line":169,"column":3}},"61":{"start":{"line":162,"column":4},"end":{"line":168,"column":5}},"62":{"start":{"line":163,"column":6},"end":{"line":163,"column":92}},"63":{"start":{"line":164,"column":11},"end":{"line":168,"column":5}},"64":{"start":{"line":165,"column":6},"end":{"line":165,"column":129}},"65":{"start":{"line":167,"column":6},"end":{"line":167,"column":78}},"66":{"start":{"line":172,"column":2},"end":{"line":175,"column":3}},"67":{"start":{"line":173,"column":4},"end":{"line":173,"column":79}},"68":{"start":{"line":174,"column":4},"end":{"line":174,"column":67}},"69":{"start":{"line":177,"column":2},"end":{"line":177,"column":18}},"70":{"start":{"line":178,"column":2},"end":{"line":208,"column":3}},"71":{"start":{"line":179,"column":4},"end":{"line":207,"column":5}},"72":{"start":{"line":181,"column":6},"end":{"line":181,"column":71}},"73":{"start":{"line":182,"column":6},"end":{"line":182,"column":38}},"74":{"start":{"line":185,"column":6},"end":{"line":188,"column":7}},"75":{"start":{"line":187,"column":8},"end":{"line":187,"column":189}},"76":{"start":{"line":189,"column":6},"end":{"line":191,"column":7}},"77":{"start":{"line":190,"column":8},"end":{"line":190,"column":101}},"78":{"start":{"line":193,"column":6},"end":{"line":195,"column":7}},"79":{"start":{"line":194,"column":8},"end":{"line":194,"column":100}},"80":{"start":{"line":197,"column":6},"end":{"line":206,"column":7}},"81":{"start":{"line":198,"column":8},"end":{"line":198,"column":179}},"82":{"start":{"line":200,"column":8},"end":{"line":205,"column":9}},"83":{"start":{"line":202,"column":10},"end":{"line":202,"column":150}},"84":{"start":{"line":204,"column":10},"end":{"line":204,"column":20}},"85":{"start":{"line":210,"column":2},"end":{"line":210,"column":73}},"86":{"start":{"line":212,"column":2},"end":{"line":214,"column":3}},"87":{"start":{"line":213,"column":4},"end":{"line":213,"column":36}},"88":{"start":{"line":216,"column":2},"end":{"line":216,"column":16}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"2":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"3":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":36}},{"start":{"line":41,"column":40},"end":{"line":41,"column":108}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"5":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]},"6":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"7":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"8":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"9":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"10":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"11":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":2},"end":{"line":110,"column":2}},{"start":{"line":110,"column":2},"end":{"line":110,"column":2}}]},"12":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":2},"end":{"line":140,"column":2}},{"start":{"line":140,"column":2},"end":{"line":140,"column":2}}]},"13":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":4},"end":{"line":162,"column":4}},{"start":{"line":162,"column":4},"end":{"line":162,"column":4}}]},"14":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":11},"end":{"line":164,"column":11}},{"start":{"line":164,"column":11},"end":{"line":164,"column":11}}]},"15":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"16":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":6},"end":{"line":172,"column":25}},{"start":{"line":172,"column":29},"end":{"line":172,"column":58}}]},"17":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":179,"column":4}},{"start":{"line":179,"column":4},"end":{"line":179,"column":4}}]},"18":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":6},"end":{"line":185,"column":6}},{"start":{"line":185,"column":6},"end":{"line":185,"column":6}}]},"19":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":6},"end":{"line":189,"column":6}},{"start":{"line":189,"column":6},"end":{"line":189,"column":6}}]},"20":{"line":189,"type":"binary-expr","locations":[{"start":{"line":189,"column":10},"end":{"line":189,"column":29}},{"start":{"line":189,"column":33},"end":{"line":189,"column":54}}]},"21":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":6},"end":{"line":193,"column":6}},{"start":{"line":193,"column":6},"end":{"line":193,"column":6}}]},"22":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":8},"end":{"line":200,"column":8}},{"start":{"line":200,"column":8},"end":{"line":200,"column":8}}]},"23":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":2},"end":{"line":212,"column":2}},{"start":{"line":212,"column":2},"end":{"line":212,"column":2}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var util = require('util');","","var azureCommon = require('./../../../common/common');","var azureutil = azureCommon.util;","var SR = azureCommon.SR;","var Constants = azureCommon.Constants;","var edmHandler = require('./edmhandler');","","var prefixLength = Constants.TableConstants.ODATA_PREFIX.length;","var suffixLength = Constants.TableConstants.ODATA_TYPE_SUFFIX.length;","","exports = module.exports;","","/* Serialize an entity to an Odata (Json based) payload","* Input must be in the following format:","* { stringValue: { '$': 'Edm.String', '_': 'my string' }, myInt: { '$': 'Edm.Int32', '_': 3 } }","*/","exports.serializeJson = function (entity) {","  function normalizeEntityProperty(property) {","    if(azureutil.objectIsNull(property)) {","      return { _: property };","    }","","    if (typeof property === 'object' && property.hasOwnProperty(Constants.TableConstants.ODATA_VALUE_MARKER)) {","      return property;","    }","","    var result = { _: property };","    result[Constants.TableConstants.ODATA_TYPE_MARKER] = edmHandler.propertyType(property, true);","","    return result;","  }","","  var result = {};","  for (var propName in entity) {","    // ignore if .metadata or null or undefined","    if (propName !== Constants.TableConstants.ODATA_METADATA_MARKER) {","      var property = normalizeEntityProperty(entity[propName]);","      if (!azureutil.objectIsNull(property[Constants.TableConstants.ODATA_VALUE_MARKER])) {","        var value = property[Constants.TableConstants.ODATA_VALUE_MARKER];","        var type = property[Constants.TableConstants.ODATA_TYPE_MARKER];","","        if (type === undefined) {","          type = edmHandler.propertyType(value, true);","        }","","        result[propName] = edmHandler.serializeValue(type, value);","        if (edmHandler.isTypeRequired(type, value)) {","          result[propName + Constants.TableConstants.ODATA_TYPE_SUFFIX] = type;","        }","      }","    } ","  }","","  var replacer = function(key, value) {","    if (value === Number.POSITIVE_INFINITY) {","      return 'Infinity';","    }","    if (value === Number.NEGATIVE_INFINITY) {","      return '-Infinity';","    }","    if (azureutil.objectIsNaN(value)) {","      return 'NaN';","    }","    return value;","  };","  ","  return JSON.stringify(result, replacer);","};","","/*","Input: The body of the HTTP response from the server from a table list as JSON (responseObject.response.body).","","Return:","This will return an array in the following format:","","[","  tableName1,","  tableName2","]","","For example,","","[","  myTable1,","  myTable2","]","","*/","exports.parseJsonTables = function (response) {","  var result = [];","","  if (response.value) {","    for (var i = 0; i < response.value.length; i++) {","      var entity = response.value[i].TableName;","      result.push(entity);","    }","  }","","  return result;","};","","/*","Input: The body of the HTTP response from the server from a table query as JSON (responseObject.response.body).","","Return:","This will return an array in the following format:","","[","  {{ '$': edmHandler1, '_': value1}, { '$': edmHandler2, '_': value2}, { '$': edmHandler3, '_': value3}},","  {{ '$': edmHandler4, '_': value4}, { '$': edmHandler5, '_': value5}, { '$': edmHandler6, '_': value6}}","]","","For example,","","[","  {{ '$': Edm.Int32, '_': 42}, { '$': Edm.String, '_': 'sample string'}, { '$': Edm.Boolean, '_': false}},","  {{ '$': Edm.Int64, '_': 42}, { '$': Edm.String, '_': 'sample string 2'}, { '$': Edm.Boolean, '_': true}}","]","","*/","exports.parseJsonEntities = function (response, autoResolveProperties, propertyResolver, entityResolver) {","  if (!response.value) {","    return [exports.parseJsonSingleEntity(response, autoResolveProperties, propertyResolver, entityResolver)];","  } else {","    var result = [];","","    for (var i = 0; i < response.value.length; i++) {","      var rawEntity = response.value[i];","      var entity = exports.parseJsonSingleEntity(rawEntity, autoResolveProperties, propertyResolver, entityResolver);","      result.push(entity);","    }","","    return result;  ","  }","};","","exports.parseJsonSingleEntity = function(rawEntity, autoResolveProperties, propertyResolver, entityResolver) {","  var rawEntityProperties = {};","  var entityPropertyTypes = {PartitionKey: 'Edm.String', RowKey: 'Edm.String', Timestamp: 'Edm.DateTime'};","  var odataMetadata = {};","","  // parse properties","  for (var entityPropertyName in rawEntity) {","    if (azureutil.stringStartsWith(entityPropertyName, Constants.TableConstants.ODATA_PREFIX)) {","      odataMetadata[entityPropertyName.slice(prefixLength)] = rawEntity[entityPropertyName];","    } else if (azureutil.stringEndsWith(entityPropertyName, Constants.TableConstants.ODATA_TYPE_SUFFIX)) {","      entityPropertyTypes[entityPropertyName.slice(0, entityPropertyName.length - suffixLength)] = rawEntity[entityPropertyName];","    } else {","      rawEntityProperties[entityPropertyName] = rawEntity[entityPropertyName];","    }","  }","","  // make sure etag is set","  if (!odataMetadata.etag && rawEntityProperties.Timestamp) {","    var timestampString = new Buffer(rawEntityProperties.Timestamp).toString();","    odataMetadata.etag = 'W/\"datetime\\'' + timestampString + '\\'\"';","  }","","  var entity = {};","  for (var entityPropertyName in rawEntityProperties) {","    if (rawEntityProperties.hasOwnProperty(entityPropertyName)) {","      // set the type, if given in the response","      var entityPropertyType = entityPropertyTypes[entityPropertyName];","      entity[entityPropertyName] = {};  ","","      // use the given property resolver if present, otherwise infer type if undefined","      if (propertyResolver) {","        // partition key, row key, name, value, type if present","        entityPropertyType = propertyResolver(rawEntityProperties.PartitionKey, rawEntityProperties.RowKey, entityPropertyName, rawEntityProperties[entityPropertyName], entityPropertyType);","      }","      if (!entityPropertyType && autoResolveProperties) {","        entityPropertyType = edmHandler.propertyType(rawEntityProperties[entityPropertyName], false);","      } ","","      if (entityPropertyType) {","        entity[entityPropertyName][Constants.TableConstants.ODATA_TYPE_MARKER] = entityPropertyType;","      } ","","      try {","        entity[entityPropertyName][Constants.TableConstants.ODATA_VALUE_MARKER] = edmHandler.deserializeValueFromJson(entityPropertyType, rawEntityProperties[entityPropertyName]);","      } catch (err) {","        if (propertyResolver) {","          // if a property resolver was used and the type is invalid, throw an appropriate error","          throw new Error(util.format(SR.INVALID_PROPERTY_RESOLVER, entityPropertyName, entityPropertyType, rawEntityProperties[entityPropertyName]));","        } else {","          throw err;","        }","      }","    }","  }","","  entity[Constants.TableConstants.ODATA_METADATA_MARKER] = odataMetadata;","","  if (entityResolver) {","    entity = entityResolver(entity);","  }","","  return entity;","};",""],"l":{"18":1,"20":1,"21":1,"22":1,"23":1,"24":1,"26":1,"27":1,"29":1,"35":1,"36":1,"37":0,"38":0,"41":0,"42":0,"45":0,"46":0,"48":0,"51":0,"52":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"61":0,"64":0,"65":0,"66":0,"72":0,"73":0,"74":0,"76":0,"77":0,"79":0,"80":0,"82":0,"85":0,"107":1,"108":0,"110":0,"111":0,"112":0,"113":0,"117":0,"139":1,"140":0,"141":0,"143":0,"145":0,"146":0,"147":0,"148":0,"151":0,"155":1,"156":0,"157":0,"158":0,"161":0,"162":0,"163":0,"164":0,"165":0,"167":0,"172":0,"173":0,"174":0,"177":0,"178":0,"179":0,"181":0,"182":0,"185":0,"187":0,"189":0,"190":0,"193":0,"194":0,"197":0,"198":0,"200":0,"202":0,"204":0,"210":0,"212":0,"213":0,"216":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/internal/edmhandler.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/internal/edmhandler.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0,0,0,0,0,0],"8":[0,0],"9":[0,0,0,0,0,0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0,0,0,0,0,0],"18":[0,0],"19":[0,0,0,0],"20":[0,0],"21":[0,0,0,0,0,0,0,0],"22":[0,0],"23":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":34,"loc":{"start":{"line":34,"column":23},"end":{"line":34,"column":57}}},"2":{"name":"(anonymous_2)","line":64,"loc":{"start":{"line":64,"column":35},"end":{"line":64,"column":58}}},"3":{"name":"(anonymous_3)","line":104,"loc":{"start":{"line":104,"column":25},"end":{"line":104,"column":48}}},"4":{"name":"(anonymous_4)","line":146,"loc":{"start":{"line":146,"column":25},"end":{"line":146,"column":47}}},"5":{"name":"(anonymous_5)","line":173,"loc":{"start":{"line":173,"column":30},"end":{"line":173,"column":53}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":30}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":32}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":54}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":33}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":24}},"7":{"start":{"line":25,"column":0},"end":{"line":25,"column":50}},"8":{"start":{"line":26,"column":0},"end":{"line":26,"column":37}},"9":{"start":{"line":34,"column":0},"end":{"line":52,"column":2}},"10":{"start":{"line":35,"column":2},"end":{"line":51,"column":3}},"11":{"start":{"line":36,"column":4},"end":{"line":44,"column":5}},"12":{"start":{"line":37,"column":6},"end":{"line":41,"column":7}},"13":{"start":{"line":38,"column":8},"end":{"line":38,"column":27}},"14":{"start":{"line":40,"column":8},"end":{"line":40,"column":28}},"15":{"start":{"line":43,"column":6},"end":{"line":43,"column":18}},"16":{"start":{"line":45,"column":9},"end":{"line":51,"column":3}},"17":{"start":{"line":46,"column":4},"end":{"line":46,"column":25}},"18":{"start":{"line":47,"column":9},"end":{"line":51,"column":3}},"19":{"start":{"line":48,"column":4},"end":{"line":48,"column":26}},"20":{"start":{"line":50,"column":4},"end":{"line":50,"column":24}},"21":{"start":{"line":64,"column":0},"end":{"line":90,"column":2}},"22":{"start":{"line":65,"column":2},"end":{"line":89,"column":3}},"23":{"start":{"line":66,"column":4},"end":{"line":86,"column":5}},"24":{"start":{"line":68,"column":8},"end":{"line":68,"column":43}},"25":{"start":{"line":70,"column":8},"end":{"line":70,"column":31}},"26":{"start":{"line":72,"column":8},"end":{"line":72,"column":21}},"27":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"28":{"start":{"line":76,"column":10},"end":{"line":76,"column":35}},"29":{"start":{"line":78,"column":8},"end":{"line":78,"column":21}},"30":{"start":{"line":83,"column":8},"end":{"line":83,"column":21}},"31":{"start":{"line":85,"column":8},"end":{"line":85,"column":66}},"32":{"start":{"line":88,"column":4},"end":{"line":88,"column":17}},"33":{"start":{"line":104,"column":0},"end":{"line":141,"column":2}},"34":{"start":{"line":105,"column":2},"end":{"line":140,"column":3}},"35":{"start":{"line":107,"column":6},"end":{"line":109,"column":7}},"36":{"start":{"line":108,"column":8},"end":{"line":108,"column":40}},"37":{"start":{"line":110,"column":6},"end":{"line":110,"column":19}},"38":{"start":{"line":112,"column":6},"end":{"line":114,"column":7}},"39":{"start":{"line":113,"column":8},"end":{"line":113,"column":35}},"40":{"start":{"line":115,"column":6},"end":{"line":115,"column":19}},"41":{"start":{"line":117,"column":6},"end":{"line":119,"column":7}},"42":{"start":{"line":118,"column":8},"end":{"line":118,"column":35}},"43":{"start":{"line":120,"column":6},"end":{"line":120,"column":19}},"44":{"start":{"line":123,"column":6},"end":{"line":123,"column":30}},"45":{"start":{"line":125,"column":6},"end":{"line":127,"column":7}},"46":{"start":{"line":126,"column":8},"end":{"line":126,"column":26}},"47":{"start":{"line":128,"column":6},"end":{"line":130,"column":7}},"48":{"start":{"line":129,"column":8},"end":{"line":129,"column":27}},"49":{"start":{"line":131,"column":6},"end":{"line":133,"column":7}},"50":{"start":{"line":132,"column":8},"end":{"line":132,"column":21}},"51":{"start":{"line":134,"column":6},"end":{"line":134,"column":19}},"52":{"start":{"line":137,"column":6},"end":{"line":137,"column":19}},"53":{"start":{"line":139,"column":6},"end":{"line":139,"column":52}},"54":{"start":{"line":146,"column":0},"end":{"line":165,"column":2}},"55":{"start":{"line":147,"column":2},"end":{"line":164,"column":3}},"56":{"start":{"line":153,"column":4},"end":{"line":153,"column":16}},"57":{"start":{"line":155,"column":4},"end":{"line":157,"column":5}},"58":{"start":{"line":156,"column":6},"end":{"line":156,"column":18}},"59":{"start":{"line":158,"column":4},"end":{"line":158,"column":17}},"60":{"start":{"line":161,"column":4},"end":{"line":161,"column":17}},"61":{"start":{"line":163,"column":4},"end":{"line":163,"column":62}},"62":{"start":{"line":173,"column":0},"end":{"line":197,"column":2}},"63":{"start":{"line":174,"column":2},"end":{"line":174,"column":58}},"64":{"start":{"line":175,"column":2},"end":{"line":196,"column":3}},"65":{"start":{"line":177,"column":6},"end":{"line":177,"column":30}},"66":{"start":{"line":179,"column":6},"end":{"line":179,"column":38}},"67":{"start":{"line":181,"column":6},"end":{"line":181,"column":30}},"68":{"start":{"line":183,"column":6},"end":{"line":183,"column":36}},"69":{"start":{"line":185,"column":6},"end":{"line":188,"column":7}},"70":{"start":{"line":186,"column":8},"end":{"line":186,"column":49}},"71":{"start":{"line":187,"column":8},"end":{"line":187,"column":52}},"72":{"start":{"line":189,"column":6},"end":{"line":189,"column":69}},"73":{"start":{"line":191,"column":6},"end":{"line":191,"column":48}},"74":{"start":{"line":193,"column":6},"end":{"line":193,"column":50}},"75":{"start":{"line":195,"column":6},"end":{"line":195,"column":66}}},"branchMap":{"1":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":6}},{"start":{"line":37,"column":6},"end":{"line":37,"column":6}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":9},"end":{"line":45,"column":9}},{"start":{"line":45,"column":9},"end":{"line":45,"column":9}}]},"5":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":9},"end":{"line":47,"column":9}},{"start":{"line":47,"column":9},"end":{"line":47,"column":9}}]},"6":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"7":{"line":66,"type":"switch","locations":[{"start":{"line":67,"column":6},"end":{"line":68,"column":43}},{"start":{"line":69,"column":6},"end":{"line":70,"column":31}},{"start":{"line":71,"column":6},"end":{"line":72,"column":21}},{"start":{"line":73,"column":6},"end":{"line":78,"column":21}},{"start":{"line":79,"column":6},"end":{"line":79,"column":25}},{"start":{"line":80,"column":6},"end":{"line":80,"column":25}},{"start":{"line":81,"column":6},"end":{"line":81,"column":26}},{"start":{"line":82,"column":6},"end":{"line":83,"column":21}},{"start":{"line":84,"column":6},"end":{"line":85,"column":66}}]},"8":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":8}},{"start":{"line":75,"column":8},"end":{"line":75,"column":8}}]},"9":{"line":105,"type":"switch","locations":[{"start":{"line":106,"column":4},"end":{"line":110,"column":19}},{"start":{"line":111,"column":4},"end":{"line":115,"column":19}},{"start":{"line":116,"column":4},"end":{"line":120,"column":19}},{"start":{"line":121,"column":4},"end":{"line":121,"column":23}},{"start":{"line":122,"column":4},"end":{"line":123,"column":30}},{"start":{"line":124,"column":4},"end":{"line":134,"column":19}},{"start":{"line":135,"column":4},"end":{"line":135,"column":24}},{"start":{"line":136,"column":4},"end":{"line":137,"column":19}},{"start":{"line":138,"column":4},"end":{"line":139,"column":52}}]},"10":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":6},"end":{"line":107,"column":6}},{"start":{"line":107,"column":6},"end":{"line":107,"column":6}}]},"11":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":6},"end":{"line":112,"column":6}},{"start":{"line":112,"column":6},"end":{"line":112,"column":6}}]},"12":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":6},"end":{"line":117,"column":6}},{"start":{"line":117,"column":6},"end":{"line":117,"column":6}}]},"13":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":10},"end":{"line":117,"column":32}},{"start":{"line":117,"column":36},"end":{"line":117,"column":52}}]},"14":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":6},"end":{"line":125,"column":6}},{"start":{"line":125,"column":6},"end":{"line":125,"column":6}}]},"15":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":6},"end":{"line":128,"column":6}},{"start":{"line":128,"column":6},"end":{"line":128,"column":6}}]},"16":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":6},"end":{"line":131,"column":6}},{"start":{"line":131,"column":6},"end":{"line":131,"column":6}}]},"17":{"line":147,"type":"switch","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":22}},{"start":{"line":149,"column":2},"end":{"line":149,"column":21}},{"start":{"line":150,"column":2},"end":{"line":150,"column":24}},{"start":{"line":151,"column":2},"end":{"line":151,"column":20}},{"start":{"line":152,"column":2},"end":{"line":153,"column":16}},{"start":{"line":154,"column":2},"end":{"line":158,"column":17}},{"start":{"line":159,"column":2},"end":{"line":159,"column":22}},{"start":{"line":160,"column":2},"end":{"line":161,"column":17}},{"start":{"line":162,"column":2},"end":{"line":163,"column":62}}]},"18":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":4},"end":{"line":155,"column":4}},{"start":{"line":155,"column":4},"end":{"line":155,"column":4}}]},"19":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":8},"end":{"line":155,"column":33}},{"start":{"line":155,"column":37},"end":{"line":155,"column":71}},{"start":{"line":155,"column":75},"end":{"line":155,"column":109}},{"start":{"line":155,"column":114},"end":{"line":155,"column":142}}]},"20":{"line":174,"type":"binary-expr","locations":[{"start":{"line":174,"column":16},"end":{"line":174,"column":20}},{"start":{"line":174,"column":24},"end":{"line":174,"column":57}}]},"21":{"line":175,"type":"switch","locations":[{"start":{"line":176,"column":4},"end":{"line":177,"column":30}},{"start":{"line":178,"column":4},"end":{"line":179,"column":38}},{"start":{"line":180,"column":4},"end":{"line":181,"column":30}},{"start":{"line":182,"column":4},"end":{"line":183,"column":36}},{"start":{"line":184,"column":4},"end":{"line":189,"column":69}},{"start":{"line":190,"column":4},"end":{"line":191,"column":48}},{"start":{"line":192,"column":4},"end":{"line":193,"column":50}},{"start":{"line":194,"column":4},"end":{"line":195,"column":66}}]},"22":{"line":179,"type":"cond-expr","locations":[{"start":{"line":179,"column":21},"end":{"line":179,"column":27}},{"start":{"line":179,"column":30},"end":{"line":179,"column":37}}]},"23":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":6},"end":{"line":185,"column":6}},{"start":{"line":185,"column":6},"end":{"line":185,"column":6}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var _ = require('underscore');","var util = require('util');","var guid = require('node-uuid');","","var azureCommon = require('./../../../common/common');","var azureutil = azureCommon.util;","var SR = azureCommon.SR;","","var TableUtilities = require('../tableutilities');","var EdmType = TableUtilities.EdmType;","","/**","* Get the Edm type of an object.","*","* @param {object} value A typed instance.","* @return {string} The Edm type.","*/","exports.propertyType = function (value, guessNumberType) {","  if (_.isNumber(value)) {","    if (guessNumberType) {","      if (azureutil.objectIsInt(value)) {","        return 'Edm.Int32';","      } else {","        return 'Edm.Double';","      }","    } else {","      return null;","    }","  } else if (_.isBoolean(value)) {","    return 'Edm.Boolean';","  } else if (_.isDate(value)) {","    return 'Edm.DateTime';","  } else {","    return 'Edm.String';","  }","};","","/**","* Convert a JSON value from over the wire into the correct EDM type.","* ","* Note that Int64, is remaining a string.  Converting it to a Number would lose precision.","* Int32, Boolean, and Double should already be the correct non-string types","*","* @param {string} type  The type of the value as it appears in the type attribute.","* @param value The value in JSON format.","* @return {object} The unserialized value.","*/","exports.deserializeValueFromJson = function (type, value) {","  if (type) {","    switch (type) {","      case EdmType.BINARY:","        return new Buffer(value, 'base64');","      case EdmType.DATETIME:","        return new Date(value);","      case EdmType.GUID:","        return value;","      case EdmType.DOUBLE:","        // Account for Infinity and NaN:","        if (typeof value !== 'number') {","          return parseFloat(value);","        }","        return value;","      case EdmType.INT32:","      case EdmType.INT64:","      case EdmType.STRING:","      case EdmType.BOOLEAN:","        return value;","      default:","        throw new Error(util.format(SR.TYPE_NOT_SUPPORTED, type));","    }","  } else {","    return value;","  }","};","","/**","* Convert a raw EdmType value into the JSON value expected to be sent over the wire.","*","* TODO: validate correct input types?","* Expects Edm.Int64 and Edm.String to be string, Edm.Double and Edm.Int32 to be Number,","* Edm.Guid to be an array or buffer compatible with Node.uuid, Edm.Binary to be a Node Buffer, Edm.DateTime to be a Date,","* and Edm.Boolean to be a boolean.","*","* @param {string} type  The type of the value as it will appear in the type attribute.","* @param {string} value The value","* @return {object} The serialized value.","*/","exports.serializeValue = function (type, value) {","  switch (type) {","    case EdmType.BINARY:","      if (Buffer.isBuffer(value)) {","        return value.toString('base64');","      }","      return value;","    case EdmType.DATETIME:","      if (_.isDate(value)) {","        return value.toISOString();","      }","      return value;","    case EdmType.GUID:","      if (Buffer.isBuffer(value) || _.isArray(value)) {","        return guid.unparse(value);","      }","      return value;","    case EdmType.INT64:","    case EdmType.DOUBLE:","      return value.toString();","    case EdmType.INT32:","      if (value === Number.POSITIVE_INFINITY) {","        return 'Infinity';","      }","      if (value === Number.NEGATIVE_INFINITY) {","        return '-Infinity';","      }","      if (azureutil.objectIsNaN(value)) {","        return 'NaN';","      }","      return value;","    case EdmType.STRING:","    case EdmType.BOOLEAN:","      return value;","    default:","      throw new Error(SR.TYPE_NOT_SUPPORTED + type);","  }","};","","/*","* Determines if a type annotation is required for the input type when sending JSON data to the service. ","*/","exports.isTypeRequired = function(type, value) {","  switch (type) {","  case EdmType.BINARY:","  case EdmType.INT64:","  case EdmType.DATETIME:","  case EdmType.GUID:","  case EdmType.DOUBLE:","    return true;","  case EdmType.INT32:","    if (typeof value !== 'number' || value === Number.POSITIVE_INFINITY || value === Number.NEGATIVE_INFINITY || (azureutil.objectIsNaN(value))) {","      return true;","    }","    return false;","  case EdmType.STRING:","  case EdmType.BOOLEAN:","    return false;","  default:","    throw new Error(util.format(SR.TYPE_NOT_SUPPORTED, type));","  }","};","","/**","* Serializes value into proper value to be used in odata query value.","*","* @param {object} value The value to be serialized.","* @return {string} The serialized value.","*/","exports.serializeQueryValue = function (value, type) {","  var edmType = type || exports.propertyType(value, true);","  switch (edmType) {","    case EdmType.INT32:","      return value.toString();","    case EdmType.BOOLEAN:","      return value ? 'true' : 'false';","    case EdmType.DOUBLE:","      return value.toString();","    case EdmType.INT64:","      return value.toString() + 'L';","    case EdmType.DATETIME:","      if(_.isDate(value)) {","        var dateTimeString = value.toISOString();","        return 'datetime\\'' + dateTimeString + '\\'';","      }","      throw new Error(util.format(SR.INVALID_EDM_TYPE, value, type));","    case EdmType.GUID:","      return 'guid\\'' + value.toString() + '\\'';","    case EdmType.BINARY:","      return 'X\\'' + value.toString('hex') + '\\'';","    default:","      return '\\'' + value.toString().replace(/'/g, '\\'\\'') + '\\'';","  }   ","};"],"l":{"17":1,"18":1,"19":1,"21":1,"22":1,"23":1,"25":1,"26":1,"34":1,"35":0,"36":0,"37":0,"38":0,"40":0,"43":0,"45":0,"46":0,"47":0,"48":0,"50":0,"64":1,"65":0,"66":0,"68":0,"70":0,"72":0,"75":0,"76":0,"78":0,"83":0,"85":0,"88":0,"104":1,"105":0,"107":0,"108":0,"110":0,"112":0,"113":0,"115":0,"117":0,"118":0,"120":0,"123":0,"125":0,"126":0,"128":0,"129":0,"131":0,"132":0,"134":0,"137":0,"139":0,"146":1,"147":0,"153":0,"155":0,"156":0,"158":0,"161":0,"163":0,"173":1,"174":0,"175":0,"177":0,"179":0,"181":0,"183":0,"185":0,"186":0,"187":0,"189":0,"191":0,"193":0,"195":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/tablequery.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/tablequery.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":1,"26":0,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1,"35":0,"36":1,"37":0,"38":1,"39":0,"40":1,"41":0,"42":1,"43":0,"44":1,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0,0,0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"TableQuery","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":22}}},"2":{"name":"(anonymous_2)","line":51,"loc":{"start":{"line":51,"column":30},"end":{"line":51,"column":42}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":22},"end":{"line":54,"column":42}}},"4":{"name":"(anonymous_4)","line":80,"loc":{"start":{"line":80,"column":27},"end":{"line":80,"column":42}}},"5":{"name":"(anonymous_5)","line":109,"loc":{"start":{"line":109,"column":29},"end":{"line":109,"column":50}}},"6":{"name":"(anonymous_6)","line":125,"loc":{"start":{"line":125,"column":25},"end":{"line":125,"column":67}}},"7":{"name":"(anonymous_7)","line":140,"loc":{"start":{"line":140,"column":25},"end":{"line":140,"column":67}}},"8":{"name":"(anonymous_8)","line":155,"loc":{"start":{"line":155,"column":26},"end":{"line":155,"column":68}}},"9":{"name":"(anonymous_9)","line":170,"loc":{"start":{"line":170,"column":27},"end":{"line":170,"column":69}}},"10":{"name":"(anonymous_10)","line":185,"loc":{"start":{"line":185,"column":24},"end":{"line":185,"column":66}}},"11":{"name":"(anonymous_11)","line":200,"loc":{"start":{"line":200,"column":24},"end":{"line":200,"column":66}}},"12":{"name":"(anonymous_12)","line":215,"loc":{"start":{"line":215,"column":26},"end":{"line":215,"column":68}}},"13":{"name":"(anonymous_13)","line":230,"loc":{"start":{"line":230,"column":26},"end":{"line":230,"column":68}}},"14":{"name":"(anonymous_14)","line":246,"loc":{"start":{"line":246,"column":28},"end":{"line":246,"column":72}}},"15":{"name":"(anonymous_15)","line":261,"loc":{"start":{"line":261,"column":27},"end":{"line":261,"column":48}}},"16":{"name":"(anonymous_16)","line":281,"loc":{"start":{"line":281,"column":26},"end":{"line":281,"column":47}}},"17":{"name":"(anonymous_17)","line":295,"loc":{"start":{"line":295,"column":37},"end":{"line":295,"column":49}}},"18":{"name":"(anonymous_18)","line":325,"loc":{"start":{"line":325,"column":33},"end":{"line":325,"column":81}}},"19":{"name":"(anonymous_19)","line":350,"loc":{"start":{"line":350,"column":36},"end":{"line":350,"column":63}}},"20":{"name":"(anonymous_20)","line":375,"loc":{"start":{"line":375,"column":25},"end":{"line":375,"column":41}}},"21":{"name":"(anonymous_21)","line":405,"loc":{"start":{"line":405,"column":31},"end":{"line":405,"column":54}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":27}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":51}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":33}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":24}},"6":{"start":{"line":24,"column":0},"end":{"line":24,"column":71}},"7":{"start":{"line":26,"column":0},"end":{"line":26,"column":50}},"8":{"start":{"line":27,"column":0},"end":{"line":27,"column":49}},"9":{"start":{"line":28,"column":0},"end":{"line":28,"column":55}},"10":{"start":{"line":29,"column":0},"end":{"line":29,"column":51}},"11":{"start":{"line":30,"column":0},"end":{"line":30,"column":37}},"12":{"start":{"line":37,"column":0},"end":{"line":41,"column":1}},"13":{"start":{"line":38,"column":2},"end":{"line":38,"column":20}},"14":{"start":{"line":39,"column":2},"end":{"line":39,"column":19}},"15":{"start":{"line":40,"column":2},"end":{"line":40,"column":19}},"16":{"start":{"line":51,"column":0},"end":{"line":60,"column":2}},"17":{"start":{"line":52,"column":2},"end":{"line":52,"column":18}},"18":{"start":{"line":53,"column":2},"end":{"line":57,"column":3}},"19":{"start":{"line":54,"column":4},"end":{"line":56,"column":7}},"20":{"start":{"line":55,"column":6},"end":{"line":55,"column":34}},"21":{"start":{"line":59,"column":2},"end":{"line":59,"column":14}},"22":{"start":{"line":80,"column":0},"end":{"line":83,"column":2}},"23":{"start":{"line":81,"column":2},"end":{"line":81,"column":18}},"24":{"start":{"line":82,"column":2},"end":{"line":82,"column":14}},"25":{"start":{"line":109,"column":0},"end":{"line":112,"column":2}},"26":{"start":{"line":110,"column":2},"end":{"line":110,"column":76}},"27":{"start":{"line":111,"column":2},"end":{"line":111,"column":14}},"28":{"start":{"line":125,"column":0},"end":{"line":127,"column":2}},"29":{"start":{"line":126,"column":2},"end":{"line":126,"column":87}},"30":{"start":{"line":140,"column":0},"end":{"line":142,"column":2}},"31":{"start":{"line":141,"column":2},"end":{"line":141,"column":87}},"32":{"start":{"line":155,"column":0},"end":{"line":157,"column":2}},"33":{"start":{"line":156,"column":2},"end":{"line":156,"column":88}},"34":{"start":{"line":170,"column":0},"end":{"line":172,"column":2}},"35":{"start":{"line":171,"column":2},"end":{"line":171,"column":89}},"36":{"start":{"line":185,"column":0},"end":{"line":187,"column":2}},"37":{"start":{"line":186,"column":2},"end":{"line":186,"column":90}},"38":{"start":{"line":200,"column":0},"end":{"line":202,"column":2}},"39":{"start":{"line":201,"column":2},"end":{"line":201,"column":86}},"40":{"start":{"line":215,"column":0},"end":{"line":217,"column":2}},"41":{"start":{"line":216,"column":2},"end":{"line":216,"column":88}},"42":{"start":{"line":230,"column":0},"end":{"line":232,"column":2}},"43":{"start":{"line":231,"column":2},"end":{"line":231,"column":88}},"44":{"start":{"line":246,"column":0},"end":{"line":248,"column":2}},"45":{"start":{"line":247,"column":2},"end":{"line":247,"column":56}},"46":{"start":{"line":261,"column":0},"end":{"line":268,"column":2}},"47":{"start":{"line":262,"column":2},"end":{"line":264,"column":3}},"48":{"start":{"line":263,"column":4},"end":{"line":263,"column":74}},"49":{"start":{"line":266,"column":2},"end":{"line":266,"column":86}},"50":{"start":{"line":267,"column":2},"end":{"line":267,"column":14}},"51":{"start":{"line":281,"column":0},"end":{"line":288,"column":2}},"52":{"start":{"line":282,"column":2},"end":{"line":284,"column":3}},"53":{"start":{"line":283,"column":4},"end":{"line":283,"column":73}},"54":{"start":{"line":286,"column":2},"end":{"line":286,"column":85}},"55":{"start":{"line":287,"column":2},"end":{"line":287,"column":14}},"56":{"start":{"line":295,"column":0},"end":{"line":310,"column":2}},"57":{"start":{"line":296,"column":2},"end":{"line":296,"column":17}},"58":{"start":{"line":297,"column":2},"end":{"line":299,"column":3}},"59":{"start":{"line":298,"column":4},"end":{"line":298,"column":64}},"60":{"start":{"line":301,"column":2},"end":{"line":303,"column":3}},"61":{"start":{"line":302,"column":4},"end":{"line":302,"column":62}},"62":{"start":{"line":305,"column":2},"end":{"line":307,"column":3}},"63":{"start":{"line":306,"column":4},"end":{"line":306,"column":48}},"64":{"start":{"line":309,"column":2},"end":{"line":309,"column":15}},"65":{"start":{"line":325,"column":0},"end":{"line":340,"column":2}},"66":{"start":{"line":326,"column":2},"end":{"line":328,"column":3}},"67":{"start":{"line":327,"column":4},"end":{"line":327,"column":80}},"68":{"start":{"line":330,"column":2},"end":{"line":332,"column":3}},"69":{"start":{"line":331,"column":4},"end":{"line":331,"column":77}},"70":{"start":{"line":334,"column":2},"end":{"line":336,"column":3}},"71":{"start":{"line":335,"column":4},"end":{"line":335,"column":73}},"72":{"start":{"line":338,"column":2},"end":{"line":338,"column":68}},"73":{"start":{"line":339,"column":2},"end":{"line":339,"column":64}},"74":{"start":{"line":350,"column":0},"end":{"line":366,"column":2}},"75":{"start":{"line":351,"column":2},"end":{"line":351,"column":65}},"76":{"start":{"line":352,"column":2},"end":{"line":363,"column":3}},"77":{"start":{"line":353,"column":4},"end":{"line":353,"column":130}},"78":{"start":{"line":354,"column":4},"end":{"line":354,"column":18}},"79":{"start":{"line":355,"column":4},"end":{"line":361,"column":5}},"80":{"start":{"line":356,"column":6},"end":{"line":360,"column":7}},"81":{"start":{"line":357,"column":8},"end":{"line":357,"column":55}},"82":{"start":{"line":358,"column":8},"end":{"line":358,"column":72}},"83":{"start":{"line":359,"column":8},"end":{"line":359,"column":16}},"84":{"start":{"line":362,"column":4},"end":{"line":362,"column":41}},"85":{"start":{"line":365,"column":2},"end":{"line":365,"column":26}},"86":{"start":{"line":375,"column":0},"end":{"line":396,"column":2}},"87":{"start":{"line":376,"column":2},"end":{"line":395,"column":3}},"88":{"start":{"line":378,"column":6},"end":{"line":378,"column":28}},"89":{"start":{"line":380,"column":6},"end":{"line":380,"column":27}},"90":{"start":{"line":382,"column":6},"end":{"line":382,"column":30}},"91":{"start":{"line":384,"column":6},"end":{"line":384,"column":26}},"92":{"start":{"line":386,"column":6},"end":{"line":386,"column":27}},"93":{"start":{"line":388,"column":6},"end":{"line":388,"column":28}},"94":{"start":{"line":390,"column":6},"end":{"line":390,"column":29}},"95":{"start":{"line":392,"column":6},"end":{"line":392,"column":28}},"96":{"start":{"line":394,"column":6},"end":{"line":394,"column":23}},"97":{"start":{"line":405,"column":0},"end":{"line":417,"column":2}},"98":{"start":{"line":406,"column":2},"end":{"line":406,"column":92}},"99":{"start":{"line":407,"column":2},"end":{"line":407,"column":99}},"100":{"start":{"line":408,"column":2},"end":{"line":408,"column":111}},"101":{"start":{"line":409,"column":2},"end":{"line":409,"column":101}},"102":{"start":{"line":410,"column":2},"end":{"line":410,"column":108}},"103":{"start":{"line":411,"column":2},"end":{"line":411,"column":98}},"104":{"start":{"line":412,"column":2},"end":{"line":412,"column":93}},"105":{"start":{"line":413,"column":2},"end":{"line":413,"column":92}},"106":{"start":{"line":414,"column":2},"end":{"line":414,"column":76}},"107":{"start":{"line":416,"column":2},"end":{"line":416,"column":28}},"108":{"start":{"line":419,"column":0},"end":{"line":419,"column":28}}},"branchMap":{"1":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"2":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":2},"end":{"line":262,"column":2}},{"start":{"line":262,"column":2},"end":{"line":262,"column":2}}]},"3":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":2},"end":{"line":282,"column":2}},{"start":{"line":282,"column":2},"end":{"line":282,"column":2}}]},"4":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":2},"end":{"line":297,"column":2}},{"start":{"line":297,"column":2},"end":{"line":297,"column":2}}]},"5":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":2},"end":{"line":301,"column":2}},{"start":{"line":301,"column":2},"end":{"line":301,"column":2}}]},"6":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":2},"end":{"line":305,"column":2}},{"start":{"line":305,"column":2},"end":{"line":305,"column":2}}]},"7":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":2},"end":{"line":326,"column":2}},{"start":{"line":326,"column":2},"end":{"line":326,"column":2}}]},"8":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":2},"end":{"line":330,"column":2}},{"start":{"line":330,"column":2},"end":{"line":330,"column":2}}]},"9":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":2},"end":{"line":334,"column":2}},{"start":{"line":334,"column":2},"end":{"line":334,"column":2}}]},"10":{"line":352,"type":"if","locations":[{"start":{"line":352,"column":2},"end":{"line":352,"column":2}},{"start":{"line":352,"column":2},"end":{"line":352,"column":2}}]},"11":{"line":355,"type":"binary-expr","locations":[{"start":{"line":355,"column":20},"end":{"line":355,"column":39}},{"start":{"line":355,"column":43},"end":{"line":355,"column":62}}]},"12":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":6},"end":{"line":356,"column":6}},{"start":{"line":356,"column":6},"end":{"line":356,"column":6}}]},"13":{"line":376,"type":"switch","locations":[{"start":{"line":377,"column":4},"end":{"line":378,"column":28}},{"start":{"line":379,"column":4},"end":{"line":380,"column":27}},{"start":{"line":381,"column":4},"end":{"line":382,"column":30}},{"start":{"line":383,"column":4},"end":{"line":384,"column":26}},{"start":{"line":385,"column":4},"end":{"line":386,"column":27}},{"start":{"line":387,"column":4},"end":{"line":388,"column":28}},{"start":{"line":389,"column":4},"end":{"line":390,"column":29}},{"start":{"line":391,"column":4},"end":{"line":392,"column":28}},{"start":{"line":393,"column":4},"end":{"line":394,"column":23}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var _ = require('underscore');","var util = require('util');","","var azureCommon = require('./../../common/common');","var azureutil = azureCommon.util;","var SR = azureCommon.SR;","var QueryStringConstants =  azureCommon.Constants.QueryStringConstants;","","var edmHandler = require('./internal/edmhandler');","var TableUtilities = require('./tableutilities');","var QueryComparisons = TableUtilities.QueryComparisons;","var TableOperators = TableUtilities.TableOperators;","var EdmType = TableUtilities.EdmType;","","/**"," * Creates a new TableQuery object."," *"," * @constructor"," */","function TableQuery() {","  this._fields = [];","  this._where = [];","  this._top = null;","}","","/**","* Specifies the select clause. If no arguments are given, all fields will be selected.","*","* @param {array} fields The fields to be selected.","* @return {TableQuery} A table query object with the select clause.","* @example","* var tableQuery = new TableQuery().select('field1', 'field2');","*/","TableQuery.prototype.select = function () {","  var self = this;","  if (arguments) {","    _.each(arguments, function (argument) {","      self._fields.push(argument);","    });","  }","","  return this;","};","","/**"," * Specifies the top clause."," *"," * @param {int} top The number of items to fetch."," * @return {TableQuery} A table query object with the top clause."," * @example"," * var tableQuery = new TableQuery().top(10);"," *"," * // tasktable should already exist and have entities"," * tableService.queryEntities('tasktable', tableQuery, null \\/*currentToken*\\/, function(error, result) {"," *   if(!error) { "," *     var entities = result.entities; // there will be 10 or less entities"," *     // do stuff with the returned entities if there are any"," *     // if result.continuationToken exists, to get the next 10 (or less) entities"," *     // call queryEntities as above, but with the returned token instead of null"," *   }"," * });"," */","TableQuery.prototype.top = function (top) {","  this._top = top;","  return this;","};","","/**"," * Specifies the where clause."," *"," * Valid type specifier strings include: ?string?, ?bool?, ?int32?, ?double?, ?date?, ?guid?, ?int64?, ?binary?"," * A type must be specified for guid, int64, and binaries or the filter produced will be incorrect."," *"," * @param {string}       condition   The condition string."," * @param {string|array} value       Value(s) to insert in question mark (?) parameters."," * @return {TableQuery}  A table query object with the where clause."," * @example"," * var tableQuery = new TableQuery().where(TableQuery.guidFilter('GuidField', QueryComparisons.EQUAL, guidVal));"," * OR"," * var tableQuery = new TableQuery().where('Name == ? or Name <= ?', name1, name2);"," * OR"," * var tableQuery = new TableQuery().where('Name == ?string? && Value == ?int64?, name1, int64Val);"," *"," * // tasktable should already exist and have entities"," * tableService.queryEntities('tasktable', tableQuery, null \\/*currentToken*\\/, function(error, result, response) {"," *   if(!error) { "," *     var entities = result.entities;"," *     // do stuff with the returned entities if there are any"," *   }"," * });"," */","TableQuery.prototype.where = function (condition) {  ","  this._where.push(TableQuery._encodeConditionString(condition, arguments));","  return this;","};","","/**"," * Generates a property filter condition string for an 'int' value."," *"," * @param {string}       propertyName   A string containing the name of the property to compare."," * @param {string}       operation      A string containing the comparison operator to use. "," *                                      See Constants.TableConstants.QueryComparisons for a list of allowed operations."," * @param {string|int}   value          An 'int' containing the value to compare with the property."," * @return {string} A string containing the formatted filter condition."," * @example"," * var query = TableQuery.int32Filter('IntField', QueryComparisons.EQUAL, 5);"," */","TableQuery.int32Filter = function (propertyName, operation, value) {","  return TableQuery._concatFilterString(propertyName, operation, value, EdmType.INT32);","};","","/**"," * Generates a property filter condition string for a 'int64' value."," *"," * @param {string}       propertyName   A string containing the name of the property to compare."," * @param {string}       operation      A string containing the comparison operator to use. "," *                                      See Constants.TableConstants.QueryComparisons for a list of allowed operations."," * @param {string|int64} value          An 'int64' containing the value to compare with the property."," * @return {string} A string containing the formatted filter condition."," * @example"," * var query = TableQuery.int64Filter('Int64Field', QueryComparisons.EQUAL, 123);"," */","TableQuery.int64Filter = function (propertyName, operation, value) {","  return TableQuery._concatFilterString(propertyName, operation, value, EdmType.INT64);","};","","/**"," * Generates a property filter condition string for a 'double' value."," *"," * @param {string}       propertyName   A string containing the name of the property to compare."," * @param {string}       operation      A string containing the comparison operator to use. "," *                                      See Constants.TableConstants.QueryComparisons for a list of allowed operations."," * @param {string|double}value          A 'double' containing the value to compare with the property."," * @return {string} A string containing the formatted filter condition."," * @example"," * var query = TableQuery.doubleFilter('DoubleField', QueryComparisons.EQUAL, 123.45);"," */","TableQuery.doubleFilter = function (propertyName, operation, value) {","  return TableQuery._concatFilterString(propertyName, operation, value, EdmType.DOUBLE);","};","","/**"," * Generates a property filter condition string for a 'boolean' value."," *"," * @param {string}       propertyName   A string containing the name of the property to compare."," * @param {string}       operation      A string containing the comparison operator to use. "," *                                      See Constants.TableConstants.QueryComparisons for a list of allowed operations."," * @param {string|boolean}       value          A 'boolean' containing the value to compare with the property."," * @return {string} A string containing the formatted filter condition."," * @example"," * var query = TableQuery.booleanFilter('BooleanField', QueryComparisons.EQUAL, false);"," */","TableQuery.booleanFilter = function (propertyName, operation, value) {","  return TableQuery._concatFilterString(propertyName, operation, value, EdmType.BOOLEAN);","};","","/**"," * Generates a property filter condition string for a 'datetime' value."," *"," * @param {string}       propertyName   A string containing the name of the property to compare."," * @param {string}       operation      A string containing the comparison operator to use. "," *                                      See Constants.TableConstants.QueryComparisons for a list of allowed operations."," * @param {string|date}     value              A 'datetime' containing the value to compare with the property."," * @return {string} A string containing the formatted filter condition."," * @example"," * var query = TableQuery.dateFilter('DateTimeField', QueryComparisons.EQUAL, new Date(Date.UTC(2001, 1, 3, 4, 5, 6)));"," */","TableQuery.dateFilter = function (propertyName, operation, value) {","  return TableQuery._concatFilterString(propertyName, operation, value, EdmType.DATETIME);","};","","/**"," * Generates a property filter condition string for a 'guid' value."," *"," * @param {string}       propertyName   A string containing the name of the property to compare."," * @param {string}       operation      A string containing the comparison operator to use. "," *                                      See Constants.TableConstants.QueryComparisons for a list of allowed operations."," * @param {string|guid}  value          A 'guid' containing the value to compare with the property."," * @return {string} A string containing the formatted filter condition."," * @example"," * var query = TableQuery.guidFilter('GuidField', QueryComparisons.EQUAL, guid.v1());"," */","TableQuery.guidFilter = function (propertyName, operation, value) {","  return TableQuery._concatFilterString(propertyName, operation, value, EdmType.GUID);","};","","/**"," * Generates a property filter condition string for a 'binary' value."," *"," * @param {string}       propertyName   A string containing the name of the property to compare."," * @param {string}       operation      A string containing the comparison operator to use. "," *                                      See Constants.TableConstants.QueryComparisons for a list of allowed operations."," * @param {string|buffer}value          A 'buffer' containing the value to compare with the property."," * @return {string} A string containing the formatted filter condition."," * @example"," * var query = TableQuery.binaryFilter('BinaryField', QueryComparisons.EQUAL, new Buffer('hello'));"," */","TableQuery.binaryFilter = function (propertyName, operation, value) {","  return TableQuery._concatFilterString(propertyName, operation, value, EdmType.BINARY);","};","","/**"," * Generates a property filter condition string."," *"," * @param {string}       propertyName   A string containing the name of the property to compare."," * @param {string}       operation      A string containing the comparison operator to use. "," *                                      See Constants.TableConstants.QueryComparisons for a list of allowed operations."," * @param {string}       value          A 'string' containing the value to compare with the property."," * @return {string} A string containing the formatted filter condition."," * @example"," * var query = TableQuery.stringFilter('StringField', QueryComparisons.EQUAL, 'name');"," */","TableQuery.stringFilter = function (propertyName, operation, value) {","  return TableQuery._concatFilterString(propertyName, operation, value, EdmType.STRING);","};","","/**"," * Creates a filter condition using the specified logical operator on two filter conditions."," *"," * @param {string}       filterA          A string containing the first formatted filter condition."," * @param {string}       operatorString   A string containing the operator to use (AND, OR)."," * @param {string}       filterB          A string containing the second formatted filter condition."," * @return {string} A string containing the combined filter expression."," * @example"," * var filter1 = TableQuery.stringFilter('Name', QueryComparisons.EQUAL, 'Person');"," * var filter2 = TableQuery.booleanFilter('Visible', QueryComparisons.EQUAL, true);"," * var combinedFilter = TableQuery.combineFilters(filter1, TablUtilities.TableOperators.AND, filter2);"," */","TableQuery.combineFilters = function (filterA, operatorString, filterB) {","  return filterA + ' ' + operatorString + ' ' + filterB;","};","","/**"," * Specifies an AND where condition."," *"," * @param {string}       condition   The condition string."," * @param {array}        arguments   Any number of arguments to be replaced in the condition by the question mark (?)."," * @return {TableQuery} A table query object with the and clause."," * @example"," * var tableQuery = new TableQuery()"," *                      .where('Name == ? or Name <= ?', 'Person1', 'Person2');"," *                      .and('Age >= ?', 18);"," */","TableQuery.prototype.and = function (condition) {","  if (this._where.length === 0) {","    throw new Error(util.format(SR.QUERY_OPERATOR_REQUIRES_WHERE, 'AND'));","  }","","  this._where.push(' and ' + TableQuery._encodeConditionString(condition, arguments));","  return this;","};","","/**"," * Specifies an OR where condition."," *"," * @param {string}       condition   The condition."," * @param {array}        arguments   Any number of arguments to be replaced in the condition by the question mark (?)."," * @return {TableQuery} A table query object with the or clause."," * @example"," * var tableQuery = new TableQuery()"," *                      .where('Name == ? or Name <= ?', 'Person1', 'Person2');"," *                      .or('Age >= ?', 18);"," */","TableQuery.prototype.or = function (condition) {","  if (this._where.length === 0) {","    throw new Error(util.format(SR.QUERY_OPERATOR_REQUIRES_WHERE, 'OR'));","  }","","  this._where.push(' or ' + TableQuery._encodeConditionString(condition, arguments));","  return this;","};","","/**"," * Returns the query string object for the query."," *"," * @return {object} JSON object representing the query string arguments for the query."," */","TableQuery.prototype.toQueryObject = function () {","  var query = {};","  if (this._fields.length > 0) {","    query[QueryStringConstants.SELECT] = this._fields.join(',');","  }","","  if (this._where.length > 0) {","    query[QueryStringConstants.FILTER] = this._where.join('');","  }","","  if (this._top) {","    query[QueryStringConstants.TOP] = this._top;","  }","","  return query;","};","","// Functions","","/**","* Concat the filter string parameters.","*","* @param {string}       propertyName   A string containing the name of the property to compare.","* @param {string}       operation      A string containing the comparison operator to use. ","*                                      See Constants.TableConstants.QueryComparisons for a list of allowed operations.","* @param {object}       value          The value to compare with the property.","* @param {string}       type           A string EdmType of the property to compare.","* @return {string} A string containing the formatted filter condition.","* @ignore","*/","TableQuery._concatFilterString = function (propertyName, operation, value, type) {","  if (azureutil.objectIsNull(propertyName)) {","    throw new Error(util.format(SR.ARGUMENT_NULL_OR_UNDEFINED, 'propertyName'));","  }","","  if (azureutil.objectIsNull(operation)) {","    throw new Error(util.format(SR.ARGUMENT_NULL_OR_UNDEFINED, 'operation'));","  }","","  if (azureutil.objectIsNull(value)) {","    throw new Error(util.format(SR.ARGUMENT_NULL_OR_UNDEFINED, 'value'));","  }","","  var serializedValue = edmHandler.serializeQueryValue(value, type);","  return propertyName + ' ' + operation + ' ' + serializedValue;","};","","/**"," * Encodes a condition string."," *"," * @param {string}       condition   The condition."," * @param {array}        arguments   Any number of arguments to be replaced in the condition by the question mark (?)."," * @return {TableQuery} A table query object with the or clause"," * @ignore"," */","TableQuery._encodeConditionString = function (condition, args) {","  var encodedCondition = TableQuery._replaceOperators(condition);","  if (args.length > 1) {","    var sections = encodedCondition.split(/(\\?string\\?|\\?int32\\?|\\?int64\\?|\\?bool\\?|\\?double\\?|\\?date\\?|\\?binary\\?|\\?guid\\?|\\?)/);","    var count = 1;","    for (var i = 0; i < sections.length && count < args.length; i++) {","      if (sections[i].indexOf('?') === 0) {","        var type = TableQuery._getEdmType(sections[i]);","        sections[i] = edmHandler.serializeQueryValue(args[count], type);","        count++;","      }","    }","    encodedCondition = sections.join('');","  }","","  return encodedCondition;","};","","/**"," * Converts the query string type to an Edm type."," *"," * @param {string} type The type included in the query string."," * @return {string} The EdmType."," * @ignore"," */","TableQuery._getEdmType = function (type) {","  switch (type) {","    case '?binary?':","      return EdmType.BINARY;","    case '?int64?':","      return EdmType.INT64;","    case '?date?':","      return EdmType.DATETIME;","    case '?guid?':","      return EdmType.GUID;","    case '?int32?':","      return EdmType.INT32;","    case '?double?':","      return EdmType.DOUBLE;","    case '?bool?':","      return EdmType.BOOLEAN;","    case '?string?':","      return EdmType.STRING;","    default:","      return undefined;","  }","};","","/**"," * Replace operators."," * @ignore"," * @param {string} whereClause The text where to replace the operators."," * @return {string} The string with the replaced operators."," * @ignore"," */","TableQuery._replaceOperators = function (whereClause) {","  var encodedWhereClause = whereClause.replace(/ == /g, ' ' + QueryComparisons.EQUAL + ' ');","  encodedWhereClause = encodedWhereClause.replace(/ != /g, ' ' + QueryComparisons.NOT_EQUAL + ' ');","  encodedWhereClause = encodedWhereClause.replace(/ >= /g, ' ' + QueryComparisons.GREATER_THAN_OR_EQUAL + ' ');","  encodedWhereClause = encodedWhereClause.replace(/ > /g, ' ' + QueryComparisons.GREATER_THAN + ' ');","  encodedWhereClause = encodedWhereClause.replace(/ <= /g, ' ' + QueryComparisons.LESS_THAN_OR_EQUAL + ' ');","  encodedWhereClause = encodedWhereClause.replace(/ < /g, ' ' + QueryComparisons.LESS_THAN + ' ');","  encodedWhereClause = encodedWhereClause.replace(/ \\&\\& /g, ' ' + TableOperators.AND + ' ');","  encodedWhereClause = encodedWhereClause.replace(/ \\|\\| /g, ' ' + TableOperators.OR + ' ');","  encodedWhereClause = encodedWhereClause.replace(/!/g, TableOperators.NOT);","","  return encodedWhereClause;","};","","module.exports = TableQuery;"],"l":{"18":1,"19":1,"21":1,"22":1,"23":1,"24":1,"26":1,"27":1,"28":1,"29":1,"30":1,"37":1,"38":0,"39":0,"40":0,"51":1,"52":0,"53":0,"54":0,"55":0,"59":0,"80":1,"81":0,"82":0,"109":1,"110":0,"111":0,"125":1,"126":0,"140":1,"141":0,"155":1,"156":0,"170":1,"171":0,"185":1,"186":0,"200":1,"201":0,"215":1,"216":0,"230":1,"231":0,"246":1,"247":0,"261":1,"262":0,"263":0,"266":0,"267":0,"281":1,"282":0,"283":0,"286":0,"287":0,"295":1,"296":0,"297":0,"298":0,"301":0,"302":0,"305":0,"306":0,"309":0,"325":1,"326":0,"327":0,"330":0,"331":0,"334":0,"335":0,"338":0,"339":0,"350":1,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"362":0,"365":0,"375":1,"376":0,"378":0,"380":0,"382":0,"384":0,"386":0,"388":0,"390":0,"392":0,"394":0,"405":1,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"416":0,"419":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/models/tableresult.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/models/tableresult.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"TableResult","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":24},"end":{"line":24,"column":45}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":20},"end":{"line":28,"column":40}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":55}},"2":{"start":{"line":20,"column":0},"end":{"line":22,"column":1}},"3":{"start":{"line":21,"column":2},"end":{"line":21,"column":19}},"4":{"start":{"line":24,"column":0},"end":{"line":26,"column":2}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":50}},"6":{"start":{"line":28,"column":0},"end":{"line":35,"column":2}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":20}},"8":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":57}},"10":{"start":{"line":34,"column":2},"end":{"line":34,"column":16}},"11":{"start":{"line":37,"column":0},"end":{"line":37,"column":39}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var odataHandler = require('../internal/odatahandler');","","function TableResult(name) {","  this.name = name;","}","","TableResult.serialize = function (tableName) {","  return JSON.stringify({ TableName: tableName });","};","","TableResult.parse = function (response) {","  var result = null;","  if (response.body) {","    result = odataHandler.parseJsonTables(response.body);","  }","","  return result;","};","","exports = module.exports = TableResult;"],"l":{"18":1,"20":1,"21":0,"24":1,"25":0,"28":1,"29":0,"30":0,"31":0,"34":0,"37":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/models/batchresult.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/models/batchresult.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"BatchResult","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":54}}},"2":{"name":"(anonymous_2)","line":52,"loc":{"start":{"line":52,"column":27},"end":{"line":52,"column":39}}},"3":{"name":"(anonymous_3)","line":62,"loc":{"start":{"line":62,"column":45},"end":{"line":62,"column":57}}},"4":{"name":"(anonymous_4)","line":79,"loc":{"start":{"line":79,"column":34},"end":{"line":79,"column":46}}},"5":{"name":"(anonymous_5)","line":110,"loc":{"start":{"line":110,"column":44},"end":{"line":110,"column":72}}},"6":{"name":"(anonymous_6)","line":126,"loc":{"start":{"line":126,"column":43},"end":{"line":126,"column":61}}},"7":{"name":"(anonymous_7)","line":142,"loc":{"start":{"line":142,"column":30},"end":{"line":142,"column":56}}},"8":{"name":"(anonymous_8)","line":154,"loc":{"start":{"line":154,"column":25},"end":{"line":154,"column":48}}},"9":{"name":"(anonymous_9)","line":176,"loc":{"start":{"line":176,"column":40},"end":{"line":176,"column":63}}},"10":{"name":"(anonymous_10)","line":198,"loc":{"start":{"line":198,"column":26},"end":{"line":198,"column":42}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":54}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":58}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":60}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":42}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":48}},"7":{"start":{"line":24,"column":0},"end":{"line":24,"column":46}},"8":{"start":{"line":26,"column":0},"end":{"line":26,"column":59}},"9":{"start":{"line":27,"column":0},"end":{"line":27,"column":45}},"10":{"start":{"line":38,"column":0},"end":{"line":44,"column":1}},"11":{"start":{"line":39,"column":2},"end":{"line":39,"column":35}},"12":{"start":{"line":40,"column":2},"end":{"line":40,"column":21}},"13":{"start":{"line":41,"column":2},"end":{"line":41,"column":31}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":61}},"15":{"start":{"line":43,"column":2},"end":{"line":43,"column":69}},"16":{"start":{"line":52,"column":0},"end":{"line":54,"column":2}},"17":{"start":{"line":53,"column":2},"end":{"line":53,"column":94}},"18":{"start":{"line":62,"column":0},"end":{"line":71,"column":2}},"19":{"start":{"line":63,"column":2},"end":{"line":64,"column":27}},"20":{"start":{"line":66,"column":2},"end":{"line":66,"column":123}},"21":{"start":{"line":67,"column":2},"end":{"line":67,"column":71}},"22":{"start":{"line":68,"column":2},"end":{"line":68,"column":80}},"23":{"start":{"line":70,"column":2},"end":{"line":70,"column":21}},"24":{"start":{"line":79,"column":0},"end":{"line":100,"column":2}},"25":{"start":{"line":80,"column":2},"end":{"line":80,"column":46}},"26":{"start":{"line":82,"column":2},"end":{"line":96,"column":3}},"27":{"start":{"line":83,"column":4},"end":{"line":83,"column":66}},"28":{"start":{"line":84,"column":4},"end":{"line":84,"column":71}},"29":{"start":{"line":85,"column":4},"end":{"line":85,"column":57}},"30":{"start":{"line":87,"column":4},"end":{"line":87,"column":123}},"31":{"start":{"line":89,"column":4},"end":{"line":94,"column":5}},"32":{"start":{"line":90,"column":6},"end":{"line":90,"column":51}},"33":{"start":{"line":91,"column":6},"end":{"line":91,"column":68}},"34":{"start":{"line":92,"column":6},"end":{"line":92,"column":73}},"35":{"start":{"line":93,"column":6},"end":{"line":93,"column":69}},"36":{"start":{"line":95,"column":4},"end":{"line":95,"column":51}},"37":{"start":{"line":97,"column":2},"end":{"line":97,"column":43}},"38":{"start":{"line":99,"column":2},"end":{"line":99,"column":14}},"39":{"start":{"line":110,"column":0},"end":{"line":134,"column":2}},"40":{"start":{"line":111,"column":2},"end":{"line":111,"column":110}},"41":{"start":{"line":112,"column":2},"end":{"line":112,"column":127}},"42":{"start":{"line":114,"column":2},"end":{"line":116,"column":3}},"43":{"start":{"line":115,"column":4},"end":{"line":115,"column":60}},"44":{"start":{"line":118,"column":2},"end":{"line":120,"column":3}},"45":{"start":{"line":119,"column":4},"end":{"line":119,"column":70}},"46":{"start":{"line":122,"column":2},"end":{"line":122,"column":48}},"47":{"start":{"line":124,"column":2},"end":{"line":124,"column":75}},"48":{"start":{"line":126,"column":2},"end":{"line":128,"column":5}},"49":{"start":{"line":127,"column":4},"end":{"line":127,"column":66}},"50":{"start":{"line":130,"column":2},"end":{"line":130,"column":18}},"51":{"start":{"line":131,"column":2},"end":{"line":131,"column":36}},"52":{"start":{"line":133,"column":2},"end":{"line":133,"column":17}},"53":{"start":{"line":142,"column":0},"end":{"line":168,"column":2}},"54":{"start":{"line":143,"column":2},"end":{"line":143,"column":23}},"55":{"start":{"line":144,"column":2},"end":{"line":165,"column":3}},"56":{"start":{"line":146,"column":4},"end":{"line":146,"column":19}},"57":{"start":{"line":147,"column":4},"end":{"line":147,"column":94}},"58":{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},"59":{"start":{"line":150,"column":6},"end":{"line":150,"column":88}},"60":{"start":{"line":153,"column":4},"end":{"line":153,"column":20}},"61":{"start":{"line":154,"column":4},"end":{"line":164,"column":7}},"62":{"start":{"line":156,"column":6},"end":{"line":156,"column":57}},"63":{"start":{"line":157,"column":6},"end":{"line":163,"column":7}},"64":{"start":{"line":158,"column":8},"end":{"line":158,"column":58}},"65":{"start":{"line":161,"column":8},"end":{"line":161,"column":57}},"66":{"start":{"line":162,"column":8},"end":{"line":162,"column":33}},"67":{"start":{"line":167,"column":2},"end":{"line":167,"column":19}},"68":{"start":{"line":176,"column":0},"end":{"line":230,"column":2}},"69":{"start":{"line":177,"column":2},"end":{"line":180,"column":4}},"70":{"start":{"line":183,"column":2},"end":{"line":183,"column":48}},"71":{"start":{"line":185,"column":2},"end":{"line":227,"column":3}},"72":{"start":{"line":187,"column":4},"end":{"line":187,"column":51}},"73":{"start":{"line":188,"column":4},"end":{"line":191,"column":5}},"74":{"start":{"line":189,"column":6},"end":{"line":189,"column":64}},"75":{"start":{"line":190,"column":6},"end":{"line":190,"column":107}},"76":{"start":{"line":194,"column":4},"end":{"line":194,"column":42}},"77":{"start":{"line":195,"column":4},"end":{"line":195,"column":38}},"78":{"start":{"line":197,"column":4},"end":{"line":197,"column":23}},"79":{"start":{"line":198,"column":4},"end":{"line":209,"column":7}},"80":{"start":{"line":199,"column":6},"end":{"line":208,"column":7}},"81":{"start":{"line":200,"column":8},"end":{"line":200,"column":22}},"82":{"start":{"line":201,"column":13},"end":{"line":208,"column":7}},"83":{"start":{"line":202,"column":8},"end":{"line":202,"column":45}},"84":{"start":{"line":204,"column":8},"end":{"line":204,"column":44}},"85":{"start":{"line":205,"column":8},"end":{"line":207,"column":9}},"86":{"start":{"line":206,"column":10},"end":{"line":206,"column":136}},"87":{"start":{"line":211,"column":4},"end":{"line":211,"column":99}},"88":{"start":{"line":212,"column":4},"end":{"line":214,"column":5}},"89":{"start":{"line":213,"column":6},"end":{"line":213,"column":121}},"90":{"start":{"line":216,"column":4},"end":{"line":226,"column":5}},"91":{"start":{"line":217,"column":6},"end":{"line":217,"column":83}},"92":{"start":{"line":218,"column":6},"end":{"line":218,"column":27}},"93":{"start":{"line":219,"column":6},"end":{"line":219,"column":25}},"94":{"start":{"line":220,"column":6},"end":{"line":224,"column":7}},"95":{"start":{"line":221,"column":8},"end":{"line":221,"column":53}},"96":{"start":{"line":222,"column":8},"end":{"line":222,"column":52}},"97":{"start":{"line":223,"column":8},"end":{"line":223,"column":48}},"98":{"start":{"line":225,"column":6},"end":{"line":225,"column":114}},"99":{"start":{"line":229,"column":2},"end":{"line":229,"column":24}},"100":{"start":{"line":232,"column":0},"end":{"line":232,"column":29}}},"branchMap":{"1":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"2":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":6},"end":{"line":82,"column":34}},{"start":{"line":82,"column":38},"end":{"line":82,"column":100}}]},"3":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":36},"end":{"line":111,"column":67}},{"start":{"line":111,"column":71},"end":{"line":111,"column":109}}]},"4":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":2},"end":{"line":114,"column":2}},{"start":{"line":114,"column":2},"end":{"line":114,"column":2}}]},"5":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"6":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":13},"end":{"line":131,"column":29}},{"start":{"line":131,"column":33},"end":{"line":131,"column":35}}]},"7":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":2},"end":{"line":144,"column":2}},{"start":{"line":144,"column":2},"end":{"line":144,"column":2}}]},"8":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":6},"end":{"line":144,"column":20}},{"start":{"line":144,"column":24},"end":{"line":144,"column":47}},{"start":{"line":144,"column":51},"end":{"line":144,"column":79}},{"start":{"line":145,"column":6},"end":{"line":145,"column":54}}]},"9":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":149,"column":4}},{"start":{"line":149,"column":4},"end":{"line":149,"column":4}}]},"10":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":6},"end":{"line":157,"column":6}},{"start":{"line":157,"column":6},"end":{"line":157,"column":6}}]},"11":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"12":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":4},"end":{"line":188,"column":4}},{"start":{"line":188,"column":4},"end":{"line":188,"column":4}}]},"13":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":6},"end":{"line":199,"column":6}},{"start":{"line":199,"column":6},"end":{"line":199,"column":6}}]},"14":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":10},"end":{"line":199,"column":21}},{"start":{"line":199,"column":25},"end":{"line":199,"column":32}}]},"15":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":13},"end":{"line":201,"column":13}},{"start":{"line":201,"column":13},"end":{"line":201,"column":13}}]},"16":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":8},"end":{"line":205,"column":8}},{"start":{"line":205,"column":8},"end":{"line":205,"column":8}}]},"17":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"18":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"19":{"line":217,"type":"binary-expr","locations":[{"start":{"line":217,"column":18},"end":{"line":217,"column":77}},{"start":{"line":217,"column":81},"end":{"line":217,"column":82}}]},"20":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":6},"end":{"line":220,"column":6}},{"start":{"line":220,"column":6},"end":{"line":220,"column":6}}]},"21":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":10},"end":{"line":220,"column":15}},{"start":{"line":220,"column":19},"end":{"line":220,"column":41}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var azureCommon = require('./../../../common/common');","var Md5Wrapper = require('./../../../common/md5-wrapper');","var StorageServiceClient = azureCommon.StorageServiceClient;","var WebResource = azureCommon.WebResource;","var Constants = azureCommon.Constants;","var HeaderConstants = Constants.HeaderConstants;","var TableConstants = Constants.TableConstants;","","var RequestHandler = require('../internal/requesthandler');","var entityResult = require('./entityresult');","","/**","* Creates a new BatchResult.","*","* @param {TableService}      tableService    The table service.","* @param {string}            table           The table name.","* @param {array}             operations      The array of batch operations.","* @constructor","* @ignore","*/","function BatchResult(tableService, table, operations) {","  this.tableService = tableService;","  this.table = table;","  this.operations = operations;","  this.batchBoundary = 'batch_' + BatchResult._getBoundary();","  this.changesetBoundary = 'changeset_' + BatchResult._getBoundary();","}","","/**","* Gets a boundary string.","*","* @return {string}   The boundary string.","* @ignore","*/","BatchResult._getBoundary = function () {","  return (new Md5Wrapper().createMd5Hash()).update('' + (new Date()).getTime()).digest('hex');","};","","/**","* Constructs the batch web request.","*","* @return {WebResource}   The batch WebResource.","* @ignore","*/","BatchResult.prototype.constructWebResource = function () {","  var webResource = WebResource.post('$batch')","    .withRawResponse(true);","","  webResource.withHeader(HeaderConstants.CONTENT_TYPE, 'multipart/mixed; charset=\"utf-8\"; boundary=' + this.batchBoundary);","  webResource.withHeader(HeaderConstants.DATA_SERVICE_VERSION, '3.0;');","  webResource.withHeader(HeaderConstants.MAX_DATA_SERVICE_VERSION, '3.0;NetFx');","","  return webResource;","};","","/**","* Serializes the batch web body.","*","* @return {string}      The serialized batch content.","* @ignore","*/","BatchResult.prototype.serialize = function () {","  var body = '--' + this.batchBoundary + '\\n';","  ","  if (this.operations.length === 1 && this.operations[0].type === TableConstants.Operations.RETRIEVE) {","    body += HeaderConstants.CONTENT_TYPE + ': application/http\\n';","    body += HeaderConstants.CONTENT_TRANSFER_ENCODING + ': binary\\n\\n';","    body += this._serializeOperation(this.operations[0]);","  } else {","    body += HeaderConstants.CONTENT_TYPE + ': multipart/mixed;charset=\"utf-8\";boundary=' + this.changesetBoundary + '\\n\\n';","","    for (var i = 0; i < this.operations.length; i++) {","      body += '--' + this.changesetBoundary + '\\n';","      body += HeaderConstants.CONTENT_TYPE + ': application/http\\n';","      body += HeaderConstants.CONTENT_TRANSFER_ENCODING + ': binary\\n\\n';","      body += this._serializeOperation(this.operations[i], i) + '\\n';","    }","    body += '--' + this.changesetBoundary + '--\\n';","  } ","  body += '--' + this.batchBoundary + '--';","","  return body;","};","","/**","* Serializes a request within the batch.","*","* @param {object}       The operation to serialize.  ","* @param {number}       The index of the operation in the operations arrray.","* @return {string}      The serialized operation content.","* @ignore","*/","BatchResult.prototype._serializeOperation = function (operation, count) {","  operation.options.payloadFormat = operation.options.payloadFormat || this.tableService.defaultPayloadFormat;","  var webResource = RequestHandler.constructEntityWebResource(operation.type, this.table, operation.entity, operation.options);","","  if (count) {","    webResource.headers[HeaderConstants.CONTENT_ID] = count;","  }","","  if (webResource.headers[HeaderConstants.CONTENT_TYPE]) {","    webResource.headers[HeaderConstants.CONTENT_TYPE] += 'type=entry';","  }","","  this.tableService._setRequestUrl(webResource);","","  var content = webResource.method + ' ' + webResource.uri + ' HTTP/1.1\\n';","","  Object.keys(webResource.headers).forEach(function (header) {","    content += header + ': ' + webResource.headers[header] + '\\n';","  });","","  content += '\\n';","  content += webResource.body || '';","","  return content;","};","","/**","* Parses a batch response.","*","* @param {object} responseObject    The response object for the batch request.","* @return {array} An array with the processed / parsed responses.","*/","BatchResult.prototype.parse = function (responseObject) {","  var responses = null;","  if (responseObject && responseObject.response && responseObject.response.body &&","      typeof responseObject.response.body === 'string') {","    responses = [];","    var rawResponses = responseObject.response.body.split(TableConstants.CHANGESET_DELIMITER);","","    if(rawResponses.length === 1) {","      rawResponses = responseObject.response.body.split(TableConstants.BATCH_DELIMITER);","    }","","    var self = this;","    rawResponses.forEach(function (rawResponse) {","      // Find HTTP/1.1 CODE line","      var httpLocation = rawResponse.indexOf('HTTP/1.1');","      if (httpLocation !== -1) {","        rawResponse = rawResponse.substring(httpLocation);","","        // valid response","        var response = self._parseOperation(rawResponse);","        responses.push(response);","      }","    });","  }","","  return responses;","};","","/**","* Parses a partial response.","*","* @param {string}      rawResponse      The raw, unparsed, http response from the server for the batch response.","* @return {object}      A response object.","*/","BatchResult.prototype._parseOperation = function (rawResponse) {","  var responseObject = {","    error: null,","    response: { }","  };","","  // Split into multiple lines and process them","  var responseLines = rawResponse.split('\\r\\n');","","  if (responseLines.length > 0) {","    // Retrieve response code","    var headers = responseLines.shift().split(' ');","    if (headers.length >= 2) {","      responseObject.response.statusCode = parseInt(headers[1]);","      responseObject.response.isSuccessful = WebResource.validResponse(responseObject.response.statusCode);","    }","","    // Populate headers","    responseObject.response.headers = { };","    responseObject.response.body = '';","","    var isBody = false;","    responseLines.forEach(function (line) {","      if (line === '' && !isBody) {","        isBody = true;","      } else if (isBody) {","        responseObject.response.body += line;","      } else {","        var headerSplit = line.indexOf(':');","        if (headerSplit !== -1) {","          responseObject.response.headers[line.substring(0, headerSplit).trim().toLowerCase()] = line.substring(headerSplit + 1).trim();","        }","      }","    });","","    StorageServiceClient._parseResponse(responseObject.response, this.tableService.xml2jsSettings);","    if (!responseObject.response.isSuccessful) {","      responseObject.error = StorageServiceClient._normalizeError(responseObject.response.body, responseObject.response);","    }","","    if (!responseObject.error) {","      var index = responseObject.response.headers[HeaderConstants.CONTENT_ID] || 0;","      var propertyResolver;","      var entityResolver;","      if (index && this.operations[index]) {","        var options = this.operations[index].options;","        propertyResolver = options.propertyResolver;","        entityResolver = options.entityResolver;","      } ","      responseObject.entity = entityResult.parseEntity(responseObject.response, propertyResolver, entityResolver);","    }","  }","","  return responseObject;","};","","module.exports = BatchResult;"],"l":{"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"26":1,"27":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"52":1,"53":0,"62":1,"63":0,"66":0,"67":0,"68":0,"70":0,"79":1,"80":0,"82":0,"83":0,"84":0,"85":0,"87":0,"89":0,"90":0,"91":0,"92":0,"93":0,"95":0,"97":0,"99":0,"110":1,"111":0,"112":0,"114":0,"115":0,"118":0,"119":0,"122":0,"124":0,"126":0,"127":0,"130":0,"131":0,"133":0,"142":1,"143":0,"144":0,"146":0,"147":0,"149":0,"150":0,"153":0,"154":0,"156":0,"157":0,"158":0,"161":0,"162":0,"167":0,"176":1,"177":0,"183":0,"185":0,"187":0,"188":0,"189":0,"190":0,"194":0,"195":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"204":0,"205":0,"206":0,"211":0,"212":0,"213":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"225":0,"229":0,"232":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/tablebatch.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/table/tablebatch.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":1,"21":0,"22":1,"23":0,"24":1,"25":0,"26":1,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"TableBatch","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":22}}},"2":{"name":"(anonymous_2)","line":40,"loc":{"start":{"line":40,"column":29},"end":{"line":40,"column":41}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":37},"end":{"line":49,"column":49}}},"4":{"name":"(anonymous_4)","line":58,"loc":{"start":{"line":58,"column":28},"end":{"line":58,"column":40}}},"5":{"name":"(anonymous_5)","line":73,"loc":{"start":{"line":73,"column":38},"end":{"line":73,"column":79}}},"6":{"name":"(anonymous_6)","line":92,"loc":{"start":{"line":92,"column":36},"end":{"line":92,"column":63}}},"7":{"name":"(anonymous_7)","line":101,"loc":{"start":{"line":101,"column":36},"end":{"line":101,"column":54}}},"8":{"name":"(anonymous_8)","line":110,"loc":{"start":{"line":110,"column":35},"end":{"line":110,"column":53}}},"9":{"name":"(anonymous_9)","line":119,"loc":{"start":{"line":119,"column":37},"end":{"line":119,"column":55}}},"10":{"name":"(anonymous_10)","line":128,"loc":{"start":{"line":128,"column":45},"end":{"line":128,"column":63}}},"11":{"name":"(anonymous_11)","line":137,"loc":{"start":{"line":137,"column":43},"end":{"line":137,"column":61}}},"12":{"name":"(anonymous_12)","line":148,"loc":{"start":{"line":148,"column":36},"end":{"line":148,"column":78}}},"13":{"name":"(anonymous_13)","line":149,"loc":{"start":{"line":149,"column":40},"end":{"line":149,"column":53}}},"14":{"name":"(anonymous_14)","line":187,"loc":{"start":{"line":187,"column":36},"end":{"line":187,"column":53}}},"15":{"name":"(anonymous_15)","line":197,"loc":{"start":{"line":197,"column":39},"end":{"line":197,"column":56}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":31}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":51}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":24}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":36}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":38}},"6":{"start":{"line":24,"column":0},"end":{"line":24,"column":46}},"7":{"start":{"line":31,"column":0},"end":{"line":35,"column":1}},"8":{"start":{"line":32,"column":2},"end":{"line":32,"column":23}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":17}},"10":{"start":{"line":34,"column":2},"end":{"line":34,"column":24}},"11":{"start":{"line":40,"column":0},"end":{"line":42,"column":2}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":23}},"13":{"start":{"line":49,"column":0},"end":{"line":51,"column":2}},"14":{"start":{"line":50,"column":2},"end":{"line":50,"column":36}},"15":{"start":{"line":58,"column":0},"end":{"line":60,"column":2}},"16":{"start":{"line":59,"column":2},"end":{"line":59,"column":32}},"17":{"start":{"line":73,"column":0},"end":{"line":78,"column":2}},"18":{"start":{"line":74,"column":2},"end":{"line":76,"column":4}},"19":{"start":{"line":77,"column":2},"end":{"line":77,"column":73}},"20":{"start":{"line":92,"column":0},"end":{"line":94,"column":2}},"21":{"start":{"line":93,"column":2},"end":{"line":93,"column":71}},"22":{"start":{"line":101,"column":0},"end":{"line":103,"column":2}},"23":{"start":{"line":102,"column":2},"end":{"line":102,"column":62}},"24":{"start":{"line":110,"column":0},"end":{"line":112,"column":2}},"25":{"start":{"line":111,"column":2},"end":{"line":111,"column":61}},"26":{"start":{"line":119,"column":0},"end":{"line":121,"column":2}},"27":{"start":{"line":120,"column":2},"end":{"line":120,"column":63}},"28":{"start":{"line":128,"column":0},"end":{"line":130,"column":2}},"29":{"start":{"line":129,"column":2},"end":{"line":129,"column":73}},"30":{"start":{"line":137,"column":0},"end":{"line":139,"column":2}},"31":{"start":{"line":138,"column":2},"end":{"line":138,"column":71}},"32":{"start":{"line":148,"column":0},"end":{"line":179,"column":2}},"33":{"start":{"line":149,"column":2},"end":{"line":155,"column":5}},"34":{"start":{"line":150,"column":4},"end":{"line":150,"column":31}},"35":{"start":{"line":151,"column":4},"end":{"line":151,"column":57}},"36":{"start":{"line":152,"column":4},"end":{"line":152,"column":45}},"37":{"start":{"line":153,"column":4},"end":{"line":153,"column":71}},"38":{"start":{"line":154,"column":4},"end":{"line":154,"column":59}},"39":{"start":{"line":157,"column":2},"end":{"line":159,"column":3}},"40":{"start":{"line":158,"column":4},"end":{"line":158,"column":40}},"41":{"start":{"line":161,"column":2},"end":{"line":169,"column":3}},"42":{"start":{"line":162,"column":4},"end":{"line":166,"column":5}},"43":{"start":{"line":163,"column":6},"end":{"line":163,"column":45}},"44":{"start":{"line":165,"column":6},"end":{"line":165,"column":27}},"45":{"start":{"line":167,"column":9},"end":{"line":169,"column":3}},"46":{"start":{"line":168,"column":4},"end":{"line":168,"column":43}},"47":{"start":{"line":171,"column":2},"end":{"line":175,"column":3}},"48":{"start":{"line":172,"column":4},"end":{"line":172,"column":36}},"49":{"start":{"line":173,"column":9},"end":{"line":175,"column":3}},"50":{"start":{"line":174,"column":4},"end":{"line":174,"column":48}},"51":{"start":{"line":177,"column":2},"end":{"line":177,"column":48}},"52":{"start":{"line":178,"column":2},"end":{"line":178,"column":86}},"53":{"start":{"line":187,"column":0},"end":{"line":189,"column":2}},"54":{"start":{"line":188,"column":2},"end":{"line":188,"column":32}},"55":{"start":{"line":197,"column":0},"end":{"line":207,"column":2}},"56":{"start":{"line":198,"column":2},"end":{"line":198,"column":54}},"57":{"start":{"line":201,"column":2},"end":{"line":204,"column":3}},"58":{"start":{"line":202,"column":4},"end":{"line":202,"column":19}},"59":{"start":{"line":203,"column":4},"end":{"line":203,"column":26}},"60":{"start":{"line":206,"column":2},"end":{"line":206,"column":19}},"61":{"start":{"line":209,"column":0},"end":{"line":209,"column":28}}},"branchMap":{"1":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":2},"end":{"line":157,"column":2}},{"start":{"line":157,"column":2},"end":{"line":157,"column":2}}]},"2":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":2},"end":{"line":161,"column":2}},{"start":{"line":161,"column":2},"end":{"line":161,"column":2}}]},"3":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":4},"end":{"line":162,"column":4}},{"start":{"line":162,"column":4},"end":{"line":162,"column":4}}]},"4":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":9},"end":{"line":167,"column":9}},{"start":{"line":167,"column":9},"end":{"line":167,"column":9}}]},"5":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":2},"end":{"line":171,"column":2}},{"start":{"line":171,"column":2},"end":{"line":171,"column":2}}]},"6":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":9},"end":{"line":173,"column":9}},{"start":{"line":173,"column":9},"end":{"line":173,"column":9}}]},"7":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":2},"end":{"line":201,"column":2}},{"start":{"line":201,"column":2},"end":{"line":201,"column":2}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var extend = require('extend');","","var azureCommon = require('./../../common/common');","var SR = azureCommon.SR;","var validate = azureCommon.validate;","var Constants = azureCommon.Constants;","var TableConstants = Constants.TableConstants;","","/**","* Creates a new TableBatch.","*","* @constructor","*/","function TableBatch() {","  this.operations = [];","  this.pk = null;","  this.retrieve = false;","}","","/**","* Removes all of the operations from the batch.","*/","TableBatch.prototype.clear = function () {","  this.operations = [];","};","","/**","* Returns a boolean value indicating weather there are operations in the batch.","*","* @return {Boolean} True if there are operations queued up; false otherwise.","*/","TableBatch.prototype.hasOperations = function () {","  return this.operations.length > 0;","};","","/**","* Returns the number of operations in the batch.","*","* @return {number} The number of operations in the batch.","*/","TableBatch.prototype.size = function () {","  return this.operations.length;","};","","/**","* Adds a retrieve operation to the batch. Note that this must be the only operation in the batch.","*","* @param {string}             partitionKey                                    The partition key.","* @param {string}             rowKey                                          The row key.","* @param {object}             [options]                                       The request options.","* @param {string}             [options.payloadFormat]                         The payload format to use for the request.","* @param {TableService~propertyResolver}  [options.propertyResolver]  The property resolver. Given the partition key, row key, property name, property value,","*                                                                             and the property Edm type if given by the service, returns the Edm type of the property.","* @param {Function(entity)} [options.entityResolver]                          The entity resolver. Given the single entity returned by the query, returns a modified object.","*/","TableBatch.prototype.retrieveEntity = function (partitionKey, rowKey, options) {","  var entity = { PartitionKey: {_: partitionKey, $: 'Edm.String'},","    RowKey: {_: rowKey, $: 'Edm.String'},","  };","  this.addOperation(TableConstants.Operations.RETRIEVE, entity, options);","};","","/**","* Adds an insert operation to the batch.","*","* @param {object}             entity                                          The entity.","* @param {object}             [options]                                       The request options.","* @param {string}             [options.echoContent]                           Whether or not to return the entity upon a successful insert. Inserts only, default to false.","* @param {string}             [options.payloadFormat]                         The payload format to use for the request.","* @param {TableService~propertyResolver}  [options.propertyResolver]  The property resolver. Only applied if echoContent is true. Given the partition key, row key, property name, ","*                                                                             property value, and the property Edm type if given by the service, returns the Edm type of the property.","* @param {Function(entity)} [options.entityResolver]                          The entity resolver. Only applied if echoContent is true. Given the single entity returned by the insert, returns ","*                                                                             a modified object.","*/","TableBatch.prototype.insertEntity = function (entity, options) {","  this.addOperation(TableConstants.Operations.INSERT, entity, options);","};","","/**","* Adds a delete operation to the batch.","*","* @param {object}             entity              The entity.","*/","TableBatch.prototype.deleteEntity = function (entity) {","  this.addOperation(TableConstants.Operations.DELETE, entity);","};","","/**","* Adds a merge operation to the batch.","*","* @param {object}             entity              The entity.","*/","TableBatch.prototype.mergeEntity = function (entity) {","  this.addOperation(TableConstants.Operations.MERGE, entity);","};","","/**","* Adds an replace operation to the batch.","*","* @param {object}             entity              The entity.","*/","TableBatch.prototype.replaceEntity = function (entity) {","  this.addOperation(TableConstants.Operations.REPLACE, entity);","};","","/**","* Adds an insert or replace operation to the batch.","*","* @param {object}             entity              The entity.","*/","TableBatch.prototype.insertOrReplaceEntity = function (entity) {","  this.addOperation(TableConstants.Operations.INSERT_OR_REPLACE, entity);","};","","/**","* Adds an insert or merge operation to the batch.","*","* @param {object}             entity              The entity.","*/","TableBatch.prototype.insertOrMergeEntity = function (entity) {","  this.addOperation(TableConstants.Operations.INSERT_OR_MERGE, entity);","};","","/**","* Adds an operation to the batch after performing checks.","*","* @param {string}             operationType       The type of operation to perform. See Constants.TableConstants.Operations","* @param {object}             entity              The entity.","* @param {object}             [options]                                       The request options.","*/","TableBatch.prototype.addOperation = function (operationType, entity, options) {","  validate.validateArgs('addOperation', function (v) {","    v.object(entity, 'entity');","    v.object(entity.PartitionKey, 'entity.PartitionKey');","    v.object(entity.RowKey, 'entity.RowKey');","    v.stringAllowEmpty(entity.PartitionKey._, 'entity.PartitionKey._');","    v.stringAllowEmpty(entity.RowKey._, 'entity.RowKey._');","  });","","  if(this.operations.length >= 100) {","    throw new Error(SR.BATCH_TOO_LARGE);","  }","","  if (operationType === TableConstants.Operations.RETRIEVE) {","    if(this.hasOperations()) {","      throw new Error(SR.BATCH_ONE_RETRIEVE);","    } else {","      this.retrieve = true;","    }","  } else if (this.retrieve) {","    throw new Error(SR.BATCH_ONE_RETRIEVE);","  }","","  if (!this.hasOperations()) {","    this.pk = entity.PartitionKey._;","  } else if (entity.PartitionKey._ !== this.pk) {","    throw new Error(SR.BATCH_ONE_PARTITION_KEY);","  }","","  var copiedOptions = extend(true, {}, options);","  this.operations.push({type: operationType, entity: entity, options: copiedOptions});","};","","/**","* Gets an operation from the batch. Returns null if the index does not exist.","*","* @param {number}             index           The index in the operations array at which to remove an element.","* @return {object}                            The removed operation.","*/","TableBatch.prototype.getOperation = function (index) {","  return this.operations[index];","};","","/**","* Removes an operation from the batch. Returns null if the index does not exist.","*","* @param {number}             index           The index in the operations array at which to remove an element.","* @return {object}                            The removed operation.","*/","TableBatch.prototype.removeOperation = function (index) {","  var operation = this.operations.splice(index, 1)[0];","","  // if the array is empty, unlock the partition key","  if (!this.hasOperations()) {","    this.pk = null;","    this.retrieve = false;","  }","","  return operation;","};","","module.exports = TableBatch;",""],"l":{"18":1,"20":1,"21":1,"22":1,"23":1,"24":1,"31":1,"32":0,"33":0,"34":0,"40":1,"41":0,"49":1,"50":0,"58":1,"59":0,"73":1,"74":0,"77":0,"92":1,"93":0,"101":1,"102":0,"110":1,"111":0,"119":1,"120":0,"128":1,"129":0,"137":1,"138":0,"148":1,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"157":0,"158":0,"161":0,"162":0,"163":0,"165":0,"167":0,"168":0,"171":0,"172":0,"173":0,"174":0,"177":0,"178":0,"187":1,"188":0,"197":1,"198":0,"201":0,"202":0,"203":0,"206":0,"209":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/blob/blobservice.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/blob/blobservice.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":0,"42":0,"43":0,"44":0,"45":1,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":1,"75":0,"76":1,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":1,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":1,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":1,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":1,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":1,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":1,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":1,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":1,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":1,"336":0,"337":1,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":1,"345":0,"346":1,"347":0,"348":1,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":1,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":1,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":1,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":1,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":1,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":1,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":1,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":1,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":1,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":1,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":1,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":1,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":1,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":1,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":1,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":1,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":1,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":1,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":1,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":1,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":1,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":1,"798":0,"799":1,"800":0,"801":1,"802":0,"803":1,"804":0,"805":1,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":1,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":1,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":1,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":1,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":1,"938":0,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"963":0,"964":0,"965":0,"966":1,"967":0,"968":1,"969":0,"970":1,"971":0,"972":1,"973":0,"974":1,"975":0,"976":0,"977":0,"978":0,"979":0,"980":0,"981":0,"982":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":1,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":1,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":1,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":1,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":1,"1076":0,"1077":0,"1078":1,"1079":0,"1080":1,"1081":0,"1082":0,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":1,"1100":0,"1101":1,"1102":0,"1103":1,"1104":0,"1105":1,"1106":0,"1107":1,"1108":0,"1109":1,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":1,"1133":0,"1134":0,"1135":0,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":1,"1146":0,"1147":1,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1162":0,"1163":1,"1164":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":1,"1179":0,"1180":0,"1181":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1204":0,"1205":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":1,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1223":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":1,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":1,"1253":0,"1254":0,"1255":0,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":1,"1289":0,"1290":0,"1291":0,"1292":0,"1293":0,"1294":0,"1295":0,"1296":0,"1297":0,"1298":0,"1299":0,"1300":0,"1301":0,"1302":0,"1303":0,"1304":0,"1305":0,"1306":0,"1307":0,"1308":0,"1309":0,"1310":0,"1311":0,"1312":0,"1313":0,"1314":0,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1320":0,"1321":0,"1322":0,"1323":0,"1324":0,"1325":0,"1326":0,"1327":1,"1328":0,"1329":0,"1330":0,"1331":0,"1332":0,"1333":0,"1334":0,"1335":0,"1336":0,"1337":0,"1338":0,"1339":0,"1340":0,"1341":0,"1342":0,"1343":0,"1344":0,"1345":0,"1346":0,"1347":0,"1348":0,"1349":0,"1350":0,"1351":0,"1352":0,"1353":0,"1354":0,"1355":0,"1356":0,"1357":0,"1358":0,"1359":0,"1360":0,"1361":0,"1362":0,"1363":0,"1364":0,"1365":0,"1366":0,"1367":1,"1368":0,"1369":0,"1370":0,"1371":0,"1372":0,"1373":0,"1374":0,"1375":0,"1376":0,"1377":0,"1378":0,"1379":0,"1380":0,"1381":0,"1382":0,"1383":0,"1384":0,"1385":0,"1386":0,"1387":0,"1388":0,"1389":0,"1390":0,"1391":0,"1392":0,"1393":1,"1394":0,"1395":0,"1396":0,"1397":0,"1398":0,"1399":0,"1400":0,"1401":0,"1402":0,"1403":0,"1404":0,"1405":0,"1406":0,"1407":0,"1408":0,"1409":0,"1410":0,"1411":0,"1412":0,"1413":0,"1414":0,"1415":0,"1416":0,"1417":0,"1418":0,"1419":0,"1420":0,"1421":0,"1422":0,"1423":0,"1424":0,"1425":1,"1426":0,"1427":0,"1428":0,"1429":0,"1430":0,"1431":0,"1432":0,"1433":0,"1434":0,"1435":0,"1436":0,"1437":0,"1438":0,"1439":0,"1440":0,"1441":0,"1442":0,"1443":1,"1444":0,"1445":0,"1446":0,"1447":0,"1448":0,"1449":0,"1450":0,"1451":0,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1457":0,"1458":1,"1459":0,"1460":0,"1461":0,"1462":0,"1463":0,"1464":0,"1465":0,"1466":0,"1467":0,"1468":0,"1469":0,"1470":0,"1471":0,"1472":1,"1473":0,"1474":0,"1475":0,"1476":0,"1477":0,"1478":0,"1479":0,"1480":0,"1481":0,"1482":0,"1483":0,"1484":0,"1485":0,"1486":0,"1487":0,"1488":0,"1489":0,"1490":0,"1491":0,"1492":0,"1493":0,"1494":0,"1495":0,"1496":0,"1497":0,"1498":0,"1499":0,"1500":0,"1501":0,"1502":0,"1503":0,"1504":0,"1505":0,"1506":0,"1507":0,"1508":0,"1509":0,"1510":0,"1511":0,"1512":0,"1513":0,"1514":0,"1515":0,"1516":0,"1517":0,"1518":0,"1519":0,"1520":0,"1521":0,"1522":0,"1523":0,"1524":0,"1525":0,"1526":0,"1527":0,"1528":0,"1529":0,"1530":0,"1531":0,"1532":0,"1533":0,"1534":0,"1535":0,"1536":0,"1537":0,"1538":0,"1539":0,"1540":0,"1541":0,"1542":0,"1543":0,"1544":0,"1545":0,"1546":0,"1547":0,"1548":0,"1549":0,"1550":0,"1551":0,"1552":0,"1553":0,"1554":0,"1555":0,"1556":0,"1557":0,"1558":0,"1559":0,"1560":0,"1561":0,"1562":0,"1563":0,"1564":0,"1565":0,"1566":0,"1567":0,"1568":0,"1569":0,"1570":0,"1571":0,"1572":0,"1573":0,"1574":0,"1575":0,"1576":0,"1577":0,"1578":0,"1579":0,"1580":0,"1581":0,"1582":0,"1583":0,"1584":0,"1585":0,"1586":0,"1587":0,"1588":0,"1589":0,"1590":0,"1591":0,"1592":0,"1593":0,"1594":0,"1595":0,"1596":0,"1597":0,"1598":0,"1599":0,"1600":0,"1601":0,"1602":0,"1603":0,"1604":0,"1605":0,"1606":0,"1607":0,"1608":0,"1609":0,"1610":0,"1611":0,"1612":0,"1613":0,"1614":0,"1615":0,"1616":0,"1617":0,"1618":0,"1619":0,"1620":0,"1621":0,"1622":0,"1623":0,"1624":1,"1625":0,"1626":0,"1627":0,"1628":0,"1629":0,"1630":0,"1631":0,"1632":0,"1633":0,"1634":0,"1635":0,"1636":0,"1637":0,"1638":0,"1639":0,"1640":0,"1641":1,"1642":0,"1643":0,"1644":0,"1645":0,"1646":0,"1647":0,"1648":0,"1649":0,"1650":0,"1651":0,"1652":0,"1653":0,"1654":0,"1655":0,"1656":0,"1657":0,"1658":0,"1659":1,"1660":0,"1661":0,"1662":0,"1663":0,"1664":0,"1665":0,"1666":0,"1667":0,"1668":0,"1669":1,"1670":0,"1671":0,"1672":0,"1673":0,"1674":0,"1675":0,"1676":0,"1677":0,"1678":0,"1679":0,"1680":0,"1681":0,"1682":0,"1683":0,"1684":0,"1685":0,"1686":0,"1687":0,"1688":0,"1689":0,"1690":0,"1691":0,"1692":1,"1693":0,"1694":0,"1695":0,"1696":0,"1697":0,"1698":0,"1699":0,"1700":1,"1701":0,"1702":0,"1703":0,"1704":0,"1705":0,"1706":0,"1707":0,"1708":0,"1709":0,"1710":0,"1711":0,"1712":0,"1713":0,"1714":0,"1715":0,"1716":0,"1717":0,"1718":0,"1719":0,"1720":0,"1721":0,"1722":0,"1723":0,"1724":0,"1725":0,"1726":0,"1727":0,"1728":0,"1729":0,"1730":0,"1731":0,"1732":0,"1733":0,"1734":0,"1735":0,"1736":0,"1737":0,"1738":0,"1739":0,"1740":0,"1741":0,"1742":0,"1743":0,"1744":0,"1745":0,"1746":0,"1747":0,"1748":0,"1749":0,"1750":0,"1751":0,"1752":0,"1753":0,"1754":0,"1755":0,"1756":0,"1757":0,"1758":0,"1759":0,"1760":0,"1761":0,"1762":0,"1763":0,"1764":0,"1765":0,"1766":0,"1767":0,"1768":0,"1769":0,"1770":0,"1771":0,"1772":0,"1773":0,"1774":0,"1775":0,"1776":0,"1777":0,"1778":0,"1779":0,"1780":0,"1781":0,"1782":0,"1783":0,"1784":0,"1785":0,"1786":0,"1787":0,"1788":0,"1789":0,"1790":0,"1791":0,"1792":0,"1793":0,"1794":0,"1795":0,"1796":0,"1797":0,"1798":0,"1799":0,"1800":0,"1801":0,"1802":0,"1803":0,"1804":0,"1805":0,"1806":0,"1807":0,"1808":1,"1809":0,"1810":0,"1811":0,"1812":0,"1813":0,"1814":0,"1815":0,"1816":0,"1817":0,"1818":0,"1819":0,"1820":0,"1821":0,"1822":0,"1823":0,"1824":0,"1825":0,"1826":0,"1827":0,"1828":0,"1829":0,"1830":0,"1831":1,"1832":0,"1833":0,"1834":0,"1835":0,"1836":0,"1837":0,"1838":0,"1839":0,"1840":0,"1841":0,"1842":0,"1843":0,"1844":0,"1845":0,"1846":0,"1847":0,"1848":1,"1849":0,"1850":0,"1851":0,"1852":0,"1853":0,"1854":0,"1855":0,"1856":0,"1857":0,"1858":0,"1859":0,"1860":0,"1861":0,"1862":0,"1863":0,"1864":0,"1865":0,"1866":0,"1867":0,"1868":0,"1869":0,"1870":0,"1871":0,"1872":0,"1873":0,"1874":0,"1875":0,"1876":0,"1877":0,"1878":0,"1879":0,"1880":0,"1881":0,"1882":0,"1883":0,"1884":0,"1885":0,"1886":0,"1887":0,"1888":1,"1889":0,"1890":0,"1891":0,"1892":0,"1893":0,"1894":0,"1895":0,"1896":0,"1897":1,"1898":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0,0],"141":[0,0],"142":[0,0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0,0],"151":[0,0],"152":[0,0],"153":[0,0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0,0],"171":[0,0],"172":[0,0],"173":[0,0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0],"285":[0,0],"286":[0,0],"287":[0,0],"288":[0,0],"289":[0,0],"290":[0,0],"291":[0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0],"296":[0,0],"297":[0,0],"298":[0,0],"299":[0,0],"300":[0,0],"301":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0},"fnMap":{"1":{"name":"BlobService","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":105}}},"2":{"name":"createResourceName","line":125,"loc":{"start":{"line":125,"column":0},"end":{"line":125,"column":61}}},"3":{"name":"(anonymous_3)","line":163,"loc":{"start":{"line":163,"column":40},"end":{"line":163,"column":79}}},"4":{"name":"(anonymous_4)","line":165,"loc":{"start":{"line":165,"column":55},"end":{"line":165,"column":71}}},"5":{"name":"(anonymous_5)","line":167,"loc":{"start":{"line":167,"column":43},"end":{"line":167,"column":56}}},"6":{"name":"(anonymous_6)","line":177,"loc":{"start":{"line":177,"column":32},"end":{"line":177,"column":64}}},"7":{"name":"(anonymous_7)","line":184,"loc":{"start":{"line":184,"column":24},"end":{"line":184,"column":48}}},"8":{"name":"(anonymous_8)","line":213,"loc":{"start":{"line":213,"column":45},"end":{"line":213,"column":84}}},"9":{"name":"(anonymous_9)","line":238,"loc":{"start":{"line":238,"column":45},"end":{"line":238,"column":103}}},"10":{"name":"(anonymous_10)","line":266,"loc":{"start":{"line":266,"column":48},"end":{"line":266,"column":101}}},"11":{"name":"(anonymous_11)","line":295,"loc":{"start":{"line":295,"column":58},"end":{"line":295,"column":119}}},"12":{"name":"(anonymous_12)","line":297,"loc":{"start":{"line":297,"column":55},"end":{"line":297,"column":71}}},"13":{"name":"(anonymous_13)","line":299,"loc":{"start":{"line":299,"column":42},"end":{"line":299,"column":55}}},"14":{"name":"(anonymous_14)","line":317,"loc":{"start":{"line":317,"column":32},"end":{"line":317,"column":64}}},"15":{"name":"(anonymous_15)","line":336,"loc":{"start":{"line":336,"column":25},"end":{"line":336,"column":53}}},"16":{"name":"(anonymous_16)","line":352,"loc":{"start":{"line":352,"column":24},"end":{"line":352,"column":48}}},"17":{"name":"(anonymous_17)","line":385,"loc":{"start":{"line":385,"column":43},"end":{"line":385,"column":93}}},"18":{"name":"(anonymous_18)","line":387,"loc":{"start":{"line":387,"column":55},"end":{"line":387,"column":71}}},"19":{"name":"(anonymous_19)","line":389,"loc":{"start":{"line":389,"column":46},"end":{"line":389,"column":59}}},"20":{"name":"(anonymous_20)","line":424,"loc":{"start":{"line":424,"column":40},"end":{"line":424,"column":90}}},"21":{"name":"(anonymous_21)","line":426,"loc":{"start":{"line":426,"column":55},"end":{"line":426,"column":71}}},"22":{"name":"(anonymous_22)","line":428,"loc":{"start":{"line":428,"column":43},"end":{"line":428,"column":56}}},"23":{"name":"(anonymous_23)","line":430,"loc":{"start":{"line":430,"column":11},"end":{"line":430,"column":23}}},"24":{"name":"(anonymous_24)","line":443,"loc":{"start":{"line":443,"column":32},"end":{"line":443,"column":64}}},"25":{"name":"(anonymous_25)","line":454,"loc":{"start":{"line":454,"column":24},"end":{"line":454,"column":48}}},"26":{"name":"(anonymous_26)","line":496,"loc":{"start":{"line":496,"column":51},"end":{"line":496,"column":101}}},"27":{"name":"(anonymous_27)","line":498,"loc":{"start":{"line":498,"column":55},"end":{"line":498,"column":71}}},"28":{"name":"(anonymous_28)","line":500,"loc":{"start":{"line":500,"column":54},"end":{"line":500,"column":67}}},"29":{"name":"(anonymous_29)","line":508,"loc":{"start":{"line":508,"column":53},"end":{"line":508,"column":88}}},"30":{"name":"(anonymous_30)","line":519,"loc":{"start":{"line":519,"column":47},"end":{"line":519,"column":103}}},"31":{"name":"(anonymous_31)","line":558,"loc":{"start":{"line":558,"column":47},"end":{"line":558,"column":97}}},"32":{"name":"(anonymous_32)","line":560,"loc":{"start":{"line":560,"column":55},"end":{"line":560,"column":71}}},"33":{"name":"(anonymous_33)","line":562,"loc":{"start":{"line":562,"column":50},"end":{"line":562,"column":63}}},"34":{"name":"(anonymous_34)","line":576,"loc":{"start":{"line":576,"column":32},"end":{"line":576,"column":64}}},"35":{"name":"(anonymous_35)","line":584,"loc":{"start":{"line":584,"column":24},"end":{"line":584,"column":48}}},"36":{"name":"(anonymous_36)","line":617,"loc":{"start":{"line":617,"column":45},"end":{"line":617,"column":95}}},"37":{"name":"(anonymous_37)","line":619,"loc":{"start":{"line":619,"column":55},"end":{"line":619,"column":71}}},"38":{"name":"(anonymous_38)","line":621,"loc":{"start":{"line":621,"column":48},"end":{"line":621,"column":61}}},"39":{"name":"(anonymous_39)","line":636,"loc":{"start":{"line":636,"column":32},"end":{"line":636,"column":64}}},"40":{"name":"(anonymous_40)","line":644,"loc":{"start":{"line":644,"column":24},"end":{"line":644,"column":48}}},"41":{"name":"(anonymous_41)","line":680,"loc":{"start":{"line":680,"column":45},"end":{"line":680,"column":105}}},"42":{"name":"(anonymous_42)","line":682,"loc":{"start":{"line":682,"column":55},"end":{"line":682,"column":71}}},"43":{"name":"(anonymous_43)","line":684,"loc":{"start":{"line":684,"column":48},"end":{"line":684,"column":61}}},"44":{"name":"(anonymous_44)","line":699,"loc":{"start":{"line":699,"column":32},"end":{"line":699,"column":64}}},"45":{"name":"(anonymous_45)","line":706,"loc":{"start":{"line":706,"column":24},"end":{"line":706,"column":48}}},"46":{"name":"(anonymous_46)","line":738,"loc":{"start":{"line":738,"column":40},"end":{"line":738,"column":90}}},"47":{"name":"(anonymous_47)","line":740,"loc":{"start":{"line":740,"column":55},"end":{"line":740,"column":71}}},"48":{"name":"(anonymous_48)","line":742,"loc":{"start":{"line":742,"column":43},"end":{"line":742,"column":56}}},"49":{"name":"(anonymous_49)","line":756,"loc":{"start":{"line":756,"column":32},"end":{"line":756,"column":64}}},"50":{"name":"(anonymous_50)","line":764,"loc":{"start":{"line":764,"column":24},"end":{"line":764,"column":48}}},"51":{"name":"(anonymous_51)","line":797,"loc":{"start":{"line":797,"column":40},"end":{"line":797,"column":109}}},"52":{"name":"(anonymous_52)","line":799,"loc":{"start":{"line":799,"column":55},"end":{"line":799,"column":71}}},"53":{"name":"(anonymous_53)","line":801,"loc":{"start":{"line":801,"column":43},"end":{"line":801,"column":56}}},"54":{"name":"(anonymous_54)","line":825,"loc":{"start":{"line":825,"column":32},"end":{"line":825,"column":64}}},"55":{"name":"(anonymous_55)","line":835,"loc":{"start":{"line":835,"column":24},"end":{"line":835,"column":48}}},"56":{"name":"(anonymous_56)","line":868,"loc":{"start":{"line":868,"column":40},"end":{"line":868,"column":90}}},"57":{"name":"(anonymous_57)","line":870,"loc":{"start":{"line":870,"column":55},"end":{"line":870,"column":71}}},"58":{"name":"(anonymous_58)","line":872,"loc":{"start":{"line":872,"column":43},"end":{"line":872,"column":56}}},"59":{"name":"(anonymous_59)","line":883,"loc":{"start":{"line":883,"column":32},"end":{"line":883,"column":64}}},"60":{"name":"(anonymous_60)","line":884,"loc":{"start":{"line":884,"column":24},"end":{"line":884,"column":48}}},"61":{"name":"(anonymous_61)","line":919,"loc":{"start":{"line":919,"column":48},"end":{"line":919,"column":98}}},"62":{"name":"(anonymous_62)","line":921,"loc":{"start":{"line":921,"column":55},"end":{"line":921,"column":71}}},"63":{"name":"(anonymous_63)","line":923,"loc":{"start":{"line":923,"column":51},"end":{"line":923,"column":64}}},"64":{"name":"(anonymous_64)","line":931,"loc":{"start":{"line":931,"column":53},"end":{"line":931,"column":88}}},"65":{"name":"(anonymous_65)","line":938,"loc":{"start":{"line":938,"column":47},"end":{"line":938,"column":86}}},"66":{"name":"(anonymous_66)","line":978,"loc":{"start":{"line":978,"column":53},"end":{"line":978,"column":117}}},"67":{"name":"(anonymous_67)","line":1006,"loc":{"start":{"line":1006,"column":63},"end":{"line":1006,"column":135}}},"68":{"name":"(anonymous_68)","line":1008,"loc":{"start":{"line":1008,"column":55},"end":{"line":1008,"column":71}}},"69":{"name":"(anonymous_69)","line":1041,"loc":{"start":{"line":1041,"column":43},"end":{"line":1041,"column":107}}},"70":{"name":"(anonymous_70)","line":1073,"loc":{"start":{"line":1073,"column":53},"end":{"line":1073,"column":125}}},"71":{"name":"(anonymous_71)","line":1104,"loc":{"start":{"line":1104,"column":37},"end":{"line":1104,"column":93}}},"72":{"name":"(anonymous_72)","line":1106,"loc":{"start":{"line":1106,"column":55},"end":{"line":1106,"column":71}}},"73":{"name":"(anonymous_73)","line":1108,"loc":{"start":{"line":1108,"column":40},"end":{"line":1108,"column":53}}},"74":{"name":"(anonymous_74)","line":1146,"loc":{"start":{"line":1146,"column":35},"end":{"line":1146,"column":100}}},"75":{"name":"(anonymous_75)","line":1148,"loc":{"start":{"line":1148,"column":55},"end":{"line":1148,"column":71}}},"76":{"name":"(anonymous_76)","line":1150,"loc":{"start":{"line":1150,"column":38},"end":{"line":1150,"column":51}}},"77":{"name":"(anonymous_77)","line":1186,"loc":{"start":{"line":1186,"column":36},"end":{"line":1186,"column":118}}},"78":{"name":"(anonymous_78)","line":1188,"loc":{"start":{"line":1188,"column":55},"end":{"line":1188,"column":71}}},"79":{"name":"(anonymous_79)","line":1190,"loc":{"start":{"line":1190,"column":39},"end":{"line":1190,"column":52}}},"80":{"name":"(anonymous_80)","line":1226,"loc":{"start":{"line":1226,"column":37},"end":{"line":1226,"column":102}}},"81":{"name":"(anonymous_81)","line":1228,"loc":{"start":{"line":1228,"column":55},"end":{"line":1228,"column":71}}},"82":{"name":"(anonymous_82)","line":1230,"loc":{"start":{"line":1230,"column":40},"end":{"line":1230,"column":53}}},"83":{"name":"(anonymous_83)","line":1267,"loc":{"start":{"line":1267,"column":35},"end":{"line":1267,"column":91}}},"84":{"name":"(anonymous_84)","line":1269,"loc":{"start":{"line":1269,"column":55},"end":{"line":1269,"column":71}}},"85":{"name":"(anonymous_85)","line":1271,"loc":{"start":{"line":1271,"column":38},"end":{"line":1271,"column":51}}},"86":{"name":"(anonymous_86)","line":1311,"loc":{"start":{"line":1311,"column":42},"end":{"line":1311,"column":98}}},"87":{"name":"(anonymous_87)","line":1313,"loc":{"start":{"line":1313,"column":55},"end":{"line":1313,"column":71}}},"88":{"name":"(anonymous_88)","line":1315,"loc":{"start":{"line":1315,"column":45},"end":{"line":1315,"column":58}}},"89":{"name":"(anonymous_89)","line":1335,"loc":{"start":{"line":1335,"column":32},"end":{"line":1335,"column":64}}},"90":{"name":"(anonymous_90)","line":1343,"loc":{"start":{"line":1343,"column":24},"end":{"line":1343,"column":48}}},"91":{"name":"(anonymous_91)","line":1380,"loc":{"start":{"line":1380,"column":40},"end":{"line":1380,"column":96}}},"92":{"name":"(anonymous_92)","line":1382,"loc":{"start":{"line":1382,"column":55},"end":{"line":1382,"column":71}}},"93":{"name":"(anonymous_93)","line":1384,"loc":{"start":{"line":1384,"column":43},"end":{"line":1384,"column":56}}},"94":{"name":"(anonymous_94)","line":1403,"loc":{"start":{"line":1403,"column":32},"end":{"line":1403,"column":64}}},"95":{"name":"(anonymous_95)","line":1411,"loc":{"start":{"line":1411,"column":24},"end":{"line":1411,"column":48}}},"96":{"name":"(anonymous_96)","line":1453,"loc":{"start":{"line":1453,"column":42},"end":{"line":1453,"column":110}}},"97":{"name":"(anonymous_97)","line":1455,"loc":{"start":{"line":1455,"column":55},"end":{"line":1455,"column":71}}},"98":{"name":"(anonymous_98)","line":1457,"loc":{"start":{"line":1457,"column":45},"end":{"line":1457,"column":58}}},"99":{"name":"(anonymous_99)","line":1507,"loc":{"start":{"line":1507,"column":40},"end":{"line":1507,"column":106}}},"100":{"name":"(anonymous_100)","line":1509,"loc":{"start":{"line":1509,"column":55},"end":{"line":1509,"column":71}}},"101":{"name":"(anonymous_101)","line":1511,"loc":{"start":{"line":1511,"column":43},"end":{"line":1511,"column":56}}},"102":{"name":"(anonymous_102)","line":1529,"loc":{"start":{"line":1529,"column":32},"end":{"line":1529,"column":64}}},"103":{"name":"(anonymous_103)","line":1536,"loc":{"start":{"line":1536,"column":24},"end":{"line":1536,"column":48}}},"104":{"name":"(anonymous_104)","line":1590,"loc":{"start":{"line":1590,"column":43},"end":{"line":1590,"column":114}}},"105":{"name":"(anonymous_105)","line":1592,"loc":{"start":{"line":1592,"column":55},"end":{"line":1592,"column":71}}},"106":{"name":"(anonymous_106)","line":1594,"loc":{"start":{"line":1594,"column":46},"end":{"line":1594,"column":59}}},"107":{"name":"(anonymous_107)","line":1639,"loc":{"start":{"line":1639,"column":41},"end":{"line":1639,"column":97}}},"108":{"name":"(anonymous_108)","line":1641,"loc":{"start":{"line":1641,"column":55},"end":{"line":1641,"column":71}}},"109":{"name":"(anonymous_109)","line":1643,"loc":{"start":{"line":1643,"column":44},"end":{"line":1643,"column":57}}},"110":{"name":"(anonymous_110)","line":1650,"loc":{"start":{"line":1650,"column":61},"end":{"line":1650,"column":102}}},"111":{"name":"(anonymous_111)","line":1707,"loc":{"start":{"line":1707,"column":40},"end":{"line":1707,"column":109}}},"112":{"name":"(anonymous_112)","line":1709,"loc":{"start":{"line":1709,"column":55},"end":{"line":1709,"column":71}}},"113":{"name":"(anonymous_113)","line":1712,"loc":{"start":{"line":1712,"column":43},"end":{"line":1712,"column":56}}},"114":{"name":"(anonymous_114)","line":1733,"loc":{"start":{"line":1733,"column":70},"end":{"line":1733,"column":99}}},"115":{"name":"(anonymous_115)","line":1790,"loc":{"start":{"line":1790,"column":38},"end":{"line":1790,"column":94}}},"116":{"name":"(anonymous_116)","line":1792,"loc":{"start":{"line":1792,"column":55},"end":{"line":1792,"column":71}}},"117":{"name":"(anonymous_117)","line":1794,"loc":{"start":{"line":1794,"column":41},"end":{"line":1794,"column":54}}},"118":{"name":"(anonymous_118)","line":1814,"loc":{"start":{"line":1814,"column":32},"end":{"line":1814,"column":64}}},"119":{"name":"(anonymous_119)","line":1827,"loc":{"start":{"line":1827,"column":24},"end":{"line":1827,"column":48}}},"120":{"name":"(anonymous_120)","line":1865,"loc":{"start":{"line":1865,"column":35},"end":{"line":1865,"column":91}}},"121":{"name":"(anonymous_121)","line":1867,"loc":{"start":{"line":1867,"column":55},"end":{"line":1867,"column":71}}},"122":{"name":"(anonymous_122)","line":1869,"loc":{"start":{"line":1869,"column":38},"end":{"line":1869,"column":51}}},"123":{"name":"(anonymous_123)","line":1890,"loc":{"start":{"line":1890,"column":32},"end":{"line":1890,"column":64}}},"124":{"name":"(anonymous_124)","line":1891,"loc":{"start":{"line":1891,"column":24},"end":{"line":1891,"column":48}}},"125":{"name":"(anonymous_125)","line":1923,"loc":{"start":{"line":1923,"column":38},"end":{"line":1923,"column":94}}},"126":{"name":"(anonymous_126)","line":1925,"loc":{"start":{"line":1925,"column":55},"end":{"line":1925,"column":71}}},"127":{"name":"(anonymous_127)","line":1927,"loc":{"start":{"line":1927,"column":41},"end":{"line":1927,"column":54}}},"128":{"name":"(anonymous_128)","line":1970,"loc":{"start":{"line":1970,"column":43},"end":{"line":1970,"column":99}}},"129":{"name":"(anonymous_129)","line":1972,"loc":{"start":{"line":1972,"column":55},"end":{"line":1972,"column":71}}},"130":{"name":"(anonymous_130)","line":1974,"loc":{"start":{"line":1974,"column":46},"end":{"line":1974,"column":59}}},"131":{"name":"(anonymous_131)","line":1983,"loc":{"start":{"line":1983,"column":54},"end":{"line":1983,"column":95}}},"132":{"name":"(anonymous_132)","line":1990,"loc":{"start":{"line":1990,"column":48},"end":{"line":1990,"column":87}}},"133":{"name":"(anonymous_133)","line":2033,"loc":{"start":{"line":2033,"column":43},"end":{"line":2033,"column":99}}},"134":{"name":"(anonymous_134)","line":2035,"loc":{"start":{"line":2035,"column":55},"end":{"line":2035,"column":71}}},"135":{"name":"(anonymous_135)","line":2037,"loc":{"start":{"line":2037,"column":46},"end":{"line":2037,"column":59}}},"136":{"name":"(anonymous_136)","line":2051,"loc":{"start":{"line":2051,"column":32},"end":{"line":2051,"column":64}}},"137":{"name":"(anonymous_137)","line":2057,"loc":{"start":{"line":2057,"column":24},"end":{"line":2057,"column":48}}},"138":{"name":"(anonymous_138)","line":2097,"loc":{"start":{"line":2097,"column":38},"end":{"line":2097,"column":117}}},"139":{"name":"(anonymous_139)","line":2099,"loc":{"start":{"line":2099,"column":55},"end":{"line":2099,"column":71}}},"140":{"name":"(anonymous_140)","line":2101,"loc":{"start":{"line":2101,"column":41},"end":{"line":2101,"column":54}}},"141":{"name":"(anonymous_141)","line":2136,"loc":{"start":{"line":2136,"column":32},"end":{"line":2136,"column":64}}},"142":{"name":"(anonymous_142)","line":2147,"loc":{"start":{"line":2147,"column":24},"end":{"line":2147,"column":48}}},"143":{"name":"(anonymous_143)","line":2179,"loc":{"start":{"line":2179,"column":38},"end":{"line":2179,"column":102}}},"144":{"name":"(anonymous_144)","line":2181,"loc":{"start":{"line":2181,"column":55},"end":{"line":2181,"column":71}}},"145":{"name":"(anonymous_145)","line":2183,"loc":{"start":{"line":2183,"column":41},"end":{"line":2183,"column":54}}},"146":{"name":"(anonymous_146)","line":2200,"loc":{"start":{"line":2200,"column":32},"end":{"line":2200,"column":64}}},"147":{"name":"(anonymous_147)","line":2201,"loc":{"start":{"line":2201,"column":24},"end":{"line":2201,"column":48}}},"148":{"name":"(anonymous_148)","line":2233,"loc":{"start":{"line":2233,"column":54},"end":{"line":2233,"column":110}}},"149":{"name":"(anonymous_149)","line":2244,"loc":{"start":{"line":2244,"column":57},"end":{"line":2244,"column":70}}},"150":{"name":"(anonymous_150)","line":2252,"loc":{"start":{"line":2252,"column":59},"end":{"line":2252,"column":72}}},"151":{"name":"(anonymous_151)","line":2303,"loc":{"start":{"line":2303,"column":31},"end":{"line":2303,"column":89}}},"152":{"name":"(anonymous_152)","line":2304,"loc":{"start":{"line":2304,"column":34},"end":{"line":2304,"column":47}}},"153":{"name":"(anonymous_153)","line":2366,"loc":{"start":{"line":2366,"column":39},"end":{"line":2366,"column":103}}},"154":{"name":"(anonymous_154)","line":2368,"loc":{"start":{"line":2368,"column":55},"end":{"line":2368,"column":71}}},"155":{"name":"(anonymous_155)","line":2370,"loc":{"start":{"line":2370,"column":42},"end":{"line":2370,"column":55}}},"156":{"name":"(anonymous_156)","line":2394,"loc":{"start":{"line":2394,"column":32},"end":{"line":2394,"column":64}}},"157":{"name":"(anonymous_157)","line":2395,"loc":{"start":{"line":2395,"column":24},"end":{"line":2395,"column":48}}},"158":{"name":"(anonymous_158)","line":2447,"loc":{"start":{"line":2447,"column":52},"end":{"line":2447,"column":123}}},"159":{"name":"(anonymous_159)","line":2493,"loc":{"start":{"line":2493,"column":49},"end":{"line":2493,"column":127}}},"160":{"name":"(anonymous_160)","line":2543,"loc":{"start":{"line":2543,"column":60},"end":{"line":2543,"column":116}}},"161":{"name":"(anonymous_161)","line":2593,"loc":{"start":{"line":2593,"column":55},"end":{"line":2593,"column":119}}},"162":{"name":"(anonymous_162)","line":2626,"loc":{"start":{"line":2626,"column":46},"end":{"line":2626,"column":136}}},"163":{"name":"(anonymous_163)","line":2628,"loc":{"start":{"line":2628,"column":55},"end":{"line":2628,"column":71}}},"164":{"name":"(anonymous_164)","line":2630,"loc":{"start":{"line":2630,"column":49},"end":{"line":2630,"column":62}}},"165":{"name":"(anonymous_165)","line":2645,"loc":{"start":{"line":2645,"column":84},"end":{"line":2645,"column":120}}},"166":{"name":"(anonymous_166)","line":2681,"loc":{"start":{"line":2681,"column":39},"end":{"line":2681,"column":95}}},"167":{"name":"(anonymous_167)","line":2683,"loc":{"start":{"line":2683,"column":55},"end":{"line":2683,"column":71}}},"168":{"name":"(anonymous_168)","line":2685,"loc":{"start":{"line":2685,"column":42},"end":{"line":2685,"column":55}}},"169":{"name":"(anonymous_169)","line":2711,"loc":{"start":{"line":2711,"column":32},"end":{"line":2711,"column":64}}},"170":{"name":"(anonymous_170)","line":2725,"loc":{"start":{"line":2725,"column":25},"end":{"line":2725,"column":46}}},"171":{"name":"(anonymous_171)","line":2735,"loc":{"start":{"line":2735,"column":24},"end":{"line":2735,"column":48}}},"172":{"name":"(anonymous_172)","line":2773,"loc":{"start":{"line":2773,"column":42},"end":{"line":2773,"column":120}}},"173":{"name":"(anonymous_173)","line":2775,"loc":{"start":{"line":2775,"column":55},"end":{"line":2775,"column":71}}},"174":{"name":"(anonymous_174)","line":2777,"loc":{"start":{"line":2777,"column":45},"end":{"line":2777,"column":58}}},"175":{"name":"(anonymous_175)","line":2808,"loc":{"start":{"line":2808,"column":32},"end":{"line":2808,"column":64}}},"176":{"name":"(anonymous_176)","line":2820,"loc":{"start":{"line":2820,"column":34},"end":{"line":2820,"column":55}}},"177":{"name":"(anonymous_177)","line":2838,"loc":{"start":{"line":2838,"column":34},"end":{"line":2838,"column":55}}},"178":{"name":"(anonymous_178)","line":2850,"loc":{"start":{"line":2850,"column":24},"end":{"line":2850,"column":48}}},"179":{"name":"(anonymous_179)","line":2885,"loc":{"start":{"line":2885,"column":39},"end":{"line":2885,"column":117}}},"180":{"name":"(anonymous_180)","line":2887,"loc":{"start":{"line":2887,"column":55},"end":{"line":2887,"column":71}}},"181":{"name":"(anonymous_181)","line":2889,"loc":{"start":{"line":2889,"column":42},"end":{"line":2889,"column":55}}},"182":{"name":"(anonymous_182)","line":2900,"loc":{"start":{"line":2900,"column":32},"end":{"line":2900,"column":64}}},"183":{"name":"(anonymous_183)","line":2901,"loc":{"start":{"line":2901,"column":24},"end":{"line":2901,"column":48}}},"184":{"name":"(anonymous_184)","line":2936,"loc":{"start":{"line":2936,"column":39},"end":{"line":2936,"column":101}}},"185":{"name":"(anonymous_185)","line":2938,"loc":{"start":{"line":2938,"column":55},"end":{"line":2938,"column":71}}},"186":{"name":"(anonymous_186)","line":2940,"loc":{"start":{"line":2940,"column":42},"end":{"line":2940,"column":55}}},"187":{"name":"(anonymous_187)","line":2995,"loc":{"start":{"line":2995,"column":50},"end":{"line":2995,"column":144}}},"188":{"name":"(anonymous_188)","line":2997,"loc":{"start":{"line":2997,"column":55},"end":{"line":2997,"column":71}}},"189":{"name":"(anonymous_189)","line":2999,"loc":{"start":{"line":2999,"column":53},"end":{"line":2999,"column":66}}},"190":{"name":"(anonymous_190)","line":3026,"loc":{"start":{"line":3026,"column":32},"end":{"line":3026,"column":64}}},"191":{"name":"(anonymous_191)","line":3033,"loc":{"start":{"line":3033,"column":24},"end":{"line":3033,"column":48}}},"192":{"name":"(anonymous_192)","line":3086,"loc":{"start":{"line":3086,"column":53},"end":{"line":3086,"column":124}}},"193":{"name":"(anonymous_193)","line":3133,"loc":{"start":{"line":3133,"column":50},"end":{"line":3133,"column":128}}},"194":{"name":"(anonymous_194)","line":3174,"loc":{"start":{"line":3174,"column":48},"end":{"line":3174,"column":110}}},"195":{"name":"(anonymous_195)","line":3223,"loc":{"start":{"line":3223,"column":53},"end":{"line":3223,"column":109}}},"196":{"name":"(anonymous_196)","line":3255,"loc":{"start":{"line":3255,"column":46},"end":{"line":3255,"column":137}}},"197":{"name":"(anonymous_197)","line":3257,"loc":{"start":{"line":3257,"column":55},"end":{"line":3257,"column":71}}},"198":{"name":"(anonymous_198)","line":3259,"loc":{"start":{"line":3259,"column":49},"end":{"line":3259,"column":62}}},"199":{"name":"(anonymous_199)","line":3304,"loc":{"start":{"line":3304,"column":44},"end":{"line":3304,"column":118}}},"200":{"name":"(anonymous_200)","line":3306,"loc":{"start":{"line":3306,"column":55},"end":{"line":3306,"column":71}}},"201":{"name":"(anonymous_201)","line":3308,"loc":{"start":{"line":3308,"column":47},"end":{"line":3308,"column":60}}},"202":{"name":"(anonymous_202)","line":3355,"loc":{"start":{"line":3355,"column":37},"end":{"line":3355,"column":117}}},"203":{"name":"(anonymous_203)","line":3359,"loc":{"start":{"line":3359,"column":25},"end":{"line":3359,"column":37}}},"204":{"name":"(anonymous_204)","line":3367,"loc":{"start":{"line":3367,"column":34},"end":{"line":3367,"column":66}}},"205":{"name":"(anonymous_205)","line":3368,"loc":{"start":{"line":3368,"column":26},"end":{"line":3368,"column":50}}},"206":{"name":"(anonymous_206)","line":3387,"loc":{"start":{"line":3387,"column":54},"end":{"line":3387,"column":90}}},"207":{"name":"(anonymous_207)","line":3434,"loc":{"start":{"line":3434,"column":37},"end":{"line":3434,"column":104}}},"208":{"name":"(anonymous_208)","line":3436,"loc":{"start":{"line":3436,"column":55},"end":{"line":3436,"column":71}}},"209":{"name":"(anonymous_209)","line":3438,"loc":{"start":{"line":3438,"column":40},"end":{"line":3438,"column":53}}},"210":{"name":"(anonymous_210)","line":3456,"loc":{"start":{"line":3456,"column":32},"end":{"line":3456,"column":64}}},"211":{"name":"(anonymous_211)","line":3464,"loc":{"start":{"line":3464,"column":24},"end":{"line":3464,"column":48}}},"212":{"name":"(anonymous_212)","line":3499,"loc":{"start":{"line":3499,"column":35},"end":{"line":3499,"column":106}}},"213":{"name":"(anonymous_213)","line":3501,"loc":{"start":{"line":3501,"column":55},"end":{"line":3501,"column":71}}},"214":{"name":"(anonymous_214)","line":3503,"loc":{"start":{"line":3503,"column":38},"end":{"line":3503,"column":51}}},"215":{"name":"(anonymous_215)","line":3519,"loc":{"start":{"line":3519,"column":32},"end":{"line":3519,"column":64}}},"216":{"name":"(anonymous_216)","line":3525,"loc":{"start":{"line":3525,"column":24},"end":{"line":3525,"column":48}}},"217":{"name":"(anonymous_217)","line":3538,"loc":{"start":{"line":3538,"column":46},"end":{"line":3538,"column":58}}},"218":{"name":"(anonymous_218)","line":3546,"loc":{"start":{"line":3546,"column":35},"end":{"line":3546,"column":61}}},"219":{"name":"(anonymous_219)","line":3584,"loc":{"start":{"line":3584,"column":50},"end":{"line":3584,"column":106}}},"220":{"name":"(anonymous_220)","line":3586,"loc":{"start":{"line":3586,"column":55},"end":{"line":3586,"column":71}}},"221":{"name":"(anonymous_221)","line":3588,"loc":{"start":{"line":3588,"column":53},"end":{"line":3588,"column":66}}},"222":{"name":"(anonymous_222)","line":3606,"loc":{"start":{"line":3606,"column":32},"end":{"line":3606,"column":64}}},"223":{"name":"(anonymous_223)","line":3607,"loc":{"start":{"line":3607,"column":24},"end":{"line":3607,"column":48}}},"224":{"name":"(anonymous_224)","line":3659,"loc":{"start":{"line":3659,"column":54},"end":{"line":3659,"column":125}}},"225":{"name":"(anonymous_225)","line":3706,"loc":{"start":{"line":3706,"column":51},"end":{"line":3706,"column":129}}},"226":{"name":"(anonymous_226)","line":3750,"loc":{"start":{"line":3750,"column":49},"end":{"line":3750,"column":111}}},"227":{"name":"(anonymous_227)","line":3795,"loc":{"start":{"line":3795,"column":57},"end":{"line":3795,"column":113}}},"228":{"name":"(anonymous_228)","line":3840,"loc":{"start":{"line":3840,"column":62},"end":{"line":3840,"column":118}}},"229":{"name":"(anonymous_229)","line":3882,"loc":{"start":{"line":3882,"column":44},"end":{"line":3882,"column":115}}},"230":{"name":"(anonymous_230)","line":3884,"loc":{"start":{"line":3884,"column":55},"end":{"line":3884,"column":71}}},"231":{"name":"(anonymous_231)","line":3886,"loc":{"start":{"line":3886,"column":47},"end":{"line":3886,"column":60}}},"232":{"name":"(anonymous_232)","line":3897,"loc":{"start":{"line":3897,"column":25},"end":{"line":3897,"column":48}}},"233":{"name":"(anonymous_233)","line":3902,"loc":{"start":{"line":3902,"column":27},"end":{"line":3902,"column":66}}},"234":{"name":"(anonymous_234)","line":3955,"loc":{"start":{"line":3955,"column":41},"end":{"line":3955,"column":119}}},"235":{"name":"(anonymous_235)","line":3957,"loc":{"start":{"line":3957,"column":55},"end":{"line":3957,"column":71}}},"236":{"name":"(anonymous_236)","line":3959,"loc":{"start":{"line":3959,"column":44},"end":{"line":3959,"column":57}}},"237":{"name":"(anonymous_237)","line":4009,"loc":{"start":{"line":4009,"column":39},"end":{"line":4009,"column":101}}},"238":{"name":"(anonymous_238)","line":4046,"loc":{"start":{"line":4046,"column":46},"end":{"line":4046,"column":128}}},"239":{"name":"(anonymous_239)","line":4048,"loc":{"start":{"line":4048,"column":55},"end":{"line":4048,"column":71}}},"240":{"name":"(anonymous_240)","line":4050,"loc":{"start":{"line":4050,"column":49},"end":{"line":4050,"column":62}}},"241":{"name":"(anonymous_241)","line":4098,"loc":{"start":{"line":4098,"column":44},"end":{"line":4098,"column":109}}},"242":{"name":"(anonymous_242)","line":4100,"loc":{"start":{"line":4100,"column":55},"end":{"line":4100,"column":71}}},"243":{"name":"(anonymous_243)","line":4102,"loc":{"start":{"line":4102,"column":47},"end":{"line":4102,"column":60}}},"244":{"name":"(anonymous_244)","line":4163,"loc":{"start":{"line":4163,"column":49},"end":{"line":4163,"column":130}}},"245":{"name":"(anonymous_245)","line":4165,"loc":{"start":{"line":4165,"column":55},"end":{"line":4165,"column":71}}},"246":{"name":"(anonymous_246)","line":4167,"loc":{"start":{"line":4167,"column":52},"end":{"line":4167,"column":65}}},"247":{"name":"(anonymous_247)","line":4182,"loc":{"start":{"line":4182,"column":25},"end":{"line":4182,"column":76}}},"248":{"name":"(anonymous_248)","line":4192,"loc":{"start":{"line":4192,"column":27},"end":{"line":4192,"column":78}}},"249":{"name":"(anonymous_249)","line":4203,"loc":{"start":{"line":4203,"column":25},"end":{"line":4203,"column":48}}},"250":{"name":"(anonymous_250)","line":4258,"loc":{"start":{"line":4258,"column":46},"end":{"line":4258,"column":134}}},"251":{"name":"(anonymous_251)","line":4260,"loc":{"start":{"line":4260,"column":55},"end":{"line":4260,"column":71}}},"252":{"name":"(anonymous_252)","line":4262,"loc":{"start":{"line":4262,"column":49},"end":{"line":4262,"column":62}}},"253":{"name":"(anonymous_253)","line":4275,"loc":{"start":{"line":4275,"column":25},"end":{"line":4275,"column":76}}},"254":{"name":"(anonymous_254)","line":4329,"loc":{"start":{"line":4329,"column":44},"end":{"line":4329,"column":119}}},"255":{"name":"(anonymous_255)","line":4331,"loc":{"start":{"line":4331,"column":55},"end":{"line":4331,"column":71}}},"256":{"name":"(anonymous_256)","line":4333,"loc":{"start":{"line":4333,"column":47},"end":{"line":4333,"column":60}}},"257":{"name":"(anonymous_257)","line":4344,"loc":{"start":{"line":4344,"column":25},"end":{"line":4344,"column":76}}},"258":{"name":"(anonymous_258)","line":4401,"loc":{"start":{"line":4401,"column":49},"end":{"line":4401,"column":138}}},"259":{"name":"(anonymous_259)","line":4403,"loc":{"start":{"line":4403,"column":55},"end":{"line":4403,"column":71}}},"260":{"name":"(anonymous_260)","line":4405,"loc":{"start":{"line":4405,"column":52},"end":{"line":4405,"column":65}}},"261":{"name":"(anonymous_261)","line":4431,"loc":{"start":{"line":4431,"column":23},"end":{"line":4431,"column":74}}},"262":{"name":"(anonymous_262)","line":4437,"loc":{"start":{"line":4437,"column":98},"end":{"line":4437,"column":131}}},"263":{"name":"(anonymous_263)","line":4502,"loc":{"start":{"line":4502,"column":46},"end":{"line":4502,"column":145}}},"264":{"name":"(anonymous_264)","line":4504,"loc":{"start":{"line":4504,"column":55},"end":{"line":4504,"column":71}}},"265":{"name":"(anonymous_265)","line":4515,"loc":{"start":{"line":4515,"column":20},"end":{"line":4515,"column":32}}},"266":{"name":"(anonymous_266)","line":4516,"loc":{"start":{"line":4516,"column":33},"end":{"line":4516,"column":45}}},"267":{"name":"(anonymous_267)","line":4517,"loc":{"start":{"line":4517,"column":26},"end":{"line":4517,"column":61}}},"268":{"name":"(anonymous_268)","line":4526,"loc":{"start":{"line":4526,"column":108},"end":{"line":4526,"column":144}}},"269":{"name":"(anonymous_269)","line":4554,"loc":{"start":{"line":4554,"column":55},"end":{"line":4554,"column":94}}},"270":{"name":"(anonymous_270)","line":4617,"loc":{"start":{"line":4617,"column":44},"end":{"line":4617,"column":130}}},"271":{"name":"(anonymous_271)","line":4619,"loc":{"start":{"line":4619,"column":55},"end":{"line":4619,"column":71}}},"272":{"name":"(anonymous_272)","line":4624,"loc":{"start":{"line":4624,"column":20},"end":{"line":4624,"column":32}}},"273":{"name":"(anonymous_273)","line":4644,"loc":{"start":{"line":4644,"column":24},"end":{"line":4644,"column":63}}},"274":{"name":"(anonymous_274)","line":4646,"loc":{"start":{"line":4646,"column":73},"end":{"line":4646,"column":106}}},"275":{"name":"(anonymous_275)","line":4667,"loc":{"start":{"line":4667,"column":55},"end":{"line":4667,"column":84}}},"276":{"name":"(anonymous_276)","line":4725,"loc":{"start":{"line":4725,"column":38},"end":{"line":4725,"column":106}}},"277":{"name":"(anonymous_277)","line":4745,"loc":{"start":{"line":4745,"column":32},"end":{"line":4745,"column":64}}},"278":{"name":"(anonymous_278)","line":4755,"loc":{"start":{"line":4755,"column":24},"end":{"line":4755,"column":48}}},"279":{"name":"(anonymous_279)","line":4807,"loc":{"start":{"line":4807,"column":37},"end":{"line":4807,"column":108}}},"280":{"name":"(anonymous_280)","line":4812,"loc":{"start":{"line":4812,"column":25},"end":{"line":4812,"column":37}}},"281":{"name":"(anonymous_281)","line":4823,"loc":{"start":{"line":4823,"column":34},"end":{"line":4823,"column":66}}},"282":{"name":"(anonymous_282)","line":4830,"loc":{"start":{"line":4830,"column":26},"end":{"line":4830,"column":50}}},"283":{"name":"(anonymous_283)","line":4852,"loc":{"start":{"line":4852,"column":54},"end":{"line":4852,"column":90}}},"284":{"name":"(anonymous_284)","line":4896,"loc":{"start":{"line":4896,"column":35},"end":{"line":4896,"column":103}}},"285":{"name":"(anonymous_285)","line":4899,"loc":{"start":{"line":4899,"column":40},"end":{"line":4899,"column":53}}},"286":{"name":"(anonymous_286)","line":4916,"loc":{"start":{"line":4916,"column":32},"end":{"line":4916,"column":64}}},"287":{"name":"(anonymous_287)","line":4923,"loc":{"start":{"line":4923,"column":24},"end":{"line":4923,"column":48}}},"288":{"name":"(anonymous_288)","line":4963,"loc":{"start":{"line":4963,"column":37},"end":{"line":4963,"column":123}}},"289":{"name":"(anonymous_289)","line":4972,"loc":{"start":{"line":4972,"column":32},"end":{"line":4972,"column":64}}},"290":{"name":"(anonymous_290)","line":4979,"loc":{"start":{"line":4979,"column":24},"end":{"line":4979,"column":48}}},"291":{"name":"(anonymous_291)","line":4996,"loc":{"start":{"line":4996,"column":49},"end":{"line":4996,"column":120}}},"292":{"name":"(anonymous_292)","line":5074,"loc":{"start":{"line":5074,"column":54},"end":{"line":5074,"column":137}}},"293":{"name":"(anonymous_293)","line":5159,"loc":{"start":{"line":5159,"column":25},"end":{"line":5159,"column":48}}},"294":{"name":"(anonymous_294)","line":5174,"loc":{"start":{"line":5174,"column":27},"end":{"line":5174,"column":39}}},"295":{"name":"(anonymous_295)","line":5191,"loc":{"start":{"line":5191,"column":31},"end":{"line":5191,"column":43}}},"296":{"name":"(anonymous_296)","line":5196,"loc":{"start":{"line":5196,"column":112},"end":{"line":5196,"column":129}}},"297":{"name":"(anonymous_297)","line":5207,"loc":{"start":{"line":5207,"column":30},"end":{"line":5207,"column":42}}},"298":{"name":"(anonymous_298)","line":5215,"loc":{"start":{"line":5215,"column":135},"end":{"line":5215,"column":152}}},"299":{"name":"(anonymous_299)","line":5227,"loc":{"start":{"line":5227,"column":32},"end":{"line":5227,"column":44}}},"300":{"name":"(anonymous_300)","line":5238,"loc":{"start":{"line":5238,"column":103},"end":{"line":5238,"column":133}}},"301":{"name":"(anonymous_301)","line":5267,"loc":{"start":{"line":5267,"column":24},"end":{"line":5267,"column":36}}},"302":{"name":"(anonymous_302)","line":5272,"loc":{"start":{"line":5272,"column":30},"end":{"line":5272,"column":42}}},"303":{"name":"(anonymous_303)","line":5277,"loc":{"start":{"line":5277,"column":28},"end":{"line":5277,"column":45}}},"304":{"name":"(anonymous_304)","line":5296,"loc":{"start":{"line":5296,"column":61},"end":{"line":5296,"column":99}}},"305":{"name":"(anonymous_305)","line":5313,"loc":{"start":{"line":5313,"column":62},"end":{"line":5313,"column":95}}},"306":{"name":"(anonymous_306)","line":5348,"loc":{"start":{"line":5348,"column":44},"end":{"line":5348,"column":97}}},"307":{"name":"(anonymous_307)","line":5357,"loc":{"start":{"line":5357,"column":32},"end":{"line":5357,"column":64}}},"308":{"name":"(anonymous_308)","line":5369,"loc":{"start":{"line":5369,"column":24},"end":{"line":5369,"column":48}}},"309":{"name":"(anonymous_309)","line":5404,"loc":{"start":{"line":5404,"column":39},"end":{"line":5404,"column":98}}},"310":{"name":"(anonymous_310)","line":5413,"loc":{"start":{"line":5413,"column":32},"end":{"line":5413,"column":64}}},"311":{"name":"(anonymous_311)","line":5425,"loc":{"start":{"line":5425,"column":24},"end":{"line":5425,"column":48}}},"312":{"name":"(anonymous_312)","line":5438,"loc":{"start":{"line":5438,"column":49},"end":{"line":5438,"column":69}}},"313":{"name":"(anonymous_313)","line":5439,"loc":{"start":{"line":5439,"column":32},"end":{"line":5439,"column":64}}},"314":{"name":"(anonymous_314)","line":5446,"loc":{"start":{"line":5446,"column":24},"end":{"line":5446,"column":48}}},"315":{"name":"(anonymous_315)","line":5459,"loc":{"start":{"line":5459,"column":46},"end":{"line":5459,"column":81}}},"316":{"name":"(anonymous_316)","line":5506,"loc":{"start":{"line":5506,"column":50},"end":{"line":5506,"column":82}}},"317":{"name":"(anonymous_317)","line":5554,"loc":{"start":{"line":5554,"column":46},"end":{"line":5554,"column":125}}},"318":{"name":"(anonymous_318)","line":5556,"loc":{"start":{"line":5556,"column":55},"end":{"line":5556,"column":71}}},"319":{"name":"(anonymous_319)","line":5558,"loc":{"start":{"line":5558,"column":49},"end":{"line":5558,"column":62}}},"320":{"name":"(anonymous_320)","line":5599,"loc":{"start":{"line":5599,"column":26},"end":{"line":5599,"column":43}}},"321":{"name":"(anonymous_321)","line":5619,"loc":{"start":{"line":5619,"column":96},"end":{"line":5619,"column":113}}},"322":{"name":"(anonymous_322)","line":5640,"loc":{"start":{"line":5640,"column":109},"end":{"line":5640,"column":157}}},"323":{"name":"(anonymous_323)","line":5672,"loc":{"start":{"line":5672,"column":24},"end":{"line":5672,"column":36}}},"324":{"name":"(anonymous_324)","line":5677,"loc":{"start":{"line":5677,"column":30},"end":{"line":5677,"column":42}}},"325":{"name":"(anonymous_325)","line":5682,"loc":{"start":{"line":5682,"column":26},"end":{"line":5682,"column":38}}},"326":{"name":"(anonymous_326)","line":5687,"loc":{"start":{"line":5687,"column":28},"end":{"line":5687,"column":45}}},"327":{"name":"(anonymous_327)","line":5693,"loc":{"start":{"line":5693,"column":22},"end":{"line":5693,"column":34}}},"328":{"name":"(anonymous_328)","line":5720,"loc":{"start":{"line":5720,"column":33},"end":{"line":5720,"column":50}}},"329":{"name":"(anonymous_329)","line":5756,"loc":{"start":{"line":5756,"column":41},"end":{"line":5756,"column":110}}},"330":{"name":"(anonymous_330)","line":5758,"loc":{"start":{"line":5758,"column":55},"end":{"line":5758,"column":71}}},"331":{"name":"(anonymous_331)","line":5771,"loc":{"start":{"line":5771,"column":32},"end":{"line":5771,"column":64}}},"332":{"name":"(anonymous_332)","line":5782,"loc":{"start":{"line":5782,"column":24},"end":{"line":5782,"column":48}}},"333":{"name":"(anonymous_333)","line":5828,"loc":{"start":{"line":5828,"column":44},"end":{"line":5828,"column":115}}},"334":{"name":"(anonymous_334)","line":5830,"loc":{"start":{"line":5830,"column":55},"end":{"line":5830,"column":71}}},"335":{"name":"(anonymous_335)","line":5835,"loc":{"start":{"line":5835,"column":62},"end":{"line":5835,"column":103}}},"336":{"name":"(anonymous_336)","line":5844,"loc":{"start":{"line":5844,"column":33},"end":{"line":5844,"column":45}}},"337":{"name":"(anonymous_337)","line":5883,"loc":{"start":{"line":5883,"column":66},"end":{"line":5883,"column":152}}},"338":{"name":"(anonymous_338)","line":5885,"loc":{"start":{"line":5885,"column":55},"end":{"line":5885,"column":71}}},"339":{"name":"(anonymous_339)","line":5887,"loc":{"start":{"line":5887,"column":46},"end":{"line":5887,"column":59}}},"340":{"name":"(anonymous_340)","line":5910,"loc":{"start":{"line":5910,"column":32},"end":{"line":5910,"column":64}}},"341":{"name":"(anonymous_341)","line":5933,"loc":{"start":{"line":5933,"column":22},"end":{"line":5933,"column":45}}},"342":{"name":"(anonymous_342)","line":5949,"loc":{"start":{"line":5949,"column":24},"end":{"line":5949,"column":48}}},"343":{"name":"(anonymous_343)","line":5971,"loc":{"start":{"line":5971,"column":36},"end":{"line":5971,"column":106}}},"344":{"name":"(anonymous_344)","line":5973,"loc":{"start":{"line":5973,"column":61},"end":{"line":5973,"column":100}}},"345":{"name":"(anonymous_345)","line":5977,"loc":{"start":{"line":5977,"column":56},"end":{"line":5977,"column":79}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":23}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":32}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":25}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":27}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":30}},"7":{"start":{"line":24,"column":0},"end":{"line":24,"column":31}},"8":{"start":{"line":26,"column":0},"end":{"line":26,"column":51}},"9":{"start":{"line":27,"column":0},"end":{"line":27,"column":62}},"10":{"start":{"line":28,"column":0},"end":{"line":28,"column":55}},"11":{"start":{"line":29,"column":0},"end":{"line":29,"column":60}},"12":{"start":{"line":30,"column":0},"end":{"line":30,"column":64}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":33}},"14":{"start":{"line":32,"column":0},"end":{"line":32,"column":24}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":36}},"16":{"start":{"line":34,"column":0},"end":{"line":34,"column":60}},"17":{"start":{"line":35,"column":0},"end":{"line":35,"column":42}},"18":{"start":{"line":38,"column":0},"end":{"line":38,"column":38}},"19":{"start":{"line":39,"column":0},"end":{"line":39,"column":44}},"20":{"start":{"line":40,"column":0},"end":{"line":40,"column":48}},"21":{"start":{"line":41,"column":0},"end":{"line":41,"column":58}},"22":{"start":{"line":42,"column":0},"end":{"line":42,"column":56}},"23":{"start":{"line":45,"column":0},"end":{"line":45,"column":48}},"24":{"start":{"line":46,"column":0},"end":{"line":46,"column":44}},"25":{"start":{"line":47,"column":0},"end":{"line":47,"column":48}},"26":{"start":{"line":48,"column":0},"end":{"line":48,"column":42}},"27":{"start":{"line":49,"column":0},"end":{"line":49,"column":62}},"28":{"start":{"line":50,"column":0},"end":{"line":50,"column":48}},"29":{"start":{"line":53,"column":0},"end":{"line":53,"column":38}},"30":{"start":{"line":54,"column":0},"end":{"line":54,"column":56}},"31":{"start":{"line":55,"column":0},"end":{"line":55,"column":58}},"32":{"start":{"line":56,"column":0},"end":{"line":56,"column":48}},"33":{"start":{"line":57,"column":0},"end":{"line":57,"column":58}},"34":{"start":{"line":58,"column":0},"end":{"line":58,"column":50}},"35":{"start":{"line":60,"column":0},"end":{"line":60,"column":47}},"36":{"start":{"line":63,"column":0},"end":{"line":63,"column":51}},"37":{"start":{"line":64,"column":0},"end":{"line":64,"column":41}},"38":{"start":{"line":65,"column":0},"end":{"line":65,"column":49}},"39":{"start":{"line":66,"column":0},"end":{"line":66,"column":39}},"40":{"start":{"line":99,"column":0},"end":{"line":111,"column":1}},"41":{"start":{"line":100,"column":2},"end":{"line":100,"column":155}},"42":{"start":{"line":102,"column":2},"end":{"line":107,"column":38}},"43":{"start":{"line":109,"column":2},"end":{"line":109,"column":96}},"44":{"start":{"line":110,"column":2},"end":{"line":110,"column":88}},"45":{"start":{"line":113,"column":0},"end":{"line":113,"column":49}},"46":{"start":{"line":125,"column":0},"end":{"line":141,"column":1}},"47":{"start":{"line":127,"column":2},"end":{"line":132,"column":3}},"48":{"start":{"line":128,"column":4},"end":{"line":128,"column":44}},"49":{"start":{"line":129,"column":4},"end":{"line":129,"column":45}},"50":{"start":{"line":130,"column":4},"end":{"line":130,"column":45}},"51":{"start":{"line":131,"column":4},"end":{"line":131,"column":46}},"52":{"start":{"line":135,"column":2},"end":{"line":140,"column":3}},"53":{"start":{"line":136,"column":4},"end":{"line":136,"column":42}},"54":{"start":{"line":139,"column":4},"end":{"line":139,"column":25}},"55":{"start":{"line":163,"column":0},"end":{"line":193,"column":2}},"56":{"start":{"line":164,"column":2},"end":{"line":164,"column":14}},"57":{"start":{"line":165,"column":2},"end":{"line":165,"column":103}},"58":{"start":{"line":165,"column":73},"end":{"line":165,"column":85}},"59":{"start":{"line":165,"column":86},"end":{"line":165,"column":99}},"60":{"start":{"line":167,"column":2},"end":{"line":169,"column":5}},"61":{"start":{"line":168,"column":4},"end":{"line":168,"column":25}},"62":{"start":{"line":171,"column":2},"end":{"line":173,"column":62}},"63":{"start":{"line":175,"column":2},"end":{"line":175,"column":73}},"64":{"start":{"line":177,"column":2},"end":{"line":190,"column":4}},"65":{"start":{"line":178,"column":4},"end":{"line":178,"column":45}},"66":{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},"67":{"start":{"line":180,"column":6},"end":{"line":180,"column":117}},"68":{"start":{"line":184,"column":4},"end":{"line":186,"column":6}},"69":{"start":{"line":185,"column":6},"end":{"line":185,"column":91}},"70":{"start":{"line":189,"column":4},"end":{"line":189,"column":40}},"71":{"start":{"line":192,"column":2},"end":{"line":192,"column":75}},"72":{"start":{"line":213,"column":0},"end":{"line":215,"column":2}},"73":{"start":{"line":214,"column":2},"end":{"line":214,"column":71}},"74":{"start":{"line":238,"column":0},"end":{"line":240,"column":2}},"75":{"start":{"line":239,"column":2},"end":{"line":239,"column":90}},"76":{"start":{"line":266,"column":0},"end":{"line":268,"column":2}},"77":{"start":{"line":267,"column":2},"end":{"line":267,"column":103}},"78":{"start":{"line":295,"column":0},"end":{"line":360,"column":2}},"79":{"start":{"line":296,"column":2},"end":{"line":296,"column":18}},"80":{"start":{"line":297,"column":2},"end":{"line":297,"column":107}},"81":{"start":{"line":297,"column":73},"end":{"line":297,"column":89}},"82":{"start":{"line":297,"column":90},"end":{"line":297,"column":103}},"83":{"start":{"line":299,"column":2},"end":{"line":301,"column":5}},"84":{"start":{"line":300,"column":4},"end":{"line":300,"column":25}},"85":{"start":{"line":303,"column":2},"end":{"line":303,"column":46}},"86":{"start":{"line":304,"column":2},"end":{"line":307,"column":68}},"87":{"start":{"line":309,"column":2},"end":{"line":311,"column":3}},"88":{"start":{"line":310,"column":4},"end":{"line":310,"column":86}},"89":{"start":{"line":313,"column":2},"end":{"line":313,"column":67}},"90":{"start":{"line":315,"column":2},"end":{"line":315,"column":83}},"91":{"start":{"line":317,"column":2},"end":{"line":357,"column":4}},"92":{"start":{"line":318,"column":4},"end":{"line":318,"column":47}},"93":{"start":{"line":320,"column":4},"end":{"line":350,"column":5}},"94":{"start":{"line":321,"column":6},"end":{"line":324,"column":8}},"95":{"start":{"line":325,"column":6},"end":{"line":325,"column":55}},"96":{"start":{"line":327,"column":6},"end":{"line":327,"column":26}},"97":{"start":{"line":329,"column":6},"end":{"line":334,"column":7}},"98":{"start":{"line":330,"column":8},"end":{"line":330,"column":90}},"99":{"start":{"line":331,"column":8},"end":{"line":333,"column":9}},"100":{"start":{"line":332,"column":10},"end":{"line":332,"column":38}},"101":{"start":{"line":336,"column":6},"end":{"line":339,"column":9}},"102":{"start":{"line":337,"column":8},"end":{"line":337,"column":70}},"103":{"start":{"line":338,"column":8},"end":{"line":338,"column":74}},"104":{"start":{"line":341,"column":6},"end":{"line":349,"column":7}},"105":{"start":{"line":342,"column":8},"end":{"line":345,"column":10}},"106":{"start":{"line":347,"column":8},"end":{"line":347,"column":134}},"107":{"start":{"line":348,"column":8},"end":{"line":348,"column":109}},"108":{"start":{"line":352,"column":4},"end":{"line":354,"column":6}},"109":{"start":{"line":353,"column":6},"end":{"line":353,"column":93}},"110":{"start":{"line":356,"column":4},"end":{"line":356,"column":40}},"111":{"start":{"line":359,"column":2},"end":{"line":359,"column":75}},"112":{"start":{"line":385,"column":0},"end":{"line":398,"column":2}},"113":{"start":{"line":386,"column":2},"end":{"line":386,"column":18}},"114":{"start":{"line":387,"column":2},"end":{"line":387,"column":107}},"115":{"start":{"line":387,"column":73},"end":{"line":387,"column":89}},"116":{"start":{"line":387,"column":90},"end":{"line":387,"column":103}},"117":{"start":{"line":389,"column":2},"end":{"line":393,"column":5}},"118":{"start":{"line":390,"column":4},"end":{"line":390,"column":37}},"119":{"start":{"line":391,"column":4},"end":{"line":391,"column":38}},"120":{"start":{"line":392,"column":4},"end":{"line":392,"column":25}},"121":{"start":{"line":395,"column":2},"end":{"line":395,"column":46}},"122":{"start":{"line":397,"column":2},"end":{"line":397,"column":64}},"123":{"start":{"line":424,"column":0},"end":{"line":462,"column":2}},"124":{"start":{"line":425,"column":2},"end":{"line":425,"column":18}},"125":{"start":{"line":426,"column":2},"end":{"line":426,"column":107}},"126":{"start":{"line":426,"column":73},"end":{"line":426,"column":89}},"127":{"start":{"line":426,"column":90},"end":{"line":426,"column":103}},"128":{"start":{"line":428,"column":2},"end":{"line":434,"column":5}},"129":{"start":{"line":429,"column":4},"end":{"line":429,"column":37}},"130":{"start":{"line":430,"column":4},"end":{"line":431,"column":44}},"131":{"start":{"line":430,"column":25},"end":{"line":430,"column":54}},"132":{"start":{"line":432,"column":4},"end":{"line":432,"column":38}},"133":{"start":{"line":433,"column":4},"end":{"line":433,"column":25}},"134":{"start":{"line":436,"column":2},"end":{"line":436,"column":46}},"135":{"start":{"line":437,"column":2},"end":{"line":438,"column":64}},"136":{"start":{"line":440,"column":2},"end":{"line":440,"column":59}},"137":{"start":{"line":441,"column":2},"end":{"line":441,"column":88}},"138":{"start":{"line":443,"column":2},"end":{"line":459,"column":4}},"139":{"start":{"line":444,"column":4},"end":{"line":444,"column":42}},"140":{"start":{"line":445,"column":4},"end":{"line":452,"column":5}},"141":{"start":{"line":446,"column":6},"end":{"line":446,"column":70}},"142":{"start":{"line":447,"column":6},"end":{"line":447,"column":95}},"143":{"start":{"line":449,"column":6},"end":{"line":451,"column":7}},"144":{"start":{"line":450,"column":8},"end":{"line":450,"column":67}},"145":{"start":{"line":454,"column":4},"end":{"line":456,"column":6}},"146":{"start":{"line":455,"column":6},"end":{"line":455,"column":88}},"147":{"start":{"line":458,"column":4},"end":{"line":458,"column":40}},"148":{"start":{"line":461,"column":2},"end":{"line":461,"column":75}},"149":{"start":{"line":496,"column":0},"end":{"line":533,"column":2}},"150":{"start":{"line":497,"column":2},"end":{"line":497,"column":18}},"151":{"start":{"line":498,"column":2},"end":{"line":498,"column":107}},"152":{"start":{"line":498,"column":73},"end":{"line":498,"column":89}},"153":{"start":{"line":498,"column":90},"end":{"line":498,"column":103}},"154":{"start":{"line":500,"column":2},"end":{"line":504,"column":5}},"155":{"start":{"line":501,"column":4},"end":{"line":501,"column":37}},"156":{"start":{"line":502,"column":4},"end":{"line":502,"column":38}},"157":{"start":{"line":503,"column":4},"end":{"line":503,"column":25}},"158":{"start":{"line":506,"column":2},"end":{"line":506,"column":46}},"159":{"start":{"line":507,"column":2},"end":{"line":507,"column":18}},"160":{"start":{"line":508,"column":2},"end":{"line":532,"column":5}},"161":{"start":{"line":509,"column":4},"end":{"line":509,"column":31}},"162":{"start":{"line":510,"column":4},"end":{"line":510,"column":27}},"163":{"start":{"line":511,"column":4},"end":{"line":511,"column":25}},"164":{"start":{"line":513,"column":4},"end":{"line":531,"column":5}},"165":{"start":{"line":514,"column":6},"end":{"line":514,"column":40}},"166":{"start":{"line":515,"column":11},"end":{"line":531,"column":5}},"167":{"start":{"line":516,"column":6},"end":{"line":516,"column":35}},"168":{"start":{"line":517,"column":6},"end":{"line":517,"column":40}},"169":{"start":{"line":519,"column":6},"end":{"line":530,"column":9}},"170":{"start":{"line":520,"column":8},"end":{"line":527,"column":9}},"171":{"start":{"line":521,"column":10},"end":{"line":521,"column":41}},"172":{"start":{"line":523,"column":13},"end":{"line":527,"column":9}},"173":{"start":{"line":525,"column":10},"end":{"line":525,"column":29}},"174":{"start":{"line":526,"column":10},"end":{"line":526,"column":45}},"175":{"start":{"line":529,"column":8},"end":{"line":529,"column":63}},"176":{"start":{"line":558,"column":0},"end":{"line":592,"column":2}},"177":{"start":{"line":559,"column":2},"end":{"line":559,"column":18}},"178":{"start":{"line":560,"column":2},"end":{"line":560,"column":107}},"179":{"start":{"line":560,"column":73},"end":{"line":560,"column":89}},"180":{"start":{"line":560,"column":90},"end":{"line":560,"column":103}},"181":{"start":{"line":562,"column":2},"end":{"line":566,"column":5}},"182":{"start":{"line":563,"column":4},"end":{"line":563,"column":37}},"183":{"start":{"line":564,"column":4},"end":{"line":564,"column":38}},"184":{"start":{"line":565,"column":4},"end":{"line":565,"column":25}},"185":{"start":{"line":568,"column":2},"end":{"line":568,"column":46}},"186":{"start":{"line":569,"column":2},"end":{"line":571,"column":59}},"187":{"start":{"line":573,"column":2},"end":{"line":573,"column":83}},"188":{"start":{"line":575,"column":2},"end":{"line":575,"column":18}},"189":{"start":{"line":576,"column":2},"end":{"line":589,"column":4}},"190":{"start":{"line":577,"column":4},"end":{"line":577,"column":42}},"191":{"start":{"line":578,"column":4},"end":{"line":582,"column":5}},"192":{"start":{"line":579,"column":6},"end":{"line":579,"column":70}},"193":{"start":{"line":580,"column":6},"end":{"line":580,"column":107}},"194":{"start":{"line":581,"column":6},"end":{"line":581,"column":95}},"195":{"start":{"line":584,"column":4},"end":{"line":586,"column":6}},"196":{"start":{"line":585,"column":6},"end":{"line":585,"column":88}},"197":{"start":{"line":588,"column":4},"end":{"line":588,"column":40}},"198":{"start":{"line":591,"column":2},"end":{"line":591,"column":75}},"199":{"start":{"line":617,"column":0},"end":{"line":652,"column":2}},"200":{"start":{"line":618,"column":2},"end":{"line":618,"column":18}},"201":{"start":{"line":619,"column":2},"end":{"line":619,"column":107}},"202":{"start":{"line":619,"column":73},"end":{"line":619,"column":89}},"203":{"start":{"line":619,"column":90},"end":{"line":619,"column":103}},"204":{"start":{"line":621,"column":2},"end":{"line":625,"column":5}},"205":{"start":{"line":622,"column":4},"end":{"line":622,"column":37}},"206":{"start":{"line":623,"column":4},"end":{"line":623,"column":38}},"207":{"start":{"line":624,"column":4},"end":{"line":624,"column":25}},"208":{"start":{"line":627,"column":2},"end":{"line":627,"column":46}},"209":{"start":{"line":628,"column":2},"end":{"line":631,"column":59}},"210":{"start":{"line":633,"column":2},"end":{"line":633,"column":83}},"211":{"start":{"line":635,"column":2},"end":{"line":635,"column":18}},"212":{"start":{"line":636,"column":2},"end":{"line":649,"column":4}},"213":{"start":{"line":637,"column":4},"end":{"line":637,"column":42}},"214":{"start":{"line":638,"column":4},"end":{"line":642,"column":5}},"215":{"start":{"line":639,"column":6},"end":{"line":639,"column":70}},"216":{"start":{"line":640,"column":6},"end":{"line":640,"column":107}},"217":{"start":{"line":641,"column":6},"end":{"line":641,"column":95}},"218":{"start":{"line":644,"column":4},"end":{"line":646,"column":6}},"219":{"start":{"line":645,"column":6},"end":{"line":645,"column":88}},"220":{"start":{"line":648,"column":4},"end":{"line":648,"column":40}},"221":{"start":{"line":651,"column":2},"end":{"line":651,"column":75}},"222":{"start":{"line":680,"column":0},"end":{"line":714,"column":2}},"223":{"start":{"line":681,"column":2},"end":{"line":681,"column":18}},"224":{"start":{"line":682,"column":2},"end":{"line":682,"column":107}},"225":{"start":{"line":682,"column":73},"end":{"line":682,"column":89}},"226":{"start":{"line":682,"column":90},"end":{"line":682,"column":103}},"227":{"start":{"line":684,"column":2},"end":{"line":689,"column":5}},"228":{"start":{"line":685,"column":4},"end":{"line":685,"column":37}},"229":{"start":{"line":686,"column":4},"end":{"line":686,"column":35}},"230":{"start":{"line":687,"column":4},"end":{"line":687,"column":38}},"231":{"start":{"line":688,"column":4},"end":{"line":688,"column":25}},"232":{"start":{"line":691,"column":2},"end":{"line":691,"column":46}},"233":{"start":{"line":692,"column":2},"end":{"line":695,"column":59}},"234":{"start":{"line":697,"column":2},"end":{"line":697,"column":51}},"235":{"start":{"line":699,"column":2},"end":{"line":711,"column":4}},"236":{"start":{"line":700,"column":4},"end":{"line":700,"column":42}},"237":{"start":{"line":701,"column":4},"end":{"line":704,"column":5}},"238":{"start":{"line":702,"column":6},"end":{"line":702,"column":70}},"239":{"start":{"line":703,"column":6},"end":{"line":703,"column":95}},"240":{"start":{"line":706,"column":4},"end":{"line":708,"column":6}},"241":{"start":{"line":707,"column":6},"end":{"line":707,"column":88}},"242":{"start":{"line":710,"column":4},"end":{"line":710,"column":40}},"243":{"start":{"line":713,"column":2},"end":{"line":713,"column":75}},"244":{"start":{"line":738,"column":0},"end":{"line":772,"column":2}},"245":{"start":{"line":739,"column":2},"end":{"line":739,"column":18}},"246":{"start":{"line":740,"column":2},"end":{"line":740,"column":107}},"247":{"start":{"line":740,"column":73},"end":{"line":740,"column":89}},"248":{"start":{"line":740,"column":90},"end":{"line":740,"column":103}},"249":{"start":{"line":742,"column":2},"end":{"line":746,"column":5}},"250":{"start":{"line":743,"column":4},"end":{"line":743,"column":37}},"251":{"start":{"line":744,"column":4},"end":{"line":744,"column":38}},"252":{"start":{"line":745,"column":4},"end":{"line":745,"column":25}},"253":{"start":{"line":748,"column":2},"end":{"line":748,"column":46}},"254":{"start":{"line":749,"column":2},"end":{"line":752,"column":59}},"255":{"start":{"line":754,"column":2},"end":{"line":754,"column":83}},"256":{"start":{"line":756,"column":2},"end":{"line":769,"column":4}},"257":{"start":{"line":757,"column":4},"end":{"line":757,"column":42}},"258":{"start":{"line":758,"column":4},"end":{"line":762,"column":5}},"259":{"start":{"line":759,"column":6},"end":{"line":759,"column":70}},"260":{"start":{"line":760,"column":6},"end":{"line":760,"column":95}},"261":{"start":{"line":761,"column":6},"end":{"line":761,"column":103}},"262":{"start":{"line":764,"column":4},"end":{"line":766,"column":6}},"263":{"start":{"line":765,"column":6},"end":{"line":765,"column":88}},"264":{"start":{"line":768,"column":4},"end":{"line":768,"column":40}},"265":{"start":{"line":771,"column":2},"end":{"line":771,"column":75}},"266":{"start":{"line":797,"column":0},"end":{"line":843,"column":2}},"267":{"start":{"line":798,"column":2},"end":{"line":798,"column":18}},"268":{"start":{"line":799,"column":2},"end":{"line":799,"column":107}},"269":{"start":{"line":799,"column":73},"end":{"line":799,"column":89}},"270":{"start":{"line":799,"column":90},"end":{"line":799,"column":103}},"271":{"start":{"line":801,"column":2},"end":{"line":805,"column":5}},"272":{"start":{"line":802,"column":4},"end":{"line":802,"column":37}},"273":{"start":{"line":803,"column":4},"end":{"line":803,"column":38}},"274":{"start":{"line":804,"column":4},"end":{"line":804,"column":25}},"275":{"start":{"line":807,"column":2},"end":{"line":807,"column":46}},"276":{"start":{"line":809,"column":2},"end":{"line":809,"column":22}},"277":{"start":{"line":810,"column":2},"end":{"line":815,"column":3}},"278":{"start":{"line":811,"column":4},"end":{"line":813,"column":5}},"279":{"start":{"line":812,"column":6},"end":{"line":812,"column":57}},"280":{"start":{"line":814,"column":4},"end":{"line":814,"column":54}},"281":{"start":{"line":817,"column":2},"end":{"line":823,"column":24}},"282":{"start":{"line":825,"column":2},"end":{"line":840,"column":4}},"283":{"start":{"line":826,"column":4},"end":{"line":826,"column":42}},"284":{"start":{"line":827,"column":4},"end":{"line":833,"column":5}},"285":{"start":{"line":828,"column":6},"end":{"line":828,"column":97}},"286":{"start":{"line":829,"column":6},"end":{"line":829,"column":95}},"287":{"start":{"line":830,"column":6},"end":{"line":832,"column":7}},"288":{"start":{"line":831,"column":8},"end":{"line":831,"column":77}},"289":{"start":{"line":835,"column":4},"end":{"line":837,"column":6}},"290":{"start":{"line":836,"column":6},"end":{"line":836,"column":88}},"291":{"start":{"line":839,"column":4},"end":{"line":839,"column":40}},"292":{"start":{"line":842,"column":2},"end":{"line":842,"column":87}},"293":{"start":{"line":868,"column":0},"end":{"line":892,"column":2}},"294":{"start":{"line":869,"column":2},"end":{"line":869,"column":18}},"295":{"start":{"line":870,"column":2},"end":{"line":870,"column":107}},"296":{"start":{"line":870,"column":73},"end":{"line":870,"column":89}},"297":{"start":{"line":870,"column":90},"end":{"line":870,"column":103}},"298":{"start":{"line":872,"column":2},"end":{"line":876,"column":5}},"299":{"start":{"line":873,"column":4},"end":{"line":873,"column":37}},"300":{"start":{"line":874,"column":4},"end":{"line":874,"column":38}},"301":{"start":{"line":875,"column":4},"end":{"line":875,"column":25}},"302":{"start":{"line":878,"column":2},"end":{"line":878,"column":46}},"303":{"start":{"line":879,"column":2},"end":{"line":881,"column":59}},"304":{"start":{"line":883,"column":2},"end":{"line":889,"column":4}},"305":{"start":{"line":884,"column":4},"end":{"line":886,"column":6}},"306":{"start":{"line":885,"column":6},"end":{"line":885,"column":58}},"307":{"start":{"line":888,"column":4},"end":{"line":888,"column":40}},"308":{"start":{"line":891,"column":2},"end":{"line":891,"column":75}},"309":{"start":{"line":919,"column":0},"end":{"line":953,"column":2}},"310":{"start":{"line":920,"column":2},"end":{"line":920,"column":18}},"311":{"start":{"line":921,"column":2},"end":{"line":921,"column":107}},"312":{"start":{"line":921,"column":73},"end":{"line":921,"column":89}},"313":{"start":{"line":921,"column":90},"end":{"line":921,"column":103}},"314":{"start":{"line":923,"column":2},"end":{"line":927,"column":5}},"315":{"start":{"line":924,"column":4},"end":{"line":924,"column":37}},"316":{"start":{"line":925,"column":4},"end":{"line":925,"column":38}},"317":{"start":{"line":926,"column":4},"end":{"line":926,"column":25}},"318":{"start":{"line":929,"column":2},"end":{"line":929,"column":46}},"319":{"start":{"line":930,"column":2},"end":{"line":930,"column":18}},"320":{"start":{"line":931,"column":2},"end":{"line":952,"column":5}},"321":{"start":{"line":932,"column":4},"end":{"line":951,"column":5}},"322":{"start":{"line":933,"column":6},"end":{"line":933,"column":47}},"323":{"start":{"line":934,"column":11},"end":{"line":951,"column":5}},"324":{"start":{"line":935,"column":6},"end":{"line":935,"column":35}},"325":{"start":{"line":936,"column":6},"end":{"line":936,"column":39}},"326":{"start":{"line":938,"column":6},"end":{"line":950,"column":9}},"327":{"start":{"line":939,"column":8},"end":{"line":939,"column":20}},"328":{"start":{"line":940,"column":8},"end":{"line":947,"column":9}},"329":{"start":{"line":941,"column":10},"end":{"line":941,"column":25}},"330":{"start":{"line":942,"column":15},"end":{"line":947,"column":9}},"331":{"start":{"line":944,"column":10},"end":{"line":944,"column":26}},"332":{"start":{"line":945,"column":10},"end":{"line":945,"column":29}},"333":{"start":{"line":946,"column":10},"end":{"line":946,"column":45}},"334":{"start":{"line":949,"column":8},"end":{"line":949,"column":55}},"335":{"start":{"line":978,"column":0},"end":{"line":980,"column":2}},"336":{"start":{"line":979,"column":2},"end":{"line":979,"column":119}},"337":{"start":{"line":1006,"column":0},"end":{"line":1012,"column":2}},"338":{"start":{"line":1007,"column":2},"end":{"line":1007,"column":18}},"339":{"start":{"line":1008,"column":2},"end":{"line":1008,"column":107}},"340":{"start":{"line":1008,"column":73},"end":{"line":1008,"column":89}},"341":{"start":{"line":1008,"column":90},"end":{"line":1008,"column":103}},"342":{"start":{"line":1009,"column":2},"end":{"line":1009,"column":30}},"343":{"start":{"line":1011,"column":2},"end":{"line":1011,"column":144}},"344":{"start":{"line":1041,"column":0},"end":{"line":1043,"column":2}},"345":{"start":{"line":1042,"column":2},"end":{"line":1042,"column":109}},"346":{"start":{"line":1073,"column":0},"end":{"line":1075,"column":2}},"347":{"start":{"line":1074,"column":2},"end":{"line":1074,"column":145}},"348":{"start":{"line":1104,"column":0},"end":{"line":1121,"column":2}},"349":{"start":{"line":1105,"column":2},"end":{"line":1105,"column":18}},"350":{"start":{"line":1106,"column":2},"end":{"line":1106,"column":107}},"351":{"start":{"line":1106,"column":73},"end":{"line":1106,"column":89}},"352":{"start":{"line":1106,"column":90},"end":{"line":1106,"column":103}},"353":{"start":{"line":1108,"column":2},"end":{"line":1112,"column":5}},"354":{"start":{"line":1109,"column":4},"end":{"line":1109,"column":37}},"355":{"start":{"line":1110,"column":4},"end":{"line":1110,"column":38}},"356":{"start":{"line":1111,"column":4},"end":{"line":1111,"column":25}},"357":{"start":{"line":1114,"column":2},"end":{"line":1114,"column":46}},"358":{"start":{"line":1116,"column":2},"end":{"line":1118,"column":3}},"359":{"start":{"line":1117,"column":4},"end":{"line":1117,"column":31}},"360":{"start":{"line":1120,"column":2},"end":{"line":1120,"column":112}},"361":{"start":{"line":1146,"column":0},"end":{"line":1159,"column":2}},"362":{"start":{"line":1147,"column":2},"end":{"line":1147,"column":18}},"363":{"start":{"line":1148,"column":2},"end":{"line":1148,"column":107}},"364":{"start":{"line":1148,"column":73},"end":{"line":1148,"column":89}},"365":{"start":{"line":1148,"column":90},"end":{"line":1148,"column":103}},"366":{"start":{"line":1150,"column":2},"end":{"line":1154,"column":5}},"367":{"start":{"line":1151,"column":4},"end":{"line":1151,"column":37}},"368":{"start":{"line":1152,"column":4},"end":{"line":1152,"column":38}},"369":{"start":{"line":1153,"column":4},"end":{"line":1153,"column":25}},"370":{"start":{"line":1156,"column":2},"end":{"line":1156,"column":46}},"371":{"start":{"line":1158,"column":2},"end":{"line":1158,"column":99}},"372":{"start":{"line":1186,"column":0},"end":{"line":1200,"column":2}},"373":{"start":{"line":1187,"column":2},"end":{"line":1187,"column":18}},"374":{"start":{"line":1188,"column":2},"end":{"line":1188,"column":107}},"375":{"start":{"line":1188,"column":73},"end":{"line":1188,"column":89}},"376":{"start":{"line":1188,"column":90},"end":{"line":1188,"column":103}},"377":{"start":{"line":1190,"column":2},"end":{"line":1194,"column":5}},"378":{"start":{"line":1191,"column":4},"end":{"line":1191,"column":37}},"379":{"start":{"line":1192,"column":4},"end":{"line":1192,"column":38}},"380":{"start":{"line":1193,"column":4},"end":{"line":1193,"column":25}},"381":{"start":{"line":1196,"column":2},"end":{"line":1196,"column":46}},"382":{"start":{"line":1198,"column":2},"end":{"line":1198,"column":44}},"383":{"start":{"line":1199,"column":2},"end":{"line":1199,"column":100}},"384":{"start":{"line":1226,"column":0},"end":{"line":1239,"column":2}},"385":{"start":{"line":1227,"column":2},"end":{"line":1227,"column":18}},"386":{"start":{"line":1228,"column":2},"end":{"line":1228,"column":107}},"387":{"start":{"line":1228,"column":73},"end":{"line":1228,"column":89}},"388":{"start":{"line":1228,"column":90},"end":{"line":1228,"column":103}},"389":{"start":{"line":1230,"column":2},"end":{"line":1234,"column":5}},"390":{"start":{"line":1231,"column":4},"end":{"line":1231,"column":37}},"391":{"start":{"line":1232,"column":4},"end":{"line":1232,"column":38}},"392":{"start":{"line":1233,"column":4},"end":{"line":1233,"column":25}},"393":{"start":{"line":1236,"column":2},"end":{"line":1236,"column":46}},"394":{"start":{"line":1238,"column":2},"end":{"line":1238,"column":101}},"395":{"start":{"line":1267,"column":0},"end":{"line":1280,"column":2}},"396":{"start":{"line":1268,"column":2},"end":{"line":1268,"column":18}},"397":{"start":{"line":1269,"column":2},"end":{"line":1269,"column":107}},"398":{"start":{"line":1269,"column":73},"end":{"line":1269,"column":89}},"399":{"start":{"line":1269,"column":90},"end":{"line":1269,"column":103}},"400":{"start":{"line":1271,"column":2},"end":{"line":1275,"column":5}},"401":{"start":{"line":1272,"column":4},"end":{"line":1272,"column":37}},"402":{"start":{"line":1273,"column":4},"end":{"line":1273,"column":38}},"403":{"start":{"line":1274,"column":4},"end":{"line":1274,"column":25}},"404":{"start":{"line":1277,"column":2},"end":{"line":1277,"column":46}},"405":{"start":{"line":1279,"column":2},"end":{"line":1279,"column":108}},"406":{"start":{"line":1311,"column":0},"end":{"line":1351,"column":2}},"407":{"start":{"line":1312,"column":2},"end":{"line":1312,"column":18}},"408":{"start":{"line":1313,"column":2},"end":{"line":1313,"column":107}},"409":{"start":{"line":1313,"column":73},"end":{"line":1313,"column":89}},"410":{"start":{"line":1313,"column":90},"end":{"line":1313,"column":103}},"411":{"start":{"line":1315,"column":2},"end":{"line":1320,"column":5}},"412":{"start":{"line":1316,"column":4},"end":{"line":1316,"column":37}},"413":{"start":{"line":1317,"column":4},"end":{"line":1317,"column":27}},"414":{"start":{"line":1318,"column":4},"end":{"line":1318,"column":38}},"415":{"start":{"line":1319,"column":4},"end":{"line":1319,"column":25}},"416":{"start":{"line":1322,"column":2},"end":{"line":1322,"column":46}},"417":{"start":{"line":1323,"column":2},"end":{"line":1323,"column":57}},"418":{"start":{"line":1324,"column":2},"end":{"line":1324,"column":51}},"419":{"start":{"line":1326,"column":2},"end":{"line":1328,"column":3}},"420":{"start":{"line":1327,"column":4},"end":{"line":1327,"column":83}},"421":{"start":{"line":1330,"column":2},"end":{"line":1330,"column":54}},"422":{"start":{"line":1332,"column":2},"end":{"line":1332,"column":83}},"423":{"start":{"line":1334,"column":2},"end":{"line":1334,"column":18}},"424":{"start":{"line":1335,"column":2},"end":{"line":1348,"column":4}},"425":{"start":{"line":1336,"column":4},"end":{"line":1336,"column":37}},"426":{"start":{"line":1337,"column":4},"end":{"line":1341,"column":5}},"427":{"start":{"line":1338,"column":6},"end":{"line":1338,"column":66}},"428":{"start":{"line":1339,"column":6},"end":{"line":1339,"column":102}},"429":{"start":{"line":1340,"column":6},"end":{"line":1340,"column":90}},"430":{"start":{"line":1343,"column":4},"end":{"line":1345,"column":6}},"431":{"start":{"line":1344,"column":6},"end":{"line":1344,"column":83}},"432":{"start":{"line":1347,"column":4},"end":{"line":1347,"column":40}},"433":{"start":{"line":1350,"column":2},"end":{"line":1350,"column":75}},"434":{"start":{"line":1380,"column":0},"end":{"line":1419,"column":2}},"435":{"start":{"line":1381,"column":2},"end":{"line":1381,"column":18}},"436":{"start":{"line":1382,"column":2},"end":{"line":1382,"column":107}},"437":{"start":{"line":1382,"column":73},"end":{"line":1382,"column":89}},"438":{"start":{"line":1382,"column":90},"end":{"line":1382,"column":103}},"439":{"start":{"line":1384,"column":2},"end":{"line":1389,"column":5}},"440":{"start":{"line":1385,"column":4},"end":{"line":1385,"column":37}},"441":{"start":{"line":1386,"column":4},"end":{"line":1386,"column":27}},"442":{"start":{"line":1387,"column":4},"end":{"line":1387,"column":38}},"443":{"start":{"line":1388,"column":4},"end":{"line":1388,"column":25}},"444":{"start":{"line":1391,"column":2},"end":{"line":1391,"column":46}},"445":{"start":{"line":1392,"column":2},"end":{"line":1392,"column":57}},"446":{"start":{"line":1393,"column":2},"end":{"line":1393,"column":51}},"447":{"start":{"line":1395,"column":2},"end":{"line":1395,"column":69}},"448":{"start":{"line":1396,"column":2},"end":{"line":1396,"column":81}},"449":{"start":{"line":1398,"column":2},"end":{"line":1398,"column":54}},"450":{"start":{"line":1400,"column":2},"end":{"line":1400,"column":83}},"451":{"start":{"line":1402,"column":2},"end":{"line":1402,"column":18}},"452":{"start":{"line":1403,"column":2},"end":{"line":1416,"column":4}},"453":{"start":{"line":1404,"column":4},"end":{"line":1404,"column":37}},"454":{"start":{"line":1405,"column":4},"end":{"line":1409,"column":5}},"455":{"start":{"line":1406,"column":6},"end":{"line":1406,"column":66}},"456":{"start":{"line":1407,"column":6},"end":{"line":1407,"column":102}},"457":{"start":{"line":1408,"column":6},"end":{"line":1408,"column":90}},"458":{"start":{"line":1411,"column":4},"end":{"line":1413,"column":6}},"459":{"start":{"line":1412,"column":6},"end":{"line":1412,"column":83}},"460":{"start":{"line":1415,"column":4},"end":{"line":1415,"column":40}},"461":{"start":{"line":1418,"column":2},"end":{"line":1418,"column":75}},"462":{"start":{"line":1453,"column":0},"end":{"line":1478,"column":2}},"463":{"start":{"line":1454,"column":2},"end":{"line":1454,"column":18}},"464":{"start":{"line":1455,"column":2},"end":{"line":1455,"column":107}},"465":{"start":{"line":1455,"column":73},"end":{"line":1455,"column":89}},"466":{"start":{"line":1455,"column":90},"end":{"line":1455,"column":103}},"467":{"start":{"line":1457,"column":2},"end":{"line":1462,"column":5}},"468":{"start":{"line":1458,"column":4},"end":{"line":1458,"column":37}},"469":{"start":{"line":1459,"column":4},"end":{"line":1459,"column":27}},"470":{"start":{"line":1460,"column":4},"end":{"line":1460,"column":38}},"471":{"start":{"line":1461,"column":4},"end":{"line":1461,"column":25}},"472":{"start":{"line":1464,"column":2},"end":{"line":1464,"column":75}},"473":{"start":{"line":1465,"column":2},"end":{"line":1465,"column":57}},"474":{"start":{"line":1466,"column":2},"end":{"line":1467,"column":62}},"475":{"start":{"line":1469,"column":2},"end":{"line":1469,"column":57}},"476":{"start":{"line":1471,"column":2},"end":{"line":1477,"column":5}},"477":{"start":{"line":1507,"column":0},"end":{"line":1544,"column":2}},"478":{"start":{"line":1508,"column":2},"end":{"line":1508,"column":18}},"479":{"start":{"line":1509,"column":2},"end":{"line":1509,"column":107}},"480":{"start":{"line":1509,"column":73},"end":{"line":1509,"column":89}},"481":{"start":{"line":1509,"column":90},"end":{"line":1509,"column":103}},"482":{"start":{"line":1511,"column":2},"end":{"line":1517,"column":5}},"483":{"start":{"line":1512,"column":4},"end":{"line":1512,"column":37}},"484":{"start":{"line":1513,"column":4},"end":{"line":1513,"column":27}},"485":{"start":{"line":1514,"column":4},"end":{"line":1514,"column":35}},"486":{"start":{"line":1515,"column":4},"end":{"line":1515,"column":38}},"487":{"start":{"line":1516,"column":4},"end":{"line":1516,"column":25}},"488":{"start":{"line":1519,"column":2},"end":{"line":1519,"column":46}},"489":{"start":{"line":1520,"column":2},"end":{"line":1520,"column":57}},"490":{"start":{"line":1521,"column":2},"end":{"line":1522,"column":60}},"491":{"start":{"line":1524,"column":2},"end":{"line":1524,"column":81}},"492":{"start":{"line":1526,"column":2},"end":{"line":1526,"column":30}},"493":{"start":{"line":1527,"column":2},"end":{"line":1527,"column":54}},"494":{"start":{"line":1529,"column":2},"end":{"line":1541,"column":4}},"495":{"start":{"line":1530,"column":4},"end":{"line":1530,"column":37}},"496":{"start":{"line":1531,"column":4},"end":{"line":1534,"column":5}},"497":{"start":{"line":1532,"column":6},"end":{"line":1532,"column":66}},"498":{"start":{"line":1533,"column":6},"end":{"line":1533,"column":90}},"499":{"start":{"line":1536,"column":4},"end":{"line":1538,"column":6}},"500":{"start":{"line":1537,"column":6},"end":{"line":1537,"column":83}},"501":{"start":{"line":1540,"column":4},"end":{"line":1540,"column":40}},"502":{"start":{"line":1543,"column":2},"end":{"line":1543,"column":75}},"503":{"start":{"line":1590,"column":0},"end":{"line":1603,"column":2}},"504":{"start":{"line":1591,"column":2},"end":{"line":1591,"column":14}},"505":{"start":{"line":1592,"column":2},"end":{"line":1592,"column":103}},"506":{"start":{"line":1592,"column":73},"end":{"line":1592,"column":85}},"507":{"start":{"line":1592,"column":86},"end":{"line":1592,"column":99}},"508":{"start":{"line":1594,"column":2},"end":{"line":1600,"column":5}},"509":{"start":{"line":1595,"column":4},"end":{"line":1595,"column":37}},"510":{"start":{"line":1596,"column":4},"end":{"line":1596,"column":27}},"511":{"start":{"line":1597,"column":4},"end":{"line":1597,"column":45}},"512":{"start":{"line":1598,"column":4},"end":{"line":1598,"column":38}},"513":{"start":{"line":1599,"column":4},"end":{"line":1599,"column":25}},"514":{"start":{"line":1602,"column":2},"end":{"line":1602,"column":85}},"515":{"start":{"line":1639,"column":0},"end":{"line":1661,"column":2}},"516":{"start":{"line":1640,"column":2},"end":{"line":1640,"column":14}},"517":{"start":{"line":1641,"column":2},"end":{"line":1641,"column":103}},"518":{"start":{"line":1641,"column":73},"end":{"line":1641,"column":85}},"519":{"start":{"line":1641,"column":86},"end":{"line":1641,"column":99}},"520":{"start":{"line":1643,"column":2},"end":{"line":1647,"column":5}},"521":{"start":{"line":1644,"column":4},"end":{"line":1644,"column":37}},"522":{"start":{"line":1645,"column":4},"end":{"line":1645,"column":27}},"523":{"start":{"line":1646,"column":4},"end":{"line":1646,"column":38}},"524":{"start":{"line":1649,"column":2},"end":{"line":1649,"column":37}},"525":{"start":{"line":1650,"column":2},"end":{"line":1658,"column":5}},"526":{"start":{"line":1651,"column":4},"end":{"line":1653,"column":5}},"527":{"start":{"line":1652,"column":6},"end":{"line":1652,"column":38}},"528":{"start":{"line":1655,"column":4},"end":{"line":1657,"column":5}},"529":{"start":{"line":1656,"column":6},"end":{"line":1656,"column":46}},"530":{"start":{"line":1660,"column":2},"end":{"line":1660,"column":20}},"531":{"start":{"line":1707,"column":0},"end":{"line":1758,"column":2}},"532":{"start":{"line":1708,"column":2},"end":{"line":1708,"column":18}},"533":{"start":{"line":1709,"column":2},"end":{"line":1709,"column":107}},"534":{"start":{"line":1709,"column":73},"end":{"line":1709,"column":89}},"535":{"start":{"line":1709,"column":90},"end":{"line":1709,"column":103}},"536":{"start":{"line":1710,"column":2},"end":{"line":1710,"column":80}},"537":{"start":{"line":1712,"column":2},"end":{"line":1718,"column":5}},"538":{"start":{"line":1713,"column":4},"end":{"line":1713,"column":37}},"539":{"start":{"line":1714,"column":4},"end":{"line":1714,"column":27}},"540":{"start":{"line":1715,"column":4},"end":{"line":1715,"column":41}},"541":{"start":{"line":1716,"column":4},"end":{"line":1716,"column":38}},"542":{"start":{"line":1717,"column":4},"end":{"line":1717,"column":25}},"543":{"start":{"line":1720,"column":2},"end":{"line":1720,"column":46}},"544":{"start":{"line":1722,"column":2},"end":{"line":1727,"column":4}},"545":{"start":{"line":1729,"column":2},"end":{"line":1755,"column":3}},"546":{"start":{"line":1730,"column":4},"end":{"line":1730,"column":75}},"547":{"start":{"line":1732,"column":4},"end":{"line":1732,"column":20}},"548":{"start":{"line":1733,"column":4},"end":{"line":1754,"column":7}},"549":{"start":{"line":1734,"column":6},"end":{"line":1753,"column":7}},"550":{"start":{"line":1735,"column":8},"end":{"line":1735,"column":24}},"551":{"start":{"line":1737,"column":8},"end":{"line":1737,"column":17}},"552":{"start":{"line":1738,"column":8},"end":{"line":1744,"column":9}},"553":{"start":{"line":1739,"column":10},"end":{"line":1739,"column":55}},"554":{"start":{"line":1740,"column":10},"end":{"line":1740,"column":89}},"555":{"start":{"line":1741,"column":10},"end":{"line":1741,"column":46}},"556":{"start":{"line":1743,"column":10},"end":{"line":1743,"column":42}},"557":{"start":{"line":1745,"column":8},"end":{"line":1745,"column":46}},"558":{"start":{"line":1747,"column":8},"end":{"line":1752,"column":9}},"559":{"start":{"line":1748,"column":10},"end":{"line":1748,"column":173}},"560":{"start":{"line":1749,"column":10},"end":{"line":1749,"column":107}},"561":{"start":{"line":1751,"column":10},"end":{"line":1751,"column":81}},"562":{"start":{"line":1757,"column":2},"end":{"line":1757,"column":30}},"563":{"start":{"line":1790,"column":0},"end":{"line":1835,"column":2}},"564":{"start":{"line":1791,"column":2},"end":{"line":1791,"column":18}},"565":{"start":{"line":1792,"column":2},"end":{"line":1792,"column":107}},"566":{"start":{"line":1792,"column":73},"end":{"line":1792,"column":89}},"567":{"start":{"line":1792,"column":90},"end":{"line":1792,"column":103}},"568":{"start":{"line":1794,"column":2},"end":{"line":1799,"column":5}},"569":{"start":{"line":1795,"column":4},"end":{"line":1795,"column":37}},"570":{"start":{"line":1796,"column":4},"end":{"line":1796,"column":27}},"571":{"start":{"line":1797,"column":4},"end":{"line":1797,"column":38}},"572":{"start":{"line":1798,"column":4},"end":{"line":1798,"column":25}},"573":{"start":{"line":1801,"column":2},"end":{"line":1801,"column":46}},"574":{"start":{"line":1802,"column":2},"end":{"line":1802,"column":57}},"575":{"start":{"line":1803,"column":2},"end":{"line":1804,"column":23}},"576":{"start":{"line":1806,"column":2},"end":{"line":1806,"column":81}},"577":{"start":{"line":1808,"column":2},"end":{"line":1808,"column":54}},"578":{"start":{"line":1809,"column":2},"end":{"line":1809,"column":55}},"579":{"start":{"line":1811,"column":2},"end":{"line":1811,"column":83}},"580":{"start":{"line":1813,"column":2},"end":{"line":1813,"column":18}},"581":{"start":{"line":1814,"column":2},"end":{"line":1832,"column":4}},"582":{"start":{"line":1815,"column":4},"end":{"line":1815,"column":31}},"583":{"start":{"line":1816,"column":4},"end":{"line":1816,"column":37}},"584":{"start":{"line":1818,"column":4},"end":{"line":1825,"column":5}},"585":{"start":{"line":1819,"column":6},"end":{"line":1819,"column":66}},"586":{"start":{"line":1820,"column":6},"end":{"line":1820,"column":102}},"587":{"start":{"line":1821,"column":6},"end":{"line":1821,"column":90}},"588":{"start":{"line":1822,"column":6},"end":{"line":1822,"column":57}},"589":{"start":{"line":1824,"column":6},"end":{"line":1824,"column":58}},"590":{"start":{"line":1827,"column":4},"end":{"line":1829,"column":6}},"591":{"start":{"line":1828,"column":6},"end":{"line":1828,"column":102}},"592":{"start":{"line":1831,"column":4},"end":{"line":1831,"column":40}},"593":{"start":{"line":1834,"column":2},"end":{"line":1834,"column":75}},"594":{"start":{"line":1865,"column":0},"end":{"line":1899,"column":2}},"595":{"start":{"line":1866,"column":2},"end":{"line":1866,"column":18}},"596":{"start":{"line":1867,"column":2},"end":{"line":1867,"column":107}},"597":{"start":{"line":1867,"column":73},"end":{"line":1867,"column":89}},"598":{"start":{"line":1867,"column":90},"end":{"line":1867,"column":103}},"599":{"start":{"line":1869,"column":2},"end":{"line":1874,"column":5}},"600":{"start":{"line":1870,"column":4},"end":{"line":1870,"column":37}},"601":{"start":{"line":1871,"column":4},"end":{"line":1871,"column":27}},"602":{"start":{"line":1872,"column":4},"end":{"line":1872,"column":38}},"603":{"start":{"line":1873,"column":4},"end":{"line":1873,"column":25}},"604":{"start":{"line":1876,"column":2},"end":{"line":1876,"column":46}},"605":{"start":{"line":1877,"column":2},"end":{"line":1877,"column":57}},"606":{"start":{"line":1878,"column":2},"end":{"line":1879,"column":59}},"607":{"start":{"line":1881,"column":2},"end":{"line":1883,"column":3}},"608":{"start":{"line":1882,"column":4},"end":{"line":1882,"column":74}},"609":{"start":{"line":1885,"column":2},"end":{"line":1885,"column":81}},"610":{"start":{"line":1886,"column":2},"end":{"line":1886,"column":83}},"611":{"start":{"line":1888,"column":2},"end":{"line":1888,"column":54}},"612":{"start":{"line":1890,"column":2},"end":{"line":1896,"column":4}},"613":{"start":{"line":1891,"column":4},"end":{"line":1893,"column":6}},"614":{"start":{"line":1892,"column":6},"end":{"line":1892,"column":58}},"615":{"start":{"line":1895,"column":4},"end":{"line":1895,"column":40}},"616":{"start":{"line":1898,"column":2},"end":{"line":1898,"column":75}},"617":{"start":{"line":1923,"column":0},"end":{"line":1937,"column":2}},"618":{"start":{"line":1924,"column":2},"end":{"line":1924,"column":18}},"619":{"start":{"line":1925,"column":2},"end":{"line":1925,"column":107}},"620":{"start":{"line":1925,"column":73},"end":{"line":1925,"column":89}},"621":{"start":{"line":1925,"column":90},"end":{"line":1925,"column":103}},"622":{"start":{"line":1927,"column":2},"end":{"line":1932,"column":5}},"623":{"start":{"line":1928,"column":4},"end":{"line":1928,"column":37}},"624":{"start":{"line":1929,"column":4},"end":{"line":1929,"column":27}},"625":{"start":{"line":1930,"column":4},"end":{"line":1930,"column":38}},"626":{"start":{"line":1931,"column":4},"end":{"line":1931,"column":25}},"627":{"start":{"line":1934,"column":2},"end":{"line":1934,"column":46}},"628":{"start":{"line":1936,"column":2},"end":{"line":1936,"column":65}},"629":{"start":{"line":1970,"column":0},"end":{"line":2005,"column":2}},"630":{"start":{"line":1971,"column":2},"end":{"line":1971,"column":18}},"631":{"start":{"line":1972,"column":2},"end":{"line":1972,"column":107}},"632":{"start":{"line":1972,"column":73},"end":{"line":1972,"column":89}},"633":{"start":{"line":1972,"column":90},"end":{"line":1972,"column":103}},"634":{"start":{"line":1974,"column":2},"end":{"line":1979,"column":5}},"635":{"start":{"line":1975,"column":4},"end":{"line":1975,"column":37}},"636":{"start":{"line":1976,"column":4},"end":{"line":1976,"column":27}},"637":{"start":{"line":1977,"column":4},"end":{"line":1977,"column":38}},"638":{"start":{"line":1978,"column":4},"end":{"line":1978,"column":25}},"639":{"start":{"line":1981,"column":2},"end":{"line":1981,"column":46}},"640":{"start":{"line":1982,"column":2},"end":{"line":1982,"column":18}},"641":{"start":{"line":1983,"column":2},"end":{"line":2004,"column":5}},"642":{"start":{"line":1984,"column":4},"end":{"line":2003,"column":5}},"643":{"start":{"line":1985,"column":6},"end":{"line":1985,"column":53}},"644":{"start":{"line":1986,"column":11},"end":{"line":2003,"column":5}},"645":{"start":{"line":1987,"column":6},"end":{"line":1987,"column":35}},"646":{"start":{"line":1988,"column":6},"end":{"line":1988,"column":39}},"647":{"start":{"line":1990,"column":6},"end":{"line":2002,"column":9}},"648":{"start":{"line":1991,"column":8},"end":{"line":1991,"column":20}},"649":{"start":{"line":1992,"column":8},"end":{"line":1999,"column":9}},"650":{"start":{"line":1993,"column":10},"end":{"line":1993,"column":25}},"651":{"start":{"line":1994,"column":15},"end":{"line":1999,"column":9}},"652":{"start":{"line":1996,"column":10},"end":{"line":1996,"column":26}},"653":{"start":{"line":1997,"column":10},"end":{"line":1997,"column":29}},"654":{"start":{"line":1998,"column":10},"end":{"line":1998,"column":45}},"655":{"start":{"line":2001,"column":8},"end":{"line":2001,"column":55}},"656":{"start":{"line":2033,"column":0},"end":{"line":2065,"column":2}},"657":{"start":{"line":2034,"column":2},"end":{"line":2034,"column":18}},"658":{"start":{"line":2035,"column":2},"end":{"line":2035,"column":107}},"659":{"start":{"line":2035,"column":73},"end":{"line":2035,"column":89}},"660":{"start":{"line":2035,"column":90},"end":{"line":2035,"column":103}},"661":{"start":{"line":2037,"column":2},"end":{"line":2042,"column":5}},"662":{"start":{"line":2038,"column":4},"end":{"line":2038,"column":37}},"663":{"start":{"line":2039,"column":4},"end":{"line":2039,"column":27}},"664":{"start":{"line":2040,"column":4},"end":{"line":2040,"column":38}},"665":{"start":{"line":2041,"column":4},"end":{"line":2041,"column":25}},"666":{"start":{"line":2044,"column":2},"end":{"line":2044,"column":46}},"667":{"start":{"line":2045,"column":2},"end":{"line":2045,"column":57}},"668":{"start":{"line":2046,"column":2},"end":{"line":2047,"column":60}},"669":{"start":{"line":2049,"column":2},"end":{"line":2049,"column":54}},"670":{"start":{"line":2051,"column":2},"end":{"line":2062,"column":4}},"671":{"start":{"line":2052,"column":4},"end":{"line":2052,"column":37}},"672":{"start":{"line":2053,"column":4},"end":{"line":2055,"column":5}},"673":{"start":{"line":2054,"column":6},"end":{"line":2054,"column":92}},"674":{"start":{"line":2057,"column":4},"end":{"line":2059,"column":6}},"675":{"start":{"line":2058,"column":6},"end":{"line":2058,"column":83}},"676":{"start":{"line":2061,"column":4},"end":{"line":2061,"column":40}},"677":{"start":{"line":2064,"column":2},"end":{"line":2064,"column":75}},"678":{"start":{"line":2097,"column":0},"end":{"line":2155,"column":2}},"679":{"start":{"line":2098,"column":2},"end":{"line":2098,"column":18}},"680":{"start":{"line":2099,"column":2},"end":{"line":2099,"column":107}},"681":{"start":{"line":2099,"column":73},"end":{"line":2099,"column":89}},"682":{"start":{"line":2099,"column":90},"end":{"line":2099,"column":103}},"683":{"start":{"line":2101,"column":2},"end":{"line":2107,"column":5}},"684":{"start":{"line":2102,"column":4},"end":{"line":2102,"column":37}},"685":{"start":{"line":2103,"column":4},"end":{"line":2103,"column":49}},"686":{"start":{"line":2104,"column":4},"end":{"line":2104,"column":39}},"687":{"start":{"line":2105,"column":4},"end":{"line":2105,"column":44}},"688":{"start":{"line":2106,"column":4},"end":{"line":2106,"column":25}},"689":{"start":{"line":2109,"column":2},"end":{"line":2109,"column":75}},"690":{"start":{"line":2111,"column":2},"end":{"line":2111,"column":46}},"691":{"start":{"line":2113,"column":2},"end":{"line":2123,"column":3}},"692":{"start":{"line":2114,"column":4},"end":{"line":2114,"column":41}},"693":{"start":{"line":2115,"column":4},"end":{"line":2117,"column":5}},"694":{"start":{"line":2116,"column":6},"end":{"line":2116,"column":118}},"695":{"start":{"line":2119,"column":4},"end":{"line":2119,"column":27}},"696":{"start":{"line":2120,"column":4},"end":{"line":2120,"column":47}},"697":{"start":{"line":2122,"column":4},"end":{"line":2122,"column":32}},"698":{"start":{"line":2125,"column":2},"end":{"line":2126,"column":56}},"699":{"start":{"line":2128,"column":2},"end":{"line":2130,"column":3}},"700":{"start":{"line":2129,"column":4},"end":{"line":2129,"column":78}},"701":{"start":{"line":2132,"column":2},"end":{"line":2132,"column":68}},"702":{"start":{"line":2133,"column":2},"end":{"line":2133,"column":81}},"703":{"start":{"line":2134,"column":2},"end":{"line":2134,"column":59}},"704":{"start":{"line":2136,"column":2},"end":{"line":2152,"column":4}},"705":{"start":{"line":2137,"column":4},"end":{"line":2137,"column":37}},"706":{"start":{"line":2138,"column":4},"end":{"line":2145,"column":5}},"707":{"start":{"line":2139,"column":6},"end":{"line":2139,"column":78}},"708":{"start":{"line":2140,"column":6},"end":{"line":2140,"column":90}},"709":{"start":{"line":2142,"column":6},"end":{"line":2144,"column":7}},"710":{"start":{"line":2143,"column":8},"end":{"line":2143,"column":62}},"711":{"start":{"line":2147,"column":4},"end":{"line":2149,"column":6}},"712":{"start":{"line":2148,"column":6},"end":{"line":2148,"column":83}},"713":{"start":{"line":2151,"column":4},"end":{"line":2151,"column":40}},"714":{"start":{"line":2154,"column":2},"end":{"line":2154,"column":75}},"715":{"start":{"line":2179,"column":0},"end":{"line":2209,"column":2}},"716":{"start":{"line":2180,"column":2},"end":{"line":2180,"column":18}},"717":{"start":{"line":2181,"column":2},"end":{"line":2181,"column":107}},"718":{"start":{"line":2181,"column":73},"end":{"line":2181,"column":89}},"719":{"start":{"line":2181,"column":90},"end":{"line":2181,"column":103}},"720":{"start":{"line":2183,"column":2},"end":{"line":2188,"column":5}},"721":{"start":{"line":2184,"column":4},"end":{"line":2184,"column":37}},"722":{"start":{"line":2185,"column":4},"end":{"line":2185,"column":27}},"723":{"start":{"line":2186,"column":4},"end":{"line":2186,"column":38}},"724":{"start":{"line":2187,"column":4},"end":{"line":2187,"column":25}},"725":{"start":{"line":2190,"column":2},"end":{"line":2190,"column":57}},"726":{"start":{"line":2192,"column":2},"end":{"line":2192,"column":46}},"727":{"start":{"line":2193,"column":2},"end":{"line":2196,"column":54}},"728":{"start":{"line":2198,"column":2},"end":{"line":2198,"column":68}},"729":{"start":{"line":2200,"column":2},"end":{"line":2206,"column":4}},"730":{"start":{"line":2201,"column":4},"end":{"line":2203,"column":6}},"731":{"start":{"line":2202,"column":6},"end":{"line":2202,"column":58}},"732":{"start":{"line":2205,"column":4},"end":{"line":2205,"column":40}},"733":{"start":{"line":2208,"column":2},"end":{"line":2208,"column":75}},"734":{"start":{"line":2233,"column":0},"end":{"line":2278,"column":2}},"735":{"start":{"line":2235,"column":2},"end":{"line":2237,"column":3}},"736":{"start":{"line":2236,"column":4},"end":{"line":2236,"column":54}},"737":{"start":{"line":2239,"column":2},"end":{"line":2241,"column":3}},"738":{"start":{"line":2240,"column":4},"end":{"line":2240,"column":92}},"739":{"start":{"line":2244,"column":2},"end":{"line":2248,"column":5}},"740":{"start":{"line":2245,"column":4},"end":{"line":2245,"column":37}},"741":{"start":{"line":2246,"column":4},"end":{"line":2246,"column":38}},"742":{"start":{"line":2247,"column":4},"end":{"line":2247,"column":55}},"743":{"start":{"line":2250,"column":2},"end":{"line":2250,"column":59}},"744":{"start":{"line":2251,"column":2},"end":{"line":2256,"column":3}},"745":{"start":{"line":2252,"column":4},"end":{"line":2254,"column":7}},"746":{"start":{"line":2253,"column":6},"end":{"line":2253,"column":29}},"747":{"start":{"line":2255,"column":4},"end":{"line":2255,"column":52}},"748":{"start":{"line":2258,"column":2},"end":{"line":2274,"column":3}},"749":{"start":{"line":2259,"column":4},"end":{"line":2265,"column":5}},"750":{"start":{"line":2260,"column":6},"end":{"line":2262,"column":7}},"751":{"start":{"line":2261,"column":8},"end":{"line":2261,"column":96}},"752":{"start":{"line":2264,"column":6},"end":{"line":2264,"column":116}},"753":{"start":{"line":2267,"column":4},"end":{"line":2273,"column":5}},"754":{"start":{"line":2268,"column":6},"end":{"line":2270,"column":7}},"755":{"start":{"line":2269,"column":8},"end":{"line":2269,"column":98}},"756":{"start":{"line":2272,"column":6},"end":{"line":2272,"column":118}},"757":{"start":{"line":2276,"column":2},"end":{"line":2276,"column":63}},"758":{"start":{"line":2277,"column":2},"end":{"line":2277,"column":177}},"759":{"start":{"line":2303,"column":0},"end":{"line":2328,"column":2}},"760":{"start":{"line":2304,"column":2},"end":{"line":2307,"column":5}},"761":{"start":{"line":2305,"column":4},"end":{"line":2305,"column":37}},"762":{"start":{"line":2306,"column":4},"end":{"line":2306,"column":38}},"763":{"start":{"line":2309,"column":2},"end":{"line":2309,"column":11}},"764":{"start":{"line":2310,"column":2},"end":{"line":2314,"column":3}},"765":{"start":{"line":2311,"column":4},"end":{"line":2311,"column":35}},"766":{"start":{"line":2313,"column":4},"end":{"line":2313,"column":33}},"767":{"start":{"line":2316,"column":2},"end":{"line":2316,"column":41}},"768":{"start":{"line":2317,"column":2},"end":{"line":2319,"column":3}},"769":{"start":{"line":2318,"column":4},"end":{"line":2318,"column":22}},"770":{"start":{"line":2321,"column":2},"end":{"line":2321,"column":33}},"771":{"start":{"line":2322,"column":2},"end":{"line":2324,"column":3}},"772":{"start":{"line":2323,"column":4},"end":{"line":2323,"column":54}},"773":{"start":{"line":2326,"column":2},"end":{"line":2326,"column":108}},"774":{"start":{"line":2327,"column":2},"end":{"line":2327,"column":37}},"775":{"start":{"line":2366,"column":0},"end":{"line":2403,"column":2}},"776":{"start":{"line":2367,"column":2},"end":{"line":2367,"column":18}},"777":{"start":{"line":2368,"column":2},"end":{"line":2368,"column":107}},"778":{"start":{"line":2368,"column":73},"end":{"line":2368,"column":89}},"779":{"start":{"line":2368,"column":90},"end":{"line":2368,"column":103}},"780":{"start":{"line":2370,"column":2},"end":{"line":2376,"column":5}},"781":{"start":{"line":2371,"column":4},"end":{"line":2371,"column":37}},"782":{"start":{"line":2372,"column":4},"end":{"line":2372,"column":27}},"783":{"start":{"line":2373,"column":4},"end":{"line":2373,"column":38}},"784":{"start":{"line":2374,"column":4},"end":{"line":2374,"column":30}},"785":{"start":{"line":2375,"column":4},"end":{"line":2375,"column":25}},"786":{"start":{"line":2378,"column":2},"end":{"line":2380,"column":3}},"787":{"start":{"line":2379,"column":4},"end":{"line":2379,"column":54}},"788":{"start":{"line":2382,"column":2},"end":{"line":2382,"column":46}},"789":{"start":{"line":2384,"column":2},"end":{"line":2384,"column":57}},"790":{"start":{"line":2386,"column":2},"end":{"line":2390,"column":59}},"791":{"start":{"line":2392,"column":2},"end":{"line":2392,"column":54}},"792":{"start":{"line":2394,"column":2},"end":{"line":2400,"column":4}},"793":{"start":{"line":2395,"column":4},"end":{"line":2397,"column":6}},"794":{"start":{"line":2396,"column":6},"end":{"line":2396,"column":58}},"795":{"start":{"line":2399,"column":4},"end":{"line":2399,"column":40}},"796":{"start":{"line":2402,"column":2},"end":{"line":2402,"column":75}},"797":{"start":{"line":2447,"column":0},"end":{"line":2449,"column":2}},"798":{"start":{"line":2448,"column":2},"end":{"line":2448,"column":130}},"799":{"start":{"line":2493,"column":0},"end":{"line":2495,"column":2}},"800":{"start":{"line":2494,"column":2},"end":{"line":2494,"column":134}},"801":{"start":{"line":2543,"column":0},"end":{"line":2545,"column":2}},"802":{"start":{"line":2544,"column":2},"end":{"line":2544,"column":125}},"803":{"start":{"line":2593,"column":0},"end":{"line":2595,"column":2}},"804":{"start":{"line":2594,"column":2},"end":{"line":2594,"column":129}},"805":{"start":{"line":2626,"column":0},"end":{"line":2652,"column":2}},"806":{"start":{"line":2627,"column":2},"end":{"line":2627,"column":18}},"807":{"start":{"line":2628,"column":2},"end":{"line":2628,"column":107}},"808":{"start":{"line":2628,"column":73},"end":{"line":2628,"column":89}},"809":{"start":{"line":2628,"column":90},"end":{"line":2628,"column":103}},"810":{"start":{"line":2630,"column":2},"end":{"line":2635,"column":5}},"811":{"start":{"line":2631,"column":4},"end":{"line":2631,"column":37}},"812":{"start":{"line":2632,"column":4},"end":{"line":2632,"column":27}},"813":{"start":{"line":2633,"column":4},"end":{"line":2633,"column":38}},"814":{"start":{"line":2634,"column":4},"end":{"line":2634,"column":25}},"815":{"start":{"line":2637,"column":2},"end":{"line":2637,"column":46}},"816":{"start":{"line":2639,"column":2},"end":{"line":2641,"column":3}},"817":{"start":{"line":2640,"column":4},"end":{"line":2640,"column":59}},"818":{"start":{"line":2643,"column":2},"end":{"line":2643,"column":18}},"819":{"start":{"line":2644,"column":2},"end":{"line":2651,"column":3}},"820":{"start":{"line":2645,"column":4},"end":{"line":2648,"column":7}},"821":{"start":{"line":2646,"column":6},"end":{"line":2646,"column":51}},"822":{"start":{"line":2647,"column":6},"end":{"line":2647,"column":115}},"823":{"start":{"line":2650,"column":4},"end":{"line":2650,"column":109}},"824":{"start":{"line":2681,"column":0},"end":{"line":2743,"column":2}},"825":{"start":{"line":2682,"column":2},"end":{"line":2682,"column":18}},"826":{"start":{"line":2683,"column":2},"end":{"line":2683,"column":107}},"827":{"start":{"line":2683,"column":73},"end":{"line":2683,"column":89}},"828":{"start":{"line":2683,"column":90},"end":{"line":2683,"column":103}},"829":{"start":{"line":2685,"column":2},"end":{"line":2690,"column":5}},"830":{"start":{"line":2686,"column":4},"end":{"line":2686,"column":37}},"831":{"start":{"line":2687,"column":4},"end":{"line":2687,"column":27}},"832":{"start":{"line":2688,"column":4},"end":{"line":2688,"column":38}},"833":{"start":{"line":2689,"column":4},"end":{"line":2689,"column":25}},"834":{"start":{"line":2692,"column":2},"end":{"line":2692,"column":46}},"835":{"start":{"line":2694,"column":2},"end":{"line":2694,"column":57}},"836":{"start":{"line":2695,"column":2},"end":{"line":2697,"column":72}},"837":{"start":{"line":2699,"column":2},"end":{"line":2701,"column":3}},"838":{"start":{"line":2700,"column":4},"end":{"line":2700,"column":55}},"839":{"start":{"line":2703,"column":2},"end":{"line":2705,"column":3}},"840":{"start":{"line":2704,"column":4},"end":{"line":2704,"column":53}},"841":{"start":{"line":2707,"column":2},"end":{"line":2707,"column":54}},"842":{"start":{"line":2709,"column":2},"end":{"line":2709,"column":73}},"843":{"start":{"line":2711,"column":2},"end":{"line":2740,"column":4}},"844":{"start":{"line":2712,"column":4},"end":{"line":2712,"column":37}},"845":{"start":{"line":2713,"column":4},"end":{"line":2733,"column":5}},"846":{"start":{"line":2714,"column":6},"end":{"line":2714,"column":37}},"847":{"start":{"line":2716,"column":6},"end":{"line":2716,"column":26}},"848":{"start":{"line":2717,"column":6},"end":{"line":2723,"column":7}},"849":{"start":{"line":2718,"column":8},"end":{"line":2718,"column":69}},"850":{"start":{"line":2720,"column":8},"end":{"line":2722,"column":9}},"851":{"start":{"line":2721,"column":10},"end":{"line":2721,"column":38}},"852":{"start":{"line":2725,"column":6},"end":{"line":2732,"column":9}},"853":{"start":{"line":2726,"column":8},"end":{"line":2729,"column":10}},"854":{"start":{"line":2731,"column":8},"end":{"line":2731,"column":46}},"855":{"start":{"line":2735,"column":4},"end":{"line":2737,"column":6}},"856":{"start":{"line":2736,"column":6},"end":{"line":2736,"column":83}},"857":{"start":{"line":2739,"column":4},"end":{"line":2739,"column":40}},"858":{"start":{"line":2742,"column":2},"end":{"line":2742,"column":75}},"859":{"start":{"line":2773,"column":0},"end":{"line":2858,"column":2}},"860":{"start":{"line":2774,"column":2},"end":{"line":2774,"column":18}},"861":{"start":{"line":2775,"column":2},"end":{"line":2775,"column":107}},"862":{"start":{"line":2775,"column":73},"end":{"line":2775,"column":89}},"863":{"start":{"line":2775,"column":90},"end":{"line":2775,"column":103}},"864":{"start":{"line":2777,"column":2},"end":{"line":2782,"column":5}},"865":{"start":{"line":2778,"column":4},"end":{"line":2778,"column":37}},"866":{"start":{"line":2779,"column":4},"end":{"line":2779,"column":27}},"867":{"start":{"line":2780,"column":4},"end":{"line":2780,"column":38}},"868":{"start":{"line":2781,"column":4},"end":{"line":2781,"column":25}},"869":{"start":{"line":2784,"column":2},"end":{"line":2784,"column":46}},"870":{"start":{"line":2786,"column":2},"end":{"line":2786,"column":57}},"871":{"start":{"line":2787,"column":2},"end":{"line":2790,"column":79}},"872":{"start":{"line":2792,"column":2},"end":{"line":2794,"column":3}},"873":{"start":{"line":2793,"column":4},"end":{"line":2793,"column":55}},"874":{"start":{"line":2796,"column":2},"end":{"line":2798,"column":3}},"875":{"start":{"line":2797,"column":4},"end":{"line":2797,"column":53}},"876":{"start":{"line":2800,"column":2},"end":{"line":2802,"column":3}},"877":{"start":{"line":2801,"column":4},"end":{"line":2801,"column":53}},"878":{"start":{"line":2804,"column":2},"end":{"line":2804,"column":54}},"879":{"start":{"line":2806,"column":2},"end":{"line":2806,"column":73}},"880":{"start":{"line":2808,"column":2},"end":{"line":2855,"column":4}},"881":{"start":{"line":2809,"column":4},"end":{"line":2809,"column":41}},"882":{"start":{"line":2810,"column":4},"end":{"line":2848,"column":5}},"883":{"start":{"line":2811,"column":6},"end":{"line":2811,"column":41}},"884":{"start":{"line":2813,"column":6},"end":{"line":2829,"column":7}},"885":{"start":{"line":2814,"column":8},"end":{"line":2814,"column":80}},"886":{"start":{"line":2816,"column":8},"end":{"line":2818,"column":9}},"887":{"start":{"line":2817,"column":10},"end":{"line":2817,"column":52}},"888":{"start":{"line":2820,"column":8},"end":{"line":2828,"column":11}},"889":{"start":{"line":2821,"column":10},"end":{"line":2825,"column":12}},"890":{"start":{"line":2827,"column":10},"end":{"line":2827,"column":52}},"891":{"start":{"line":2831,"column":6},"end":{"line":2847,"column":7}},"892":{"start":{"line":2832,"column":8},"end":{"line":2832,"column":81}},"893":{"start":{"line":2834,"column":8},"end":{"line":2836,"column":9}},"894":{"start":{"line":2835,"column":10},"end":{"line":2835,"column":52}},"895":{"start":{"line":2838,"column":8},"end":{"line":2846,"column":11}},"896":{"start":{"line":2839,"column":10},"end":{"line":2843,"column":12}},"897":{"start":{"line":2845,"column":10},"end":{"line":2845,"column":52}},"898":{"start":{"line":2850,"column":4},"end":{"line":2852,"column":6}},"899":{"start":{"line":2851,"column":6},"end":{"line":2851,"column":87}},"900":{"start":{"line":2854,"column":4},"end":{"line":2854,"column":40}},"901":{"start":{"line":2857,"column":2},"end":{"line":2857,"column":75}},"902":{"start":{"line":2885,"column":0},"end":{"line":2909,"column":2}},"903":{"start":{"line":2886,"column":2},"end":{"line":2886,"column":18}},"904":{"start":{"line":2887,"column":2},"end":{"line":2887,"column":107}},"905":{"start":{"line":2887,"column":73},"end":{"line":2887,"column":89}},"906":{"start":{"line":2887,"column":90},"end":{"line":2887,"column":103}},"907":{"start":{"line":2889,"column":2},"end":{"line":2894,"column":5}},"908":{"start":{"line":2890,"column":4},"end":{"line":2890,"column":37}},"909":{"start":{"line":2891,"column":4},"end":{"line":2891,"column":27}},"910":{"start":{"line":2892,"column":4},"end":{"line":2892,"column":38}},"911":{"start":{"line":2893,"column":4},"end":{"line":2893,"column":25}},"912":{"start":{"line":2896,"column":2},"end":{"line":2896,"column":46}},"913":{"start":{"line":2897,"column":2},"end":{"line":2897,"column":132}},"914":{"start":{"line":2899,"column":2},"end":{"line":2899,"column":18}},"915":{"start":{"line":2900,"column":2},"end":{"line":2906,"column":4}},"916":{"start":{"line":2901,"column":4},"end":{"line":2903,"column":6}},"917":{"start":{"line":2902,"column":6},"end":{"line":2902,"column":58}},"918":{"start":{"line":2905,"column":4},"end":{"line":2905,"column":40}},"919":{"start":{"line":2908,"column":2},"end":{"line":2908,"column":71}},"920":{"start":{"line":2936,"column":0},"end":{"line":2966,"column":2}},"921":{"start":{"line":2937,"column":2},"end":{"line":2937,"column":18}},"922":{"start":{"line":2938,"column":2},"end":{"line":2938,"column":107}},"923":{"start":{"line":2938,"column":73},"end":{"line":2938,"column":89}},"924":{"start":{"line":2938,"column":90},"end":{"line":2938,"column":103}},"925":{"start":{"line":2940,"column":2},"end":{"line":2945,"column":5}},"926":{"start":{"line":2941,"column":4},"end":{"line":2941,"column":37}},"927":{"start":{"line":2942,"column":4},"end":{"line":2942,"column":27}},"928":{"start":{"line":2943,"column":4},"end":{"line":2943,"column":38}},"929":{"start":{"line":2944,"column":4},"end":{"line":2944,"column":25}},"930":{"start":{"line":2947,"column":2},"end":{"line":2947,"column":46}},"931":{"start":{"line":2948,"column":2},"end":{"line":2948,"column":57}},"932":{"start":{"line":2949,"column":2},"end":{"line":2950,"column":62}},"933":{"start":{"line":2952,"column":2},"end":{"line":2954,"column":3}},"934":{"start":{"line":2953,"column":4},"end":{"line":2953,"column":54}},"935":{"start":{"line":2956,"column":2},"end":{"line":2956,"column":68}},"936":{"start":{"line":2958,"column":2},"end":{"line":2964,"column":5}},"937":{"start":{"line":2995,"column":0},"end":{"line":3041,"column":2}},"938":{"start":{"line":2996,"column":2},"end":{"line":2996,"column":18}},"939":{"start":{"line":2997,"column":2},"end":{"line":2997,"column":107}},"940":{"start":{"line":2997,"column":73},"end":{"line":2997,"column":89}},"941":{"start":{"line":2997,"column":90},"end":{"line":2997,"column":103}},"942":{"start":{"line":2999,"column":2},"end":{"line":3004,"column":5}},"943":{"start":{"line":3000,"column":4},"end":{"line":3000,"column":37}},"944":{"start":{"line":3001,"column":4},"end":{"line":3001,"column":27}},"945":{"start":{"line":3002,"column":4},"end":{"line":3002,"column":38}},"946":{"start":{"line":3003,"column":4},"end":{"line":3003,"column":25}},"947":{"start":{"line":3006,"column":2},"end":{"line":3014,"column":3}},"948":{"start":{"line":3007,"column":4},"end":{"line":3009,"column":5}},"949":{"start":{"line":3008,"column":6},"end":{"line":3008,"column":81}},"950":{"start":{"line":3011,"column":4},"end":{"line":3013,"column":5}},"951":{"start":{"line":3012,"column":6},"end":{"line":3012,"column":110}},"952":{"start":{"line":3016,"column":2},"end":{"line":3016,"column":46}},"953":{"start":{"line":3017,"column":2},"end":{"line":3017,"column":57}},"954":{"start":{"line":3018,"column":2},"end":{"line":3020,"column":78}},"955":{"start":{"line":3022,"column":2},"end":{"line":3024,"column":3}},"956":{"start":{"line":3023,"column":4},"end":{"line":3023,"column":76}},"957":{"start":{"line":3026,"column":2},"end":{"line":3038,"column":4}},"958":{"start":{"line":3027,"column":4},"end":{"line":3027,"column":37}},"959":{"start":{"line":3028,"column":4},"end":{"line":3031,"column":5}},"960":{"start":{"line":3029,"column":6},"end":{"line":3029,"column":66}},"961":{"start":{"line":3030,"column":6},"end":{"line":3030,"column":90}},"962":{"start":{"line":3033,"column":4},"end":{"line":3035,"column":6}},"963":{"start":{"line":3034,"column":6},"end":{"line":3034,"column":83}},"964":{"start":{"line":3037,"column":4},"end":{"line":3037,"column":40}},"965":{"start":{"line":3040,"column":2},"end":{"line":3040,"column":75}},"966":{"start":{"line":3086,"column":0},"end":{"line":3088,"column":2}},"967":{"start":{"line":3087,"column":2},"end":{"line":3087,"column":131}},"968":{"start":{"line":3133,"column":0},"end":{"line":3135,"column":2}},"969":{"start":{"line":3134,"column":2},"end":{"line":3134,"column":135}},"970":{"start":{"line":3174,"column":0},"end":{"line":3176,"column":2}},"971":{"start":{"line":3175,"column":2},"end":{"line":3175,"column":117}},"972":{"start":{"line":3223,"column":0},"end":{"line":3225,"column":2}},"973":{"start":{"line":3224,"column":2},"end":{"line":3224,"column":126}},"974":{"start":{"line":3255,"column":0},"end":{"line":3275,"column":2}},"975":{"start":{"line":3256,"column":2},"end":{"line":3256,"column":18}},"976":{"start":{"line":3257,"column":2},"end":{"line":3257,"column":107}},"977":{"start":{"line":3257,"column":73},"end":{"line":3257,"column":89}},"978":{"start":{"line":3257,"column":90},"end":{"line":3257,"column":103}},"979":{"start":{"line":3259,"column":2},"end":{"line":3266,"column":5}},"980":{"start":{"line":3260,"column":4},"end":{"line":3260,"column":37}},"981":{"start":{"line":3261,"column":4},"end":{"line":3261,"column":27}},"982":{"start":{"line":3262,"column":4},"end":{"line":3262,"column":38}},"983":{"start":{"line":3263,"column":4},"end":{"line":3263,"column":39}},"984":{"start":{"line":3264,"column":4},"end":{"line":3264,"column":42}},"985":{"start":{"line":3265,"column":4},"end":{"line":3265,"column":25}},"986":{"start":{"line":3268,"column":2},"end":{"line":3268,"column":46}},"987":{"start":{"line":3270,"column":2},"end":{"line":3274,"column":3}},"988":{"start":{"line":3271,"column":4},"end":{"line":3271,"column":51}},"989":{"start":{"line":3273,"column":4},"end":{"line":3273,"column":99}},"990":{"start":{"line":3304,"column":0},"end":{"line":3323,"column":2}},"991":{"start":{"line":3305,"column":2},"end":{"line":3305,"column":18}},"992":{"start":{"line":3306,"column":2},"end":{"line":3306,"column":107}},"993":{"start":{"line":3306,"column":73},"end":{"line":3306,"column":89}},"994":{"start":{"line":3306,"column":90},"end":{"line":3306,"column":103}},"995":{"start":{"line":3308,"column":2},"end":{"line":3313,"column":5}},"996":{"start":{"line":3309,"column":4},"end":{"line":3309,"column":37}},"997":{"start":{"line":3310,"column":4},"end":{"line":3310,"column":27}},"998":{"start":{"line":3311,"column":4},"end":{"line":3311,"column":38}},"999":{"start":{"line":3312,"column":4},"end":{"line":3312,"column":25}},"1000":{"start":{"line":3315,"column":2},"end":{"line":3315,"column":46}},"1001":{"start":{"line":3316,"column":2},"end":{"line":3316,"column":95}},"1002":{"start":{"line":3318,"column":2},"end":{"line":3322,"column":3}},"1003":{"start":{"line":3319,"column":4},"end":{"line":3319,"column":49}},"1004":{"start":{"line":3321,"column":4},"end":{"line":3321,"column":97}},"1005":{"start":{"line":3355,"column":0},"end":{"line":3397,"column":2}},"1006":{"start":{"line":3356,"column":2},"end":{"line":3356,"column":57}},"1007":{"start":{"line":3358,"column":2},"end":{"line":3358,"column":18}},"1008":{"start":{"line":3359,"column":2},"end":{"line":3380,"column":4}},"1009":{"start":{"line":3360,"column":4},"end":{"line":3363,"column":58}},"1010":{"start":{"line":3365,"column":4},"end":{"line":3365,"column":56}},"1011":{"start":{"line":3367,"column":4},"end":{"line":3373,"column":6}},"1012":{"start":{"line":3368,"column":6},"end":{"line":3370,"column":8}},"1013":{"start":{"line":3369,"column":8},"end":{"line":3369,"column":60}},"1014":{"start":{"line":3372,"column":6},"end":{"line":3372,"column":42}},"1015":{"start":{"line":3375,"column":4},"end":{"line":3379,"column":5}},"1016":{"start":{"line":3376,"column":6},"end":{"line":3376,"column":82}},"1017":{"start":{"line":3378,"column":6},"end":{"line":3378,"column":93}},"1018":{"start":{"line":3382,"column":2},"end":{"line":3396,"column":3}},"1019":{"start":{"line":3383,"column":4},"end":{"line":3393,"column":5}},"1020":{"start":{"line":3384,"column":6},"end":{"line":3384,"column":73}},"1021":{"start":{"line":3385,"column":6},"end":{"line":3385,"column":25}},"1022":{"start":{"line":3387,"column":6},"end":{"line":3392,"column":9}},"1023":{"start":{"line":3388,"column":8},"end":{"line":3388,"column":53}},"1024":{"start":{"line":3389,"column":8},"end":{"line":3389,"column":31}},"1025":{"start":{"line":3390,"column":8},"end":{"line":3390,"column":37}},"1026":{"start":{"line":3391,"column":8},"end":{"line":3391,"column":27}},"1027":{"start":{"line":3395,"column":4},"end":{"line":3395,"column":23}},"1028":{"start":{"line":3434,"column":0},"end":{"line":3472,"column":2}},"1029":{"start":{"line":3435,"column":2},"end":{"line":3435,"column":18}},"1030":{"start":{"line":3436,"column":2},"end":{"line":3436,"column":107}},"1031":{"start":{"line":3436,"column":73},"end":{"line":3436,"column":89}},"1032":{"start":{"line":3436,"column":90},"end":{"line":3436,"column":103}},"1033":{"start":{"line":3438,"column":2},"end":{"line":3443,"column":5}},"1034":{"start":{"line":3439,"column":4},"end":{"line":3439,"column":37}},"1035":{"start":{"line":3440,"column":4},"end":{"line":3440,"column":27}},"1036":{"start":{"line":3441,"column":4},"end":{"line":3441,"column":38}},"1037":{"start":{"line":3442,"column":4},"end":{"line":3442,"column":25}},"1038":{"start":{"line":3445,"column":2},"end":{"line":3445,"column":58}},"1039":{"start":{"line":3447,"column":2},"end":{"line":3447,"column":57}},"1040":{"start":{"line":3448,"column":2},"end":{"line":3448,"column":46}},"1041":{"start":{"line":3449,"column":2},"end":{"line":3452,"column":28}},"1042":{"start":{"line":3454,"column":2},"end":{"line":3454,"column":57}},"1043":{"start":{"line":3456,"column":2},"end":{"line":3469,"column":4}},"1044":{"start":{"line":3457,"column":4},"end":{"line":3457,"column":64}},"1045":{"start":{"line":3458,"column":4},"end":{"line":3458,"column":42}},"1046":{"start":{"line":3459,"column":4},"end":{"line":3462,"column":5}},"1047":{"start":{"line":3460,"column":6},"end":{"line":3460,"column":90}},"1048":{"start":{"line":3461,"column":6},"end":{"line":3461,"column":49}},"1049":{"start":{"line":3464,"column":4},"end":{"line":3466,"column":6}},"1050":{"start":{"line":3465,"column":6},"end":{"line":3465,"column":83}},"1051":{"start":{"line":3468,"column":4},"end":{"line":3468,"column":40}},"1052":{"start":{"line":3471,"column":2},"end":{"line":3471,"column":87}},"1053":{"start":{"line":3499,"column":0},"end":{"line":3533,"column":2}},"1054":{"start":{"line":3500,"column":2},"end":{"line":3500,"column":18}},"1055":{"start":{"line":3501,"column":2},"end":{"line":3501,"column":107}},"1056":{"start":{"line":3501,"column":73},"end":{"line":3501,"column":89}},"1057":{"start":{"line":3501,"column":90},"end":{"line":3501,"column":103}},"1058":{"start":{"line":3503,"column":2},"end":{"line":3508,"column":5}},"1059":{"start":{"line":3504,"column":4},"end":{"line":3504,"column":37}},"1060":{"start":{"line":3505,"column":4},"end":{"line":3505,"column":27}},"1061":{"start":{"line":3506,"column":4},"end":{"line":3506,"column":38}},"1062":{"start":{"line":3507,"column":4},"end":{"line":3507,"column":25}},"1063":{"start":{"line":3510,"column":2},"end":{"line":3510,"column":57}},"1064":{"start":{"line":3511,"column":2},"end":{"line":3511,"column":46}},"1065":{"start":{"line":3512,"column":2},"end":{"line":3515,"column":72}},"1066":{"start":{"line":3517,"column":2},"end":{"line":3517,"column":73}},"1067":{"start":{"line":3519,"column":2},"end":{"line":3530,"column":4}},"1068":{"start":{"line":3520,"column":4},"end":{"line":3520,"column":42}},"1069":{"start":{"line":3521,"column":4},"end":{"line":3523,"column":5}},"1070":{"start":{"line":3522,"column":6},"end":{"line":3522,"column":101}},"1071":{"start":{"line":3525,"column":4},"end":{"line":3527,"column":6}},"1072":{"start":{"line":3526,"column":6},"end":{"line":3526,"column":88}},"1073":{"start":{"line":3529,"column":4},"end":{"line":3529,"column":40}},"1074":{"start":{"line":3532,"column":2},"end":{"line":3532,"column":75}},"1075":{"start":{"line":3538,"column":0},"end":{"line":3541,"column":2}},"1076":{"start":{"line":3539,"column":2},"end":{"line":3539,"column":68}},"1077":{"start":{"line":3540,"column":2},"end":{"line":3540,"column":48}},"1078":{"start":{"line":3546,"column":0},"end":{"line":3548,"column":2}},"1079":{"start":{"line":3547,"column":2},"end":{"line":3547,"column":63}},"1080":{"start":{"line":3584,"column":0},"end":{"line":3615,"column":2}},"1081":{"start":{"line":3585,"column":2},"end":{"line":3585,"column":18}},"1082":{"start":{"line":3586,"column":2},"end":{"line":3586,"column":107}},"1083":{"start":{"line":3586,"column":73},"end":{"line":3586,"column":89}},"1084":{"start":{"line":3586,"column":90},"end":{"line":3586,"column":103}},"1085":{"start":{"line":3588,"column":2},"end":{"line":3593,"column":5}},"1086":{"start":{"line":3589,"column":4},"end":{"line":3589,"column":37}},"1087":{"start":{"line":3590,"column":4},"end":{"line":3590,"column":27}},"1088":{"start":{"line":3591,"column":4},"end":{"line":3591,"column":38}},"1089":{"start":{"line":3592,"column":4},"end":{"line":3592,"column":25}},"1090":{"start":{"line":3595,"column":2},"end":{"line":3595,"column":46}},"1091":{"start":{"line":3597,"column":2},"end":{"line":3597,"column":57}},"1092":{"start":{"line":3599,"column":2},"end":{"line":3602,"column":51}},"1093":{"start":{"line":3604,"column":2},"end":{"line":3604,"column":54}},"1094":{"start":{"line":3606,"column":2},"end":{"line":3612,"column":4}},"1095":{"start":{"line":3607,"column":4},"end":{"line":3609,"column":6}},"1096":{"start":{"line":3608,"column":6},"end":{"line":3608,"column":58}},"1097":{"start":{"line":3611,"column":4},"end":{"line":3611,"column":40}},"1098":{"start":{"line":3614,"column":2},"end":{"line":3614,"column":75}},"1099":{"start":{"line":3659,"column":0},"end":{"line":3661,"column":2}},"1100":{"start":{"line":3660,"column":2},"end":{"line":3660,"column":132}},"1101":{"start":{"line":3706,"column":0},"end":{"line":3708,"column":2}},"1102":{"start":{"line":3707,"column":2},"end":{"line":3707,"column":136}},"1103":{"start":{"line":3750,"column":0},"end":{"line":3752,"column":2}},"1104":{"start":{"line":3751,"column":2},"end":{"line":3751,"column":118}},"1105":{"start":{"line":3795,"column":0},"end":{"line":3797,"column":2}},"1106":{"start":{"line":3796,"column":2},"end":{"line":3796,"column":126}},"1107":{"start":{"line":3840,"column":0},"end":{"line":3842,"column":2}},"1108":{"start":{"line":3841,"column":2},"end":{"line":3841,"column":127}},"1109":{"start":{"line":3882,"column":0},"end":{"line":3913,"column":2}},"1110":{"start":{"line":3883,"column":2},"end":{"line":3883,"column":18}},"1111":{"start":{"line":3884,"column":2},"end":{"line":3884,"column":107}},"1112":{"start":{"line":3884,"column":73},"end":{"line":3884,"column":89}},"1113":{"start":{"line":3884,"column":90},"end":{"line":3884,"column":103}},"1114":{"start":{"line":3886,"column":2},"end":{"line":3892,"column":5}},"1115":{"start":{"line":3887,"column":4},"end":{"line":3887,"column":37}},"1116":{"start":{"line":3888,"column":4},"end":{"line":3888,"column":27}},"1117":{"start":{"line":3889,"column":4},"end":{"line":3889,"column":38}},"1118":{"start":{"line":3890,"column":4},"end":{"line":3890,"column":45}},"1119":{"start":{"line":3891,"column":4},"end":{"line":3891,"column":25}},"1120":{"start":{"line":3894,"column":2},"end":{"line":3894,"column":46}},"1121":{"start":{"line":3896,"column":2},"end":{"line":3896,"column":18}},"1122":{"start":{"line":3897,"column":2},"end":{"line":3910,"column":5}},"1123":{"start":{"line":3898,"column":4},"end":{"line":3909,"column":5}},"1124":{"start":{"line":3899,"column":6},"end":{"line":3899,"column":22}},"1125":{"start":{"line":3901,"column":6},"end":{"line":3901,"column":102}},"1126":{"start":{"line":3902,"column":6},"end":{"line":3907,"column":8}},"1127":{"start":{"line":3903,"column":8},"end":{"line":3905,"column":9}},"1128":{"start":{"line":3904,"column":10},"end":{"line":3904,"column":27}},"1129":{"start":{"line":3906,"column":8},"end":{"line":3906,"column":46}},"1130":{"start":{"line":3908,"column":6},"end":{"line":3908,"column":133}},"1131":{"start":{"line":3912,"column":2},"end":{"line":3912,"column":31}},"1132":{"start":{"line":3955,"column":0},"end":{"line":3969,"column":2}},"1133":{"start":{"line":3956,"column":2},"end":{"line":3956,"column":14}},"1134":{"start":{"line":3957,"column":2},"end":{"line":3957,"column":103}},"1135":{"start":{"line":3957,"column":73},"end":{"line":3957,"column":85}},"1136":{"start":{"line":3957,"column":86},"end":{"line":3957,"column":99}},"1137":{"start":{"line":3959,"column":2},"end":{"line":3966,"column":5}},"1138":{"start":{"line":3960,"column":4},"end":{"line":3960,"column":37}},"1139":{"start":{"line":3961,"column":4},"end":{"line":3961,"column":27}},"1140":{"start":{"line":3962,"column":4},"end":{"line":3962,"column":38}},"1141":{"start":{"line":3963,"column":4},"end":{"line":3963,"column":31}},"1142":{"start":{"line":3964,"column":4},"end":{"line":3964,"column":42}},"1143":{"start":{"line":3965,"column":4},"end":{"line":3965,"column":25}},"1144":{"start":{"line":3968,"column":2},"end":{"line":3968,"column":133}},"1145":{"start":{"line":4009,"column":0},"end":{"line":4011,"column":2}},"1146":{"start":{"line":4010,"column":2},"end":{"line":4010,"column":125}},"1147":{"start":{"line":4046,"column":0},"end":{"line":4066,"column":2}},"1148":{"start":{"line":4047,"column":2},"end":{"line":4047,"column":18}},"1149":{"start":{"line":4048,"column":2},"end":{"line":4048,"column":107}},"1150":{"start":{"line":4048,"column":73},"end":{"line":4048,"column":89}},"1151":{"start":{"line":4048,"column":90},"end":{"line":4048,"column":103}},"1152":{"start":{"line":4050,"column":2},"end":{"line":4057,"column":5}},"1153":{"start":{"line":4051,"column":4},"end":{"line":4051,"column":37}},"1154":{"start":{"line":4052,"column":4},"end":{"line":4052,"column":27}},"1155":{"start":{"line":4053,"column":4},"end":{"line":4053,"column":38}},"1156":{"start":{"line":4054,"column":4},"end":{"line":4054,"column":39}},"1157":{"start":{"line":4055,"column":4},"end":{"line":4055,"column":42}},"1158":{"start":{"line":4056,"column":4},"end":{"line":4056,"column":25}},"1159":{"start":{"line":4059,"column":2},"end":{"line":4059,"column":46}},"1160":{"start":{"line":4061,"column":2},"end":{"line":4065,"column":3}},"1161":{"start":{"line":4062,"column":4},"end":{"line":4062,"column":51}},"1162":{"start":{"line":4064,"column":4},"end":{"line":4064,"column":90}},"1163":{"start":{"line":4098,"column":0},"end":{"line":4116,"column":2}},"1164":{"start":{"line":4099,"column":2},"end":{"line":4099,"column":18}},"1165":{"start":{"line":4100,"column":2},"end":{"line":4100,"column":107}},"1166":{"start":{"line":4100,"column":73},"end":{"line":4100,"column":89}},"1167":{"start":{"line":4100,"column":90},"end":{"line":4100,"column":103}},"1168":{"start":{"line":4102,"column":2},"end":{"line":4107,"column":5}},"1169":{"start":{"line":4103,"column":4},"end":{"line":4103,"column":37}},"1170":{"start":{"line":4104,"column":4},"end":{"line":4104,"column":27}},"1171":{"start":{"line":4105,"column":4},"end":{"line":4105,"column":38}},"1172":{"start":{"line":4106,"column":4},"end":{"line":4106,"column":25}},"1173":{"start":{"line":4109,"column":2},"end":{"line":4109,"column":46}},"1174":{"start":{"line":4110,"column":2},"end":{"line":4110,"column":95}},"1175":{"start":{"line":4111,"column":2},"end":{"line":4115,"column":3}},"1176":{"start":{"line":4112,"column":4},"end":{"line":4112,"column":49}},"1177":{"start":{"line":4114,"column":4},"end":{"line":4114,"column":88}},"1178":{"start":{"line":4163,"column":0},"end":{"line":4213,"column":2}},"1179":{"start":{"line":4164,"column":2},"end":{"line":4164,"column":18}},"1180":{"start":{"line":4165,"column":2},"end":{"line":4165,"column":107}},"1181":{"start":{"line":4165,"column":73},"end":{"line":4165,"column":89}},"1182":{"start":{"line":4165,"column":90},"end":{"line":4165,"column":103}},"1183":{"start":{"line":4167,"column":2},"end":{"line":4174,"column":5}},"1184":{"start":{"line":4168,"column":4},"end":{"line":4168,"column":37}},"1185":{"start":{"line":4169,"column":4},"end":{"line":4169,"column":27}},"1186":{"start":{"line":4170,"column":4},"end":{"line":4170,"column":38}},"1187":{"start":{"line":4171,"column":4},"end":{"line":4171,"column":32}},"1188":{"start":{"line":4172,"column":4},"end":{"line":4172,"column":45}},"1189":{"start":{"line":4173,"column":4},"end":{"line":4173,"column":25}},"1190":{"start":{"line":4176,"column":2},"end":{"line":4176,"column":46}},"1191":{"start":{"line":4177,"column":2},"end":{"line":4177,"column":72}},"1192":{"start":{"line":4179,"column":2},"end":{"line":4179,"column":18}},"1193":{"start":{"line":4180,"column":2},"end":{"line":4180,"column":15}},"1194":{"start":{"line":4182,"column":2},"end":{"line":4200,"column":4}},"1195":{"start":{"line":4183,"column":4},"end":{"line":4199,"column":5}},"1196":{"start":{"line":4184,"column":6},"end":{"line":4184,"column":56}},"1197":{"start":{"line":4187,"column":6},"end":{"line":4189,"column":7}},"1198":{"start":{"line":4188,"column":8},"end":{"line":4188,"column":118}},"1199":{"start":{"line":4191,"column":6},"end":{"line":4191,"column":102}},"1200":{"start":{"line":4192,"column":6},"end":{"line":4197,"column":8}},"1201":{"start":{"line":4193,"column":8},"end":{"line":4195,"column":9}},"1202":{"start":{"line":4194,"column":10},"end":{"line":4194,"column":27}},"1203":{"start":{"line":4196,"column":8},"end":{"line":4196,"column":58}},"1204":{"start":{"line":4198,"column":6},"end":{"line":4198,"column":105}},"1205":{"start":{"line":4203,"column":2},"end":{"line":4210,"column":5}},"1206":{"start":{"line":4204,"column":4},"end":{"line":4209,"column":5}},"1207":{"start":{"line":4205,"column":6},"end":{"line":4205,"column":22}},"1208":{"start":{"line":4207,"column":6},"end":{"line":4207,"column":23}},"1209":{"start":{"line":4208,"column":6},"end":{"line":4208,"column":83}},"1210":{"start":{"line":4212,"column":2},"end":{"line":4212,"column":30}},"1211":{"start":{"line":4258,"column":0},"end":{"line":4286,"column":2}},"1212":{"start":{"line":4259,"column":2},"end":{"line":4259,"column":18}},"1213":{"start":{"line":4260,"column":2},"end":{"line":4260,"column":107}},"1214":{"start":{"line":4260,"column":73},"end":{"line":4260,"column":89}},"1215":{"start":{"line":4260,"column":90},"end":{"line":4260,"column":103}},"1216":{"start":{"line":4262,"column":2},"end":{"line":4270,"column":5}},"1217":{"start":{"line":4263,"column":4},"end":{"line":4263,"column":37}},"1218":{"start":{"line":4264,"column":4},"end":{"line":4264,"column":27}},"1219":{"start":{"line":4265,"column":4},"end":{"line":4265,"column":38}},"1220":{"start":{"line":4266,"column":4},"end":{"line":4266,"column":32}},"1221":{"start":{"line":4267,"column":4},"end":{"line":4267,"column":31}},"1222":{"start":{"line":4268,"column":4},"end":{"line":4268,"column":42}},"1223":{"start":{"line":4269,"column":4},"end":{"line":4269,"column":25}},"1224":{"start":{"line":4272,"column":2},"end":{"line":4272,"column":46}},"1225":{"start":{"line":4274,"column":2},"end":{"line":4274,"column":18}},"1226":{"start":{"line":4275,"column":2},"end":{"line":4281,"column":4}},"1227":{"start":{"line":4276,"column":4},"end":{"line":4280,"column":5}},"1228":{"start":{"line":4277,"column":6},"end":{"line":4277,"column":56}},"1229":{"start":{"line":4279,"column":6},"end":{"line":4279,"column":107}},"1230":{"start":{"line":4283,"column":2},"end":{"line":4283,"column":87}},"1231":{"start":{"line":4285,"column":2},"end":{"line":4285,"column":30}},"1232":{"start":{"line":4329,"column":0},"end":{"line":4356,"column":2}},"1233":{"start":{"line":4330,"column":2},"end":{"line":4330,"column":18}},"1234":{"start":{"line":4331,"column":2},"end":{"line":4331,"column":107}},"1235":{"start":{"line":4331,"column":73},"end":{"line":4331,"column":89}},"1236":{"start":{"line":4331,"column":90},"end":{"line":4331,"column":103}},"1237":{"start":{"line":4333,"column":2},"end":{"line":4339,"column":5}},"1238":{"start":{"line":4334,"column":4},"end":{"line":4334,"column":37}},"1239":{"start":{"line":4335,"column":4},"end":{"line":4335,"column":27}},"1240":{"start":{"line":4336,"column":4},"end":{"line":4336,"column":38}},"1241":{"start":{"line":4337,"column":4},"end":{"line":4337,"column":32}},"1242":{"start":{"line":4338,"column":4},"end":{"line":4338,"column":25}},"1243":{"start":{"line":4341,"column":2},"end":{"line":4341,"column":46}},"1244":{"start":{"line":4343,"column":2},"end":{"line":4343,"column":18}},"1245":{"start":{"line":4344,"column":2},"end":{"line":4350,"column":4}},"1246":{"start":{"line":4345,"column":4},"end":{"line":4349,"column":5}},"1247":{"start":{"line":4346,"column":6},"end":{"line":4346,"column":56}},"1248":{"start":{"line":4348,"column":6},"end":{"line":4348,"column":92}},"1249":{"start":{"line":4352,"column":2},"end":{"line":4352,"column":135}},"1250":{"start":{"line":4353,"column":2},"end":{"line":4353,"column":88}},"1251":{"start":{"line":4355,"column":2},"end":{"line":4355,"column":30}},"1252":{"start":{"line":4401,"column":0},"end":{"line":4456,"column":2}},"1253":{"start":{"line":4402,"column":2},"end":{"line":4402,"column":18}},"1254":{"start":{"line":4403,"column":2},"end":{"line":4403,"column":107}},"1255":{"start":{"line":4403,"column":73},"end":{"line":4403,"column":89}},"1256":{"start":{"line":4403,"column":90},"end":{"line":4403,"column":103}},"1257":{"start":{"line":4405,"column":2},"end":{"line":4410,"column":5}},"1258":{"start":{"line":4406,"column":4},"end":{"line":4406,"column":37}},"1259":{"start":{"line":4407,"column":4},"end":{"line":4407,"column":27}},"1260":{"start":{"line":4408,"column":4},"end":{"line":4408,"column":38}},"1261":{"start":{"line":4409,"column":4},"end":{"line":4409,"column":32}},"1262":{"start":{"line":4412,"column":2},"end":{"line":4412,"column":46}},"1263":{"start":{"line":4414,"column":2},"end":{"line":4414,"column":21}},"1264":{"start":{"line":4415,"column":2},"end":{"line":4423,"column":3}},"1265":{"start":{"line":4417,"column":4},"end":{"line":4417,"column":87}},"1266":{"start":{"line":4418,"column":4},"end":{"line":4418,"column":90}},"1267":{"start":{"line":4419,"column":9},"end":{"line":4423,"column":3}},"1268":{"start":{"line":4420,"column":4},"end":{"line":4420,"column":68}},"1269":{"start":{"line":4421,"column":9},"end":{"line":4423,"column":3}},"1270":{"start":{"line":4422,"column":4},"end":{"line":4422,"column":69}},"1271":{"start":{"line":4425,"column":2},"end":{"line":4425,"column":80}},"1272":{"start":{"line":4426,"column":2},"end":{"line":4426,"column":41}},"1273":{"start":{"line":4428,"column":2},"end":{"line":4428,"column":17}},"1274":{"start":{"line":4430,"column":2},"end":{"line":4430,"column":18}},"1275":{"start":{"line":4431,"column":2},"end":{"line":4447,"column":4}},"1276":{"start":{"line":4432,"column":4},"end":{"line":4446,"column":5}},"1277":{"start":{"line":4433,"column":6},"end":{"line":4435,"column":7}},"1278":{"start":{"line":4434,"column":8},"end":{"line":4434,"column":58}},"1279":{"start":{"line":4437,"column":6},"end":{"line":4445,"column":9}},"1280":{"start":{"line":4438,"column":8},"end":{"line":4440,"column":9}},"1281":{"start":{"line":4439,"column":10},"end":{"line":4439,"column":38}},"1282":{"start":{"line":4442,"column":8},"end":{"line":4444,"column":9}},"1283":{"start":{"line":4443,"column":10},"end":{"line":4443,"column":42}},"1284":{"start":{"line":4449,"column":2},"end":{"line":4453,"column":3}},"1285":{"start":{"line":4450,"column":4},"end":{"line":4450,"column":81}},"1286":{"start":{"line":4452,"column":4},"end":{"line":4452,"column":21}},"1287":{"start":{"line":4455,"column":2},"end":{"line":4455,"column":16}},"1288":{"start":{"line":4502,"column":0},"end":{"line":4573,"column":2}},"1289":{"start":{"line":4503,"column":2},"end":{"line":4503,"column":14}},"1290":{"start":{"line":4504,"column":2},"end":{"line":4504,"column":103}},"1291":{"start":{"line":4504,"column":73},"end":{"line":4504,"column":85}},"1292":{"start":{"line":4504,"column":86},"end":{"line":4504,"column":99}},"1293":{"start":{"line":4505,"column":2},"end":{"line":4505,"column":72}},"1294":{"start":{"line":4507,"column":2},"end":{"line":4510,"column":3}},"1295":{"start":{"line":4509,"column":4},"end":{"line":4509,"column":87}},"1296":{"start":{"line":4512,"column":2},"end":{"line":4512,"column":17}},"1297":{"start":{"line":4514,"column":2},"end":{"line":4514,"column":18}},"1298":{"start":{"line":4515,"column":2},"end":{"line":4543,"column":4}},"1299":{"start":{"line":4516,"column":4},"end":{"line":4535,"column":6}},"1300":{"start":{"line":4517,"column":6},"end":{"line":4523,"column":8}},"1301":{"start":{"line":4518,"column":8},"end":{"line":4522,"column":9}},"1302":{"start":{"line":4519,"column":10},"end":{"line":4519,"column":44}},"1303":{"start":{"line":4521,"column":10},"end":{"line":4521,"column":44}},"1304":{"start":{"line":4525,"column":6},"end":{"line":4534,"column":7}},"1305":{"start":{"line":4526,"column":8},"end":{"line":4529,"column":11}},"1306":{"start":{"line":4527,"column":10},"end":{"line":4527,"column":104}},"1307":{"start":{"line":4528,"column":10},"end":{"line":4528,"column":111}},"1308":{"start":{"line":4530,"column":8},"end":{"line":4530,"column":24}},"1309":{"start":{"line":4533,"column":8},"end":{"line":4533,"column":96}},"1310":{"start":{"line":4537,"column":4},"end":{"line":4542,"column":5}},"1311":{"start":{"line":4538,"column":6},"end":{"line":4538,"column":107}},"1312":{"start":{"line":4539,"column":6},"end":{"line":4539,"column":114}},"1313":{"start":{"line":4541,"column":6},"end":{"line":4541,"column":31}},"1314":{"start":{"line":4545,"column":2},"end":{"line":4570,"column":3}},"1315":{"start":{"line":4546,"column":4},"end":{"line":4548,"column":5}},"1316":{"start":{"line":4547,"column":6},"end":{"line":4547,"column":43}},"1317":{"start":{"line":4550,"column":4},"end":{"line":4567,"column":5}},"1318":{"start":{"line":4554,"column":6},"end":{"line":4564,"column":9}},"1319":{"start":{"line":4555,"column":8},"end":{"line":4563,"column":9}},"1320":{"start":{"line":4556,"column":10},"end":{"line":4556,"column":26}},"1321":{"start":{"line":4558,"column":10},"end":{"line":4560,"column":11}},"1322":{"start":{"line":4559,"column":12},"end":{"line":4559,"column":62}},"1323":{"start":{"line":4562,"column":10},"end":{"line":4562,"column":24}},"1324":{"start":{"line":4566,"column":6},"end":{"line":4566,"column":20}},"1325":{"start":{"line":4569,"column":4},"end":{"line":4569,"column":18}},"1326":{"start":{"line":4572,"column":2},"end":{"line":4572,"column":31}},"1327":{"start":{"line":4617,"column":0},"end":{"line":4685,"column":2}},"1328":{"start":{"line":4618,"column":2},"end":{"line":4618,"column":14}},"1329":{"start":{"line":4619,"column":2},"end":{"line":4619,"column":103}},"1330":{"start":{"line":4619,"column":73},"end":{"line":4619,"column":85}},"1331":{"start":{"line":4619,"column":86},"end":{"line":4619,"column":99}},"1332":{"start":{"line":4620,"column":2},"end":{"line":4620,"column":72}},"1333":{"start":{"line":4621,"column":2},"end":{"line":4621,"column":139}},"1334":{"start":{"line":4623,"column":2},"end":{"line":4623,"column":18}},"1335":{"start":{"line":4624,"column":2},"end":{"line":4656,"column":4}},"1336":{"start":{"line":4625,"column":4},"end":{"line":4625,"column":22}},"1337":{"start":{"line":4626,"column":4},"end":{"line":4626,"column":128}},"1338":{"start":{"line":4628,"column":4},"end":{"line":4642,"column":5}},"1339":{"start":{"line":4630,"column":6},"end":{"line":4630,"column":89}},"1340":{"start":{"line":4631,"column":6},"end":{"line":4631,"column":41}},"1341":{"start":{"line":4633,"column":6},"end":{"line":4635,"column":7}},"1342":{"start":{"line":4634,"column":8},"end":{"line":4634,"column":53}},"1343":{"start":{"line":4636,"column":11},"end":{"line":4642,"column":5}},"1344":{"start":{"line":4637,"column":6},"end":{"line":4637,"column":40}},"1345":{"start":{"line":4639,"column":6},"end":{"line":4641,"column":7}},"1346":{"start":{"line":4640,"column":8},"end":{"line":4640,"column":53}},"1347":{"start":{"line":4644,"column":4},"end":{"line":4653,"column":6}},"1348":{"start":{"line":4645,"column":6},"end":{"line":4652,"column":7}},"1349":{"start":{"line":4646,"column":8},"end":{"line":4649,"column":11}},"1350":{"start":{"line":4647,"column":10},"end":{"line":4647,"column":49}},"1351":{"start":{"line":4648,"column":10},"end":{"line":4648,"column":42}},"1352":{"start":{"line":4651,"column":8},"end":{"line":4651,"column":46}},"1353":{"start":{"line":4655,"column":4},"end":{"line":4655,"column":93}},"1354":{"start":{"line":4658,"column":2},"end":{"line":4684,"column":3}},"1355":{"start":{"line":4659,"column":4},"end":{"line":4661,"column":5}},"1356":{"start":{"line":4660,"column":6},"end":{"line":4660,"column":43}},"1357":{"start":{"line":4663,"column":4},"end":{"line":4678,"column":5}},"1358":{"start":{"line":4667,"column":6},"end":{"line":4677,"column":9}},"1359":{"start":{"line":4668,"column":8},"end":{"line":4676,"column":9}},"1360":{"start":{"line":4669,"column":10},"end":{"line":4669,"column":26}},"1361":{"start":{"line":4671,"column":10},"end":{"line":4673,"column":11}},"1362":{"start":{"line":4672,"column":12},"end":{"line":4672,"column":62}},"1363":{"start":{"line":4675,"column":10},"end":{"line":4675,"column":24}},"1364":{"start":{"line":4680,"column":4},"end":{"line":4682,"column":5}},"1365":{"start":{"line":4681,"column":6},"end":{"line":4681,"column":122}},"1366":{"start":{"line":4683,"column":4},"end":{"line":4683,"column":18}},"1367":{"start":{"line":4725,"column":0},"end":{"line":4772,"column":2}},"1368":{"start":{"line":4726,"column":2},"end":{"line":4728,"column":3}},"1369":{"start":{"line":4727,"column":4},"end":{"line":4727,"column":50}},"1370":{"start":{"line":4730,"column":2},"end":{"line":4730,"column":42}},"1371":{"start":{"line":4731,"column":2},"end":{"line":4731,"column":34}},"1372":{"start":{"line":4733,"column":2},"end":{"line":4733,"column":57}},"1373":{"start":{"line":4734,"column":2},"end":{"line":4737,"column":56}},"1374":{"start":{"line":4739,"column":2},"end":{"line":4741,"column":3}},"1375":{"start":{"line":4740,"column":4},"end":{"line":4740,"column":68}},"1376":{"start":{"line":4743,"column":2},"end":{"line":4743,"column":54}},"1377":{"start":{"line":4745,"column":2},"end":{"line":4763,"column":4}},"1378":{"start":{"line":4746,"column":4},"end":{"line":4746,"column":37}},"1379":{"start":{"line":4747,"column":4},"end":{"line":4753,"column":5}},"1380":{"start":{"line":4748,"column":6},"end":{"line":4748,"column":66}},"1381":{"start":{"line":4749,"column":6},"end":{"line":4749,"column":90}},"1382":{"start":{"line":4750,"column":6},"end":{"line":4752,"column":7}},"1383":{"start":{"line":4751,"column":8},"end":{"line":4751,"column":62}},"1384":{"start":{"line":4755,"column":4},"end":{"line":4760,"column":6}},"1385":{"start":{"line":4756,"column":6},"end":{"line":4758,"column":7}},"1386":{"start":{"line":4757,"column":8},"end":{"line":4757,"column":39}},"1387":{"start":{"line":4759,"column":6},"end":{"line":4759,"column":83}},"1388":{"start":{"line":4762,"column":4},"end":{"line":4762,"column":40}},"1389":{"start":{"line":4765,"column":2},"end":{"line":4769,"column":3}},"1390":{"start":{"line":4766,"column":4},"end":{"line":4766,"column":77}},"1391":{"start":{"line":4768,"column":4},"end":{"line":4768,"column":91}},"1392":{"start":{"line":4771,"column":2},"end":{"line":4771,"column":30}},"1393":{"start":{"line":4807,"column":0},"end":{"line":4864,"column":2}},"1394":{"start":{"line":4808,"column":2},"end":{"line":4808,"column":68}},"1395":{"start":{"line":4809,"column":2},"end":{"line":4809,"column":34}},"1396":{"start":{"line":4811,"column":2},"end":{"line":4811,"column":18}},"1397":{"start":{"line":4812,"column":2},"end":{"line":4845,"column":4}},"1398":{"start":{"line":4813,"column":4},"end":{"line":4813,"column":59}},"1399":{"start":{"line":4815,"column":4},"end":{"line":4819,"column":90}},"1400":{"start":{"line":4821,"column":4},"end":{"line":4821,"column":56}},"1401":{"start":{"line":4823,"column":4},"end":{"line":4838,"column":6}},"1402":{"start":{"line":4824,"column":6},"end":{"line":4824,"column":39}},"1403":{"start":{"line":4825,"column":6},"end":{"line":4828,"column":7}},"1404":{"start":{"line":4826,"column":8},"end":{"line":4826,"column":68}},"1405":{"start":{"line":4827,"column":8},"end":{"line":4827,"column":92}},"1406":{"start":{"line":4830,"column":6},"end":{"line":4835,"column":8}},"1407":{"start":{"line":4831,"column":8},"end":{"line":4833,"column":9}},"1408":{"start":{"line":4832,"column":10},"end":{"line":4832,"column":41}},"1409":{"start":{"line":4834,"column":8},"end":{"line":4834,"column":85}},"1410":{"start":{"line":4837,"column":6},"end":{"line":4837,"column":42}},"1411":{"start":{"line":4840,"column":4},"end":{"line":4844,"column":5}},"1412":{"start":{"line":4841,"column":6},"end":{"line":4841,"column":82}},"1413":{"start":{"line":4843,"column":6},"end":{"line":4843,"column":93}},"1414":{"start":{"line":4847,"column":2},"end":{"line":4861,"column":3}},"1415":{"start":{"line":4848,"column":4},"end":{"line":4858,"column":5}},"1416":{"start":{"line":4849,"column":6},"end":{"line":4849,"column":73}},"1417":{"start":{"line":4850,"column":6},"end":{"line":4850,"column":25}},"1418":{"start":{"line":4852,"column":6},"end":{"line":4857,"column":9}},"1419":{"start":{"line":4853,"column":8},"end":{"line":4853,"column":53}},"1420":{"start":{"line":4854,"column":8},"end":{"line":4854,"column":31}},"1421":{"start":{"line":4855,"column":8},"end":{"line":4855,"column":37}},"1422":{"start":{"line":4856,"column":8},"end":{"line":4856,"column":27}},"1423":{"start":{"line":4860,"column":4},"end":{"line":4860,"column":23}},"1424":{"start":{"line":4863,"column":2},"end":{"line":4863,"column":30}},"1425":{"start":{"line":4896,"column":0},"end":{"line":4931,"column":2}},"1426":{"start":{"line":4897,"column":2},"end":{"line":4897,"column":18}},"1427":{"start":{"line":4898,"column":2},"end":{"line":4907,"column":3}},"1428":{"start":{"line":4899,"column":4},"end":{"line":4901,"column":7}},"1429":{"start":{"line":4900,"column":6},"end":{"line":4900,"column":29}},"1430":{"start":{"line":4902,"column":4},"end":{"line":4902,"column":59}},"1431":{"start":{"line":4903,"column":4},"end":{"line":4903,"column":48}},"1432":{"start":{"line":4905,"column":4},"end":{"line":4906,"column":66}},"1433":{"start":{"line":4909,"column":2},"end":{"line":4914,"column":71}},"1434":{"start":{"line":4916,"column":2},"end":{"line":4928,"column":4}},"1435":{"start":{"line":4917,"column":4},"end":{"line":4917,"column":38}},"1436":{"start":{"line":4918,"column":4},"end":{"line":4921,"column":5}},"1437":{"start":{"line":4919,"column":6},"end":{"line":4919,"column":68}},"1438":{"start":{"line":4920,"column":6},"end":{"line":4920,"column":91}},"1439":{"start":{"line":4923,"column":4},"end":{"line":4925,"column":6}},"1440":{"start":{"line":4924,"column":6},"end":{"line":4924,"column":84}},"1441":{"start":{"line":4927,"column":4},"end":{"line":4927,"column":40}},"1442":{"start":{"line":4930,"column":2},"end":{"line":4930,"column":75}},"1443":{"start":{"line":4963,"column":0},"end":{"line":4991,"column":2}},"1444":{"start":{"line":4964,"column":2},"end":{"line":4964,"column":133}},"1445":{"start":{"line":4968,"column":2},"end":{"line":4970,"column":3}},"1446":{"start":{"line":4969,"column":4},"end":{"line":4969,"column":83}},"1447":{"start":{"line":4972,"column":2},"end":{"line":4984,"column":4}},"1448":{"start":{"line":4973,"column":4},"end":{"line":4973,"column":37}},"1449":{"start":{"line":4974,"column":4},"end":{"line":4977,"column":5}},"1450":{"start":{"line":4975,"column":6},"end":{"line":4975,"column":66}},"1451":{"start":{"line":4976,"column":6},"end":{"line":4976,"column":90}},"1452":{"start":{"line":4979,"column":4},"end":{"line":4981,"column":6}},"1453":{"start":{"line":4980,"column":6},"end":{"line":4980,"column":83}},"1454":{"start":{"line":4983,"column":4},"end":{"line":4983,"column":40}},"1455":{"start":{"line":4986,"column":2},"end":{"line":4990,"column":3}},"1456":{"start":{"line":4987,"column":4},"end":{"line":4987,"column":73}},"1457":{"start":{"line":4989,"column":4},"end":{"line":4989,"column":91}},"1458":{"start":{"line":4996,"column":0},"end":{"line":5024,"column":2}},"1459":{"start":{"line":4997,"column":2},"end":{"line":4999,"column":3}},"1460":{"start":{"line":4998,"column":4},"end":{"line":4998,"column":55}},"1461":{"start":{"line":5001,"column":2},"end":{"line":5003,"column":3}},"1462":{"start":{"line":5002,"column":4},"end":{"line":5002,"column":53}},"1463":{"start":{"line":5006,"column":2},"end":{"line":5008,"column":3}},"1464":{"start":{"line":5007,"column":4},"end":{"line":5007,"column":17}},"1465":{"start":{"line":5010,"column":2},"end":{"line":5010,"column":34}},"1466":{"start":{"line":5011,"column":2},"end":{"line":5011,"column":30}},"1467":{"start":{"line":5013,"column":2},"end":{"line":5013,"column":114}},"1468":{"start":{"line":5015,"column":2},"end":{"line":5015,"column":57}},"1469":{"start":{"line":5016,"column":2},"end":{"line":5019,"column":59}},"1470":{"start":{"line":5021,"column":2},"end":{"line":5021,"column":54}},"1471":{"start":{"line":5023,"column":2},"end":{"line":5023,"column":21}},"1472":{"start":{"line":5074,"column":0},"end":{"line":5322,"column":2}},"1473":{"start":{"line":5075,"column":2},"end":{"line":5075,"column":84}},"1474":{"start":{"line":5077,"column":2},"end":{"line":5077,"column":14}},"1475":{"start":{"line":5078,"column":2},"end":{"line":5078,"column":24}},"1476":{"start":{"line":5079,"column":2},"end":{"line":5079,"column":23}},"1477":{"start":{"line":5080,"column":2},"end":{"line":5080,"column":25}},"1478":{"start":{"line":5081,"column":2},"end":{"line":5081,"column":21}},"1479":{"start":{"line":5082,"column":2},"end":{"line":5082,"column":104}},"1480":{"start":{"line":5083,"column":2},"end":{"line":5083,"column":111}},"1481":{"start":{"line":5085,"column":2},"end":{"line":5117,"column":3}},"1482":{"start":{"line":5086,"column":4},"end":{"line":5086,"column":36}},"1483":{"start":{"line":5087,"column":4},"end":{"line":5087,"column":29}},"1484":{"start":{"line":5090,"column":4},"end":{"line":5090,"column":55}},"1485":{"start":{"line":5091,"column":4},"end":{"line":5103,"column":5}},"1486":{"start":{"line":5092,"column":6},"end":{"line":5099,"column":7}},"1487":{"start":{"line":5094,"column":8},"end":{"line":5094,"column":180}},"1488":{"start":{"line":5095,"column":8},"end":{"line":5095,"column":24}},"1489":{"start":{"line":5096,"column":8},"end":{"line":5096,"column":15}},"1490":{"start":{"line":5098,"column":8},"end":{"line":5098,"column":43}},"1491":{"start":{"line":5102,"column":6},"end":{"line":5102,"column":95}},"1492":{"start":{"line":5104,"column":9},"end":{"line":5117,"column":3}},"1493":{"start":{"line":5105,"column":4},"end":{"line":5105,"column":29}},"1494":{"start":{"line":5106,"column":4},"end":{"line":5106,"column":28}},"1495":{"start":{"line":5107,"column":4},"end":{"line":5107,"column":68}},"1496":{"start":{"line":5108,"column":9},"end":{"line":5117,"column":3}},"1497":{"start":{"line":5109,"column":4},"end":{"line":5109,"column":36}},"1498":{"start":{"line":5110,"column":4},"end":{"line":5110,"column":30}},"1499":{"start":{"line":5111,"column":4},"end":{"line":5111,"column":37}},"1500":{"start":{"line":5112,"column":4},"end":{"line":5112,"column":69}},"1501":{"start":{"line":5114,"column":4},"end":{"line":5114,"column":93}},"1502":{"start":{"line":5115,"column":4},"end":{"line":5115,"column":20}},"1503":{"start":{"line":5116,"column":4},"end":{"line":5116,"column":11}},"1504":{"start":{"line":5119,"column":2},"end":{"line":5119,"column":46}},"1505":{"start":{"line":5121,"column":2},"end":{"line":5121,"column":40}},"1506":{"start":{"line":5124,"column":2},"end":{"line":5124,"column":68}},"1507":{"start":{"line":5125,"column":2},"end":{"line":5125,"column":40}},"1508":{"start":{"line":5128,"column":2},"end":{"line":5128,"column":108}},"1509":{"start":{"line":5129,"column":2},"end":{"line":5129,"column":44}},"1510":{"start":{"line":5132,"column":2},"end":{"line":5134,"column":3}},"1511":{"start":{"line":5133,"column":4},"end":{"line":5133,"column":54}},"1512":{"start":{"line":5137,"column":2},"end":{"line":5137,"column":148}},"1513":{"start":{"line":5138,"column":2},"end":{"line":5138,"column":63}},"1514":{"start":{"line":5141,"column":2},"end":{"line":5150,"column":4}},"1515":{"start":{"line":5153,"column":2},"end":{"line":5153,"column":76}},"1516":{"start":{"line":5154,"column":2},"end":{"line":5154,"column":21}},"1517":{"start":{"line":5155,"column":2},"end":{"line":5155,"column":20}},"1518":{"start":{"line":5156,"column":2},"end":{"line":5156,"column":22}},"1519":{"start":{"line":5158,"column":2},"end":{"line":5158,"column":18}},"1520":{"start":{"line":5159,"column":2},"end":{"line":5265,"column":5}},"1521":{"start":{"line":5160,"column":4},"end":{"line":5160,"column":25}},"1522":{"start":{"line":5161,"column":4},"end":{"line":5161,"column":21}},"1523":{"start":{"line":5162,"column":4},"end":{"line":5162,"column":75}},"1524":{"start":{"line":5164,"column":4},"end":{"line":5166,"column":5}},"1525":{"start":{"line":5165,"column":6},"end":{"line":5165,"column":98}},"1526":{"start":{"line":5168,"column":4},"end":{"line":5172,"column":5}},"1527":{"start":{"line":5170,"column":6},"end":{"line":5170,"column":53}},"1528":{"start":{"line":5171,"column":6},"end":{"line":5171,"column":56}},"1529":{"start":{"line":5174,"column":4},"end":{"line":5189,"column":6}},"1530":{"start":{"line":5175,"column":6},"end":{"line":5175,"column":37}},"1531":{"start":{"line":5175,"column":25},"end":{"line":5175,"column":37}},"1532":{"start":{"line":5176,"column":6},"end":{"line":5187,"column":7}},"1533":{"start":{"line":5177,"column":8},"end":{"line":5177,"column":163}},"1534":{"start":{"line":5178,"column":8},"end":{"line":5178,"column":27}},"1535":{"start":{"line":5179,"column":8},"end":{"line":5179,"column":21}},"1536":{"start":{"line":5180,"column":13},"end":{"line":5187,"column":7}},"1537":{"start":{"line":5181,"column":8},"end":{"line":5181,"column":163}},"1538":{"start":{"line":5182,"column":8},"end":{"line":5182,"column":37}},"1539":{"start":{"line":5183,"column":8},"end":{"line":5183,"column":57}},"1540":{"start":{"line":5184,"column":8},"end":{"line":5186,"column":9}},"1541":{"start":{"line":5185,"column":10},"end":{"line":5185,"column":80}},"1542":{"start":{"line":5188,"column":6},"end":{"line":5188,"column":18}},"1543":{"start":{"line":5191,"column":4},"end":{"line":5205,"column":6}},"1544":{"start":{"line":5192,"column":6},"end":{"line":5192,"column":38}},"1545":{"start":{"line":5192,"column":31},"end":{"line":5192,"column":38}},"1546":{"start":{"line":5193,"column":6},"end":{"line":5193,"column":63}},"1547":{"start":{"line":5194,"column":6},"end":{"line":5194,"column":29}},"1548":{"start":{"line":5196,"column":6},"end":{"line":5202,"column":9}},"1549":{"start":{"line":5197,"column":8},"end":{"line":5199,"column":9}},"1550":{"start":{"line":5198,"column":10},"end":{"line":5198,"column":26}},"1551":{"start":{"line":5200,"column":8},"end":{"line":5200,"column":38}},"1552":{"start":{"line":5201,"column":8},"end":{"line":5201,"column":20}},"1553":{"start":{"line":5204,"column":6},"end":{"line":5204,"column":19}},"1554":{"start":{"line":5207,"column":4},"end":{"line":5225,"column":6}},"1555":{"start":{"line":5208,"column":6},"end":{"line":5208,"column":38}},"1556":{"start":{"line":5208,"column":31},"end":{"line":5208,"column":38}},"1557":{"start":{"line":5210,"column":6},"end":{"line":5224,"column":7}},"1558":{"start":{"line":5211,"column":8},"end":{"line":5211,"column":126}},"1559":{"start":{"line":5212,"column":8},"end":{"line":5212,"column":44}},"1560":{"start":{"line":5214,"column":8},"end":{"line":5214,"column":121}},"1561":{"start":{"line":5215,"column":8},"end":{"line":5223,"column":11}},"1562":{"start":{"line":5216,"column":10},"end":{"line":5220,"column":11}},"1563":{"start":{"line":5217,"column":12},"end":{"line":5217,"column":28}},"1564":{"start":{"line":5219,"column":12},"end":{"line":5219,"column":88}},"1565":{"start":{"line":5221,"column":10},"end":{"line":5221,"column":40}},"1566":{"start":{"line":5222,"column":10},"end":{"line":5222,"column":22}},"1567":{"start":{"line":5227,"column":4},"end":{"line":5246,"column":6}},"1568":{"start":{"line":5228,"column":6},"end":{"line":5228,"column":38}},"1569":{"start":{"line":5228,"column":31},"end":{"line":5228,"column":38}},"1570":{"start":{"line":5230,"column":6},"end":{"line":5230,"column":101}},"1571":{"start":{"line":5234,"column":6},"end":{"line":5236,"column":7}},"1572":{"start":{"line":5235,"column":8},"end":{"line":5235,"column":61}},"1573":{"start":{"line":5238,"column":6},"end":{"line":5245,"column":9}},"1574":{"start":{"line":5239,"column":8},"end":{"line":5241,"column":9}},"1575":{"start":{"line":5240,"column":10},"end":{"line":5240,"column":26}},"1576":{"start":{"line":5242,"column":8},"end":{"line":5242,"column":33}},"1577":{"start":{"line":5243,"column":8},"end":{"line":5243,"column":38}},"1578":{"start":{"line":5244,"column":8},"end":{"line":5244,"column":20}},"1579":{"start":{"line":5248,"column":4},"end":{"line":5254,"column":5}},"1580":{"start":{"line":5249,"column":6},"end":{"line":5249,"column":29}},"1581":{"start":{"line":5250,"column":11},"end":{"line":5254,"column":5}},"1582":{"start":{"line":5251,"column":6},"end":{"line":5251,"column":30}},"1583":{"start":{"line":5252,"column":11},"end":{"line":5254,"column":5}},"1584":{"start":{"line":5253,"column":6},"end":{"line":5253,"column":28}},"1585":{"start":{"line":5256,"column":4},"end":{"line":5264,"column":5}},"1586":{"start":{"line":5257,"column":6},"end":{"line":5257,"column":53}},"1587":{"start":{"line":5258,"column":6},"end":{"line":5258,"column":23}},"1588":{"start":{"line":5260,"column":6},"end":{"line":5263,"column":7}},"1589":{"start":{"line":5261,"column":8},"end":{"line":5261,"column":48}},"1590":{"start":{"line":5262,"column":8},"end":{"line":5262,"column":28}},"1591":{"start":{"line":5267,"column":2},"end":{"line":5270,"column":5}},"1592":{"start":{"line":5268,"column":4},"end":{"line":5268,"column":79}},"1593":{"start":{"line":5269,"column":4},"end":{"line":5269,"column":37}},"1594":{"start":{"line":5272,"column":2},"end":{"line":5275,"column":5}},"1595":{"start":{"line":5273,"column":4},"end":{"line":5273,"column":44}},"1596":{"start":{"line":5274,"column":4},"end":{"line":5274,"column":25}},"1597":{"start":{"line":5277,"column":2},"end":{"line":5319,"column":5}},"1598":{"start":{"line":5278,"column":4},"end":{"line":5278,"column":51}},"1599":{"start":{"line":5280,"column":4},"end":{"line":5280,"column":24}},"1600":{"start":{"line":5281,"column":4},"end":{"line":5284,"column":5}},"1601":{"start":{"line":5282,"column":6},"end":{"line":5282,"column":22}},"1602":{"start":{"line":5283,"column":6},"end":{"line":5283,"column":13}},"1603":{"start":{"line":5286,"column":4},"end":{"line":5291,"column":5}},"1604":{"start":{"line":5287,"column":6},"end":{"line":5287,"column":62}},"1605":{"start":{"line":5288,"column":11},"end":{"line":5291,"column":5}},"1606":{"start":{"line":5289,"column":6},"end":{"line":5289,"column":59}},"1607":{"start":{"line":5290,"column":6},"end":{"line":5290,"column":100}},"1608":{"start":{"line":5293,"column":4},"end":{"line":5318,"column":5}},"1609":{"start":{"line":5295,"column":6},"end":{"line":5295,"column":56}},"1610":{"start":{"line":5296,"column":6},"end":{"line":5309,"column":9}},"1611":{"start":{"line":5297,"column":8},"end":{"line":5297,"column":66}},"1612":{"start":{"line":5299,"column":8},"end":{"line":5308,"column":9}},"1613":{"start":{"line":5300,"column":10},"end":{"line":5300,"column":31}},"1614":{"start":{"line":5302,"column":10},"end":{"line":5302,"column":26}},"1615":{"start":{"line":5304,"column":10},"end":{"line":5304,"column":52}},"1616":{"start":{"line":5306,"column":10},"end":{"line":5306,"column":31}},"1617":{"start":{"line":5307,"column":10},"end":{"line":5307,"column":48}},"1618":{"start":{"line":5312,"column":6},"end":{"line":5312,"column":51}},"1619":{"start":{"line":5313,"column":6},"end":{"line":5317,"column":9}},"1620":{"start":{"line":5314,"column":8},"end":{"line":5314,"column":29}},"1621":{"start":{"line":5315,"column":8},"end":{"line":5315,"column":47}},"1622":{"start":{"line":5316,"column":8},"end":{"line":5316,"column":40}},"1623":{"start":{"line":5321,"column":2},"end":{"line":5321,"column":22}},"1624":{"start":{"line":5348,"column":0},"end":{"line":5377,"column":2}},"1625":{"start":{"line":5349,"column":2},"end":{"line":5351,"column":59}},"1626":{"start":{"line":5353,"column":2},"end":{"line":5355,"column":3}},"1627":{"start":{"line":5354,"column":4},"end":{"line":5354,"column":75}},"1628":{"start":{"line":5357,"column":2},"end":{"line":5374,"column":4}},"1629":{"start":{"line":5358,"column":4},"end":{"line":5358,"column":68}},"1630":{"start":{"line":5359,"column":4},"end":{"line":5367,"column":5}},"1631":{"start":{"line":5360,"column":6},"end":{"line":5360,"column":51}},"1632":{"start":{"line":5361,"column":6},"end":{"line":5361,"column":95}},"1633":{"start":{"line":5363,"column":11},"end":{"line":5367,"column":5}},"1634":{"start":{"line":5364,"column":6},"end":{"line":5364,"column":34}},"1635":{"start":{"line":5365,"column":6},"end":{"line":5365,"column":52}},"1636":{"start":{"line":5366,"column":6},"end":{"line":5366,"column":50}},"1637":{"start":{"line":5369,"column":4},"end":{"line":5371,"column":6}},"1638":{"start":{"line":5370,"column":6},"end":{"line":5370,"column":88}},"1639":{"start":{"line":5373,"column":4},"end":{"line":5373,"column":40}},"1640":{"start":{"line":5376,"column":2},"end":{"line":5376,"column":75}},"1641":{"start":{"line":5404,"column":0},"end":{"line":5433,"column":2}},"1642":{"start":{"line":5405,"column":2},"end":{"line":5405,"column":57}},"1643":{"start":{"line":5406,"column":2},"end":{"line":5407,"column":59}},"1644":{"start":{"line":5409,"column":2},"end":{"line":5411,"column":3}},"1645":{"start":{"line":5410,"column":4},"end":{"line":5410,"column":75}},"1646":{"start":{"line":5413,"column":2},"end":{"line":5430,"column":4}},"1647":{"start":{"line":5414,"column":4},"end":{"line":5414,"column":64}},"1648":{"start":{"line":5415,"column":4},"end":{"line":5423,"column":5}},"1649":{"start":{"line":5416,"column":6},"end":{"line":5416,"column":46}},"1650":{"start":{"line":5417,"column":6},"end":{"line":5417,"column":90}},"1651":{"start":{"line":5419,"column":11},"end":{"line":5423,"column":5}},"1652":{"start":{"line":5420,"column":6},"end":{"line":5420,"column":34}},"1653":{"start":{"line":5421,"column":6},"end":{"line":5421,"column":47}},"1654":{"start":{"line":5422,"column":6},"end":{"line":5422,"column":50}},"1655":{"start":{"line":5425,"column":4},"end":{"line":5427,"column":6}},"1656":{"start":{"line":5426,"column":6},"end":{"line":5426,"column":83}},"1657":{"start":{"line":5429,"column":4},"end":{"line":5429,"column":40}},"1658":{"start":{"line":5432,"column":2},"end":{"line":5432,"column":75}},"1659":{"start":{"line":5438,"column":0},"end":{"line":5454,"column":2}},"1660":{"start":{"line":5439,"column":2},"end":{"line":5451,"column":4}},"1661":{"start":{"line":5440,"column":4},"end":{"line":5440,"column":37}},"1662":{"start":{"line":5441,"column":4},"end":{"line":5444,"column":5}},"1663":{"start":{"line":5442,"column":6},"end":{"line":5442,"column":84}},"1664":{"start":{"line":5443,"column":6},"end":{"line":5443,"column":90}},"1665":{"start":{"line":5446,"column":4},"end":{"line":5448,"column":6}},"1666":{"start":{"line":5447,"column":6},"end":{"line":5447,"column":92}},"1667":{"start":{"line":5450,"column":4},"end":{"line":5450,"column":40}},"1668":{"start":{"line":5453,"column":2},"end":{"line":5453,"column":93}},"1669":{"start":{"line":5459,"column":0},"end":{"line":5501,"column":2}},"1670":{"start":{"line":5460,"column":2},"end":{"line":5460,"column":89}},"1671":{"start":{"line":5461,"column":2},"end":{"line":5461,"column":20}},"1672":{"start":{"line":5463,"column":2},"end":{"line":5465,"column":3}},"1673":{"start":{"line":5464,"column":4},"end":{"line":5464,"column":108}},"1674":{"start":{"line":5468,"column":2},"end":{"line":5470,"column":3}},"1675":{"start":{"line":5469,"column":4},"end":{"line":5469,"column":48}},"1676":{"start":{"line":5473,"column":2},"end":{"line":5476,"column":3}},"1677":{"start":{"line":5474,"column":4},"end":{"line":5474,"column":70}},"1678":{"start":{"line":5475,"column":4},"end":{"line":5475,"column":37}},"1679":{"start":{"line":5480,"column":2},"end":{"line":5486,"column":3}},"1680":{"start":{"line":5481,"column":4},"end":{"line":5485,"column":5}},"1681":{"start":{"line":5482,"column":6},"end":{"line":5482,"column":78}},"1682":{"start":{"line":5483,"column":11},"end":{"line":5485,"column":5}},"1683":{"start":{"line":5484,"column":6},"end":{"line":5484,"column":66}},"1684":{"start":{"line":5488,"column":2},"end":{"line":5491,"column":3}},"1685":{"start":{"line":5489,"column":4},"end":{"line":5489,"column":65}},"1686":{"start":{"line":5490,"column":4},"end":{"line":5490,"column":37}},"1687":{"start":{"line":5493,"column":2},"end":{"line":5495,"column":3}},"1688":{"start":{"line":5494,"column":4},"end":{"line":5494,"column":86}},"1689":{"start":{"line":5497,"column":2},"end":{"line":5500,"column":3}},"1690":{"start":{"line":5498,"column":4},"end":{"line":5498,"column":106}},"1691":{"start":{"line":5499,"column":4},"end":{"line":5499,"column":37}},"1692":{"start":{"line":5506,"column":0},"end":{"line":5519,"column":2}},"1693":{"start":{"line":5507,"column":2},"end":{"line":5518,"column":3}},"1694":{"start":{"line":5508,"column":4},"end":{"line":5510,"column":5}},"1695":{"start":{"line":5509,"column":6},"end":{"line":5509,"column":124}},"1696":{"start":{"line":5512,"column":4},"end":{"line":5512,"column":85}},"1697":{"start":{"line":5513,"column":4},"end":{"line":5517,"column":5}},"1698":{"start":{"line":5514,"column":6},"end":{"line":5514,"column":67}},"1699":{"start":{"line":5516,"column":6},"end":{"line":5516,"column":76}},"1700":{"start":{"line":5554,"column":0},"end":{"line":5725,"column":2}},"1701":{"start":{"line":5555,"column":2},"end":{"line":5555,"column":14}},"1702":{"start":{"line":5556,"column":2},"end":{"line":5556,"column":103}},"1703":{"start":{"line":5556,"column":73},"end":{"line":5556,"column":85}},"1704":{"start":{"line":5556,"column":86},"end":{"line":5556,"column":99}},"1705":{"start":{"line":5558,"column":2},"end":{"line":5565,"column":5}},"1706":{"start":{"line":5559,"column":4},"end":{"line":5559,"column":37}},"1707":{"start":{"line":5560,"column":4},"end":{"line":5560,"column":27}},"1708":{"start":{"line":5561,"column":4},"end":{"line":5561,"column":38}},"1709":{"start":{"line":5562,"column":4},"end":{"line":5562,"column":39}},"1710":{"start":{"line":5563,"column":4},"end":{"line":5563,"column":32}},"1711":{"start":{"line":5564,"column":4},"end":{"line":5564,"column":25}},"1712":{"start":{"line":5567,"column":2},"end":{"line":5567,"column":25}},"1713":{"start":{"line":5568,"column":2},"end":{"line":5568,"column":32}},"1714":{"start":{"line":5570,"column":2},"end":{"line":5578,"column":3}},"1715":{"start":{"line":5571,"column":4},"end":{"line":5571,"column":70}},"1716":{"start":{"line":5572,"column":9},"end":{"line":5578,"column":3}},"1717":{"start":{"line":5573,"column":4},"end":{"line":5573,"column":66}},"1718":{"start":{"line":5574,"column":4},"end":{"line":5574,"column":31}},"1719":{"start":{"line":5575,"column":9},"end":{"line":5578,"column":3}},"1720":{"start":{"line":5576,"column":4},"end":{"line":5576,"column":71}},"1721":{"start":{"line":5577,"column":4},"end":{"line":5577,"column":31}},"1722":{"start":{"line":5580,"column":2},"end":{"line":5582,"column":3}},"1723":{"start":{"line":5581,"column":4},"end":{"line":5581,"column":50}},"1724":{"start":{"line":5584,"column":2},"end":{"line":5584,"column":42}},"1725":{"start":{"line":5585,"column":2},"end":{"line":5585,"column":111}},"1726":{"start":{"line":5586,"column":2},"end":{"line":5586,"column":111}},"1727":{"start":{"line":5587,"column":2},"end":{"line":5587,"column":63}},"1728":{"start":{"line":5589,"column":2},"end":{"line":5589,"column":18}},"1729":{"start":{"line":5590,"column":2},"end":{"line":5590,"column":57}},"1730":{"start":{"line":5591,"column":2},"end":{"line":5591,"column":21}},"1731":{"start":{"line":5592,"column":2},"end":{"line":5594,"column":3}},"1732":{"start":{"line":5593,"column":4},"end":{"line":5593,"column":47}},"1733":{"start":{"line":5596,"column":2},"end":{"line":5596,"column":29}},"1734":{"start":{"line":5597,"column":2},"end":{"line":5597,"column":31}},"1735":{"start":{"line":5599,"column":2},"end":{"line":5670,"column":5}},"1736":{"start":{"line":5600,"column":4},"end":{"line":5602,"column":5}},"1737":{"start":{"line":5601,"column":6},"end":{"line":5601,"column":53}},"1738":{"start":{"line":5604,"column":4},"end":{"line":5608,"column":6}},"1739":{"start":{"line":5610,"column":4},"end":{"line":5610,"column":31}},"1740":{"start":{"line":5611,"column":4},"end":{"line":5611,"column":69}},"1741":{"start":{"line":5612,"column":4},"end":{"line":5612,"column":79}},"1742":{"start":{"line":5613,"column":4},"end":{"line":5613,"column":69}},"1743":{"start":{"line":5615,"column":4},"end":{"line":5634,"column":5}},"1744":{"start":{"line":5616,"column":6},"end":{"line":5632,"column":7}},"1745":{"start":{"line":5617,"column":8},"end":{"line":5617,"column":77}},"1746":{"start":{"line":5619,"column":8},"end":{"line":5628,"column":11}},"1747":{"start":{"line":5620,"column":10},"end":{"line":5620,"column":28}},"1748":{"start":{"line":5620,"column":21},"end":{"line":5620,"column":28}},"1749":{"start":{"line":5621,"column":10},"end":{"line":5621,"column":109}},"1750":{"start":{"line":5623,"column":10},"end":{"line":5623,"column":113}},"1751":{"start":{"line":5624,"column":10},"end":{"line":5627,"column":11}},"1752":{"start":{"line":5625,"column":12},"end":{"line":5625,"column":80}},"1753":{"start":{"line":5626,"column":12},"end":{"line":5626,"column":36}},"1754":{"start":{"line":5629,"column":8},"end":{"line":5629,"column":57}},"1755":{"start":{"line":5631,"column":8},"end":{"line":5631,"column":117}},"1756":{"start":{"line":5633,"column":6},"end":{"line":5633,"column":13}},"1757":{"start":{"line":5636,"column":4},"end":{"line":5638,"column":5}},"1758":{"start":{"line":5637,"column":6},"end":{"line":5637,"column":13}},"1759":{"start":{"line":5640,"column":4},"end":{"line":5663,"column":7}},"1760":{"start":{"line":5641,"column":6},"end":{"line":5662,"column":7}},"1761":{"start":{"line":5642,"column":8},"end":{"line":5644,"column":9}},"1762":{"start":{"line":5643,"column":10},"end":{"line":5643,"column":116}},"1763":{"start":{"line":5646,"column":8},"end":{"line":5648,"column":9}},"1764":{"start":{"line":5647,"column":10},"end":{"line":5647,"column":39}},"1765":{"start":{"line":5649,"column":8},"end":{"line":5651,"column":9}},"1766":{"start":{"line":5650,"column":10},"end":{"line":5650,"column":39}},"1767":{"start":{"line":5652,"column":8},"end":{"line":5652,"column":82}},"1768":{"start":{"line":5653,"column":8},"end":{"line":5653,"column":72}},"1769":{"start":{"line":5654,"column":8},"end":{"line":5657,"column":9}},"1770":{"start":{"line":5655,"column":10},"end":{"line":5655,"column":78}},"1771":{"start":{"line":5656,"column":10},"end":{"line":5656,"column":34}},"1772":{"start":{"line":5658,"column":8},"end":{"line":5660,"column":9}},"1773":{"start":{"line":5659,"column":10},"end":{"line":5659,"column":34}},"1774":{"start":{"line":5661,"column":8},"end":{"line":5661,"column":23}},"1775":{"start":{"line":5665,"column":4},"end":{"line":5665,"column":55}},"1776":{"start":{"line":5666,"column":4},"end":{"line":5669,"column":5}},"1777":{"start":{"line":5667,"column":6},"end":{"line":5667,"column":46}},"1778":{"start":{"line":5668,"column":6},"end":{"line":5668,"column":26}},"1779":{"start":{"line":5672,"column":2},"end":{"line":5675,"column":5}},"1780":{"start":{"line":5673,"column":4},"end":{"line":5673,"column":49}},"1781":{"start":{"line":5674,"column":4},"end":{"line":5674,"column":37}},"1782":{"start":{"line":5677,"column":2},"end":{"line":5680,"column":5}},"1783":{"start":{"line":5678,"column":4},"end":{"line":5678,"column":45}},"1784":{"start":{"line":5679,"column":4},"end":{"line":5679,"column":25}},"1785":{"start":{"line":5682,"column":2},"end":{"line":5685,"column":5}},"1786":{"start":{"line":5683,"column":4},"end":{"line":5683,"column":49}},"1787":{"start":{"line":5684,"column":4},"end":{"line":5684,"column":29}},"1788":{"start":{"line":5687,"column":2},"end":{"line":5710,"column":5}},"1789":{"start":{"line":5688,"column":4},"end":{"line":5688,"column":45}},"1790":{"start":{"line":5689,"column":4},"end":{"line":5709,"column":5}},"1791":{"start":{"line":5690,"column":6},"end":{"line":5690,"column":22}},"1792":{"start":{"line":5691,"column":6},"end":{"line":5691,"column":13}},"1793":{"start":{"line":5693,"column":6},"end":{"line":5708,"column":9}},"1794":{"start":{"line":5694,"column":8},"end":{"line":5694,"column":52}},"1795":{"start":{"line":5695,"column":8},"end":{"line":5697,"column":9}},"1796":{"start":{"line":5696,"column":10},"end":{"line":5696,"column":30}},"1797":{"start":{"line":5698,"column":8},"end":{"line":5700,"column":9}},"1798":{"start":{"line":5699,"column":10},"end":{"line":5699,"column":31}},"1799":{"start":{"line":5702,"column":8},"end":{"line":5702,"column":176}},"1800":{"start":{"line":5703,"column":8},"end":{"line":5703,"column":52}},"1801":{"start":{"line":5704,"column":8},"end":{"line":5706,"column":9}},"1802":{"start":{"line":5705,"column":10},"end":{"line":5705,"column":74}},"1803":{"start":{"line":5707,"column":8},"end":{"line":5707,"column":60}},"1804":{"start":{"line":5712,"column":2},"end":{"line":5718,"column":4}},"1805":{"start":{"line":5720,"column":3},"end":{"line":5722,"column":5}},"1806":{"start":{"line":5721,"column":4},"end":{"line":5721,"column":20}},"1807":{"start":{"line":5724,"column":2},"end":{"line":5724,"column":22}},"1808":{"start":{"line":5756,"column":0},"end":{"line":5790,"column":2}},"1809":{"start":{"line":5757,"column":2},"end":{"line":5757,"column":18}},"1810":{"start":{"line":5758,"column":2},"end":{"line":5758,"column":107}},"1811":{"start":{"line":5758,"column":73},"end":{"line":5758,"column":89}},"1812":{"start":{"line":5758,"column":90},"end":{"line":5758,"column":103}},"1813":{"start":{"line":5760,"column":2},"end":{"line":5760,"column":57}},"1814":{"start":{"line":5761,"column":2},"end":{"line":5761,"column":68}},"1815":{"start":{"line":5763,"column":2},"end":{"line":5763,"column":46}},"1816":{"start":{"line":5764,"column":2},"end":{"line":5764,"column":81}},"1817":{"start":{"line":5766,"column":2},"end":{"line":5766,"column":54}},"1818":{"start":{"line":5768,"column":2},"end":{"line":5768,"column":55}},"1819":{"start":{"line":5770,"column":2},"end":{"line":5770,"column":18}},"1820":{"start":{"line":5771,"column":2},"end":{"line":5787,"column":4}},"1821":{"start":{"line":5772,"column":4},"end":{"line":5772,"column":37}},"1822":{"start":{"line":5774,"column":4},"end":{"line":5780,"column":5}},"1823":{"start":{"line":5775,"column":6},"end":{"line":5775,"column":66}},"1824":{"start":{"line":5776,"column":6},"end":{"line":5776,"column":102}},"1825":{"start":{"line":5777,"column":6},"end":{"line":5777,"column":90}},"1826":{"start":{"line":5779,"column":6},"end":{"line":5779,"column":58}},"1827":{"start":{"line":5782,"column":4},"end":{"line":5784,"column":6}},"1828":{"start":{"line":5783,"column":6},"end":{"line":5783,"column":83}},"1829":{"start":{"line":5786,"column":4},"end":{"line":5786,"column":40}},"1830":{"start":{"line":5789,"column":2},"end":{"line":5789,"column":99}},"1831":{"start":{"line":5828,"column":0},"end":{"line":5854,"column":2}},"1832":{"start":{"line":5829,"column":2},"end":{"line":5829,"column":14}},"1833":{"start":{"line":5830,"column":2},"end":{"line":5830,"column":103}},"1834":{"start":{"line":5830,"column":73},"end":{"line":5830,"column":85}},"1835":{"start":{"line":5830,"column":86},"end":{"line":5830,"column":99}},"1836":{"start":{"line":5831,"column":2},"end":{"line":5831,"column":72}},"1837":{"start":{"line":5833,"column":2},"end":{"line":5833,"column":126}},"1838":{"start":{"line":5835,"column":2},"end":{"line":5851,"column":5}},"1839":{"start":{"line":5836,"column":4},"end":{"line":5849,"column":5}},"1840":{"start":{"line":5837,"column":6},"end":{"line":5848,"column":7}},"1841":{"start":{"line":5839,"column":8},"end":{"line":5841,"column":9}},"1842":{"start":{"line":5840,"column":10},"end":{"line":5840,"column":30}},"1843":{"start":{"line":5844,"column":8},"end":{"line":5846,"column":11}},"1844":{"start":{"line":5845,"column":10},"end":{"line":5845,"column":50}},"1845":{"start":{"line":5847,"column":8},"end":{"line":5847,"column":15}},"1846":{"start":{"line":5850,"column":4},"end":{"line":5850,"column":44}},"1847":{"start":{"line":5853,"column":2},"end":{"line":5853,"column":30}},"1848":{"start":{"line":5883,"column":0},"end":{"line":5957,"column":2}},"1849":{"start":{"line":5884,"column":2},"end":{"line":5884,"column":18}},"1850":{"start":{"line":5885,"column":2},"end":{"line":5885,"column":107}},"1851":{"start":{"line":5885,"column":73},"end":{"line":5885,"column":89}},"1852":{"start":{"line":5885,"column":90},"end":{"line":5885,"column":103}},"1853":{"start":{"line":5887,"column":2},"end":{"line":5891,"column":5}},"1854":{"start":{"line":5888,"column":4},"end":{"line":5888,"column":37}},"1855":{"start":{"line":5889,"column":4},"end":{"line":5889,"column":38}},"1856":{"start":{"line":5890,"column":4},"end":{"line":5890,"column":25}},"1857":{"start":{"line":5893,"column":2},"end":{"line":5893,"column":46}},"1858":{"start":{"line":5894,"column":2},"end":{"line":5900,"column":36}},"1859":{"start":{"line":5902,"column":2},"end":{"line":5904,"column":3}},"1860":{"start":{"line":5903,"column":4},"end":{"line":5903,"column":86}},"1861":{"start":{"line":5906,"column":2},"end":{"line":5906,"column":67}},"1862":{"start":{"line":5908,"column":2},"end":{"line":5908,"column":83}},"1863":{"start":{"line":5910,"column":2},"end":{"line":5954,"column":4}},"1864":{"start":{"line":5911,"column":4},"end":{"line":5911,"column":42}},"1865":{"start":{"line":5912,"column":4},"end":{"line":5947,"column":5}},"1866":{"start":{"line":5913,"column":6},"end":{"line":5916,"column":8}},"1867":{"start":{"line":5918,"column":6},"end":{"line":5918,"column":50}},"1868":{"start":{"line":5919,"column":6},"end":{"line":5919,"column":23}},"1869":{"start":{"line":5921,"column":6},"end":{"line":5931,"column":7}},"1870":{"start":{"line":5922,"column":8},"end":{"line":5922,"column":83}},"1871":{"start":{"line":5923,"column":8},"end":{"line":5925,"column":9}},"1872":{"start":{"line":5924,"column":10},"end":{"line":5924,"column":30}},"1873":{"start":{"line":5926,"column":13},"end":{"line":5931,"column":7}},"1874":{"start":{"line":5927,"column":8},"end":{"line":5927,"column":77}},"1875":{"start":{"line":5928,"column":8},"end":{"line":5930,"column":9}},"1876":{"start":{"line":5929,"column":10},"end":{"line":5929,"column":30}},"1877":{"start":{"line":5933,"column":6},"end":{"line":5936,"column":9}},"1878":{"start":{"line":5934,"column":8},"end":{"line":5934,"column":55}},"1879":{"start":{"line":5935,"column":8},"end":{"line":5935,"column":64}},"1880":{"start":{"line":5938,"column":6},"end":{"line":5946,"column":7}},"1881":{"start":{"line":5939,"column":8},"end":{"line":5942,"column":10}},"1882":{"start":{"line":5944,"column":8},"end":{"line":5944,"column":129}},"1883":{"start":{"line":5945,"column":8},"end":{"line":5945,"column":104}},"1884":{"start":{"line":5949,"column":4},"end":{"line":5951,"column":6}},"1885":{"start":{"line":5950,"column":6},"end":{"line":5950,"column":88}},"1886":{"start":{"line":5953,"column":4},"end":{"line":5953,"column":40}},"1887":{"start":{"line":5956,"column":2},"end":{"line":5956,"column":75}},"1888":{"start":{"line":5971,"column":0},"end":{"line":5983,"column":2}},"1889":{"start":{"line":5972,"column":2},"end":{"line":5982,"column":3}},"1890":{"start":{"line":5973,"column":4},"end":{"line":5975,"column":7}},"1891":{"start":{"line":5974,"column":6},"end":{"line":5974,"column":58}},"1892":{"start":{"line":5976,"column":9},"end":{"line":5982,"column":3}},"1893":{"start":{"line":5977,"column":4},"end":{"line":5979,"column":7}},"1894":{"start":{"line":5978,"column":6},"end":{"line":5978,"column":36}},"1895":{"start":{"line":5980,"column":9},"end":{"line":5982,"column":3}},"1896":{"start":{"line":5981,"column":4},"end":{"line":5981,"column":23}},"1897":{"start":{"line":5994,"column":0},"end":{"line":5994,"column":40}},"1898":{"start":{"line":5996,"column":0},"end":{"line":5996,"column":29}}},"branchMap":{"1":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]},"2":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":6},"end":{"line":127,"column":14}},{"start":{"line":127,"column":18},"end":{"line":127,"column":25}}]},"3":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":135,"column":2}},{"start":{"line":135,"column":2},"end":{"line":135,"column":2}}]},"4":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":179,"column":4}},{"start":{"line":179,"column":4},"end":{"line":179,"column":4}}]},"5":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":2},"end":{"line":309,"column":2}},{"start":{"line":309,"column":2},"end":{"line":309,"column":2}}]},"6":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":4},"end":{"line":320,"column":4}},{"start":{"line":320,"column":4},"end":{"line":320,"column":4}}]},"7":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":6},"end":{"line":329,"column":6}},{"start":{"line":329,"column":6},"end":{"line":329,"column":6}}]},"8":{"line":329,"type":"binary-expr","locations":[{"start":{"line":329,"column":10},"end":{"line":329,"column":68}},{"start":{"line":329,"column":72},"end":{"line":329,"column":140}}]},"9":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":8},"end":{"line":331,"column":8}},{"start":{"line":331,"column":8},"end":{"line":331,"column":8}}]},"10":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":6},"end":{"line":341,"column":6}},{"start":{"line":341,"column":6},"end":{"line":341,"column":6}}]},"11":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":4},"end":{"line":445,"column":4}},{"start":{"line":445,"column":4},"end":{"line":445,"column":4}}]},"12":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":6},"end":{"line":449,"column":6}},{"start":{"line":449,"column":6},"end":{"line":449,"column":6}}]},"13":{"line":513,"type":"if","locations":[{"start":{"line":513,"column":4},"end":{"line":513,"column":4}},{"start":{"line":513,"column":4},"end":{"line":513,"column":4}}]},"14":{"line":515,"type":"if","locations":[{"start":{"line":515,"column":11},"end":{"line":515,"column":11}},{"start":{"line":515,"column":11},"end":{"line":515,"column":11}}]},"15":{"line":520,"type":"if","locations":[{"start":{"line":520,"column":8},"end":{"line":520,"column":8}},{"start":{"line":520,"column":8},"end":{"line":520,"column":8}}]},"16":{"line":523,"type":"if","locations":[{"start":{"line":523,"column":13},"end":{"line":523,"column":13}},{"start":{"line":523,"column":13},"end":{"line":523,"column":13}}]},"17":{"line":523,"type":"binary-expr","locations":[{"start":{"line":523,"column":17},"end":{"line":523,"column":28}},{"start":{"line":523,"column":32},"end":{"line":523,"column":109}},{"start":{"line":523,"column":113},"end":{"line":523,"column":189}}]},"18":{"line":578,"type":"if","locations":[{"start":{"line":578,"column":4},"end":{"line":578,"column":4}},{"start":{"line":578,"column":4},"end":{"line":578,"column":4}}]},"19":{"line":638,"type":"if","locations":[{"start":{"line":638,"column":4},"end":{"line":638,"column":4}},{"start":{"line":638,"column":4},"end":{"line":638,"column":4}}]},"20":{"line":701,"type":"if","locations":[{"start":{"line":701,"column":4},"end":{"line":701,"column":4}},{"start":{"line":701,"column":4},"end":{"line":701,"column":4}}]},"21":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":4},"end":{"line":758,"column":4}},{"start":{"line":758,"column":4},"end":{"line":758,"column":4}}]},"22":{"line":810,"type":"if","locations":[{"start":{"line":810,"column":2},"end":{"line":810,"column":2}},{"start":{"line":810,"column":2},"end":{"line":810,"column":2}}]},"23":{"line":811,"type":"if","locations":[{"start":{"line":811,"column":4},"end":{"line":811,"column":4}},{"start":{"line":811,"column":4},"end":{"line":811,"column":4}}]},"24":{"line":820,"type":"cond-expr","locations":[{"start":{"line":820,"column":84},"end":{"line":820,"column":111}},{"start":{"line":820,"column":114},"end":{"line":820,"column":115}}]},"25":{"line":827,"type":"if","locations":[{"start":{"line":827,"column":4},"end":{"line":827,"column":4}},{"start":{"line":827,"column":4},"end":{"line":827,"column":4}}]},"26":{"line":830,"type":"if","locations":[{"start":{"line":830,"column":6},"end":{"line":830,"column":6}},{"start":{"line":830,"column":6},"end":{"line":830,"column":6}}]},"27":{"line":932,"type":"if","locations":[{"start":{"line":932,"column":4},"end":{"line":932,"column":4}},{"start":{"line":932,"column":4},"end":{"line":932,"column":4}}]},"28":{"line":934,"type":"if","locations":[{"start":{"line":934,"column":11},"end":{"line":934,"column":11}},{"start":{"line":934,"column":11},"end":{"line":934,"column":11}}]},"29":{"line":940,"type":"if","locations":[{"start":{"line":940,"column":8},"end":{"line":940,"column":8}},{"start":{"line":940,"column":8},"end":{"line":940,"column":8}}]},"30":{"line":942,"type":"if","locations":[{"start":{"line":942,"column":15},"end":{"line":942,"column":15}},{"start":{"line":942,"column":15},"end":{"line":942,"column":15}}]},"31":{"line":942,"type":"binary-expr","locations":[{"start":{"line":942,"column":19},"end":{"line":942,"column":30}},{"start":{"line":942,"column":34},"end":{"line":942,"column":111}},{"start":{"line":942,"column":115},"end":{"line":942,"column":186}}]},"32":{"line":1116,"type":"if","locations":[{"start":{"line":1116,"column":2},"end":{"line":1116,"column":2}},{"start":{"line":1116,"column":2},"end":{"line":1116,"column":2}}]},"33":{"line":1326,"type":"if","locations":[{"start":{"line":1326,"column":2},"end":{"line":1326,"column":2}},{"start":{"line":1326,"column":2},"end":{"line":1326,"column":2}}]},"34":{"line":1337,"type":"if","locations":[{"start":{"line":1337,"column":4},"end":{"line":1337,"column":4}},{"start":{"line":1337,"column":4},"end":{"line":1337,"column":4}}]},"35":{"line":1405,"type":"if","locations":[{"start":{"line":1405,"column":4},"end":{"line":1405,"column":4}},{"start":{"line":1405,"column":4},"end":{"line":1405,"column":4}}]},"36":{"line":1531,"type":"if","locations":[{"start":{"line":1531,"column":4},"end":{"line":1531,"column":4}},{"start":{"line":1531,"column":4},"end":{"line":1531,"column":4}}]},"37":{"line":1651,"type":"if","locations":[{"start":{"line":1651,"column":4},"end":{"line":1651,"column":4}},{"start":{"line":1651,"column":4},"end":{"line":1651,"column":4}}]},"38":{"line":1655,"type":"if","locations":[{"start":{"line":1655,"column":4},"end":{"line":1655,"column":4}},{"start":{"line":1655,"column":4},"end":{"line":1655,"column":4}}]},"39":{"line":1710,"type":"binary-expr","locations":[{"start":{"line":1710,"column":29},"end":{"line":1710,"column":53}},{"start":{"line":1710,"column":57},"end":{"line":1710,"column":79}}]},"40":{"line":1729,"type":"if","locations":[{"start":{"line":1729,"column":2},"end":{"line":1729,"column":2}},{"start":{"line":1729,"column":2},"end":{"line":1729,"column":2}}]},"41":{"line":1734,"type":"if","locations":[{"start":{"line":1734,"column":6},"end":{"line":1734,"column":6}},{"start":{"line":1734,"column":6},"end":{"line":1734,"column":6}}]},"42":{"line":1738,"type":"if","locations":[{"start":{"line":1738,"column":8},"end":{"line":1738,"column":8}},{"start":{"line":1738,"column":8},"end":{"line":1738,"column":8}}]},"43":{"line":1740,"type":"cond-expr","locations":[{"start":{"line":1740,"column":39},"end":{"line":1740,"column":76}},{"start":{"line":1740,"column":79},"end":{"line":1740,"column":88}}]},"44":{"line":1747,"type":"if","locations":[{"start":{"line":1747,"column":8},"end":{"line":1747,"column":8}},{"start":{"line":1747,"column":8},"end":{"line":1747,"column":8}}]},"45":{"line":1818,"type":"if","locations":[{"start":{"line":1818,"column":4},"end":{"line":1818,"column":4}},{"start":{"line":1818,"column":4},"end":{"line":1818,"column":4}}]},"46":{"line":1881,"type":"if","locations":[{"start":{"line":1881,"column":2},"end":{"line":1881,"column":2}},{"start":{"line":1881,"column":2},"end":{"line":1881,"column":2}}]},"47":{"line":1881,"type":"binary-expr","locations":[{"start":{"line":1881,"column":6},"end":{"line":1881,"column":49}},{"start":{"line":1881,"column":53},"end":{"line":1881,"column":101}}]},"48":{"line":1984,"type":"if","locations":[{"start":{"line":1984,"column":4},"end":{"line":1984,"column":4}},{"start":{"line":1984,"column":4},"end":{"line":1984,"column":4}}]},"49":{"line":1986,"type":"if","locations":[{"start":{"line":1986,"column":11},"end":{"line":1986,"column":11}},{"start":{"line":1986,"column":11},"end":{"line":1986,"column":11}}]},"50":{"line":1992,"type":"if","locations":[{"start":{"line":1992,"column":8},"end":{"line":1992,"column":8}},{"start":{"line":1992,"column":8},"end":{"line":1992,"column":8}}]},"51":{"line":1994,"type":"if","locations":[{"start":{"line":1994,"column":15},"end":{"line":1994,"column":15}},{"start":{"line":1994,"column":15},"end":{"line":1994,"column":15}}]},"52":{"line":1994,"type":"binary-expr","locations":[{"start":{"line":1994,"column":19},"end":{"line":1994,"column":30}},{"start":{"line":1994,"column":34},"end":{"line":1994,"column":111}},{"start":{"line":1994,"column":115},"end":{"line":1994,"column":181}}]},"53":{"line":2053,"type":"if","locations":[{"start":{"line":2053,"column":4},"end":{"line":2053,"column":4}},{"start":{"line":2053,"column":4},"end":{"line":2053,"column":4}}]},"54":{"line":2113,"type":"if","locations":[{"start":{"line":2113,"column":2},"end":{"line":2113,"column":2}},{"start":{"line":2113,"column":2},"end":{"line":2113,"column":2}}]},"55":{"line":2115,"type":"if","locations":[{"start":{"line":2115,"column":4},"end":{"line":2115,"column":4}},{"start":{"line":2115,"column":4},"end":{"line":2115,"column":4}}]},"56":{"line":2128,"type":"if","locations":[{"start":{"line":2128,"column":2},"end":{"line":2128,"column":2}},{"start":{"line":2128,"column":2},"end":{"line":2128,"column":2}}]},"57":{"line":2138,"type":"if","locations":[{"start":{"line":2138,"column":4},"end":{"line":2138,"column":4}},{"start":{"line":2138,"column":4},"end":{"line":2138,"column":4}}]},"58":{"line":2142,"type":"if","locations":[{"start":{"line":2142,"column":6},"end":{"line":2142,"column":6}},{"start":{"line":2142,"column":6},"end":{"line":2142,"column":6}}]},"59":{"line":2235,"type":"if","locations":[{"start":{"line":2235,"column":2},"end":{"line":2235,"column":2}},{"start":{"line":2235,"column":2},"end":{"line":2235,"column":2}}]},"60":{"line":2239,"type":"if","locations":[{"start":{"line":2239,"column":2},"end":{"line":2239,"column":2}},{"start":{"line":2239,"column":2},"end":{"line":2239,"column":2}}]},"61":{"line":2251,"type":"if","locations":[{"start":{"line":2251,"column":2},"end":{"line":2251,"column":2}},{"start":{"line":2251,"column":2},"end":{"line":2251,"column":2}}]},"62":{"line":2258,"type":"if","locations":[{"start":{"line":2258,"column":2},"end":{"line":2258,"column":2}},{"start":{"line":2258,"column":2},"end":{"line":2258,"column":2}}]},"63":{"line":2259,"type":"if","locations":[{"start":{"line":2259,"column":4},"end":{"line":2259,"column":4}},{"start":{"line":2259,"column":4},"end":{"line":2259,"column":4}}]},"64":{"line":2260,"type":"if","locations":[{"start":{"line":2260,"column":6},"end":{"line":2260,"column":6}},{"start":{"line":2260,"column":6},"end":{"line":2260,"column":6}}]},"65":{"line":2267,"type":"if","locations":[{"start":{"line":2267,"column":4},"end":{"line":2267,"column":4}},{"start":{"line":2267,"column":4},"end":{"line":2267,"column":4}}]},"66":{"line":2268,"type":"if","locations":[{"start":{"line":2268,"column":6},"end":{"line":2268,"column":6}},{"start":{"line":2268,"column":6},"end":{"line":2268,"column":6}}]},"67":{"line":2310,"type":"if","locations":[{"start":{"line":2310,"column":2},"end":{"line":2310,"column":2}},{"start":{"line":2310,"column":2},"end":{"line":2310,"column":2}}]},"68":{"line":2310,"type":"binary-expr","locations":[{"start":{"line":2310,"column":6},"end":{"line":2310,"column":38}},{"start":{"line":2310,"column":42},"end":{"line":2310,"column":59}}]},"69":{"line":2317,"type":"if","locations":[{"start":{"line":2317,"column":2},"end":{"line":2317,"column":2}},{"start":{"line":2317,"column":2},"end":{"line":2317,"column":2}}]},"70":{"line":2317,"type":"binary-expr","locations":[{"start":{"line":2317,"column":5},"end":{"line":2317,"column":9}},{"start":{"line":2317,"column":13},"end":{"line":2317,"column":56}}]},"71":{"line":2322,"type":"if","locations":[{"start":{"line":2322,"column":2},"end":{"line":2322,"column":2}},{"start":{"line":2322,"column":2},"end":{"line":2322,"column":2}}]},"72":{"line":2378,"type":"if","locations":[{"start":{"line":2378,"column":2},"end":{"line":2378,"column":2}},{"start":{"line":2378,"column":2},"end":{"line":2378,"column":2}}]},"73":{"line":2378,"type":"binary-expr","locations":[{"start":{"line":2378,"column":6},"end":{"line":2378,"column":12}},{"start":{"line":2378,"column":16},"end":{"line":2378,"column":54}}]},"74":{"line":2639,"type":"if","locations":[{"start":{"line":2639,"column":2},"end":{"line":2639,"column":2}},{"start":{"line":2639,"column":2},"end":{"line":2639,"column":2}}]},"75":{"line":2644,"type":"if","locations":[{"start":{"line":2644,"column":2},"end":{"line":2644,"column":2}},{"start":{"line":2644,"column":2},"end":{"line":2644,"column":2}}]},"76":{"line":2644,"type":"binary-expr","locations":[{"start":{"line":2644,"column":6},"end":{"line":2644,"column":61}},{"start":{"line":2644,"column":65},"end":{"line":2644,"column":92}}]},"77":{"line":2699,"type":"if","locations":[{"start":{"line":2699,"column":2},"end":{"line":2699,"column":2}},{"start":{"line":2699,"column":2},"end":{"line":2699,"column":2}}]},"78":{"line":2699,"type":"binary-expr","locations":[{"start":{"line":2699,"column":6},"end":{"line":2699,"column":24}},{"start":{"line":2699,"column":28},"end":{"line":2699,"column":78}}]},"79":{"line":2703,"type":"if","locations":[{"start":{"line":2703,"column":2},"end":{"line":2703,"column":2}},{"start":{"line":2703,"column":2},"end":{"line":2703,"column":2}}]},"80":{"line":2703,"type":"binary-expr","locations":[{"start":{"line":2703,"column":6},"end":{"line":2703,"column":22}},{"start":{"line":2703,"column":26},"end":{"line":2703,"column":80}}]},"81":{"line":2713,"type":"if","locations":[{"start":{"line":2713,"column":4},"end":{"line":2713,"column":4}},{"start":{"line":2713,"column":4},"end":{"line":2713,"column":4}}]},"82":{"line":2717,"type":"if","locations":[{"start":{"line":2717,"column":6},"end":{"line":2717,"column":6}},{"start":{"line":2717,"column":6},"end":{"line":2717,"column":6}}]},"83":{"line":2720,"type":"if","locations":[{"start":{"line":2720,"column":8},"end":{"line":2720,"column":8}},{"start":{"line":2720,"column":8},"end":{"line":2720,"column":8}}]},"84":{"line":2792,"type":"if","locations":[{"start":{"line":2792,"column":2},"end":{"line":2792,"column":2}},{"start":{"line":2792,"column":2},"end":{"line":2792,"column":2}}]},"85":{"line":2792,"type":"binary-expr","locations":[{"start":{"line":2792,"column":6},"end":{"line":2792,"column":24}},{"start":{"line":2792,"column":28},"end":{"line":2792,"column":78}}]},"86":{"line":2796,"type":"if","locations":[{"start":{"line":2796,"column":2},"end":{"line":2796,"column":2}},{"start":{"line":2796,"column":2},"end":{"line":2796,"column":2}}]},"87":{"line":2796,"type":"binary-expr","locations":[{"start":{"line":2796,"column":6},"end":{"line":2796,"column":22}},{"start":{"line":2796,"column":26},"end":{"line":2796,"column":80}}]},"88":{"line":2800,"type":"if","locations":[{"start":{"line":2800,"column":2},"end":{"line":2800,"column":2}},{"start":{"line":2800,"column":2},"end":{"line":2800,"column":2}}]},"89":{"line":2800,"type":"binary-expr","locations":[{"start":{"line":2800,"column":6},"end":{"line":2800,"column":22}},{"start":{"line":2800,"column":26},"end":{"line":2800,"column":80}}]},"90":{"line":2810,"type":"if","locations":[{"start":{"line":2810,"column":4},"end":{"line":2810,"column":4}},{"start":{"line":2810,"column":4},"end":{"line":2810,"column":4}}]},"91":{"line":2813,"type":"if","locations":[{"start":{"line":2813,"column":6},"end":{"line":2813,"column":6}},{"start":{"line":2813,"column":6},"end":{"line":2813,"column":6}}]},"92":{"line":2816,"type":"if","locations":[{"start":{"line":2816,"column":8},"end":{"line":2816,"column":8}},{"start":{"line":2816,"column":8},"end":{"line":2816,"column":8}}]},"93":{"line":2831,"type":"if","locations":[{"start":{"line":2831,"column":6},"end":{"line":2831,"column":6}},{"start":{"line":2831,"column":6},"end":{"line":2831,"column":6}}]},"94":{"line":2834,"type":"if","locations":[{"start":{"line":2834,"column":8},"end":{"line":2834,"column":8}},{"start":{"line":2834,"column":8},"end":{"line":2834,"column":8}}]},"95":{"line":2952,"type":"if","locations":[{"start":{"line":2952,"column":2},"end":{"line":2952,"column":2}},{"start":{"line":2952,"column":2},"end":{"line":2952,"column":2}}]},"96":{"line":2952,"type":"binary-expr","locations":[{"start":{"line":2952,"column":6},"end":{"line":2952,"column":10}},{"start":{"line":2952,"column":14},"end":{"line":2952,"column":50}}]},"97":{"line":3006,"type":"if","locations":[{"start":{"line":3006,"column":2},"end":{"line":3006,"column":2}},{"start":{"line":3006,"column":2},"end":{"line":3006,"column":2}}]},"98":{"line":3007,"type":"if","locations":[{"start":{"line":3007,"column":4},"end":{"line":3007,"column":4}},{"start":{"line":3007,"column":4},"end":{"line":3007,"column":4}}]},"99":{"line":3011,"type":"if","locations":[{"start":{"line":3011,"column":4},"end":{"line":3011,"column":4}},{"start":{"line":3011,"column":4},"end":{"line":3011,"column":4}}]},"100":{"line":3022,"type":"if","locations":[{"start":{"line":3022,"column":2},"end":{"line":3022,"column":2}},{"start":{"line":3022,"column":2},"end":{"line":3022,"column":2}}]},"101":{"line":3028,"type":"if","locations":[{"start":{"line":3028,"column":4},"end":{"line":3028,"column":4}},{"start":{"line":3028,"column":4},"end":{"line":3028,"column":4}}]},"102":{"line":3270,"type":"if","locations":[{"start":{"line":3270,"column":2},"end":{"line":3270,"column":2}},{"start":{"line":3270,"column":2},"end":{"line":3270,"column":2}}]},"103":{"line":3316,"type":"cond-expr","locations":[{"start":{"line":3316,"column":50},"end":{"line":3316,"column":64}},{"start":{"line":3316,"column":67},"end":{"line":3316,"column":93}}]},"104":{"line":3318,"type":"if","locations":[{"start":{"line":3318,"column":2},"end":{"line":3318,"column":2}},{"start":{"line":3318,"column":2},"end":{"line":3318,"column":2}}]},"105":{"line":3375,"type":"if","locations":[{"start":{"line":3375,"column":4},"end":{"line":3375,"column":4}},{"start":{"line":3375,"column":4},"end":{"line":3375,"column":4}}]},"106":{"line":3382,"type":"if","locations":[{"start":{"line":3382,"column":2},"end":{"line":3382,"column":2}},{"start":{"line":3382,"column":2},"end":{"line":3382,"column":2}}]},"107":{"line":3382,"type":"binary-expr","locations":[{"start":{"line":3382,"column":6},"end":{"line":3382,"column":61}},{"start":{"line":3382,"column":65},"end":{"line":3382,"column":92}}]},"108":{"line":3383,"type":"if","locations":[{"start":{"line":3383,"column":4},"end":{"line":3383,"column":4}},{"start":{"line":3383,"column":4},"end":{"line":3383,"column":4}}]},"109":{"line":3459,"type":"if","locations":[{"start":{"line":3459,"column":4},"end":{"line":3459,"column":4}},{"start":{"line":3459,"column":4},"end":{"line":3459,"column":4}}]},"110":{"line":3521,"type":"if","locations":[{"start":{"line":3521,"column":4},"end":{"line":3521,"column":4}},{"start":{"line":3521,"column":4},"end":{"line":3521,"column":4}}]},"111":{"line":3898,"type":"if","locations":[{"start":{"line":3898,"column":4},"end":{"line":3898,"column":4}},{"start":{"line":3898,"column":4},"end":{"line":3898,"column":4}}]},"112":{"line":3903,"type":"if","locations":[{"start":{"line":3903,"column":8},"end":{"line":3903,"column":8}},{"start":{"line":3903,"column":8},"end":{"line":3903,"column":8}}]},"113":{"line":4061,"type":"if","locations":[{"start":{"line":4061,"column":2},"end":{"line":4061,"column":2}},{"start":{"line":4061,"column":2},"end":{"line":4061,"column":2}}]},"114":{"line":4110,"type":"cond-expr","locations":[{"start":{"line":4110,"column":50},"end":{"line":4110,"column":64}},{"start":{"line":4110,"column":67},"end":{"line":4110,"column":93}}]},"115":{"line":4111,"type":"if","locations":[{"start":{"line":4111,"column":2},"end":{"line":4111,"column":2}},{"start":{"line":4111,"column":2},"end":{"line":4111,"column":2}}]},"116":{"line":4177,"type":"binary-expr","locations":[{"start":{"line":4177,"column":25},"end":{"line":4177,"column":45}},{"start":{"line":4177,"column":49},"end":{"line":4177,"column":71}}]},"117":{"line":4183,"type":"if","locations":[{"start":{"line":4183,"column":4},"end":{"line":4183,"column":4}},{"start":{"line":4183,"column":4},"end":{"line":4183,"column":4}}]},"118":{"line":4187,"type":"if","locations":[{"start":{"line":4187,"column":6},"end":{"line":4187,"column":6}},{"start":{"line":4187,"column":6},"end":{"line":4187,"column":6}}]},"119":{"line":4193,"type":"if","locations":[{"start":{"line":4193,"column":8},"end":{"line":4193,"column":8}},{"start":{"line":4193,"column":8},"end":{"line":4193,"column":8}}]},"120":{"line":4204,"type":"if","locations":[{"start":{"line":4204,"column":4},"end":{"line":4204,"column":4}},{"start":{"line":4204,"column":4},"end":{"line":4204,"column":4}}]},"121":{"line":4276,"type":"if","locations":[{"start":{"line":4276,"column":4},"end":{"line":4276,"column":4}},{"start":{"line":4276,"column":4},"end":{"line":4276,"column":4}}]},"122":{"line":4345,"type":"if","locations":[{"start":{"line":4345,"column":4},"end":{"line":4345,"column":4}},{"start":{"line":4345,"column":4},"end":{"line":4345,"column":4}}]},"123":{"line":4352,"type":"cond-expr","locations":[{"start":{"line":4352,"column":56},"end":{"line":4352,"column":57}},{"start":{"line":4352,"column":62},"end":{"line":4352,"column":132}}]},"124":{"line":4352,"type":"cond-expr","locations":[{"start":{"line":4352,"column":89},"end":{"line":4352,"column":103}},{"start":{"line":4352,"column":106},"end":{"line":4352,"column":132}}]},"125":{"line":4415,"type":"if","locations":[{"start":{"line":4415,"column":2},"end":{"line":4415,"column":2}},{"start":{"line":4415,"column":2},"end":{"line":4415,"column":2}}]},"126":{"line":4417,"type":"cond-expr","locations":[{"start":{"line":4417,"column":74},"end":{"line":4417,"column":79}},{"start":{"line":4417,"column":82},"end":{"line":4417,"column":86}}]},"127":{"line":4418,"type":"binary-expr","locations":[{"start":{"line":4418,"column":21},"end":{"line":4418,"column":38}},{"start":{"line":4418,"column":42},"end":{"line":4418,"column":89}}]},"128":{"line":4419,"type":"if","locations":[{"start":{"line":4419,"column":9},"end":{"line":4419,"column":9}},{"start":{"line":4419,"column":9},"end":{"line":4419,"column":9}}]},"129":{"line":4421,"type":"if","locations":[{"start":{"line":4421,"column":9},"end":{"line":4421,"column":9}},{"start":{"line":4421,"column":9},"end":{"line":4421,"column":9}}]},"130":{"line":4432,"type":"if","locations":[{"start":{"line":4432,"column":4},"end":{"line":4432,"column":4}},{"start":{"line":4432,"column":4},"end":{"line":4432,"column":4}}]},"131":{"line":4433,"type":"if","locations":[{"start":{"line":4433,"column":6},"end":{"line":4433,"column":6}},{"start":{"line":4433,"column":6},"end":{"line":4433,"column":6}}]},"132":{"line":4438,"type":"if","locations":[{"start":{"line":4438,"column":8},"end":{"line":4438,"column":8}},{"start":{"line":4438,"column":8},"end":{"line":4438,"column":8}}]},"133":{"line":4442,"type":"if","locations":[{"start":{"line":4442,"column":8},"end":{"line":4442,"column":8}},{"start":{"line":4442,"column":8},"end":{"line":4442,"column":8}}]},"134":{"line":4449,"type":"if","locations":[{"start":{"line":4449,"column":2},"end":{"line":4449,"column":2}},{"start":{"line":4449,"column":2},"end":{"line":4449,"column":2}}]},"135":{"line":4505,"type":"binary-expr","locations":[{"start":{"line":4505,"column":25},"end":{"line":4505,"column":45}},{"start":{"line":4505,"column":49},"end":{"line":4505,"column":71}}]},"136":{"line":4507,"type":"if","locations":[{"start":{"line":4507,"column":2},"end":{"line":4507,"column":2}},{"start":{"line":4507,"column":2},"end":{"line":4507,"column":2}}]},"137":{"line":4509,"type":"cond-expr","locations":[{"start":{"line":4509,"column":74},"end":{"line":4509,"column":79}},{"start":{"line":4509,"column":82},"end":{"line":4509,"column":86}}]},"138":{"line":4518,"type":"if","locations":[{"start":{"line":4518,"column":8},"end":{"line":4518,"column":8}},{"start":{"line":4518,"column":8},"end":{"line":4518,"column":8}}]},"139":{"line":4525,"type":"if","locations":[{"start":{"line":4525,"column":6},"end":{"line":4525,"column":6}},{"start":{"line":4525,"column":6},"end":{"line":4525,"column":6}}]},"140":{"line":4525,"type":"binary-expr","locations":[{"start":{"line":4525,"column":10},"end":{"line":4525,"column":26}},{"start":{"line":4525,"column":30},"end":{"line":4525,"column":130}},{"start":{"line":4525,"column":134},"end":{"line":4525,"column":161}}]},"141":{"line":4537,"type":"if","locations":[{"start":{"line":4537,"column":4},"end":{"line":4537,"column":4}},{"start":{"line":4537,"column":4},"end":{"line":4537,"column":4}}]},"142":{"line":4537,"type":"binary-expr","locations":[{"start":{"line":4537,"column":8},"end":{"line":4537,"column":29}},{"start":{"line":4537,"column":33},"end":{"line":4537,"column":83}},{"start":{"line":4537,"column":87},"end":{"line":4537,"column":129}}]},"143":{"line":4545,"type":"if","locations":[{"start":{"line":4545,"column":2},"end":{"line":4545,"column":2}},{"start":{"line":4545,"column":2},"end":{"line":4545,"column":2}}]},"144":{"line":4546,"type":"if","locations":[{"start":{"line":4546,"column":4},"end":{"line":4546,"column":4}},{"start":{"line":4546,"column":4},"end":{"line":4546,"column":4}}]},"145":{"line":4546,"type":"binary-expr","locations":[{"start":{"line":4546,"column":8},"end":{"line":4546,"column":35}},{"start":{"line":4546,"column":39},"end":{"line":4546,"column":81}}]},"146":{"line":4550,"type":"if","locations":[{"start":{"line":4550,"column":4},"end":{"line":4550,"column":4}},{"start":{"line":4550,"column":4},"end":{"line":4550,"column":4}}]},"147":{"line":4550,"type":"binary-expr","locations":[{"start":{"line":4550,"column":8},"end":{"line":4550,"column":51}},{"start":{"line":4550,"column":55},"end":{"line":4550,"column":79}}]},"148":{"line":4555,"type":"if","locations":[{"start":{"line":4555,"column":8},"end":{"line":4555,"column":8}},{"start":{"line":4555,"column":8},"end":{"line":4555,"column":8}}]},"149":{"line":4555,"type":"binary-expr","locations":[{"start":{"line":4555,"column":12},"end":{"line":4555,"column":17}},{"start":{"line":4555,"column":21},"end":{"line":4555,"column":128}}]},"150":{"line":4555,"type":"binary-expr","locations":[{"start":{"line":4555,"column":23},"end":{"line":4555,"column":47}},{"start":{"line":4555,"column":51},"end":{"line":4555,"column":96}},{"start":{"line":4555,"column":100},"end":{"line":4555,"column":127}}]},"151":{"line":4558,"type":"if","locations":[{"start":{"line":4558,"column":10},"end":{"line":4558,"column":10}},{"start":{"line":4558,"column":10},"end":{"line":4558,"column":10}}]},"152":{"line":4620,"type":"binary-expr","locations":[{"start":{"line":4620,"column":25},"end":{"line":4620,"column":45}},{"start":{"line":4620,"column":49},"end":{"line":4620,"column":71}}]},"153":{"line":4621,"type":"binary-expr","locations":[{"start":{"line":4621,"column":43},"end":{"line":4621,"column":66}},{"start":{"line":4621,"column":70},"end":{"line":4621,"column":105}},{"start":{"line":4621,"column":110},"end":{"line":4621,"column":138}}]},"154":{"line":4626,"type":"cond-expr","locations":[{"start":{"line":4626,"column":51},"end":{"line":4626,"column":52}},{"start":{"line":4626,"column":56},"end":{"line":4626,"column":126}}]},"155":{"line":4626,"type":"cond-expr","locations":[{"start":{"line":4626,"column":83},"end":{"line":4626,"column":97}},{"start":{"line":4626,"column":100},"end":{"line":4626,"column":126}}]},"156":{"line":4628,"type":"if","locations":[{"start":{"line":4628,"column":4},"end":{"line":4628,"column":4}},{"start":{"line":4628,"column":4},"end":{"line":4628,"column":4}}]},"157":{"line":4630,"type":"cond-expr","locations":[{"start":{"line":4630,"column":76},"end":{"line":4630,"column":81}},{"start":{"line":4630,"column":84},"end":{"line":4630,"column":88}}]},"158":{"line":4633,"type":"if","locations":[{"start":{"line":4633,"column":6},"end":{"line":4633,"column":6}},{"start":{"line":4633,"column":6},"end":{"line":4633,"column":6}}]},"159":{"line":4636,"type":"if","locations":[{"start":{"line":4636,"column":11},"end":{"line":4636,"column":11}},{"start":{"line":4636,"column":11},"end":{"line":4636,"column":11}}]},"160":{"line":4639,"type":"if","locations":[{"start":{"line":4639,"column":6},"end":{"line":4639,"column":6}},{"start":{"line":4639,"column":6},"end":{"line":4639,"column":6}}]},"161":{"line":4645,"type":"if","locations":[{"start":{"line":4645,"column":6},"end":{"line":4645,"column":6}},{"start":{"line":4645,"column":6},"end":{"line":4645,"column":6}}]},"162":{"line":4658,"type":"if","locations":[{"start":{"line":4658,"column":2},"end":{"line":4658,"column":2}},{"start":{"line":4658,"column":2},"end":{"line":4658,"column":2}}]},"163":{"line":4659,"type":"if","locations":[{"start":{"line":4659,"column":4},"end":{"line":4659,"column":4}},{"start":{"line":4659,"column":4},"end":{"line":4659,"column":4}}]},"164":{"line":4659,"type":"binary-expr","locations":[{"start":{"line":4659,"column":8},"end":{"line":4659,"column":35}},{"start":{"line":4659,"column":39},"end":{"line":4659,"column":81}}]},"165":{"line":4663,"type":"if","locations":[{"start":{"line":4663,"column":4},"end":{"line":4663,"column":4}},{"start":{"line":4663,"column":4},"end":{"line":4663,"column":4}}]},"166":{"line":4663,"type":"binary-expr","locations":[{"start":{"line":4663,"column":8},"end":{"line":4663,"column":51}},{"start":{"line":4663,"column":55},"end":{"line":4663,"column":79}}]},"167":{"line":4668,"type":"if","locations":[{"start":{"line":4668,"column":8},"end":{"line":4668,"column":8}},{"start":{"line":4668,"column":8},"end":{"line":4668,"column":8}}]},"168":{"line":4671,"type":"if","locations":[{"start":{"line":4671,"column":10},"end":{"line":4671,"column":10}},{"start":{"line":4671,"column":10},"end":{"line":4671,"column":10}}]},"169":{"line":4680,"type":"if","locations":[{"start":{"line":4680,"column":4},"end":{"line":4680,"column":4}},{"start":{"line":4680,"column":4},"end":{"line":4680,"column":4}}]},"170":{"line":4680,"type":"binary-expr","locations":[{"start":{"line":4680,"column":8},"end":{"line":4680,"column":40}},{"start":{"line":4680,"column":44},"end":{"line":4680,"column":144}},{"start":{"line":4680,"column":148},"end":{"line":4680,"column":175}}]},"171":{"line":4726,"type":"if","locations":[{"start":{"line":4726,"column":2},"end":{"line":4726,"column":2}},{"start":{"line":4726,"column":2},"end":{"line":4726,"column":2}}]},"172":{"line":4739,"type":"if","locations":[{"start":{"line":4739,"column":2},"end":{"line":4739,"column":2}},{"start":{"line":4739,"column":2},"end":{"line":4739,"column":2}}]},"173":{"line":4739,"type":"binary-expr","locations":[{"start":{"line":4739,"column":6},"end":{"line":4739,"column":35}},{"start":{"line":4739,"column":39},"end":{"line":4739,"column":94}},{"start":{"line":4739,"column":98},"end":{"line":4739,"column":125}}]},"174":{"line":4747,"type":"if","locations":[{"start":{"line":4747,"column":4},"end":{"line":4747,"column":4}},{"start":{"line":4747,"column":4},"end":{"line":4747,"column":4}}]},"175":{"line":4750,"type":"if","locations":[{"start":{"line":4750,"column":6},"end":{"line":4750,"column":6}},{"start":{"line":4750,"column":6},"end":{"line":4750,"column":6}}]},"176":{"line":4756,"type":"if","locations":[{"start":{"line":4756,"column":6},"end":{"line":4756,"column":6}},{"start":{"line":4756,"column":6},"end":{"line":4756,"column":6}}]},"177":{"line":4756,"type":"binary-expr","locations":[{"start":{"line":4756,"column":10},"end":{"line":4756,"column":23}},{"start":{"line":4756,"column":27},"end":{"line":4756,"column":46}}]},"178":{"line":4765,"type":"if","locations":[{"start":{"line":4765,"column":2},"end":{"line":4765,"column":2}},{"start":{"line":4765,"column":2},"end":{"line":4765,"column":2}}]},"179":{"line":4808,"type":"binary-expr","locations":[{"start":{"line":4808,"column":21},"end":{"line":4808,"column":41}},{"start":{"line":4808,"column":45},"end":{"line":4808,"column":67}}]},"180":{"line":4825,"type":"if","locations":[{"start":{"line":4825,"column":6},"end":{"line":4825,"column":6}},{"start":{"line":4825,"column":6},"end":{"line":4825,"column":6}}]},"181":{"line":4831,"type":"if","locations":[{"start":{"line":4831,"column":8},"end":{"line":4831,"column":8}},{"start":{"line":4831,"column":8},"end":{"line":4831,"column":8}}]},"182":{"line":4831,"type":"binary-expr","locations":[{"start":{"line":4831,"column":12},"end":{"line":4831,"column":25}},{"start":{"line":4831,"column":29},"end":{"line":4831,"column":48}}]},"183":{"line":4840,"type":"if","locations":[{"start":{"line":4840,"column":4},"end":{"line":4840,"column":4}},{"start":{"line":4840,"column":4},"end":{"line":4840,"column":4}}]},"184":{"line":4847,"type":"if","locations":[{"start":{"line":4847,"column":2},"end":{"line":4847,"column":2}},{"start":{"line":4847,"column":2},"end":{"line":4847,"column":2}}]},"185":{"line":4847,"type":"binary-expr","locations":[{"start":{"line":4847,"column":6},"end":{"line":4847,"column":61}},{"start":{"line":4847,"column":65},"end":{"line":4847,"column":92}}]},"186":{"line":4848,"type":"if","locations":[{"start":{"line":4848,"column":4},"end":{"line":4848,"column":4}},{"start":{"line":4848,"column":4},"end":{"line":4848,"column":4}}]},"187":{"line":4898,"type":"if","locations":[{"start":{"line":4898,"column":2},"end":{"line":4898,"column":2}},{"start":{"line":4898,"column":2},"end":{"line":4898,"column":2}}]},"188":{"line":4918,"type":"if","locations":[{"start":{"line":4918,"column":4},"end":{"line":4918,"column":4}},{"start":{"line":4918,"column":4},"end":{"line":4918,"column":4}}]},"189":{"line":4968,"type":"if","locations":[{"start":{"line":4968,"column":2},"end":{"line":4968,"column":2}},{"start":{"line":4968,"column":2},"end":{"line":4968,"column":2}}]},"190":{"line":4968,"type":"binary-expr","locations":[{"start":{"line":4968,"column":6},"end":{"line":4968,"column":35}},{"start":{"line":4968,"column":39},"end":{"line":4968,"column":94}},{"start":{"line":4968,"column":98},"end":{"line":4968,"column":125}}]},"191":{"line":4974,"type":"if","locations":[{"start":{"line":4974,"column":4},"end":{"line":4974,"column":4}},{"start":{"line":4974,"column":4},"end":{"line":4974,"column":4}}]},"192":{"line":4986,"type":"if","locations":[{"start":{"line":4986,"column":2},"end":{"line":4986,"column":2}},{"start":{"line":4986,"column":2},"end":{"line":4986,"column":2}}]},"193":{"line":4997,"type":"if","locations":[{"start":{"line":4997,"column":2},"end":{"line":4997,"column":2}},{"start":{"line":4997,"column":2},"end":{"line":4997,"column":2}}]},"194":{"line":4997,"type":"binary-expr","locations":[{"start":{"line":4997,"column":6},"end":{"line":4997,"column":16}},{"start":{"line":4997,"column":20},"end":{"line":4997,"column":62}}]},"195":{"line":5001,"type":"if","locations":[{"start":{"line":5001,"column":2},"end":{"line":5001,"column":2}},{"start":{"line":5001,"column":2},"end":{"line":5001,"column":2}}]},"196":{"line":5001,"type":"binary-expr","locations":[{"start":{"line":5001,"column":6},"end":{"line":5001,"column":14}},{"start":{"line":5001,"column":18},"end":{"line":5001,"column":64}}]},"197":{"line":5006,"type":"if","locations":[{"start":{"line":5006,"column":2},"end":{"line":5006,"column":2}},{"start":{"line":5006,"column":2},"end":{"line":5006,"column":2}}]},"198":{"line":5013,"type":"cond-expr","locations":[{"start":{"line":5013,"column":82},"end":{"line":5013,"column":109}},{"start":{"line":5013,"column":112},"end":{"line":5013,"column":113}}]},"199":{"line":5083,"type":"binary-expr","locations":[{"start":{"line":5083,"column":37},"end":{"line":5083,"column":73}},{"start":{"line":5083,"column":77},"end":{"line":5083,"column":110}}]},"200":{"line":5085,"type":"if","locations":[{"start":{"line":5085,"column":2},"end":{"line":5085,"column":2}},{"start":{"line":5085,"column":2},"end":{"line":5085,"column":2}}]},"201":{"line":5091,"type":"if","locations":[{"start":{"line":5091,"column":4},"end":{"line":5091,"column":4}},{"start":{"line":5091,"column":4},"end":{"line":5091,"column":4}}]},"202":{"line":5092,"type":"if","locations":[{"start":{"line":5092,"column":6},"end":{"line":5092,"column":6}},{"start":{"line":5092,"column":6},"end":{"line":5092,"column":6}}]},"203":{"line":5104,"type":"if","locations":[{"start":{"line":5104,"column":9},"end":{"line":5104,"column":9}},{"start":{"line":5104,"column":9},"end":{"line":5104,"column":9}}]},"204":{"line":5108,"type":"if","locations":[{"start":{"line":5108,"column":9},"end":{"line":5108,"column":9}},{"start":{"line":5108,"column":9},"end":{"line":5108,"column":9}}]},"205":{"line":5124,"type":"binary-expr","locations":[{"start":{"line":5124,"column":21},"end":{"line":5124,"column":41}},{"start":{"line":5124,"column":45},"end":{"line":5124,"column":67}}]},"206":{"line":5132,"type":"if","locations":[{"start":{"line":5132,"column":2},"end":{"line":5132,"column":2}},{"start":{"line":5132,"column":2},"end":{"line":5132,"column":2}}]},"207":{"line":5132,"type":"binary-expr","locations":[{"start":{"line":5132,"column":6},"end":{"line":5132,"column":25}},{"start":{"line":5132,"column":29},"end":{"line":5132,"column":67}}]},"208":{"line":5147,"type":"binary-expr","locations":[{"start":{"line":5147,"column":20},"end":{"line":5147,"column":42}},{"start":{"line":5147,"column":46},"end":{"line":5147,"column":47}}]},"209":{"line":5148,"type":"binary-expr","locations":[{"start":{"line":5148,"column":27},"end":{"line":5148,"column":49}},{"start":{"line":5148,"column":53},"end":{"line":5148,"column":54}}]},"210":{"line":5153,"type":"binary-expr","locations":[{"start":{"line":5153,"column":22},"end":{"line":5153,"column":43}},{"start":{"line":5153,"column":47},"end":{"line":5153,"column":75}}]},"211":{"line":5164,"type":"if","locations":[{"start":{"line":5164,"column":4},"end":{"line":5164,"column":4}},{"start":{"line":5164,"column":4},"end":{"line":5164,"column":4}}]},"212":{"line":5168,"type":"if","locations":[{"start":{"line":5168,"column":4},"end":{"line":5168,"column":4}},{"start":{"line":5168,"column":4},"end":{"line":5168,"column":4}}]},"213":{"line":5175,"type":"if","locations":[{"start":{"line":5175,"column":6},"end":{"line":5175,"column":6}},{"start":{"line":5175,"column":6},"end":{"line":5175,"column":6}}]},"214":{"line":5176,"type":"if","locations":[{"start":{"line":5176,"column":6},"end":{"line":5176,"column":6}},{"start":{"line":5176,"column":6},"end":{"line":5176,"column":6}}]},"215":{"line":5180,"type":"if","locations":[{"start":{"line":5180,"column":13},"end":{"line":5180,"column":13}},{"start":{"line":5180,"column":13},"end":{"line":5180,"column":13}}]},"216":{"line":5184,"type":"if","locations":[{"start":{"line":5184,"column":8},"end":{"line":5184,"column":8}},{"start":{"line":5184,"column":8},"end":{"line":5184,"column":8}}]},"217":{"line":5192,"type":"if","locations":[{"start":{"line":5192,"column":6},"end":{"line":5192,"column":6}},{"start":{"line":5192,"column":6},"end":{"line":5192,"column":6}}]},"218":{"line":5197,"type":"if","locations":[{"start":{"line":5197,"column":8},"end":{"line":5197,"column":8}},{"start":{"line":5197,"column":8},"end":{"line":5197,"column":8}}]},"219":{"line":5208,"type":"if","locations":[{"start":{"line":5208,"column":6},"end":{"line":5208,"column":6}},{"start":{"line":5208,"column":6},"end":{"line":5208,"column":6}}]},"220":{"line":5210,"type":"if","locations":[{"start":{"line":5210,"column":6},"end":{"line":5210,"column":6}},{"start":{"line":5210,"column":6},"end":{"line":5210,"column":6}}]},"221":{"line":5216,"type":"if","locations":[{"start":{"line":5216,"column":10},"end":{"line":5216,"column":10}},{"start":{"line":5216,"column":10},"end":{"line":5216,"column":10}}]},"222":{"line":5228,"type":"if","locations":[{"start":{"line":5228,"column":6},"end":{"line":5228,"column":6}},{"start":{"line":5228,"column":6},"end":{"line":5228,"column":6}}]},"223":{"line":5234,"type":"if","locations":[{"start":{"line":5234,"column":6},"end":{"line":5234,"column":6}},{"start":{"line":5234,"column":6},"end":{"line":5234,"column":6}}]},"224":{"line":5234,"type":"binary-expr","locations":[{"start":{"line":5234,"column":10},"end":{"line":5234,"column":29}},{"start":{"line":5234,"column":33},"end":{"line":5234,"column":96}}]},"225":{"line":5239,"type":"if","locations":[{"start":{"line":5239,"column":8},"end":{"line":5239,"column":8}},{"start":{"line":5239,"column":8},"end":{"line":5239,"column":8}}]},"226":{"line":5248,"type":"if","locations":[{"start":{"line":5248,"column":4},"end":{"line":5248,"column":4}},{"start":{"line":5248,"column":4},"end":{"line":5248,"column":4}}]},"227":{"line":5250,"type":"if","locations":[{"start":{"line":5250,"column":11},"end":{"line":5250,"column":11}},{"start":{"line":5250,"column":11},"end":{"line":5250,"column":11}}]},"228":{"line":5252,"type":"if","locations":[{"start":{"line":5252,"column":11},"end":{"line":5252,"column":11}},{"start":{"line":5252,"column":11},"end":{"line":5252,"column":11}}]},"229":{"line":5256,"type":"if","locations":[{"start":{"line":5256,"column":4},"end":{"line":5256,"column":4}},{"start":{"line":5256,"column":4},"end":{"line":5256,"column":4}}]},"230":{"line":5260,"type":"if","locations":[{"start":{"line":5260,"column":6},"end":{"line":5260,"column":6}},{"start":{"line":5260,"column":6},"end":{"line":5260,"column":6}}]},"231":{"line":5281,"type":"if","locations":[{"start":{"line":5281,"column":4},"end":{"line":5281,"column":4}},{"start":{"line":5281,"column":4},"end":{"line":5281,"column":4}}]},"232":{"line":5286,"type":"if","locations":[{"start":{"line":5286,"column":4},"end":{"line":5286,"column":4}},{"start":{"line":5286,"column":4},"end":{"line":5286,"column":4}}]},"233":{"line":5288,"type":"if","locations":[{"start":{"line":5288,"column":11},"end":{"line":5288,"column":11}},{"start":{"line":5288,"column":11},"end":{"line":5288,"column":11}}]},"234":{"line":5293,"type":"if","locations":[{"start":{"line":5293,"column":4},"end":{"line":5293,"column":4}},{"start":{"line":5293,"column":4},"end":{"line":5293,"column":4}}]},"235":{"line":5299,"type":"if","locations":[{"start":{"line":5299,"column":8},"end":{"line":5299,"column":8}},{"start":{"line":5299,"column":8},"end":{"line":5299,"column":8}}]},"236":{"line":5353,"type":"if","locations":[{"start":{"line":5353,"column":2},"end":{"line":5353,"column":2}},{"start":{"line":5353,"column":2},"end":{"line":5353,"column":2}}]},"237":{"line":5359,"type":"if","locations":[{"start":{"line":5359,"column":4},"end":{"line":5359,"column":4}},{"start":{"line":5359,"column":4},"end":{"line":5359,"column":4}}]},"238":{"line":5363,"type":"if","locations":[{"start":{"line":5363,"column":11},"end":{"line":5363,"column":11}},{"start":{"line":5363,"column":11},"end":{"line":5363,"column":11}}]},"239":{"line":5363,"type":"binary-expr","locations":[{"start":{"line":5363,"column":15},"end":{"line":5363,"column":35}},{"start":{"line":5363,"column":39},"end":{"line":5363,"column":125}}]},"240":{"line":5409,"type":"if","locations":[{"start":{"line":5409,"column":2},"end":{"line":5409,"column":2}},{"start":{"line":5409,"column":2},"end":{"line":5409,"column":2}}]},"241":{"line":5415,"type":"if","locations":[{"start":{"line":5415,"column":4},"end":{"line":5415,"column":4}},{"start":{"line":5415,"column":4},"end":{"line":5415,"column":4}}]},"242":{"line":5419,"type":"if","locations":[{"start":{"line":5419,"column":11},"end":{"line":5419,"column":11}},{"start":{"line":5419,"column":11},"end":{"line":5419,"column":11}}]},"243":{"line":5419,"type":"binary-expr","locations":[{"start":{"line":5419,"column":15},"end":{"line":5419,"column":35}},{"start":{"line":5419,"column":39},"end":{"line":5419,"column":125}}]},"244":{"line":5441,"type":"if","locations":[{"start":{"line":5441,"column":4},"end":{"line":5441,"column":4}},{"start":{"line":5441,"column":4},"end":{"line":5441,"column":4}}]},"245":{"line":5463,"type":"if","locations":[{"start":{"line":5463,"column":2},"end":{"line":5463,"column":2}},{"start":{"line":5463,"column":2},"end":{"line":5463,"column":2}}]},"246":{"line":5468,"type":"if","locations":[{"start":{"line":5468,"column":2},"end":{"line":5468,"column":2}},{"start":{"line":5468,"column":2},"end":{"line":5468,"column":2}}]},"247":{"line":5473,"type":"if","locations":[{"start":{"line":5473,"column":2},"end":{"line":5473,"column":2}},{"start":{"line":5473,"column":2},"end":{"line":5473,"column":2}}]},"248":{"line":5473,"type":"binary-expr","locations":[{"start":{"line":5473,"column":6},"end":{"line":5473,"column":51}},{"start":{"line":5473,"column":55},"end":{"line":5473,"column":91}},{"start":{"line":5473,"column":95},"end":{"line":5473,"column":128}}]},"249":{"line":5480,"type":"if","locations":[{"start":{"line":5480,"column":2},"end":{"line":5480,"column":2}},{"start":{"line":5480,"column":2},"end":{"line":5480,"column":2}}]},"250":{"line":5481,"type":"if","locations":[{"start":{"line":5481,"column":4},"end":{"line":5481,"column":4}},{"start":{"line":5481,"column":4},"end":{"line":5481,"column":4}}]},"251":{"line":5483,"type":"if","locations":[{"start":{"line":5483,"column":11},"end":{"line":5483,"column":11}},{"start":{"line":5483,"column":11},"end":{"line":5483,"column":11}}]},"252":{"line":5488,"type":"if","locations":[{"start":{"line":5488,"column":2},"end":{"line":5488,"column":2}},{"start":{"line":5488,"column":2},"end":{"line":5488,"column":2}}]},"253":{"line":5488,"type":"binary-expr","locations":[{"start":{"line":5488,"column":6},"end":{"line":5488,"column":44}},{"start":{"line":5488,"column":48},"end":{"line":5488,"column":87}}]},"254":{"line":5493,"type":"if","locations":[{"start":{"line":5493,"column":2},"end":{"line":5493,"column":2}},{"start":{"line":5493,"column":2},"end":{"line":5493,"column":2}}]},"255":{"line":5493,"type":"binary-expr","locations":[{"start":{"line":5493,"column":6},"end":{"line":5493,"column":51}},{"start":{"line":5493,"column":55},"end":{"line":5493,"column":104}}]},"256":{"line":5497,"type":"if","locations":[{"start":{"line":5497,"column":2},"end":{"line":5497,"column":2}},{"start":{"line":5497,"column":2},"end":{"line":5497,"column":2}}]},"257":{"line":5497,"type":"binary-expr","locations":[{"start":{"line":5497,"column":6},"end":{"line":5497,"column":51}},{"start":{"line":5497,"column":55},"end":{"line":5497,"column":89}},{"start":{"line":5497,"column":93},"end":{"line":5497,"column":132}}]},"258":{"line":5507,"type":"if","locations":[{"start":{"line":5507,"column":2},"end":{"line":5507,"column":2}},{"start":{"line":5507,"column":2},"end":{"line":5507,"column":2}}]},"259":{"line":5507,"type":"binary-expr","locations":[{"start":{"line":5507,"column":6},"end":{"line":5507,"column":49}},{"start":{"line":5507,"column":53},"end":{"line":5507,"column":80}}]},"260":{"line":5508,"type":"if","locations":[{"start":{"line":5508,"column":4},"end":{"line":5508,"column":4}},{"start":{"line":5508,"column":4},"end":{"line":5508,"column":4}}]},"261":{"line":5513,"type":"if","locations":[{"start":{"line":5513,"column":4},"end":{"line":5513,"column":4}},{"start":{"line":5513,"column":4},"end":{"line":5513,"column":4}}]},"262":{"line":5570,"type":"if","locations":[{"start":{"line":5570,"column":2},"end":{"line":5570,"column":2}},{"start":{"line":5570,"column":2},"end":{"line":5570,"column":2}}]},"263":{"line":5572,"type":"if","locations":[{"start":{"line":5572,"column":9},"end":{"line":5572,"column":9}},{"start":{"line":5572,"column":9},"end":{"line":5572,"column":9}}]},"264":{"line":5575,"type":"if","locations":[{"start":{"line":5575,"column":9},"end":{"line":5575,"column":9}},{"start":{"line":5575,"column":9},"end":{"line":5575,"column":9}}]},"265":{"line":5580,"type":"if","locations":[{"start":{"line":5580,"column":2},"end":{"line":5580,"column":2}},{"start":{"line":5580,"column":2},"end":{"line":5580,"column":2}}]},"266":{"line":5585,"type":"binary-expr","locations":[{"start":{"line":5585,"column":37},"end":{"line":5585,"column":73}},{"start":{"line":5585,"column":77},"end":{"line":5585,"column":110}}]},"267":{"line":5592,"type":"if","locations":[{"start":{"line":5592,"column":2},"end":{"line":5592,"column":2}},{"start":{"line":5592,"column":2},"end":{"line":5592,"column":2}}]},"268":{"line":5600,"type":"if","locations":[{"start":{"line":5600,"column":4},"end":{"line":5600,"column":4}},{"start":{"line":5600,"column":4},"end":{"line":5600,"column":4}}]},"269":{"line":5615,"type":"if","locations":[{"start":{"line":5615,"column":4},"end":{"line":5615,"column":4}},{"start":{"line":5615,"column":4},"end":{"line":5615,"column":4}}]},"270":{"line":5616,"type":"if","locations":[{"start":{"line":5616,"column":6},"end":{"line":5616,"column":6}},{"start":{"line":5616,"column":6},"end":{"line":5616,"column":6}}]},"271":{"line":5620,"type":"if","locations":[{"start":{"line":5620,"column":10},"end":{"line":5620,"column":10}},{"start":{"line":5620,"column":10},"end":{"line":5620,"column":10}}]},"272":{"line":5624,"type":"if","locations":[{"start":{"line":5624,"column":10},"end":{"line":5624,"column":10}},{"start":{"line":5624,"column":10},"end":{"line":5624,"column":10}}]},"273":{"line":5636,"type":"if","locations":[{"start":{"line":5636,"column":4},"end":{"line":5636,"column":4}},{"start":{"line":5636,"column":4},"end":{"line":5636,"column":4}}]},"274":{"line":5641,"type":"if","locations":[{"start":{"line":5641,"column":6},"end":{"line":5641,"column":6}},{"start":{"line":5641,"column":6},"end":{"line":5641,"column":6}}]},"275":{"line":5642,"type":"if","locations":[{"start":{"line":5642,"column":8},"end":{"line":5642,"column":8}},{"start":{"line":5642,"column":8},"end":{"line":5642,"column":8}}]},"276":{"line":5646,"type":"if","locations":[{"start":{"line":5646,"column":8},"end":{"line":5646,"column":8}},{"start":{"line":5646,"column":8},"end":{"line":5646,"column":8}}]},"277":{"line":5649,"type":"if","locations":[{"start":{"line":5649,"column":8},"end":{"line":5649,"column":8}},{"start":{"line":5649,"column":8},"end":{"line":5649,"column":8}}]},"278":{"line":5654,"type":"if","locations":[{"start":{"line":5654,"column":8},"end":{"line":5654,"column":8}},{"start":{"line":5654,"column":8},"end":{"line":5654,"column":8}}]},"279":{"line":5658,"type":"if","locations":[{"start":{"line":5658,"column":8},"end":{"line":5658,"column":8}},{"start":{"line":5658,"column":8},"end":{"line":5658,"column":8}}]},"280":{"line":5666,"type":"if","locations":[{"start":{"line":5666,"column":4},"end":{"line":5666,"column":4}},{"start":{"line":5666,"column":4},"end":{"line":5666,"column":4}}]},"281":{"line":5689,"type":"if","locations":[{"start":{"line":5689,"column":4},"end":{"line":5689,"column":4}},{"start":{"line":5689,"column":4},"end":{"line":5689,"column":4}}]},"282":{"line":5695,"type":"if","locations":[{"start":{"line":5695,"column":8},"end":{"line":5695,"column":8}},{"start":{"line":5695,"column":8},"end":{"line":5695,"column":8}}]},"283":{"line":5698,"type":"if","locations":[{"start":{"line":5698,"column":8},"end":{"line":5698,"column":8}},{"start":{"line":5698,"column":8},"end":{"line":5698,"column":8}}]},"284":{"line":5704,"type":"if","locations":[{"start":{"line":5704,"column":8},"end":{"line":5704,"column":8}},{"start":{"line":5704,"column":8},"end":{"line":5704,"column":8}}]},"285":{"line":5774,"type":"if","locations":[{"start":{"line":5774,"column":4},"end":{"line":5774,"column":4}},{"start":{"line":5774,"column":4},"end":{"line":5774,"column":4}}]},"286":{"line":5831,"type":"binary-expr","locations":[{"start":{"line":5831,"column":25},"end":{"line":5831,"column":45}},{"start":{"line":5831,"column":49},"end":{"line":5831,"column":71}}]},"287":{"line":5836,"type":"if","locations":[{"start":{"line":5836,"column":4},"end":{"line":5836,"column":4}},{"start":{"line":5836,"column":4},"end":{"line":5836,"column":4}}]},"288":{"line":5837,"type":"if","locations":[{"start":{"line":5837,"column":6},"end":{"line":5837,"column":6}},{"start":{"line":5837,"column":6},"end":{"line":5837,"column":6}}]},"289":{"line":5839,"type":"if","locations":[{"start":{"line":5839,"column":8},"end":{"line":5839,"column":8}},{"start":{"line":5839,"column":8},"end":{"line":5839,"column":8}}]},"290":{"line":5902,"type":"if","locations":[{"start":{"line":5902,"column":2},"end":{"line":5902,"column":2}},{"start":{"line":5902,"column":2},"end":{"line":5902,"column":2}}]},"291":{"line":5912,"type":"if","locations":[{"start":{"line":5912,"column":4},"end":{"line":5912,"column":4}},{"start":{"line":5912,"column":4},"end":{"line":5912,"column":4}}]},"292":{"line":5921,"type":"if","locations":[{"start":{"line":5921,"column":6},"end":{"line":5921,"column":6}},{"start":{"line":5921,"column":6},"end":{"line":5921,"column":6}}]},"293":{"line":5921,"type":"binary-expr","locations":[{"start":{"line":5921,"column":10},"end":{"line":5921,"column":63}},{"start":{"line":5921,"column":67},"end":{"line":5921,"column":131}}]},"294":{"line":5923,"type":"if","locations":[{"start":{"line":5923,"column":8},"end":{"line":5923,"column":8}},{"start":{"line":5923,"column":8},"end":{"line":5923,"column":8}}]},"295":{"line":5926,"type":"if","locations":[{"start":{"line":5926,"column":13},"end":{"line":5926,"column":13}},{"start":{"line":5926,"column":13},"end":{"line":5926,"column":13}}]},"296":{"line":5926,"type":"binary-expr","locations":[{"start":{"line":5926,"column":17},"end":{"line":5926,"column":65}},{"start":{"line":5926,"column":69},"end":{"line":5926,"column":127}}]},"297":{"line":5928,"type":"if","locations":[{"start":{"line":5928,"column":8},"end":{"line":5928,"column":8}},{"start":{"line":5928,"column":8},"end":{"line":5928,"column":8}}]},"298":{"line":5938,"type":"if","locations":[{"start":{"line":5938,"column":6},"end":{"line":5938,"column":6}},{"start":{"line":5938,"column":6},"end":{"line":5938,"column":6}}]},"299":{"line":5972,"type":"if","locations":[{"start":{"line":5972,"column":2},"end":{"line":5972,"column":2}},{"start":{"line":5972,"column":2},"end":{"line":5972,"column":2}}]},"300":{"line":5976,"type":"if","locations":[{"start":{"line":5976,"column":9},"end":{"line":5976,"column":9}},{"start":{"line":5976,"column":9},"end":{"line":5976,"column":9}}]},"301":{"line":5980,"type":"if","locations":[{"start":{"line":5980,"column":9},"end":{"line":5980,"column":9}},{"start":{"line":5980,"column":9},"end":{"line":5980,"column":9}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var fs = require('fs');","var qs = require('querystring');","var url = require('url');","var util = require('util');","var mime = require('browserify-mime');","var _ = require('underscore');","var extend = require('extend');","","var azureCommon = require('./../../common/common');","var BlockRangeStream = require('./internal/blockrangestream');","var Md5Wrapper = require('./../../common/md5-wrapper');","var PageRangeStream = require('./internal/pagerangestream');","var RangeStream = require('./../../common/streams/rangestream');","var azureutil = azureCommon.util;","var SR = azureCommon.SR;","var validate = azureCommon.validate;","var StorageServiceClient = azureCommon.StorageServiceClient;","var WebResource = azureCommon.WebResource;","","// Constants","var Constants = azureCommon.Constants;","var BlobConstants = Constants.BlobConstants;","var HeaderConstants = Constants.HeaderConstants;","var QueryStringConstants = Constants.QueryStringConstants;","var RequestLocationMode = Constants.RequestLocationMode;","","// Streams","var BatchOperation = azureCommon.BatchOperation;","var SpeedSummary = azureCommon.SpeedSummary;","var ChunkAllocator = azureCommon.ChunkAllocator;","var ChunkStream = azureCommon.ChunkStream;","var ChunkStreamWithStream = azureCommon.ChunkStreamWithStream;","var FileReadStream = azureCommon.FileReadStream;","","// Models requires","var AclResult = azureCommon.AclResult;","var ServiceStatsParser = azureCommon.ServiceStatsParser;","var BlockListResult = require('./models/blocklistresult');","var BlobResult = require('./models/blobresult');","var ContainerResult = require('./models/containerresult');","var LeaseResult = require('./models/leaseresult');","","var BlobUtilities = require('./blobutilities');","","// Errors requires","var errors = require('../../common/errors/errors');","var ArgumentError = errors.ArgumentError;","var ArgumentNullError = errors.ArgumentNullError;","var StorageError = errors.StorageError;","","/**","* Creates a new BlobService object.","* If no connection string or storageaccount and storageaccesskey are provided,","* the AZURE_STORAGE_CONNECTION_STRING or AZURE_STORAGE_ACCOUNT and AZURE_STORAGE_ACCESS_KEY environment variables will be used.","* @class","* The BlobService class is used to perform operations on the Microsoft Azure Blob Service.","* The Blob Service provides storage for binary large objects, and provides","* functions for working with data stored in blobs as either streams or pages of data.","* ","* For more information on the Blob Service, as well as task focused information on using it in a Node.js application, see","* [How to Use the Blob Service from Node.js](http://azure.microsoft.com/en-us/documentation/articles/storage-nodejs-how-to-use-blob-storage/).","* The following defaults can be set on the blob service.","* singleBlobPutThresholdInBytes                       The default maximum size, in bytes, of a blob before it must be separated into blocks.","* defaultTimeoutIntervalInMs                          The default timeout interval, in milliseconds, to use for request made via the Blob service.","* defaultClientRequestTimeoutInMs                     The default timeout of client requests, in milliseconds, to use for the request made via the Blob service.","* defaultMaximumExecutionTimeInMs                     The default maximum execution time across all potential retries, for requests made via the Blob service.","* defaultLocationMode                                 The default location mode for requests made via the Blob service.","* parallelOperationThreadCount                        The number of parallel operations that may be performed when uploading a blob that is greater than ","*                                                     the value specified by the singleBlobPutThresholdInBytes property in size.","* useNagleAlgorithm                                   Determines whether the Nagle algorithm is used for requests made via the Blob service; true to use the  ","*                                                     Nagle algorithm; otherwise, false. The default value is false.","* @constructor","* @extends {StorageServiceClient}","*","* @param {string} [storageAccountOrConnectionString]  The storage account or the connection string.","* @param {string} [storageAccessKey]                  The storage access key.","* @param {string|object} [host]                       The host address. To define primary only, pass a string. ","*                                                     Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.","* @param {string} [sasToken]                          The Shared Access Signature token.","* @param {string} [endpointSuffix]                    The endpoint suffix.","*/","function BlobService(storageAccountOrConnectionString, storageAccessKey, host, sasToken, endpointSuffix) {","  var storageServiceSettings = StorageServiceClient.getStorageSettings(storageAccountOrConnectionString, storageAccessKey, host, sasToken, endpointSuffix);","","  BlobService['super_'].call(this,","    storageServiceSettings._name,","    storageServiceSettings._key,","    storageServiceSettings._blobEndpoint,","    storageServiceSettings._usePathStyleUri,","    storageServiceSettings._sasToken);","","  this.singleBlobPutThresholdInBytes = BlobConstants.DEFAULT_SINGLE_BLOB_PUT_THRESHOLD_IN_BYTES;","  this.parallelOperationThreadCount = Constants.DEFAULT_PARALLEL_OPERATION_THREAD_COUNT;","}","","util.inherits(BlobService, StorageServiceClient);","","// Non-class methods","","/**","* Create resource name","* @ignore","*","* @param {string} containerName Container name","* @param {string} blobName      Blob name","* @return {string} The encoded resource name.","*/","function createResourceName(containerName, blobName, forSAS) {","  // Resource name","  if (blobName && !forSAS) {","    blobName = encodeURIComponent(blobName);","    blobName = blobName.replace(/%2F/g, '/');","    blobName = blobName.replace(/%5C/g, '/');","    blobName = blobName.replace(/\\+/g, '%20');","  }","","  // return URI encoded resource name","  if (blobName) {","    return containerName + '/' + blobName;","  }","  else {","    return containerName;","  }","}","","// Blob service methods","","/**","* Gets the service stats for a storage account’s Blob service.","*","* @this {BlobService}","* @param {object}       [options]                               The request options.","* @param {LocationMode} [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                               Please see StorageUtilities.LocationMode for the possible values.","* @param {int}          [options.timeoutIntervalInMs]           The timeout interval, in milliseconds, to use for the request.","* @param {int}          [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}          [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                               The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                               execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}       [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}         [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                               The default value is false.","* @param {errorOrResult}  callback                              `error` will contain information if an error occurs; otherwise, `[result]{@link ServiceStats}` will contain the stats and ","*                                                               `response` will contain information related to this operation.","*/","BlobService.prototype.getServiceStats = function (optionsOrCallback, callback) {","  var options;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { options = o; callback = c; });","","  validate.validateArgs('getServiceStats', function (v) {","    v.callback(callback);","  });","","  var webResource = WebResource.get()","    .withQueryOption(QueryStringConstants.COMP, 'stats')","    .withQueryOption(QueryStringConstants.RESTYPE, 'service');","","  options.requestLocationMode = RequestLocationMode.PRIMARY_OR_SECONDARY;","","  var processResponseCallback = function (responseObject, next) {","    responseObject.serviceStatsResult = null;","    if (!responseObject.error) {","      responseObject.serviceStatsResult = ServiceStatsParser.parse(responseObject.response.body.StorageServiceStats);","    }","","    // function to be called after all filters","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.serviceStatsResult, returnObject.response);","    };","","    // call the first filter","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Gets the properties of a storage account’s Blob service, including Azure Storage Analytics.","*","* @this {BlobService}","* @param {object}       [options]                               The request options.","* @param {LocationMode} [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                               Please see StorageUtilities.LocationMode for the possible values.","* @param {int}          [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}          [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}          [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                               The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                               execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}       [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}         [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                               The default value is false.","* @param {errorOrResult}  callback                              `error` will contain information if an error occurs; otherwise, `[result]{@link ServiceProperties}` will contain the properties ","*                                                               and `response` will contain information related to this operation.","*/","BlobService.prototype.getServiceProperties = function (optionsOrCallback, callback) {","  return this.getAccountServiceProperties(optionsOrCallback, callback);","};","","/**","* Sets the properties of a storage account’s Blob service, including Azure Storage Analytics.","* You can also use this operation to set the default request version for all incoming requests that do not have a version specified.","*","* @this {BlobService}","* @param {object}             serviceProperties                        The service properties.","* @param {object}             [options]                                The request options.","* @param {LocationMode}       [options.locationMode]                   Specifies the location mode used to decide which location the request should be sent to. ","*                                                                      Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]            The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]       The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]       The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                      The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                      execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]              Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                      The default value is false.","* @param {errorOrResponse}    callback                                 `error` will contain information","*                                                                      if an error occurs; otherwise, `response`","*                                                                      will contain information related to this operation.","*/","BlobService.prototype.setServiceProperties = function (serviceProperties, optionsOrCallback, callback) {","  return this.setAccountServiceProperties(serviceProperties, optionsOrCallback, callback);","};","","/**","* Lists a segment containing a collection of container items under the specified account.","*","* @this {BlobService}","* @param {object}             currentToken                                A continuation token returned by a previous listing operation. Please use 'null' or 'undefined' if this is the first operation.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.maxResults]                        Specifies the maximum number of containers to return per call to Azure storage.","* @param {string}             [options.include]                           Include this parameter to specify that the container's metadata be returned as part of the response body. (allowed values: '', 'metadata')","*                                                                         **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `result` will contain `entries` and `continuationToken`. ","*                                                                         `entries`  gives a list of `[containers]{@link ContainerResult}` and the `continuationToken` is used for the next listing operation.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype.listContainersSegmented = function (currentToken, optionsOrCallback, callback) {","  this.listContainersSegmentedWithPrefix(null /* prefix */, currentToken, optionsOrCallback, callback);","};","","/**","* Lists a segment containing a collection of container items whose names begin with the specified prefix under the specified account.","*","* @this {BlobService}","* @param {string}             prefix                                      The prefix of the container name.","* @param {object}             currentToken                                A continuation token returned by a previous listing operation. Please use 'null' or 'undefined' if this is the first operation.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.maxResults]                        Specifies the maximum number of containers to return per call to Azure storage.","* @param {string}             [options.include]                           Include this parameter to specify that the container's metadata be returned as part of the response body. (allowed values: '', 'metadata')","*                                                                         **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `result` will contain `entries` and `continuationToken`. ","*                                                                         `entries`  gives a list of `[containers]{@link ContainerResult}` and the `continuationToken` is used for the next listing operation.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype.listContainersSegmentedWithPrefix = function (prefix, currentToken, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('listContainers', function (v) {","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.get()","    .withQueryOption(QueryStringConstants.COMP, 'list')","    .withQueryOption(QueryStringConstants.MAX_RESULTS, options.maxResults)","    .withQueryOption(QueryStringConstants.INCLUDE, options.include);","","  if (!azureutil.objectIsNull(currentToken)) {","    webResource.withQueryOption(QueryStringConstants.MARKER, currentToken.nextMarker);","  }","","  webResource.withQueryOption(QueryStringConstants.PREFIX, prefix);","","  options.requestLocationMode = azureutil.getNextListingLocationMode(currentToken);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.listContainersResult = null;","","    if (!responseObject.error) {","      responseObject.listContainersResult = {","        entries: null,","        continuationToken: null","      };","      responseObject.listContainersResult.entries = [];","","      var containers = [];","","      if (responseObject.response.body.EnumerationResults.Containers && responseObject.response.body.EnumerationResults.Containers.Container) {","        containers = responseObject.response.body.EnumerationResults.Containers.Container;","        if (!_.isArray(containers)) {","          containers = [ containers ];","        }","      }","","      containers.forEach(function (currentContainer) {","        var containerResult = ContainerResult.parse(currentContainer);","        responseObject.listContainersResult.entries.push(containerResult);","      });","","      if (responseObject.response.body.EnumerationResults.NextMarker) {","        responseObject.listContainersResult.continuationToken = {","          nextMarker: null,","          targetLocation: null","        };","","        responseObject.listContainersResult.continuationToken.nextMarker = responseObject.response.body.EnumerationResults.NextMarker;","        responseObject.listContainersResult.continuationToken.targetLocation = responseObject.targetLocation;","      }","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.listContainersResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","// Container methods","","/**","* Checks whether or not a container exists on the service.","*","* @this {BlobService}","* @param {string}             container                               The container name.","* @param {object}             [options]                               The request options.","* @param {LocationMode}       [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {errorOrResult}      callback                                `error` will contain information","*                                                                     if an error occurs; otherwise `[result]{@link ContainerResult}` will contain","*                                                                     the container information including `exists` boolean member. ","*                                                                     `response` will contain information related to this operation.","*/","BlobService.prototype.doesContainerExist = function (container, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('doesContainerExist', function (v) {","    v.string(container, 'container');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  this._doesContainerExist(container, false, options, callback);","};","","/**","* Creates a new container under the specified account.","* If a container with the same name already exists, the operation fails.","*","* @this {BlobService}","* @param {string}             container                           The container name.","* @param {object}             [options]                           The request options.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {object}             [options.metadata]                  The metadata key/value pairs.","* @param {string}             [options.publicAccessLevel]         Specifies whether data in the container may be accessed publicly and the level of access.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `[result]{@link ContainerResult}` will contain","*                                                                 the container information.","*                                                                 `response` will contain information related to this operation.","*/","BlobService.prototype.createContainer = function (container, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createContainer', function (v) {","    v.string(container, 'container');","    v.test(function () { return container !== '$logs'; },","      'Container name format is incorrect');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.put(container)","    .withQueryOption(QueryStringConstants.RESTYPE, 'container');","","  webResource.addOptionalMetadataHeaders(options.metadata);","  webResource.withHeader(HeaderConstants.BLOB_PUBLIC_ACCESS, options.publicAccessLevel);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.containerResult = null;","    if (!responseObject.error) {","      responseObject.containerResult = new ContainerResult(container);","      responseObject.containerResult.getPropertiesFromHeaders(responseObject.response.headers);","","      if (options.metadata) {","        responseObject.containerResult.metadata = options.metadata;","      }","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.containerResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Creates a new container under the specified account if the container does not exists.","*","* @this {BlobService}","* @param {string}             container                                 The container name.","* @param {object}             [options]                                 The request options.","* @param {LocationMode}       [options.locationMode]                    Specifies the location mode used to decide which location the request should be sent to. ","*                                                                       Please see StorageUtilities.LocationMode for the possible values.","* @param {object}             [options.metadata]                        The metadata key/value pairs.","* @param {string}             [options.publicAccessLevel]               Specifies whether data in the container may be accessed publicly and the level of access.","* @param {int}                [options.timeoutIntervalInMs]             The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]        The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]        The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                       The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                       execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                 A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]               Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                       The default value is false.","* @param {errorOrResult}      callback                                  `error` will contain information","*                                                                       if an error occurs; otherwise `[result]{@link ContainerResult}` will contain","*                                                                       the container information including `created` boolean member. ","*                                                                       `response` will contain information related to this operation.","*","* @example","* var azure = require('azure-storage');","* var blobService = azure.createBlobService();","* blobService.createContainerIfNotExists('taskcontainer', {publicAccessLevel : 'blob'}, function(error) {","*   if(!error) {","*     // Container created or exists, and is public","*   }","* }); ","*/","BlobService.prototype.createContainerIfNotExists = function (container, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createContainerIfNotExists', function (v) {","    v.string(container, 'container');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var self = this;","  self._doesContainerExist(container, true, options, function (error, result, response) {","    var exists = result.exists;","    result.created = false;","    delete result.exists;","    ","    if (error) {","      callback(error, result, response);","    } else if (exists) {","      response.isSuccessful = true;","      callback(error, result, response);","    } else {","      self.createContainer(container, options, function (createError, containerResult, createResponse) {","        if (!createError) {","          containerResult.created = true;","        }","        else if (createError && createError.statusCode === Constants.HttpConstants.HttpResponseCodes.Conflict && createError.code === Constants.BlobErrorCodeStrings.CONTAINER_ALREADY_EXISTS) {","          // If it was created before, there was no actual error.","          createError = null;","          createResponse.isSuccessful = true;","        }","","        callback(createError, containerResult, createResponse);","      });","    }","  });","};","","/**","* Retrieves a container and its properties from a specified account.","* **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","*","* @this {BlobService}","* @param {string}             container                           The container name.","* @param {object}             [options]                           The request options.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {string}             [options.leaseId]                   The container lease identifier.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `[result]{@link ContainerResult}` will contain","*                                                                 information for the container.","*                                                                 `response` will contain information related to this operation.","*/","BlobService.prototype.getContainerProperties = function (container, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getContainerProperties', function (v) {","    v.string(container, 'container');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.head(container)","    .withQueryOption(QueryStringConstants.RESTYPE, 'container')","    .withHeader(HeaderConstants.LEASE_ID, options.leaseId);","","  options.requestLocationMode = Constants.RequestLocationMode.PRIMARY_OR_SECONDARY;","","  var self = this;","  var processResponseCallback = function (responseObject, next) {","    responseObject.containerResult = null;","    if (!responseObject.error) {","      responseObject.containerResult = new ContainerResult(container);","      responseObject.containerResult.metadata = self.parseMetadataHeaders(responseObject.response.headers);","      responseObject.containerResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.containerResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Returns all user-defined metadata for the container.","* **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","*","* @this {BlobService}","* @param {string}             container                                 The container name.","* @param {object}             [options]                                 The request options.","* @param {string}             [options.leaseId]                         The container lease identifier.","* @param {LocationMode}       [options.locationMode]                    Specifies the location mode used to decide which location the request should be sent to. ","*                                                                       Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]             The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]        The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]        The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                       The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                       execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                 A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]               Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                       The default value is false.","* @param {errorOrResult}      callback                                  `error` will contain information","*                                                                       if an error occurs; otherwise `[result]{@link ContainerResult}` will contain","*                                                                       information for the container.","*                                                                       `response` will contain information related to this operation.","*/","BlobService.prototype.getContainerMetadata = function (container, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getContainerMetadata', function (v) {","    v.string(container, 'container');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.head(container)","    .withQueryOption(QueryStringConstants.RESTYPE, 'container')","    .withQueryOption(QueryStringConstants.COMP, 'metadata')","    .withHeader(HeaderConstants.LEASE_ID, options.leaseId);","","  options.requestLocationMode = Constants.RequestLocationMode.PRIMARY_OR_SECONDARY;","","  var self = this;","  var processResponseCallback = function (responseObject, next) {","    responseObject.containerResult = null;","    if (!responseObject.error) {","      responseObject.containerResult = new ContainerResult(container);","      responseObject.containerResult.metadata = self.parseMetadataHeaders(responseObject.response.headers);","      responseObject.containerResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.containerResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Sets the container's metadata.","*","* Calling the Set Container Metadata operation overwrites all existing metadata that is associated with the container.","* It's not possible to modify an individual name/value pair.","*","* @this {BlobService}","* @param {string}             container                           The container name.","* @param {object}             metadata                            The metadata key/value pairs.","* @param {object}             [options]                           The request options.","* @param {string}             [options.leaseId]                   The container lease identifier.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {AccessConditions}   [options.accessConditions]          The access conditions.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResponse}    callback                            `error` will contain information","*                                                                 if an error occurs; otherwise ","*                                                                 `response` will contain information related to this operation.","*/","BlobService.prototype.setContainerMetadata = function (container, metadata, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('setContainerMetadata', function (v) {","    v.string(container, 'container');","    v.object(metadata, 'metadata');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.put(container)","    .withQueryOption(QueryStringConstants.RESTYPE, 'container')","    .withQueryOption(QueryStringConstants.COMP, 'metadata')","    .withHeader(HeaderConstants.LEASE_ID, options.leaseId);","","  webResource.addOptionalMetadataHeaders(metadata);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.containerResult = null;","    if (!responseObject.error) {","      responseObject.containerResult = new ContainerResult(container);","      responseObject.containerResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.containerResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Gets the container's ACL.","*","* @this {BlobService}","* @param {string}             container                           The container name.","* @param {object}             [options]                           The request options.","* @param {string}             [options.leaseId]                   The container lease identifier.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `[result]{@link ContainerAclResult}` will contain","*                                                                 information for the container.","*                                                                 `response` will contain information related to this operation.","*/","BlobService.prototype.getContainerAcl = function (container, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getContainerAcl', function (v) {","    v.string(container, 'container');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.get(container)","    .withQueryOption(QueryStringConstants.RESTYPE, 'container')","    .withQueryOption(QueryStringConstants.COMP, 'acl')","    .withHeader(HeaderConstants.LEASE_ID, options.leaseId);","","  options.requestLocationMode = Constants.RequestLocationMode.PRIMARY_OR_SECONDARY;","","  var processResponseCallback = function (responseObject, next) {","    responseObject.containerResult = null;","    if (!responseObject.error) {","      responseObject.containerResult = new ContainerResult(container);","      responseObject.containerResult.getPropertiesFromHeaders(responseObject.response.headers);","      responseObject.containerResult.signedIdentifiers = AclResult.parse(responseObject.response.body);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.containerResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Updates the container's ACL.","*","* @this {BlobService}","* @param {string}                         container                           The container name.","* @param {Object.<string, AccessPolicy>}  signedIdentifiers                   The container ACL settings. See `[AccessPolicy]{@link AccessPolicy}` for detailed information.","* @param {object}                         [options]                           The request options.","* @param {AccessConditions}               [options.accessConditions]          The access conditions.","* @param {string}                         [options.publicAccessLevel]         Specifies whether data in the container may be accessed publicly and the level of access.","* @param {string}                         [options.leaseId]                   The container lease identifier.","* @param {int}                            [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                            [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                            [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                             The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                             execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}                         [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}                           [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                             The default value is false.","* @param {errorOrResult}                  callback                            `error` will contain information","*                                                                             if an error occurs; otherwise `[result]{@link ContainerAclResult}` will contain","*                                                                             information for the container.","*                                                                             `response` will contain information related to this operation.","*/","BlobService.prototype.setContainerAcl = function (container, signedIdentifiers, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('setContainerAcl', function (v) {","    v.string(container, 'container');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  var policies = null;","  if (signedIdentifiers) {","    if(_.isArray(signedIdentifiers)) {","      throw new TypeError(SR.INVALID_SIGNED_IDENTIFIERS);","    }","    policies = AclResult.serialize(signedIdentifiers);","  }","","  var webResource = WebResource.put(container)","    .withQueryOption(QueryStringConstants.RESTYPE, 'container')","    .withQueryOption(QueryStringConstants.COMP, 'acl')","    .withHeader(HeaderConstants.CONTENT_LENGTH, !azureutil.objectIsNull(policies) ? Buffer.byteLength(policies) : 0)","    .withHeader(HeaderConstants.BLOB_PUBLIC_ACCESS, options.publicAccessLevel)","    .withHeader(HeaderConstants.LEASE_ID, options.leaseId)","    .withBody(policies);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.containerResult = null;","    if (!responseObject.error) {","      responseObject.containerResult = new ContainerResult(container, options.publicAccessLevel);","      responseObject.containerResult.getPropertiesFromHeaders(responseObject.response.headers);","      if (signedIdentifiers) {","        responseObject.containerResult.signedIdentifiers = signedIdentifiers;","      }","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.containerResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, webResource.body, options, processResponseCallback);","};","","/**","* Marks the specified container for deletion.","* The container and any blobs contained within it are later deleted during garbage collection.","*","* @this {BlobService}","* @param {string}             container                           The container name.","* @param {object}             [options]                           The request options.","* @param {AccessConditions}   [options.accessConditions]          The access conditions.","* @param {string}             [options.leaseId]                   The container lease identifier.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResponse}    callback                            `error` will contain information","*                                                                 if an error occurs; otherwise","*                                                                 `response` will contain information related to this operation.","*/","BlobService.prototype.deleteContainer = function (container, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('deleteContainer', function (v) {","    v.string(container, 'container');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.del(container)","    .withQueryOption(QueryStringConstants.RESTYPE, 'container')","    .withHeader(HeaderConstants.LEASE_ID, options.leaseId);","  ","  var processResponseCallback = function (responseObject, next) {","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Marks the specified container for deletion if it exists.","* The container and any blobs contained within it are later deleted during garbage collection.","*","* @this {BlobService}","* @param {string}             container                           The container name.","* @param {object}             [options]                           The request options.","* @param {AccessConditions}   [options.accessConditions]          The access conditions.","* @param {string}             [options.leaseId]                   The container lease identifier.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `result` will ","*                                                                 be true if the container exists and was deleted, or false if the container","*                                                                 did not exist.","*                                                                 `response` will contain information related to this operation.","*/","BlobService.prototype.deleteContainerIfExists = function (container, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('deleteContainerIfExists', function (v) {","    v.string(container, 'container');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var self = this;","  self._doesContainerExist(container, true, options, function (error, result, response) {","    if (error) {","      callback(error, result.exists, response);","    } else if (!result.exists) {","      response.isSuccessful = true;","      callback(error, false, response);","    } else {","      self.deleteContainer(container, options, function (deleteError, deleteResponse) {","        var deleted;","        if (!deleteError) {","          deleted = true;","        } else if (deleteError && deleteError.statuscode === Constants.HttpConstants.HttpResponseCodes.NotFound && deleteError.code === Constants.BlobErrorCodeStrings.CONTAINER_NOT_FOUND) {","          // If it was deleted already, there was no actual error.","          deleted = false;","          deleteError = null;","          deleteResponse.isSuccessful = true;","        }","","        callback(deleteError, deleted, deleteResponse);","      });","    }","  });","};","","/**","* Lists a segment containing a collection of blob directory items in the container.","*","* @this {BlobService}","* @param {string}             container                           The container name.","* @param {object}             currentToken                        A continuation token returned by a previous listing operation. Please use 'null' or 'undefined' if this is the first operation.","* @param {object}             [options]                           The request options.","* @param {int}                [options.maxResults]                Specifies the maximum number of directories to return per call to Azure ServiceClient. This does NOT affect list size returned by this function. (maximum: 5000)","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `result` will contain `entries` and `continuationToken`. ","*                                                                 `entries`  gives a list of `[directories]{@link DirectoryResult}` and the `continuationToken` is used for the next listing operation.","*                                                                 `response` will contain information related to this operation.","*/","BlobService.prototype.listBlobDirectoriesSegmented = function (container, currentToken, optionsOrCallback, callback) {","  this.listBlobDirectoriesSegmentedWithPrefix(container, null /* prefix */, currentToken, optionsOrCallback, callback);","};","","/**","* Lists a segment containing a collection of blob directory items in the container.","*","* @this {BlobService}","* @param {string}             container                           The container name.","* @param {string}             prefix                              The prefix of the blob directory.","* @param {object}             currentToken                        A continuation token returned by a previous listing operation. Please use 'null' or 'undefined' if this is the first operation.","* @param {object}             [options]                           The request options.","* @param {int}                [options.maxResults]                Specifies the maximum number of directories to return per call to Azure ServiceClient. This does NOT affect list size returned by this function. (maximum: 5000)","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `result` will contain `entries` and `continuationToken`. ","*                                                                 `entries`  gives a list of `[directories]{@link BlobResult}` and the `continuationToken` is used for the next listing operation.","*                                                                 `response` will contain information related to this operation.","*/","BlobService.prototype.listBlobDirectoriesSegmentedWithPrefix = function (container, prefix, currentToken, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  userOptions.delimiter = '/';","","  this._listBlobsOrDircotriesSegmentedWithPrefix(container, prefix, currentToken, BlobConstants.ListBlobTypes.Directory, userOptions, callback);","};","","/**","* Lists a segment containing a collection of blob items in the container.","*","* @this {BlobService}","* @param {string}             container                           The container name.","* @param {object}             currentToken                        A continuation token returned by a previous listing operation. Please use 'null' or 'undefined' if this is the first operation.","* @param {object}             [options]                           The request options.","* @param {string}             [options.delimiter]                 Delimiter, i.e. '/', for specifying folder hierarchy.","* @param {int}                [options.maxResults]                Specifies the maximum number of blobs to return per call to Azure ServiceClient. This does NOT affect list size returned by this function. (maximum: 5000)","* @param {string}             [options.include]                   Specifies that the response should include one or more of the following subsets: '', 'metadata', 'snapshots', 'uncommittedblobs', 'copy'). ","*                                                                 Please find these values in BlobUtilities.BlobListingDetails. Multiple values can be added separated with a comma (,).","*                                                                 **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `result` will contain `entries` and `continuationToken`. ","*                                                                 `entries`  gives a list of `[blobs]{@link BlobResult}` and the `continuationToken` is used for the next listing operation.","*                                                                 `response` will contain information related to this operation.","*/","BlobService.prototype.listBlobsSegmented = function (container, currentToken, optionsOrCallback, callback) {","  this.listBlobsSegmentedWithPrefix(container, null /* prefix */, currentToken, optionsOrCallback, callback);","};","","/**","* Lists a segment containing a collection of blob items whose names begin with the specified prefix in the container.","*","* @this {BlobService}","* @param {string}             container                           The container name.","* @param {string}             prefix                              The prefix of the blob name.","* @param {object}             currentToken                        A continuation token returned by a previous listing operation. Please use 'null' or 'undefined' if this is the first operation.","* @param {object}             [options]                           The request options.","* @param {string}             [options.delimiter]                 Delimiter, i.e. '/', for specifying folder hierarchy.","* @param {int}                [options.maxResults]                Specifies the maximum number of blobs to return per call to Azure ServiceClient. This does NOT affect list size returned by this function. (maximum: 5000)","* @param {string}             [options.include]                   Specifies that the response should include one or more of the following subsets: '', 'metadata', 'snapshots', 'uncommittedblobs', 'copy').","*                                                                 Please find these values in BlobUtilities.BlobListingDetails. Multiple values can be added separated with a comma (,).","*                                                                 **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `result` will contain","*                                                                 the entries of `[blobs]{@link BlobResult}` and the continuation token for the next listing operation.","*                                                                 `response` will contain information related to this operation.","*/","BlobService.prototype.listBlobsSegmentedWithPrefix = function (container, prefix, currentToken, optionsOrCallback, callback) {","  this._listBlobsOrDircotriesSegmentedWithPrefix(container, prefix, currentToken, BlobConstants.ListBlobTypes.Blob, optionsOrCallback, callback);","};","","// Lease methods","","/**","* Acquires a new lease. If container and blob are specified, acquires a blob lease. Otherwise, if only container is specified and blob is null, acquires a container lease.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {object}             [options]                                   The request options.","* @param {string}             [options.leaseDuration]                     The lease duration in seconds. A non-infinite lease can be between 15 and 60 seconds. Default is never to expire. ","* @param {string}             [options.proposedLeaseId]                   The proposed lease identifier. Must be a GUID.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link LeaseResult}` will contain","*                                                                         the lease information.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype.acquireLease = function (container, blob, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('acquireLease', function (v) {","    v.string(container, 'container');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  if (!options.leaseDuration) {","    options.leaseDuration = -1;","  }","","  this._leaseImpl(container, blob, null /* leaseId */, BlobConstants.LeaseOperation.ACQUIRE, options, callback);","};","","/**","* Renews an existing lease. If container and blob are specified, renews the blob lease. Otherwise, if only container is specified and blob is null, renews the container lease.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {string}             leaseId                                     The lease identifier. Must be a GUID.","* @param {object}             [options]                                   The request options.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link LeaseResult}` will contain","*                                                                         the lease information.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype.renewLease = function (container, blob, leaseId, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('renewLease', function (v) {","    v.string(container, 'container');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  this._leaseImpl(container, blob, leaseId, BlobConstants.LeaseOperation.RENEW, options, callback);","};","","/**","* Changes the lease ID of an active lease. If container and blob are specified, changes the blob lease. Otherwise, if only container is specified and blob is null, changes the ","* container lease.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {string}             leaseId                                     The current lease identifier.","* @param {string}             proposedLeaseId                             The proposed lease identifier. Must be a GUID. ","* @param {object}             [options]                                   The request options.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information if an error occurs; ","*                                                                         otherwise `[result]{@link LeaseResult}` will contain  the lease information.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype.changeLease = function (container, blob, leaseId, proposedLeaseId, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('changeLease', function (v) {","    v.string(container, 'container');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  options.proposedLeaseId = proposedLeaseId;","  this._leaseImpl(container, blob, leaseId, BlobConstants.LeaseOperation.CHANGE, options, callback);","};","","/**","* Releases the lease. If container and blob are specified, releases the blob lease. Otherwise, if only container is specified and blob is null, releases the container lease.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {string}             leaseId                                     The lease identifier.","* @param {object}             [options]                                   The request options.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link LeaseResult}` will contain","*                                                                         the lease information.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype.releaseLease = function (container, blob, leaseId, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('releaseLease', function (v) {","    v.string(container, 'container');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  this._leaseImpl(container, blob, leaseId, BlobConstants.LeaseOperation.RELEASE, options, callback);","};","","/**","* Breaks the lease but ensures that another client cannot acquire a new lease until the current lease period has expired. If container and blob are specified, breaks the blob lease. ","* Otherwise, if only container is specified and blob is null, breaks the container lease.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {object}             [options]                                   The request options.","* @param {int}                [options.leaseBreakPeriod]                  The lease break period, between 0 and 60 seconds. If unspecified, a fixed-duration lease breaks after ","*                                                                         the remaining lease period elapses, and an infinite lease breaks immediately.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link LeaseResult}` will contain","*                                                                         the lease information.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype.breakLease = function (container, blob, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('breakLease', function (v) {","    v.string(container, 'container');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  this._leaseImpl(container, blob, null /*leaseId*/, BlobConstants.LeaseOperation.BREAK, options, callback);","};","","// Blob methods","","/**","* Returns all user-defined metadata, standard HTTP properties, and system properties for the blob.","* It does not return or modify the content of the blob.","* **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {object}             [options]                                   The request options.","* @param {string}             [options.snapshotId]                        The snapshot identifier.","* @param {string}             [options.leaseId]                           The lease identifier.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                         information about the blob.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype.getBlobProperties = function (container, blob, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getBlobProperties', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(container, blob);","  var webResource = WebResource.head(resourceName);","","  if (options.snapshotId) {","    webResource.withQueryOption(QueryStringConstants.SNAPSHOT, options.snapshotId);","  }","","  BlobResult.setHeadersFromBlob(webResource, options);","","  options.requestLocationMode = Constants.RequestLocationMode.PRIMARY_OR_SECONDARY;","","  var self = this;","  var processResponseCallback = function (responseObject, next) {","    responseObject.blobResult = null;","    if (!responseObject.error) {","      responseObject.blobResult = new BlobResult(container, blob);","      responseObject.blobResult.metadata = self.parseMetadataHeaders(responseObject.response.headers);","      responseObject.blobResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.blobResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Returns all user-defined metadata for the specified blob or snapshot.","* It does not modify or return the content of the blob.","* **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {object}             [options]                                   The request options.","* @param {string}             [options.snapshotId]                        The snapshot identifier.","* @param {string}             [options.leaseId]                           The lease identifier.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                         information about the blob.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype.getBlobMetadata = function (container, blob, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getBlobMetadata', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(container, blob);","  var webResource = WebResource.head(resourceName);","","  webResource.withQueryOption(QueryStringConstants.COMP, 'metadata');","  webResource.withQueryOption(QueryStringConstants.SNAPSHOT, options.snapshotId);","","  BlobResult.setHeadersFromBlob(webResource, options);","","  options.requestLocationMode = Constants.RequestLocationMode.PRIMARY_OR_SECONDARY;","","  var self = this;","  var processResponseCallback = function (responseObject, next) {","    responseObject.blobResult = null;","    if (!responseObject.error) {","      responseObject.blobResult = new BlobResult(container, blob);","      responseObject.blobResult.metadata = self.parseMetadataHeaders(responseObject.response.headers);","      responseObject.blobResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.blobResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Sets user-defined properties for the specified blob or snapshot.","* It does not modify or return the content of the blob.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {object}             [properties]                                The blob properties to set.","* @param {string}             [properties.contentType]                    The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [properties.contentEncoding]                The content encodings that have been applied to the blob.","* @param {string}             [properties.contentLanguage]                The natural languages used by this resource.","* @param {string}             [properties.cacheControl]                   The blob's cache control.","* @param {string}             [properties.contentDisposition]             The blob's content disposition.","* @param {string}             [properties.contentMD5]                     The blob's MD5 hash.","* @param {object}             [options]                                   The request options.","* @param {string}             [options.leaseId]                           The lease identifier.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                         information about the blob.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype.setBlobProperties = function (container, blob, properties, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('setBlobProperties', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, { contentSettings: properties }, userOptions);","  var resourceName = createResourceName(container, blob);","  var webResource = WebResource.put(resourceName)","    .withQueryOption(QueryStringConstants.COMP, 'properties');","","  BlobResult.setPropertiesFromBlob(webResource, options);","","  this._setBlobPropertiesHelper({","    webResource: webResource,","    options: options,","    container: container,","    blob: blob,","    callback: callback","  });","};","","/**","* Sets user-defined metadata for the specified blob or snapshot as one or more name-value pairs ","* It does not modify or return the content of the blob.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {object}             metadata                                    The metadata key/value pairs.","* @param {object}             [options]                                   The request options.","* @param {string}             [options.snapshotId]                        The snapshot identifier.","* @param {string}             [options.leaseId]                           The lease identifier.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                         information on the blob.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype.setBlobMetadata = function (container, blob, metadata, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('setBlobMetadata', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.object(metadata, 'metadata');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(container, blob);","  var webResource = WebResource.put(resourceName)","    .withQueryOption(QueryStringConstants.COMP, 'metadata');","","  webResource.withQueryOption(QueryStringConstants.SNAPSHOT, options.snapshotId);","","  options.metadata = metadata;","  BlobResult.setHeadersFromBlob(webResource, options);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.blobResult = null;","    if (!responseObject.error) {","      responseObject.blobResult = new BlobResult(container, blob);","      responseObject.blobResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.blobResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Downloads a blob into a file.","* (Not recommended for use in the JavaScript Client Library)","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {string}             localFileName                               The local path to the file to be downloaded.","* @param {object}             [options]                                   The request options.","* @param {boolean}            [options.skipSizeCheck]                     Skip the size check to perform direct download.","*                                                                         Set the option to true for small blobs.","*                                                                         Parallel download and speed summary won't work with this option on.","* @param {SpeedSummary}       [options.speedSummary]                      The download tracker objects.","* @param {int}                [options.parallelOperationThreadCount]      Parallel operation thread count.","* @param {string}             [options.snapshotId]                        The snapshot identifier.","* @param {string}             [options.leaseId]                           The lease identifier.","* @param {string}             [options.rangeStart]                        Return only the bytes of the blob in the specified range.","* @param {string}             [options.rangeEnd]                          Return only the bytes of the blob in the specified range.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {boolean}            [options.useTransactionalMD5]               When set to true, Calculate and send/validate content MD5 for transactions.","* @param {boolean}            [options.disableContentMD5Validation]       When set to true, MD5 validation will be disabled when downloading blobs.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information if an error occurs; ","*                                                                         otherwise `[result]{@link BlobResult}` will contain the blob information.","*                                                                         `response` will contain information related to this operation.","* @return {SpeedSummary}","* ","* @example","* var azure = require('azure-storage');","* var blobService = azure.createBlobService();","* blobService.getBlobToLocalFile('taskcontainer', 'task1', 'task1-download.txt', function(error, serverBlob) {","*   if(!error) {","*     // Blob available in serverBlob.blob variable","*   }","*/","BlobService.prototype.getBlobToLocalFile = function (container, blob, localFileName, optionsOrCallback, callback) {","  var options;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { options = o; callback = c; });","","  validate.validateArgs('getBlobToLocalFile', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.string(localFileName, 'localFileName');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","  ","  return this._getBlobToLocalFile(container, blob, localFileName, options, callback);","};","","/**","* Provides a stream to read from a blob.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {object}             [options]                                   The request options.","* @param {string}             [options.snapshotId]                        The snapshot identifier.","* @param {string}             [options.leaseId]                           The lease identifier.","* @param {string}             [options.rangeStart]                        Return only the bytes of the blob in the specified range.","* @param {string}             [options.rangeEnd]                          Return only the bytes of the blob in the specified range.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {boolean}            [options.useTransactionalMD5]               When set to true, Calculate and send/validate content MD5 for transactions.","* @param {boolean}            [options.disableContentMD5Validation]       When set to true, MD5 validation will be disabled when downloading blobs.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information if an error occurs; ","*                                                                         otherwise `[result]{@link BlobResult}` will contain the blob information.","*                                                                         `response` will contain information related to this operation.","* @return {Stream}","* @example","* var azure = require('azure-storage');","* var blobService = azure.createBlobService();","* var writable = fs.createWriteStream(destinationFileNameTarget);","*  blobService.createReadStream(containerName, blobName).pipe(writable);","*/","BlobService.prototype.createReadStream = function (container, blob, optionsOrCallback, callback) {","  var options;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { options = o; callback = c; });","","  validate.validateArgs('createReadStream', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","  });","","  var readStream = new ChunkStream();","  this.getBlobToStream(container, blob, readStream, options, function (error, responseBlob, response) {","    if (error) {","      readStream.emit('error', error);","    }","","    if (callback) {","      callback(error, responseBlob, response);","    }","  });","","  return readStream;","};","","/**","* Downloads a blob into a stream.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {Stream}             writeStream                                 The write stream.","* @param {object}             [options]                                   The request options.","* @param {boolean}            [options.skipSizeCheck]                     Skip the size check to perform direct download.","*                                                                         Set the option to true for small blobs.","*                                                                         Parallel download and speed summary won't work with this option on.","* @param {SpeedSummary}       [options.speedSummary]                      The download tracker objects.","* @param {int}                [options.parallelOperationThreadCount]      Parallel operation thread count.","* @param {string}             [options.snapshotId]                        The snapshot identifier.","* @param {string}             [options.leaseId]                           The lease identifier.","* @param {string}             [options.rangeStart]                        Return only the bytes of the blob in the specified range.","* @param {string}             [options.rangeEnd]                          Return only the bytes of the blob in the specified range. ","* @param {boolean}            [options.useTransactionalMD5]               When set to true, Calculate and send/validate content MD5 for transactions.","* @param {boolean}            [options.disableContentMD5Validation]       When set to true, MD5 validation will be disabled when downloading blobs.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information if an error occurs; ","*                                                                         otherwise `[result]{@link BlobResult}` will contain the blob information.","*                                                                         `response` will contain information related to this operation.","* @return {SpeedSummary}","*","* @example","* var azure = require('azure-storage');","* var blobService = azure.createBlobService();","* blobService.getBlobToStream('taskcontainer', 'task1', fs.createWriteStream('task1-download.txt'), function(error, serverBlob) {","*   if(!error) {","*     // Blob available in serverBlob.blob variable","*   }","* }); ","*/","BlobService.prototype.getBlobToStream = function (container, blob, writeStream, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  userOptions.speedSummary = userOptions.speedSummary || new SpeedSummary(blob);","  ","  validate.validateArgs('getBlobToStream', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.object(writeStream, 'writeStream');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  ","  var propertiesRequestOptions = {","    timeoutIntervalInMs : options.timeoutIntervalInMs,","    clientRequestTimeoutInMs: options.clientRequestTimeoutInMs,","    snapshotId : options.snapshotId,","    accessConditions : options.accessConditions","  };","  ","  if (options.skipSizeCheck) {","    this._getBlobToStream(container, blob, writeStream, options, callback);","  } else {","    var self = this;","    this.getBlobProperties(container, blob, propertiesRequestOptions, function (error, properties) {","      if (error) {","        callback(error);","      } else {","        var size;","        if (options.rangeStart) {","          var endOffset = properties.contentLength - 1;","          var end = options.rangeEnd ? Math.min(options.rangeEnd, endOffset) : endOffset;","          size = end - options.rangeStart + 1;","        } else {","          size = properties.contentLength;","        }","        options.speedSummary.totalSize = size;","        ","        if (size > self.singleBlobPutThresholdInBytes) {","          azureutil.setObjectInnerPropertyValue(options, ['contentSettings', 'contentMD5'], azureutil.tryGetValueChain(properties, ['contentSettings', 'contentMD5'], null));","          self._getBlobToRangeStream(container, blob, properties.blobType, writeStream, options, callback);","        } else {","          self._getBlobToStream(container, blob, writeStream, options, callback);","        }","      }","    });","  }","  ","  return options.speedSummary;","};","","/**","* Downloads a blob into a text string.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {object}             [options]                                   The request options.","* @param {string}             [options.snapshotId]                        The snapshot identifier.","* @param {string}             [options.leaseId]                           The lease identifier. ","* @param {string}             [options.rangeStart]                        Return only the bytes of the blob in the specified range.","* @param {string}             [options.rangeEnd]                          Return only the bytes of the blob in the specified range.","* @param {bool}               [options.useTransactionalMD5]               Calculate and send/validate content MD5 for transactions.","* @param {boolean}            [options.disableContentMD5Validation]       When set to true, MD5 validation will be disabled when downloading blobs.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {BlobService~blobToText}  callback                               `error` will contain information","*                                                                         if an error occurs; otherwise `text` will contain the blob contents,","*                                                                         and `[blockBlob]{@link BlobResult}` will contain","*                                                                         the blob information.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype.getBlobToText = function (container, blob, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getBlobToText', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(container, blob);","  var webResource = WebResource.get(resourceName)","    .withRawResponse();","  ","  webResource.withQueryOption(QueryStringConstants.SNAPSHOT, options.snapshotId);","","  BlobResult.setHeadersFromBlob(webResource, options);","  this._setRangeContentMD5Header(webResource, options);","","  options.requestLocationMode = Constants.RequestLocationMode.PRIMARY_OR_SECONDARY;","","  var self = this;","  var processResponseCallback = function (responseObject, next) {","    responseObject.text = null;","    responseObject.blobResult = null;","","    if (!responseObject.error) {","      responseObject.blobResult = new BlobResult(container, blob);","      responseObject.blobResult.metadata = self.parseMetadataHeaders(responseObject.response.headers);","      responseObject.blobResult.getPropertiesFromHeaders(responseObject.response.headers);","      responseObject.text = responseObject.response.body;","","      self._validateLengthAndMD5(options, responseObject);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.text, returnObject.blobResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Marks the specified blob or snapshot for deletion. The blob is later deleted during garbage collection.","* If a blob has snapshots, you must delete them when deleting the blob. Using the deleteSnapshots option, you can choose either to delete both the blob and its snapshots, ","* or to delete only the snapshots but not the blob itself. If the blob has snapshots, you must include the deleteSnapshots option or the blob service will return an error","* and nothing will be deleted. ","* If you are deleting a specific snapshot using the snapshotId option, the deleteSnapshots option must NOT be included.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {object}             [options]                                   The request options.","* @param {string}             [options.deleteSnapshots]                   The snapshot delete option. See azure.BlobUtilities.SnapshotDeleteOptions.*. ","* @param {string}             [options.snapshotId]                        The snapshot identifier.","* @param {string}             [options.leaseId]                           The lease identifier.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResponse}    callback                                    `error` will contain information","*                                                                         if an error occurs; `response` will contain information related to this operation.","*/","BlobService.prototype.deleteBlob = function (container, blob, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('deleteBlob', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(container, blob);","  var webResource = WebResource.del(resourceName)","    .withHeader(HeaderConstants.LEASE_ID, options.leaseId);","","  if (!azureutil.objectIsNull(options.snapshotId) && !azureutil.objectIsNull(options.deleteSnapshots)) {","    throw new ArgumentError('options', SR.INVALID_DELETE_SNAPSHOT_OPTION);","  }","    ","  webResource.withQueryOption(QueryStringConstants.SNAPSHOT, options.snapshotId);","  webResource.withHeader(HeaderConstants.DELETE_SNAPSHOT, options.deleteSnapshots);","","  BlobResult.setHeadersFromBlob(webResource, options);","","  var processResponseCallback = function (responseObject, next) {","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Checks whether or not a blob exists on the service.","*","* @this {BlobService}","* @param {string}             container                               The container name.","* @param {string}             blob                                    The blob name.","* @param {object}             [options]                               The request options.","* @param {LocationMode}       [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {Function(error, result, response)}  callback                `error` will contain information","*                                                                     if an error occurs; otherwise `[result]{@link BlobResult}` will contain ","*                                                                     the blob information including the `exists` boolean member. ","*                                                                     `response` will contain information related to this operation.","*/","BlobService.prototype.doesBlobExist = function (container, blob, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('doesBlobExist', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  this._doesBlobExist(container, blob, false, options, callback);","};","","/**","* Marks the specified blob or snapshot for deletion if it exists. The blob is later deleted during garbage collection.","* If a blob has snapshots, you must delete them when deleting the blob. Using the deleteSnapshots option, you can choose either to delete both the blob and its snapshots, ","* or to delete only the snapshots but not the blob itself. If the blob has snapshots, you must include the deleteSnapshots option or the blob service will return an error","* and nothing will be deleted. ","* If you are deleting a specific snapshot using the snapshotId option, the deleteSnapshots option must NOT be included.","*","* @this {BlobService}","* @param {string}             container                           The container name.","* @param {string}             blob                                The blob name.","* @param {object}             [options]                           The request options.","* @param {string}             [options.deleteSnapshots]           The snapshot delete option. See azure.BlobUtilities.SnapshotDeleteOptions.*. ","* @param {string}             [options.snapshotId]                The snapshot identifier.","* @param {string}             [options.leaseId]                   The lease identifier.","* @param {AccessConditions}   [options.accessConditions]          The access conditions.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `result` will","*                                                                 be true if the blob was deleted, or false if the blob","*                                                                 does not exist.","*                                                                 `response` will contain information related to this operation.","*/","BlobService.prototype.deleteBlobIfExists = function (container, blob, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('deleteBlobIfExists', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var self = this;","  self._doesBlobExist(container, blob, true, options, function (error, existsResult, response) {","    if (error) {","      callback(error, existsResult.exists, response);","    } else if (!existsResult.exists) {","      response.isSuccessful = true;","      callback(error, false, response);","    } else {","      self.deleteBlob(container, blob, options, function (deleteError, deleteResponse) {","        var deleted;","        if (!deleteError) {","          deleted = true;","        } else if (deleteError && deleteError.statusCode === Constants.HttpConstants.HttpResponseCodes.NotFound && deleteError.code === Constants.BlobErrorCodeStrings.BLOB_NOT_FOUND) {","          // If it was deleted already, there was no actual error.","          deleted = false;","          deleteError = null;","          deleteResponse.isSuccessful = true;","        }","","        callback(deleteError, deleted, deleteResponse);","      });","    }","  });","};","","/**","* Creates a read-only snapshot of a blob.","*","* @this {BlobService}","* @param {string}             container                             The container name.","* @param {string}             blob                                  The blob name.","* @param {object}             [options]                             The request options.","* @param {string}             [options.snapshotId]                  The snapshot identifier.","* @param {object}             [options.metadata]                    The metadata key/value pairs.","* @param {string}             [options.leaseId]                     The lease identifier.","* @param {AccessConditions}   [options.accessConditions]            The access conditions.","* @param {LocationMode}       [options.locationMode]                Specifies the location mode used to decide which location the request should be sent to. ","*                                                                   Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]         The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]    The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]    The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                   The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                   execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]             A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]           Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                   The default value is false.","* @param {errorOrResult}      callback                              `error` will contain information","*                                                                   if an error occurs; otherwise `result` will contain","*                                                                   the ID of the snapshot.","*                                                                   `response` will contain information related to this operation.","*/","BlobService.prototype.createBlobSnapshot = function (container, blob, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createBlobSnapshot', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(container, blob);","  var webResource = WebResource.put(resourceName)","    .withQueryOption(QueryStringConstants.COMP, 'snapshot');","","  BlobResult.setHeadersFromBlob(webResource, options);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.snapshotId = null;","    if (!responseObject.error) {","      responseObject.snapshotId = responseObject.response.headers[HeaderConstants.SNAPSHOT];","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.snapshotId, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Starts to copy a blob to a destination within the storage account. The Copy Blob operation copies the entire committed blob.","*","* @this {BlobService}","* @param {string}             sourceUri                                 The source blob URI.","* @param {string}             targetContainer                           The target container name.","* @param {string}             targetBlob                                The target blob name.","* @param {object}             [options]                                 The request options.","* @param {boolean}            [options.isIncrementalCopy]               If it's incremental copy or not. Refer to https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/incremental-copy-blob","* @param {string}             [options.snapshotId]                      The source blob snapshot identifier.","* @param {object}             [options.metadata]                        The target blob metadata key/value pairs.","* @param {string}             [options.leaseId]                         The target blob lease identifier.","* @param {string}             [options.sourceLeaseId]                   The source blob lease identifier.","* @param {AccessConditions}   [options.accessConditions]                The access conditions.","* @param {AccessConditions}   [options.sourceAccessConditions]          The source access conditions.","* @param {LocationMode}       [options.locationMode]                    Specifies the location mode used to decide which location the request should be sent to. ","*                                                                       Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]             The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]        The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]        The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                       The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                       execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                 A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]               Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                       The default value is false.","* @param {errorOrResult}      callback                                  `error` will contain information","*                                                                       if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                       the blob information.","*                                                                       `response` will contain information related to this operation.","*/","BlobService.prototype.startCopyBlob = function (sourceUri, targetContainer, targetBlob, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('startCopyBlob', function (v) {","    v.string(sourceUri, 'sourceUri');","    v.string(targetContainer, 'targetContainer');","    v.string(targetBlob, 'targetBlob');","    v.containerNameIsValid(targetContainer);","    v.callback(callback);","  });","","  var targetResourceName = createResourceName(targetContainer, targetBlob);","","  var options = extend(true, {}, userOptions);","","  if (options.snapshotId) {","    var uri = url.parse(sourceUri, true);","    if(uri.query['snapshot']) {","      throw new ArgumentError('options.snapshotId', 'Duplicate snapshot supplied in both the source uri and option.');","    }","    ","    uri.search = undefined;","    uri.query['snapshot'] = options.snapshotId;","    ","    sourceUri = url.format(uri);","  }","","  var webResource = WebResource.put(targetResourceName)","    .withHeader(HeaderConstants.COPY_SOURCE, sourceUri);","","  if (options.isIncrementalCopy) {","    webResource.withQueryOption(QueryStringConstants.COMP, 'incrementalcopy');","  }","","  webResource.withHeader(HeaderConstants.LEASE_ID, options.leaseId);","  webResource.withHeader(HeaderConstants.SOURCE_LEASE_ID, options.sourceLeaseId);","  webResource.addOptionalMetadataHeaders(options.metadata);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.blobResult = null;","    if (!responseObject.error) {","      responseObject.blobResult = new BlobResult(targetContainer, targetBlob);","      responseObject.blobResult.getPropertiesFromHeaders(responseObject.response.headers);","","      if (options.metadata) {","        responseObject.blobResult.metadata = options.metadata;","      }","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.blobResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Abort a blob copy operation.","*","* @this {BlobService}","* @param {string}             container                                 The destination container name.","* @param {string}             blob                                      The destination blob name.","* @param {string}             copyId                                    The copy operation identifier.","* @param {object}             [options]                                 The request options.","* @param {string}             [options.leaseId]                         The target blob lease identifier.","* @param {LocationMode}       [options.locationMode]                    Specifies the location mode used to decide which location the request should be sent to. ","*                                                                       Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]             The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]        The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]        The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                       The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                       execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                 A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]               Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                       The default value is false.","* @param {errorOrResponse}    callback                                  `error` will contain information  if an error occurs; ","*                                                                       `response` will contain information related to this operation.","*/","BlobService.prototype.abortCopyBlob = function (container, blob, copyId, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('abortCopyBlob', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var resourceName = createResourceName(container, blob);","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.put(resourceName)","    .withQueryOption(QueryStringConstants.COPY_ID, copyId)","    .withQueryOption(QueryStringConstants.COMP, 'copy')","    .withHeader(HeaderConstants.COPY_ACTION, 'abort');","","  webResource.withHeader(HeaderConstants.LEASE_ID, options.leaseId);","","  var processResponseCallback = function (responseObject, next) {","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Retrieves a shared access signature token.","*","* @this {BlobService}","* @param {string}                   container                                           The container name.","* @param {string}                   [blob]                                              The blob name.","* @param {object}                   sharedAccessPolicy                                  The shared access policy.","* @param {string}                   [sharedAccessPolicy.Id]                             The signed identifier.","* @param {object}                   [sharedAccessPolicy.AccessPolicy.Permissions]       The permission type.","* @param {date|string}              [sharedAccessPolicy.AccessPolicy.Start]             The time at which the Shared Access Signature becomes valid (The UTC value will be used).","* @param {date|string}              [sharedAccessPolicy.AccessPolicy.Expiry]            The time at which the Shared Access Signature becomes expired (The UTC value will be used).","* @param {string}                   [sharedAccessPolicy.AccessPolicy.IPAddressOrRange]  An IP address or a range of IP addresses from which to accept requests. When specifying a range, note that the range is inclusive.","* @param {string}                   [sharedAccessPolicy.AccessPolicy.Protocols]         The protocols permitted for a request made with the account SAS. ","*                                                                                       Possible values are both HTTPS and HTTP (https,http) or HTTPS only (https). The default value is https,http.","* @param {object}                   [headers]                                           The optional header values to set for a blob returned wth this SAS.","* @param {string}                   [headers.cacheControl]                              The optional value of the Cache-Control response header to be returned when this SAS is used.","* @param {string}                   [headers.contentType]                               The optional value of the Content-Type response header to be returned when this SAS is used.","* @param {string}                   [headers.contentEncoding]                           The optional value of the Content-Encoding response header to be returned when this SAS is used.","* @param {string}                   [headers.contentLanguage]                           The optional value of the Content-Language response header to be returned when this SAS is used.","* @param {string}                   [headers.contentDisposition]                        The optional value of the Content-Disposition response header to be returned when this SAS is used.","* @return {string}                                                                      The shared access signature query string. Note this string does not contain the leading \"?\".","*/","BlobService.prototype.generateSharedAccessSignature = function (container, blob, sharedAccessPolicy, headers) {","  // check if the BlobService is able to generate a shared access signature","  if (!this.storageCredentials){","    throw new ArgumentNullError('storageCredentials');","  }","","  if(!this.storageCredentials.generateSignedQueryString) {","    throw new ArgumentError('storageCredentials', SR.CANNOT_CREATE_SAS_WITHOUT_ACCOUNT_KEY);","  }","","  // Validate container name. Blob name is optional.","  validate.validateArgs('generateSharedAccessSignature', function (v) {","    v.string(container, 'container');","    v.containerNameIsValid(container);","    v.object(sharedAccessPolicy, 'sharedAccessPolicy');","  });","","  var resourceType = BlobConstants.ResourceTypes.CONTAINER;","  if (blob) {","    validate.validateArgs('generateSharedAccessSignature', function (v) {","      v.string(blob, 'blob');","    });","    resourceType = BlobConstants.ResourceTypes.BLOB;","  }","","  if (sharedAccessPolicy.AccessPolicy) {","    if (!azureutil.objectIsNull(sharedAccessPolicy.AccessPolicy.Start)) {","      if (!_.isDate(sharedAccessPolicy.AccessPolicy.Start)) {","        sharedAccessPolicy.AccessPolicy.Start = new Date(sharedAccessPolicy.AccessPolicy.Start);","      }"," ","      sharedAccessPolicy.AccessPolicy.Start = azureutil.truncatedISO8061Date(sharedAccessPolicy.AccessPolicy.Start);","    }","","    if (!azureutil.objectIsNull(sharedAccessPolicy.AccessPolicy.Expiry)) {","      if (!_.isDate(sharedAccessPolicy.AccessPolicy.Expiry)) {","        sharedAccessPolicy.AccessPolicy.Expiry = new Date(sharedAccessPolicy.AccessPolicy.Expiry);","      }","","      sharedAccessPolicy.AccessPolicy.Expiry = azureutil.truncatedISO8061Date(sharedAccessPolicy.AccessPolicy.Expiry);","    }","  }","","  var resourceName = createResourceName(container, blob, true);","  return this.storageCredentials.generateSignedQueryString(Constants.ServiceType.Blob, resourceName, sharedAccessPolicy, null, { headers: headers, resourceType: resourceType });","};","","/**","* Retrieves a blob or container URL.","*","* @param {string}                   container                The container name.","* @param {string}                   [blob]                   The blob name.","* @param {string}                   [sasToken]               The Shared Access Signature token.","* @param {boolean}                  [primary]                A boolean representing whether to use the primary or the secondary endpoint.","* @param {boolean}                  [snapshotId]             The snapshot identifier.","* @return {string}                                           The formatted URL string.","* @example","* var azure = require('azure-storage');","* var blobService = azure.createBlobService();","* var sharedAccessPolicy = {","*   AccessPolicy: {","*     Permissions: azure.BlobUtilities.SharedAccessPermissions.READ,","*     Start: startDate,","*     Expiry: expiryDate","*   },","* };","* ","* var sasToken = blobService.generateSharedAccessSignature(containerName, blobName, sharedAccessPolicy);","* var sasUrl = blobService.getUrl(containerName, blobName, sasToken);","*/","BlobService.prototype.getUrl = function (container, blob, sasToken, primary, snapshotId) {","  validate.validateArgs('getUrl', function (v) {","    v.string(container, 'container');","    v.containerNameIsValid(container);","  });","","  var host;","  if (!azureutil.objectIsNull(primary) && primary === false) {","    host = this.host.secondaryHost;","  } else {","    host = this.host.primaryHost;","  }","","  host = azureutil.trimPortFromUri(host);","  if(host && host.lastIndexOf('/') !== (host.length - 1)){","    host = host + '/';","  }","","  var query = qs.parse(sasToken);","  if(snapshotId) {","    query[QueryStringConstants.SNAPSHOT] = snapshotId;","  }","","  var fullPath = url.format({ pathname: this._getPath(createResourceName(container, blob)), query: query });","  return url.resolve(host, fullPath);","};","","// Page blob methods","","/**","* Creates a page blob of the specified length. If the blob already exists on the service, it will be overwritten.","* To avoid overwriting and instead throw an error if the blob exists, please pass in an accessConditions parameter in the options object.","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {int}                length                                        The length of the page blob in bytes.","* @param {object}             [options]                                     The request options.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {string}             [options.leaseId]                             The target blob lease identifier.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The MD5 hash of the blob content.","* @param {string}             [options.sequenceNumber]                      The blob's sequence number.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResponse}    callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise ","*                                                                           `response` will contain information related to this operation.","*/","BlobService.prototype.createPageBlob = function (container, blob, length, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createPageBlob', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.value(length, 'length');","    v.callback(callback);","  });","","  if (length && length % BlobConstants.PAGE_SIZE !== 0) {","    throw new RangeError(SR.INVALID_PAGE_BLOB_LENGTH);","  }","","  var options = extend(true, {}, userOptions);","","  var resourceName = createResourceName(container, blob);","  ","  var webResource = WebResource.put(resourceName)","    .withHeader(HeaderConstants.BLOB_TYPE, BlobConstants.BlobTypes.PAGE)","    .withHeader(HeaderConstants.BLOB_CONTENT_LENGTH, length)","    .withHeader(HeaderConstants.CONTENT_LENGTH, 0)","    .withHeader(HeaderConstants.LEASE_ID, options.leaseId);","","  BlobResult.setHeadersFromBlob(webResource, options);","","  var processResponseCallback = function (responseObject, next) {","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Uploads a page blob from file. If the blob already exists on the service, it will be overwritten.","* To avoid overwriting and instead throw an error if the blob exists, please pass in an accessConditions parameter in the options object.","* (Not recommended for use in the JavaScript Client Library)","*","* @this {BlobService}","* @param {string}             container                                           The container name.","* @param {string}             blob                                                The blob name.","* @param (string)             localFileName                                       The local path to the file to be uploaded.","* @param {object}             [options]                                           The request options.","* @param {SpeedSummary}       [options.speedSummary]                              The upload tracker objects.","* @param {int}                [options.parallelOperationThreadCount]              Parallel operation thread count.","* @param {string}             [options.leaseId]                                   The lease identifier.","* @param {string}             [options.transactionalContentMD5]                   An MD5 hash of the blob content. This hash is used to verify the integrity of the blob during transport.","* @param {object}             [options.metadata]                                  The metadata key/value pairs.","* @param {bool}               [options.storeBlobContentMD5]                       Specifies whether the blob's ContentMD5 header should be set on uploads. ","*                                                                                 The default value is false for page blobs.","* @param {bool}               [options.useTransactionalMD5]                       Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                           The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]               The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]           The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]           The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]              The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]        The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]                The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                          The access conditions.","* @param {LocationMode}       [options.locationMode]                              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]                  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]                  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                                 The default value is false.","* @param {errorOrResult}      callback                                            `error` will contain information","*                                                                                 if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                                 the blob information.","*                                                                                 `response` will contain information related to this operation.","* @return {SpeedSummary}","*/","BlobService.prototype.createPageBlobFromLocalFile = function (container, blob, localFileName, optionsOrCallback, callback) {","  return this._createBlobFromLocalFile(container, blob, BlobConstants.BlobTypes.PAGE, localFileName, optionsOrCallback, callback);","};","","/**","* Uploads a page blob from a stream. If the blob already exists on the service, it will be overwritten.","* To avoid overwriting and instead throw an error if the blob exists, please pass in an accessConditions parameter in the options object.","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param (Stream)             stream                                        Stream to the data to store.","* @param {int}                streamLength                                  The length of the stream to upload.","* @param {object}             [options]                                     The request options.","* @param {SpeedSummary}       [options.speedSummary]                        The download tracker objects;","* @param {int}                [options.parallelOperationThreadCount]        Parallel operation thread count.","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {string}             [options.transactionalContentMD5]             An MD5 hash of the blob content. This hash is used to verify the integrity of the blob during transport.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. ","*                                                                           The default value is false for page blobs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                           the blob information.","*                                                                           `response` will contain information related to this operation.","* @return {SpeedSummary}","*/","BlobService.prototype.createPageBlobFromStream = function (container, blob, stream, streamLength, optionsOrCallback, callback) {","  return this._createBlobFromStream(container, blob, BlobConstants.BlobTypes.PAGE, stream, streamLength, optionsOrCallback, callback);","};","","/**","* Provides a stream to write to a page blob. Assumes that the blob exists. ","* If it does not, please create the blob using createPageBlob before calling this method or use createWriteStreamNewPageBlob.","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {object}             [options]                                     The request options.","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {string}             [options.transactionalContentMD5]             The MD5 hash of the blob content. This hash is used to verify the integrity of the blob during transport.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {int}                [options.parallelOperationThreadCount]        Parallel operation thread count.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. ","*                                                                           The default value is false for page blobs and true for block blobs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                           the blob information.","*                                                                           `response` will contain information related to this operation.","* @return {Stream}","* @example","* var azure = require('azure-storage');","* var blobService = azure.createBlobService();","* blobService.createPageBlob(containerName, blobName, 1024, function (err) {","*   // Pipe file to a blob","*   var stream = fs.createReadStream(fileNameTarget).pipe(blobService.createWriteStreamToExistingPageBlob(containerName, blobName));","* });","*/","BlobService.prototype.createWriteStreamToExistingPageBlob = function (container, blob, optionsOrCallback, callback) {","  return this._createWriteStreamToBlob(container, blob, BlobConstants.BlobTypes.PAGE, 0, false, optionsOrCallback, callback);","};","","/**","* Provides a stream to write to a page blob. Creates the blob before writing data. If the blob already exists on the service, it will be overwritten.","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {string}             length                                        The blob length.","* @param {object}             [options]                                     The request options.","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {string}             [options.transactionalContentMD5]             The MD5 hash of the blob content. This hash is used to verify the integrity of the blob during transport.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {int}                [options.parallelOperationThreadCount]        Parallel operation thread count.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. ","*                                                                           The default value is false for page blobs and true for block blobs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                           the blob information.","*                                                                           `response` will contain information related to this operation.","* @return {Stream}","* @example","* var azure = require('azure-storage');","* var blobService = azure.createBlobService();","* blobService.createPageBlob(containerName, blobName, 1024, function (err) {","*   // Pipe file to a blob","*   var stream = fs.createReadStream(fileNameTarget).pipe(blobService.createWriteStreamToNewPageBlob(containerName, blobName));","* });","*/","BlobService.prototype.createWriteStreamToNewPageBlob = function (container, blob, length, optionsOrCallback, callback) {","  return this._createWriteStreamToBlob(container, blob, BlobConstants.BlobTypes.PAGE, length, true, optionsOrCallback, callback);","};","","/**","* Updates a page blob from a stream.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {Stream}             readStream                                  The read stream.","* @param {int}                rangeStart                                  The range start.","* @param {int}                rangeEnd                                    The range end.","* @param {object}             [options]                                   The request options.","* @param {string}             [options.leaseId]                           The target blob lease identifier.","* @param {bool}               [options.useTransactionalMD5]               Calculate and send/validate content MD5 for transactions.","* @param {string}             [options.transactionalContentMD5]           An optional hash value used to ensure transactional integrity for the page. ","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                         the page information.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype.createPagesFromStream = function (container, blob, readStream, rangeStart, rangeEnd, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createPagesFromStream', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  if ((rangeEnd - rangeStart) + 1 > BlobConstants.MAX_UPDATE_PAGE_SIZE) {","    throw new RangeError(SR.INVALID_PAGE_RANGE_FOR_UPDATE);","  }","","  var self = this;","  if (azureutil.objectIsNull(options.transactionalContentMD5) && options.useTransactionalMD5) {","    azureutil.calculateMD5(readStream, BlobConstants.MAX_UPDATE_PAGE_SIZE, options, function (internalBuff, contentMD5) {","      options.transactionalContentMD5 = contentMD5;","      self._createPages(container, blob, internalBuff, null /* stream */, rangeStart, rangeEnd, options, callback);","    });","  } else {","    self._createPages(container, blob, null /* text */, readStream, rangeStart, rangeEnd, options, callback);","  }","};","","/**","* Lists page ranges. Lists all of the page ranges by default, or only the page ranges over a specific range of bytes if rangeStart and rangeEnd are specified.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {object}             [options]                                   The request options.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {int}                [options.rangeStart]                        The range start.","* @param {int}                [options.rangeEnd]                          The range end.","* @param {string}             [options.snapshotId]                        The snapshot identifier.","* @param {string}             [options.leaseId]                           The target blob lease identifier.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `result` will contain","*                                                                         the page ranges information, see `[Range]{@link Range}` for detailed information.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype.listPageRanges = function (container, blob, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('listPageRanges', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  var resourceName = createResourceName(container, blob);","  var webResource = WebResource.get(resourceName)","    .withQueryOption(QueryStringConstants.COMP, 'pagelist')","    .withQueryOption(QueryStringConstants.SNAPSHOT, options.snapshotId);","","  if (options.rangeStart && options.rangeStart % BlobConstants.PAGE_SIZE !== 0) {","    throw new RangeError(SR.INVALID_PAGE_START_OFFSET);","  }","","  if (options.rangeEnd && (options.rangeEnd + 1) % BlobConstants.PAGE_SIZE !== 0) {","    throw new RangeError(SR.INVALID_PAGE_END_OFFSET);","  }","","  BlobResult.setHeadersFromBlob(webResource, options);","","  options.requestLocationMode = RequestLocationMode.PRIMARY_OR_SECONDARY;","","  var processResponseCallback = function (responseObject, next) {","    responseObject.pageRanges = null;","    if (!responseObject.error) {","      responseObject.pageRanges = [];","","      var pageRanges = [];","      if (responseObject.response.body.PageList.PageRange) {","        pageRanges = responseObject.response.body.PageList.PageRange;","","        if (!_.isArray(pageRanges)) {","          pageRanges = [ pageRanges ];","        }","      }","","      pageRanges.forEach(function (pageRange) {","        var range = {","          start: parseInt(pageRange.Start, 10),","          end: parseInt(pageRange.End, 10)","        };","","        responseObject.pageRanges.push(range);","      });","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.pageRanges, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Gets page ranges that have been updated or cleared since the snapshot specified by `previousSnapshotTime` was taken. Gets all of the page ranges by default, or only the page ranges over a specific range of bytes if rangeStart and rangeEnd are specified.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {string}             previousSnapshotTime                        The previous snapshot time for comparison. Must be prior to `options.snapshotId` if it's provided.","* @param {object}             [options]                                   The request options.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {int}                [options.rangeStart]                        The range start.","* @param {int}                [options.rangeEnd]                          The range end.","* @param {string}             [options.snapshotId]                        The snapshot identifier. ","* @param {string}             [options.leaseId]                           The target blob lease identifier.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `result` will contain","*                                                                         the page ranges diff information, see `[RangeDiff]{@link RangeDiff}` for detailed information.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype.getPageRangesDiff = function (container, blob, previousSnapshotTime, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getPageRangesDiff', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  var resourceName = createResourceName(container, blob);","  var webResource = WebResource.get(resourceName)","    .withQueryOption(QueryStringConstants.COMP, 'pagelist')","    .withQueryOption(QueryStringConstants.SNAPSHOT, options.snapshotId)","    .withQueryOption(QueryStringConstants.PREV_SNAPSHOT, previousSnapshotTime);","","  if (options.rangeStart && options.rangeStart % BlobConstants.PAGE_SIZE !== 0) {","    throw new RangeError(SR.INVALID_PAGE_START_OFFSET);","  }","","  if (options.rangeEnd && (options.rangeEnd + 1) % BlobConstants.PAGE_SIZE !== 0) {","    throw new RangeError(SR.INVALID_PAGE_END_OFFSET);","  }","","  if (options.rangeEnd && (options.rangeEnd + 1) % BlobConstants.PAGE_SIZE !== 0) {","    throw new RangeError(SR.INVALID_PAGE_END_OFFSET);","  }","","  BlobResult.setHeadersFromBlob(webResource, options);","","  options.requestLocationMode = RequestLocationMode.PRIMARY_OR_SECONDARY;","","  var processResponseCallback = function (responseObject, next) {","    responseObject.pageRangesDiff = null;","    if (!responseObject.error) {","      responseObject.pageRangesDiff = [];","","      if (responseObject.response.body.PageList.PageRange) {","        var updatedPageRanges = responseObject.response.body.PageList.PageRange;","","        if (!_.isArray(updatedPageRanges)) {","          updatedPageRanges = [ updatedPageRanges ];","        }","","        updatedPageRanges.forEach(function (pageRange) {","          var range = {","            start: parseInt(pageRange.Start, 10),","            end: parseInt(pageRange.End, 10),","            isCleared: false","          };","","          responseObject.pageRangesDiff.push(range);","        });","      }","","      if (responseObject.response.body.PageList.ClearRange) {","        var clearedPageRanges = responseObject.response.body.PageList.ClearRange;","","        if (!_.isArray(clearedPageRanges)) {","          clearedPageRanges = [ clearedPageRanges ];","        }","","        clearedPageRanges.forEach(function (pageRange) {","          var range = {","            start: parseInt(pageRange.Start, 10),","            end: parseInt(pageRange.End, 10),","            isCleared: true","          };","","          responseObject.pageRangesDiff.push(range);","        });","      }","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.pageRangesDiff, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Clears a range of pages.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {int}                rangeStart                                  The range start.","* @param {int}                rangeEnd                                    The range end.","* @param {object}             [options]                                   The request options.","* @param {string}             [options.leaseId]                           The target blob lease identifier.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResponse}    callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise ","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype.clearPageRange = function (container, blob, rangeStart, rangeEnd, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('clearPageRange', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var request = this._updatePageBlobPagesImpl(container, blob, rangeStart, rangeEnd, BlobConstants.PageWriteOptions.CLEAR, options);","","  var self = this;","  var processResponseCallback = function (responseObject, next) {","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  self.performRequest(request, null, options, processResponseCallback);","};","","/**","* Resizes a page blob.","*","* @this {BlobService}","* @param {string}               container                                   The container name.","* @param {string}               blob                                        The blob name.","* @param {String}               size                                        The size of the page blob, in bytes.","* @param {object}               [options]                                   The request options.","* @param {string}               [options.leaseId]                           The blob lease identifier.","* @param {AccessConditions}     [options.accessConditions]                  The access conditions.","* @param {LocationMode}         [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                  [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                  [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                  [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}               [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}                 [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                           the page information.","*                                                                           `response` will contain information related to this operation.","*/","BlobService.prototype.resizePageBlob = function (container, blob, size, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('resizePageBlob', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(container, blob);","  var webResource = WebResource.put(resourceName)","    .withQueryOption(QueryStringConstants.COMP, 'properties');","","  if (size && size % BlobConstants.PAGE_SIZE !== 0) {","    throw new RangeError(SR.INVALID_PAGE_BLOB_LENGTH);","  }","","  webResource.withHeader(HeaderConstants.BLOB_CONTENT_LENGTH, size);","","  this._setBlobPropertiesHelper({","    webResource: webResource,","    options: options,","    container: container,","    blob: blob,","    callback: callback","  });","  ","};","","/**","* Sets the page blob's sequence number.","*","* @this {BlobService}","* @param {string}               container                                   The container name.","* @param {string}               blob                                        The blob name.","* @param {SequenceNumberAction} sequenceNumberAction                        A value indicating the operation to perform on the sequence number. ","*                                                                           The allowed values are defined in azure.BlobUtilities.SequenceNumberAction.","* @param {string}               sequenceNumber                              The sequence number.  The value of the sequence number must be between 0 and 2^63 - 1.","*                                                                           Set this parameter to null if this operation is an increment action.","* @param {object}               [options]                                   The request options.","* @param {AccessConditions}     [options.accessConditions]                  The access conditions.","* @param {LocationMode}         [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                  [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                  [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                  [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}               [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}                 [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                           the page information.","*                                                                           `response` will contain information related to this operation.","*/","BlobService.prototype.setPageBlobSequenceNumber = function (container, blob, sequenceNumberAction, sequenceNumber, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('setPageBlobSequenceNumber', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  if (sequenceNumberAction === BlobUtilities.SequenceNumberAction.INCREMENT) {","    if (!azureutil.objectIsNull(sequenceNumber)) {","      throw new ArgumentError('sequenceNumber', SR.BLOB_INVALID_SEQUENCE_NUMBER);","    }","  } else {","    if (azureutil.objectIsNull(sequenceNumber)) {","      throw new ArgumentNullError('sequenceNumber', util.format(SR.ARGUMENT_NULL_OR_EMPTY, 'sequenceNumber'));","    }","  }","","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(container, blob);","  var webResource = WebResource.put(resourceName)","    .withQueryOption(QueryStringConstants.COMP, 'properties')","    .withHeader(HeaderConstants.SEQUENCE_NUMBER_ACTION, sequenceNumberAction);","","  if (sequenceNumberAction !== BlobUtilities.SequenceNumberAction.INCREMENT) {","    webResource.withHeader(HeaderConstants.SEQUENCE_NUMBER, sequenceNumber);","  }","","  var processResponseCallback = function (responseObject, next) {","    responseObject.blobResult = null;","    if (!responseObject.error) {","      responseObject.blobResult = new BlobResult(container, blob);","      responseObject.blobResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.blobResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","// Block blob methods","","/**","* Creates a new block blob. If the blob already exists on the service, it will be overwritten.","* To avoid overwriting and instead throw an error if the blob exists, please pass in an accessConditions parameter in the options object.","* (Not recommended for use in the JavaScript Client Library)","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {string}             localFileName                                 The local path to the file to be uploaded.","* @param {object}             [options]                                     The request options.","* @param {int}                [options.blockSize]                           The size of each block. Maximum is 100MB.","* @param {string}             [options.blockIdPrefix]                       The prefix to be used to generate the block id.","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {string}             [options.transactionalContentMD5]             The MD5 hash of the blob content. This hash is used to verify the integrity of the blob during transport.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {int}                [options.parallelOperationThreadCount]        Parallel operation thread count.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. The default value is true for block blobs.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                           the blob information.","*                                                                           `response` will contain information related to this operation.","* @return {SpeedSummary}","*/","BlobService.prototype.createBlockBlobFromLocalFile = function (container, blob, localFileName, optionsOrCallback, callback) {","  return this._createBlobFromLocalFile(container, blob, BlobConstants.BlobTypes.BLOCK, localFileName, optionsOrCallback, callback);","};","","/**","* Uploads a block blob from a stream. If the blob already exists on the service, it will be overwritten.","* To avoid overwriting and instead throw an error if the blob exists, please pass in an accessConditions parameter in the options object.","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param (Stream)             stream                                        Stream to the data to store.","* @param {int}                streamLength                                  The length of the stream to upload.","* @param {object}             [options]                                     The request options.","* @param {SpeedSummary}       [options.speedSummary]                        The download tracker objects.","* @param {int}                [options.blockSize]                           The size of each block. Maximum is 100MB.","* @param {string}             [options.blockIdPrefix]                       The prefix to be used to generate the block id.","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {string}             [options.transactionalContentMD5]             The MD5 hash of the blob content. This hash is used to verify the integrity of the blob during transport.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {int}                [options.parallelOperationThreadCount]        Parallel operation thread count.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. The default value is true for block blobs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                           the blob information.","*                                                                           `response` will contain information related to this operation.","* @return {SpeedSummary}","*/","BlobService.prototype.createBlockBlobFromStream = function (container, blob, stream, streamLength, optionsOrCallback, callback) {","  return this._createBlobFromStream(container, blob, BlobConstants.BlobTypes.BLOCK, stream, streamLength, optionsOrCallback, callback);","};","","/**","* Uploads a block blob from a text string. If the blob already exists on the service, it will be overwritten.","* To avoid overwriting and instead throw an error if the blob exists, please pass in an accessConditions parameter in the options object.","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {string|object}      text                                          The blob text, as a string or in a Buffer.","* @param {object}             [options]                                     The request options.","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {string}             [options.transactionalContentMD5]             The MD5 hash of the blob content. This hash is used to verify the integrity of the blob during transport.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. The default value is true for block blobs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                           the blob information.","*                                                                           `response` will contain information related to this operation.","*/","BlobService.prototype.createBlockBlobFromText = function (container, blob, text, optionsOrCallback, callback) {","  return this._createBlobFromText(container, blob, BlobConstants.BlobTypes.BLOCK, text, optionsOrCallback, callback);","};","","/**","* Provides a stream to write to a block blob. If the blob already exists on the service, it will be overwritten.","* To avoid overwriting and instead throw an error if the blob exists, please pass in an accessConditions parameter in the options object.","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {object}             [options]                                     The request options.","* @param {int}                [options.blockSize]                           The size of each block. Maximum is 100MB.","* @param {string}             [options.blockIdPrefix]                       The prefix to be used to generate the block id.","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {string}             [options.transactionalContentMD5]             The MD5 hash of the blob content. This hash is used to verify the integrity of the blob during transport.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {int}                [options.parallelOperationThreadCount]        Parallel operation thread count.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. ","*                                                                           The default value is false for page blobs and true for block blobs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                           the blob information.","*                                                                           `response` will contain information related to this operation.","* @return {Stream}","* @example","* var azure = require('azure-storage');","* var blobService = azure.createBlobService();","* var stream = fs.createReadStream(fileNameTarget).pipe(blobService.createWriteStreamToBlockBlob(containerName, blobName, { blockIdPrefix: 'block' }));","*/","BlobService.prototype.createWriteStreamToBlockBlob = function (container, blob, optionsOrCallback, callback) {","  return this._createWriteStreamToBlob(container, blob, BlobConstants.BlobTypes.BLOCK, 0, false, optionsOrCallback, callback);","};","","/**","* Creates a new block to be committed as part of a blob.","*","* @this {BlobService}","* @param {string}             blockId                                   The block identifier.","* @param {string}             container                                 The container name.","* @param {string}             blob                                      The blob name.","* @param {Stream}             readStream                                The read stream.","* @param {int}                streamLength                              The stream length.","* @param {object}             [options]                                 The request options.","* @param {bool}               [options.useTransactionalMD5]             Calculate and send/validate content MD5 for transactions.","* @param {string}             [options.leaseId]                         The target blob lease identifier.","* @param {string}             [options.transactionalContentMD5]         An MD5 hash of the block content. This hash is used to verify the integrity of the block during transport.","* @param {AccessConditions}   [options.accessConditions]                The access conditions.","* @param {LocationMode}       [options.locationMode]                    Specifies the location mode used to decide which location the request should be sent to. ","*                                                                       Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]             The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]        The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]        The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                       The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                       execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                 A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]               Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                       The default value is false.","* @param {errorOrResponse}    callback                                  `error` will contain information","*                                                                       if an error occurs; otherwise ","*                                                                       `response` will contain information related to this operation.","*/","BlobService.prototype.createBlockFromStream = function (blockId, container, blob, readStream, streamLength, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createBlockFromStream', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.exists(readStream, 'readStream');","    v.value(streamLength, 'streamLength');","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  if (streamLength > BlobConstants.MAX_BLOCK_BLOB_BLOCK_SIZE) {","    throw new RangeError(SR.INVALID_STREAM_LENGTH);","  } else {","    this._createBlock(blockId, container, blob, null, readStream, streamLength, options, callback);","  }","};","","/**","* Creates a new block to be committed as part of a blob.","*","* @this {BlobService}","* @param {string}             blockId                                   The block identifier.","* @param {string}             container                                 The container name.","* @param {string}             blob                                      The blob name.","* @param {string|buffer}      content                                   The block content.","* @param {object}             [options]                                 The request options.","* @param {bool}               [options.useTransactionalMD5]             Calculate and send/validate content MD5 for transactions.","* @param {string}             [options.leaseId]                         The target blob lease identifier.","* @param {string}             [options.transactionalContentMD5]         An MD5 hash of the block content. This hash is used to verify the integrity of the block during transport. ","* @param {AccessConditions}   [options.accessConditions]                The access conditions.","* @param {LocationMode}       [options.locationMode]                    Specifies the location mode used to decide which location the request should be sent to. ","*                                                                       Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]             The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]        The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]        The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                       The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                       execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                 A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]               Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                       The default value is false.","* @param {errorOrResponse}    callback                                  `error` will contain information","*                                                                       if an error occurs; otherwise ","*                                                                       `response` will contain information related to this operation.","*/","BlobService.prototype.createBlockFromText = function (blockId, container, blob, content, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createBlockFromText', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","  ","  var options = extend(true, {}, userOptions);","  var contentLength = (Buffer.isBuffer(content) ? content.length : Buffer.byteLength(content));","","  if (contentLength > BlobConstants.MAX_BLOCK_BLOB_BLOCK_SIZE) {","    throw new RangeError(SR.INVALID_TEXT_LENGTH);","  } else {","    this._createBlock(blockId, container, blob, content, null, contentLength, options, callback);","  }","};","","/**","* Creates a new block to be committed as part of a block blob.","* @ignore","*","* @this {BlobService}","* @param {string}             blockId                                   The block identifier.","* @param {string}             container                                 The container name.","* @param {string}             blob                                      The blob name.","* @param {string|buffer}      content                                   The block content.","* @param (Stream)             stream                                    The stream to the data to store.","* @param {int}                length                                    The length of the stream or text to upload.","* @param {object}             [options]                                 The request options.","* @param {bool}               [options.useTransactionalMD5]             Calculate and send/validate content MD5 for transactions.","* @param {string}             [options.leaseId]                         The target blob lease identifier.","* @param {string}             [options.transactionalContentMD5]         An MD5 hash of the block content. This hash is used to verify the integrity of the block during transport.","* @param {AccessConditions}   [options.accessConditions]                The access conditions.","* @param {LocationMode}       [options.locationMode]                    Specifies the location mode used to decide which location the request should be sent to. ","*                                                                       Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]             The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]        The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]        The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                       The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                       execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                 A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]               Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                       The default value is false.","* @param {errorOrResponse}    callback                                  `error` will contain information","*                                                                       if an error occurs; otherwise ","*                                                                       `response` will contain information related to this operation.","*/","BlobService.prototype._createBlock = function (blockId, container, blob, content, stream, length, options, callback) {","  var resourceName = createResourceName(container, blob);","","  var self = this;","  var startCreateBlock = function () {","    var webResource = WebResource.put(resourceName)","      .withQueryOption(QueryStringConstants.COMP, 'block')","      .withQueryOption(QueryStringConstants.BLOCK_ID, new Buffer(blockId).toString('base64'))","      .withHeader(HeaderConstants.CONTENT_LENGTH, length);","","    BlobResult.setHeadersFromBlob(webResource, options);","","    var processResponseCallback = function (responseObject, next) {","      var finalCallback = function (returnObject) {","        callback(returnObject.error, returnObject.response);","      };","","      next(responseObject, finalCallback);","    };","","    if (!azureutil.objectIsNull(content)) {","      self.performRequest(webResource, content, options, processResponseCallback);","    } else {","      self.performRequestOutputStream(webResource, stream, options, processResponseCallback);","    }","  }; ","  ","  if (azureutil.objectIsNull(options.transactionalContentMD5) && options.useTransactionalMD5) {","    if (!azureutil.objectIsNull(content)) {","      options.transactionalContentMD5 = azureutil.getContentMd5(content);","      startCreateBlock();","    } else {","      azureutil.calculateMD5(stream, length, options, function (internalBuff, contentMD5) {","        options.transactionalContentMD5 = contentMD5;","        content = internalBuff;","        length = internalBuff.length;","        startCreateBlock();","      });","    }","  } else {","    startCreateBlock();","  }","};","","/**","* Writes a blob by specifying the list of block IDs that make up the blob.","* In order to be written as part of a blob, a block must have been successfully written to the server in a prior","* createBlock operation.","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {object}             blockList                                     The block identifiers.","* @param {object}             [options]                                     The request options.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {string}             [options.leaseId]                             The target blob lease identifier.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                           the blob information.","*                                                                           `response` will contain information related to this operation.","*/","BlobService.prototype.commitBlocks = function (container, blob, blockList, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('commitBlocks', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var blockListXml = BlockListResult.serialize(blockList);","","  var resourceName = createResourceName(container, blob);","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.put(resourceName)","    .withQueryOption(QueryStringConstants.COMP, 'blocklist')","    .withHeader(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(blockListXml))","    .withBody(blockListXml);","","  BlobResult.setPropertiesFromBlob(webResource, options);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.blobResult = new BlobResult(container, blob);","    responseObject.blobResult.list = null;","    if (!responseObject.error) {","      responseObject.blobResult.getPropertiesFromHeaders(responseObject.response.headers);","      responseObject.blobResult.list = blockList;","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.blobResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, webResource.body, options, processResponseCallback);","};","","/**","* Retrieves the list of blocks that have been uploaded as part of a block blob.","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {BlockListFilter}    blocklisttype                               The type of block list to retrieve.","* @param {object}             [options]                                   The request options.","* @param {string}             [options.snapshotId]                        The source blob snapshot identifier.","* @param {string}             [options.leaseId]                           The target blob lease identifier.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `result` will contain","*                                                                         the blocklist information.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype.listBlocks = function (container, blob, blocklisttype, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('listBlocks', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var resourceName = createResourceName(container, blob);","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.get(resourceName)","    .withQueryOption(QueryStringConstants.COMP, 'blocklist')","    .withQueryOption(QueryStringConstants.BLOCK_LIST_TYPE, blocklisttype)","    .withQueryOption(QueryStringConstants.SNAPSHOT, options.snapshotId);","","  options.requestLocationMode = RequestLocationMode.PRIMARY_OR_SECONDARY;","","  var processResponseCallback = function (responseObject, next) {","    responseObject.blockListResult = null;","    if (!responseObject.error) {","      responseObject.blockListResult = BlockListResult.parse(responseObject.response.body.BlockList);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.blockListResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Generate a random block id prefix","*/","BlobService.prototype.generateBlockIdPrefix = function () {","  var prefix = Math.floor(Math.random() * 0x100000000).toString(16);","  return azureutil.zeroPaddingString(prefix, 8);","};","","/**","* Get a block id according to prefix and block number","*/","BlobService.prototype.getBlockId = function (prefix, number) {","  return prefix + '-' + azureutil.zeroPaddingString(number, 6);","};","","// Append blob methods","","/**","* Creates an empty append blob. If the blob already exists on the service, it will be overwritten.","* To avoid overwriting and instead throw an error if the blob exists, please pass in an accessConditions parameter in the options object.","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {object}             [options]                                     The request options.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {string}             [options.leaseId]                             The target blob lease identifier.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResponse}    callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise ","*                                                                           `response` will contain information related to this operation.","*/","BlobService.prototype.createOrReplaceAppendBlob = function (container, blob, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('createOrReplaceAppendBlob', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","  ","  var options = extend(true, {}, userOptions);","  ","  var resourceName = createResourceName(container, blob);","  ","  var webResource = WebResource.put(resourceName)","    .withHeader(HeaderConstants.BLOB_TYPE, BlobConstants.BlobTypes.APPEND)","    .withHeader(HeaderConstants.LEASE_ID, options.leaseId)","    .withHeader(HeaderConstants.CONTENT_LENGTH, 0);","","  BlobResult.setHeadersFromBlob(webResource, options);","  ","  var processResponseCallback = function (responseObject, next) {","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.response);","    };","    ","    next(responseObject, finalCallback);","  };","  ","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Creates a new append blob from a local file. If the blob already exists on the service, it will be overwritten.","* To avoid overwriting and instead throw an error if the blob exists, please pass in an accessConditions parameter in the options object.","* This API should be used strictly in a single writer scenario because the API internally uses the append-offset conditional header to avoid duplicate blocks.","* If you are guaranteed to have a single writer scenario, please look at options.absorbConditionalErrorsOnRetry and see if setting this flag to true is acceptable for you.","* If you want to append data to an already existing blob, please look at appendFromLocalFile.","* (Not recommended for use in the JavaScript Client Library)","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {string}             localFileName                                 The local path to the file to be uploaded.","* @param {object}             [options]                                     The request options.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]      Specifies whether to absorb the conditional error on retry.","* @param {string}             [options.leaseId]                             The lease identifier. ","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. The default value is true for block blobs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 ahash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                           the blob information.","*                                                                           `response` will contain information related to this operation.","* @return {SpeedSummary}","*/","BlobService.prototype.createAppendBlobFromLocalFile = function (container, blob, localFileName, optionsOrCallback, callback) {","  return this._createBlobFromLocalFile(container, blob, BlobConstants.BlobTypes.APPEND, localFileName, optionsOrCallback, callback);","};","","/**","* Uploads an append blob from a stream. If the blob already exists on the service, it will be overwritten.","* To avoid overwriting and instead throw an error if the blob exists, please pass in an accessConditions parameter in the options object.","* This API should be used strictly in a single writer scenario because the API internally uses the append-offset conditional header to avoid duplicate blocks.","* If you are guaranteed to have a single writer scenario, please look at options.absorbConditionalErrorsOnRetry and see if setting this flag to true is acceptable for you.","* If you want to append data to an already existing blob, please look at appendFromStream.","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param (Stream)             stream                                        Stream to the data to store.","* @param {int}                streamLength                                  The length of the stream to upload.","* @param {object}             [options]                                     The request options.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]      Specifies whether to absorb the conditional error on retry.","* @param {SpeedSummary}       [options.speedSummary]                        The download tracker objects.","* @param {string}             [options.leaseId]                             The lease identifier. ","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. The default value is true for block blobs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                           the blob information.","*                                                                           `response` will contain information related to this operation.","* @return {SpeedSummary}","*/","BlobService.prototype.createAppendBlobFromStream = function (container, blob, stream, streamLength, optionsOrCallback, callback) {","  return this._createBlobFromStream(container, blob, BlobConstants.BlobTypes.APPEND, stream, streamLength, optionsOrCallback, callback);","};","","/**","* Uploads an append blob from a text string. If the blob already exists on the service, it will be overwritten.","* To avoid overwriting and instead throw an error if the blob exists, please pass in an accessConditions parameter in the options object.","* This API should be used strictly in a single writer scenario because the API internally uses the append-offset conditional header to avoid duplicate blocks.","* If you are guaranteed to have a single writer scenario, please look at options.absorbConditionalErrorsOnRetry and see if setting this flag to true is acceptable for you.","* If you want to append data to an already existing blob, please look at appendFromText.","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {string|object}      text                                          The blob text, as a string or in a Buffer.","* @param {object}             [options]                                     The request options.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]      Specifies whether to absorb the conditional error on retry.","* @param {string}             [options.leaseId]                             The lease identifier. ","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. The default value is true for block blobs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                           the blob information.","*                                                                           `response` will contain information related to this operation.","*/","BlobService.prototype.createAppendBlobFromText = function (container, blob, text, optionsOrCallback, callback) {","  return this._createBlobFromText(container, blob, BlobConstants.BlobTypes.APPEND, text, optionsOrCallback, callback);","};","","/**","* Provides a stream to write to a new append blob. If the blob already exists on the service, it will be overwritten.","* To avoid overwriting and instead throw an error if the blob exists, please pass in an accessConditions parameter in the options object.","* This API should be used strictly in a single writer scenario because the API internally uses the append-offset conditional header to avoid duplicate blocks.","* If you are guaranteed to have a single writer scenario, please look at options.absorbConditionalErrorsOnRetry and see if setting this flag to true is acceptable for you.","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {object}             [options]                                     The request options.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]      Specifies whether to absorb the conditional error on retry.","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. ","*                                                                           The default value is false for page blobs and true for block blobs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResponse}    callback                                      The callback function.","* @return {Stream}","* @example","* var azure = require('azure-storage');","* var blobService = azure.createBlobService();","* var stream = fs.createReadStream(fileNameTarget).pipe(blobService.createWriteStreamToAppendBlob(containerName, blobName));","*/","BlobService.prototype.createWriteStreamToNewAppendBlob = function (container, blob, optionsOrCallback, callback) {","  return this._createWriteStreamToBlob(container, blob, BlobConstants.BlobTypes.APPEND, 0, true, optionsOrCallback, callback);","};","","/**","* Provides a stream to write to an existing append blob. Assumes that the blob exists. ","* If it does not, please create the blob using createAppendBlob before calling this method or use createWriteStreamToNewAppendBlob.","* This API should be used strictly in a single writer scenario because the API internally uses the append-offset conditional header to avoid duplicate blocks.","* If you are guaranteed to have a single writer scenario, please look at options.absorbConditionalErrorsOnRetry and see if setting this flag to true is acceptable for you.","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {object}             [options]                                     The request options.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]      Specifies whether to absorb the conditional error on retry.","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. ","*                                                                           The default value is false for page blobs and true for block blobs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResponse}    callback                                      The callback function.","* @return {Stream}","* @example","* var azure = require('azure-storage');","* var blobService = azure.createBlobService();","* var stream = fs.createReadStream(fileNameTarget).pipe(blobService.createWriteStreamToAppendBlob(containerName, blobName));","*/","BlobService.prototype.createWriteStreamToExistingAppendBlob = function (container, blob, optionsOrCallback, callback) {","  return this._createWriteStreamToBlob(container, blob, BlobConstants.BlobTypes.APPEND, 0, false, optionsOrCallback, callback);","};","","/**","* Appends to an append blob from a local file. Assumes the blob already exists on the service.","* This API should be used strictly in a single writer scenario because the API internally uses the append-offset conditional header to avoid duplicate blocks.","* If you are guaranteed to have a single writer scenario, please look at options.absorbConditionalErrorsOnRetry and see if setting this flag to true is acceptable for you.","* (Not recommended for use in the JavaScript Client Library)","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {string}             localFileName                                 The local path to the file to be uploaded.","* @param {object}             [options]                                     The request options.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]      Specifies whether to absorb the conditional error on retry.","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                           the blob information.","*                                                                           `response` will contain information related to this operation.","* @return {SpeedSummary}","*/","BlobService.prototype.appendFromLocalFile = function (container, blob, localFileName, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('appendFromLocalFile', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.string(localFileName, 'localFileName');","    v.callback(callback);","  });","  ","  var options = extend(true, {}, userOptions);  ","","  var self = this;","  fs.stat(localFileName, function (error, stat) {","    if (error) {","      callback(error);","    } else {","      var stream = new FileReadStream(localFileName, { calcContentMd5: options.storeBlobContentMD5 });","      var streamCallback = function (appendError, blob, response) {","        if (azureutil.objectIsFunction(stream.destroy)) {","          stream.destroy();","        }","        callback(appendError, blob, response);","      };","      self._uploadBlobFromStream(false, container, blob, BlobConstants.BlobTypes.APPEND, stream, stat.size, options, streamCallback);","    }","  });","  ","  return  options.speedSummary;","};","","/**","* Appends to an append blob from a stream. Assumes the blob already exists on the service.","* This API should be used strictly in a single writer scenario because the API internally uses the append-offset conditional header to avoid duplicate blocks.","* If you are guaranteed to have a single writer scenario, please look at options.absorbConditionalErrorsOnRetry and see if setting this flag to true is acceptable for you.","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param (Stream)             stream                                        Stream to the data to store.","* @param {int}                streamLength                                  The length of the stream to upload.","* @param {object}             [options]                                     The request options.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]      Specifies whether to absorb the conditional error on retry.","* @param {SpeedSummary}       [options.speedSummary]                        The download tracker objects.","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                           the blob information.","*                                                                           `response` will contain information related to this operation.","* @return {SpeedSummary}","*/","BlobService.prototype.appendFromStream = function (container, blob, stream, streamLength, optionsOrCallback, callback) {","  var options;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { options = o; callback = c; });","  ","  validate.validateArgs('appendFromStream', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.exists(stream, 'stream');","    v.value(streamLength, 'streamLength');","    v.callback(callback);","  });","","  return this._uploadBlobFromStream(false, container, blob, BlobConstants.BlobTypes.APPEND, stream, streamLength, options, callback);","};","","/**","* Appends to an append blob from a text string. Assumes the blob already exists on the service.","* This API should be used strictly in a single writer scenario because the API internally uses the append-offset conditional header to avoid duplicate blocks.","* If you are guaranteed to have a single writer scenario, please look at options.absorbConditionalErrorsOnRetry and see if setting this flag to true is acceptable for you.","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {string|object}      text                                          The blob text, as a string or in a Buffer.","* @param {object}             [options]                                     The request options.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]      Specifies whether to absorb the conditional error on retry.","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. The default value is true for block blobs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                           the blob information.","*                                                                           `response` will contain information related to this operation.","*/","BlobService.prototype.appendFromText = function (container, blob, text, optionsOrCallback, callback) {","  return this._uploadBlobFromText(false, container, blob, BlobConstants.BlobTypes.APPEND, text, optionsOrCallback, callback);","};","","","/**","* Creates a new block from a read stream to be appended to an append blob.","* This API should be used strictly in a single writer scenario because the API internally uses the append-offset conditional header to avoid duplicate blocks.","* If you are guaranteed to have a single writer scenario, please look at options.absorbConditionalErrorsOnRetry and see if setting this flag to true is acceptable for you.","*","* @this {BlobService}","* @param {string}             container                                 The container name.","* @param {string}             blob                                      The blob name.","* @param {Stream}             readStream                                The read stream.","* @param {int}                streamLength                              The stream length.","* @param {object}             [options]                                 The request options.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]  Specifies whether to absorb the conditional error on retry.","* @param {int}                [options.maxBlobSize]                     The max length in bytes allowed for the append blob to grow to.","* @param {int}                [options.appendPosition]                  The number indicating the byte offset to check for. The append will succeed only if the end position of the blob is equal to this number.","* @param {string}             [options.leaseId]                         The target blob lease identifier.","* @param {string}             [options.transactionalContentMD5]         An MD5 hash of the block content. This hash is used to verify the integrity of the block during transport.","* @param {AccessConditions}   [options.accessConditions]                The access conditions.","* @param {LocationMode}       [options.locationMode]                    Specifies the location mode used to decide which location the request should be sent to. ","*                                                                       Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]             The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]        The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]        The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                       The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                       execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                 A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]               Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                       The default value is false.","* @param {errorOrResult}      callback                                  `error` will contain information","*                                                                      if an error occurs; otherwise `[result]{@link BlobResult}` will contain","*                                                                      the blob information.","*                                                                      `response` will contain information related to this operation.","*/","BlobService.prototype.appendBlockFromStream = function (container, blob, readStream, streamLength, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('appendBlockFromStream', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.exists(readStream, 'readStream');","    v.value(streamLength, 'streamLength');","    v.callback(callback);","  });","  ","  var options = extend(true, {}, userOptions);","  ","  if (streamLength > BlobConstants.MAX_APPEND_BLOB_BLOCK_SIZE) {","    throw new RangeError(SR.INVALID_STREAM_LENGTH);","  } else {","    this._appendBlock(container, blob, null, readStream, streamLength, options, callback);","  }","};","","/**","* Creates a new block from a text to be appended to an append blob.","* This API should be used strictly in a single writer scenario because the API internally uses the append-offset conditional header to avoid duplicate blocks.","* If you are guaranteed to have a single writer scenario, please look at options.absorbConditionalErrorsOnRetry and see if setting this flag to true is acceptable for you.","*","* @this {BlobService}","* @param {string}             container                                 The container name.","* @param {string}             blob                                      The blob name.","* @param {string|object}      content                                   The block text, as a string or in a Buffer.","* @param {object}             [options]                                 The request options.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]  Specifies whether to absorb the conditional error on retry.","* @param {int}                [options.maxBlobSize]                     The max length in bytes allowed for the append blob to grow to.","* @param {int}                [options.appendPosition]                  The number indicating the byte offset to check for. The append will succeed only if the end position of the blob is equal to this number.","* @param {string}             [options.leaseId]                         The target blob lease identifier.","* @param {string}             [options.transactionalContentMD5]         An MD5 hash of the block content. This hash is used to verify the integrity of the block during transport.","* @param {AccessConditions}   [options.accessConditions]                The access conditions.","* @param {LocationMode}       [options.locationMode]                    Specifies the location mode used to decide which location the request should be sent to. ","*                                                                       Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]             The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]        The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]        The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                       The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                       execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                 A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]               Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                       The default value is false.","* @param {errorOrResponse}    callback                                  `error` will contain information","*                                                                       if an error occurs; otherwise ","*                                                                       `response` will contain information related to this operation.","*/","BlobService.prototype.appendBlockFromText = function (container, blob, content, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('appendBlockFromText', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var contentLength = (Buffer.isBuffer(content) ? content.length : Buffer.byteLength(content));","  if (contentLength > BlobConstants.MAX_APPEND_BLOB_BLOCK_SIZE) {","    throw new RangeError(SR.INVALID_TEXT_LENGTH);","  } else {","    this._appendBlock(container, blob, content, null, contentLength, options, callback);","  }","};","","// Private methods","","/**","* Creates a new blob (Block/Page/Append). If the blob already exists on the service, it will be overwritten.","* To avoid overwriting and instead throw an error if the blob exists, please pass in an accessConditions parameter in the options object.","*","* @ignore","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {BlobType}           blobType                                      The blob type.","* @param {string}             localFileName                                 The local path to the file to be uploaded.","* @param {object}             [options]                                     The request options.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]      Specifies whether to absorb the conditional error on retry. (For append blob only)","* @param {int}                [options.blockSize]                           The size of each block. Maximum is 100MB.","* @param {string}             [options.blockIdPrefix]                       The prefix to be used to generate the block id. (For block blob only)","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {string}             [options.transactionalContentMD5]             An MD5 hash of the blob content. This hash is used to verify the integrity of the blob during transport.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {int}                [options.parallelOperationThreadCount]        Parallel operation thread count.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. The default value is true for block blobs.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The MD5 hash of the blob content.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      The callback function.","*","* @return {SpeedSummary}","*","*/","BlobService.prototype._createBlobFromLocalFile = function (container, blob, blobType, localFileName, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('_createBlobFromLocalFile', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.blobTypeIsValid(blobType);","    v.string(localFileName, 'localFileName');","    v.callback(callback);","  });","  ","  var options = extend(true, {}, userOptions);","  options.speedSummary = options.speedSummary || new SpeedSummary(blob);","","  var self = this;","  var size = 0;","  ","  var creationCallback = function (createError, createBlob, createResponse) {","    if (createError) {","      callback(createError, createBlob, createResponse);","    } else {","      // Automatically detect the mime type","      if(azureutil.tryGetValueChain(options, ['contentSettings','contentType'], undefined) === undefined) {","        azureutil.setObjectInnerPropertyValue(options, ['contentSettings','contentType'], mime.lookup(localFileName));","      }","","      var stream = new FileReadStream(localFileName, { calcContentMd5: options.storeBlobContentMD5 });","      var streamCallback = function (createError, createBlob, createResponse) {","        if (azureutil.objectIsFunction(stream.destroy)) {","          stream.destroy();","        }","        callback(createError, createBlob, createResponse);","      };","      self._uploadBlobFromStream(true, container, blob, blobType, stream, size, options, streamCallback);","    }","  };","","  // Check the file size to determine the upload method: single request or chunks","  fs.stat(localFileName, function (error, stat) {","    if (error) {","      callback(error);","    } else {","      size = stat.size;","      self._createBlob(container, blob, blobType, size, options, creationCallback);","    }","  });","  ","  return options.speedSummary;","};","","/**","* Creates a new blob from a stream. If the blob already exists on the service, it will be overwritten.","* To avoid overwriting and instead throw an error if the blob exists, please pass in an accessConditions parameter in the options object.","*","* @ignore","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {BlobType}           blobType                                      The blob type.","* @param (Stream)             stream                                        Stream to the data to store.","* @param {int}                streamLength                                  The length of the stream to upload.","* @param {object}             [options]                                     The request options.","* @param {SpeedSummary}       [options.speedSummary]                        The upload tracker objects.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]      Specifies whether to absorb the conditional error on retry. (For append blob only)","* @param {string}             [options.blockIdPrefix]                       The prefix to be used to generate the block id. (For block blob only)","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {string}             [options.transactionalContentMD5]             The MD5 hash of the blob content. This hash is used to verify the integrity of the blob during transport.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {int}                [options.parallelOperationThreadCount]        Parallel operation thread count.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. The default value is true for block blobs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      The callback function.","* @return {SpeedSummary}","*/","BlobService.prototype._createBlobFromStream = function (container, blob, blobType, stream, streamLength, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('_createBlobFromStream', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.blobTypeIsValid(blobType);","    v.exists(stream, 'stream');","    v.value(streamLength, 'streamLength');","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  var self = this;","  var creationCallback = function (createError, createBlob, createResponse) {","    if (createError) {","      callback(createError, createBlob, createResponse);","    } else {","      self._uploadBlobFromStream(true, container, blob, blobType, stream, streamLength, options, callback);","    }","  };  ","","  this._createBlob(container, blob, blobType, streamLength, options, creationCallback);","","  return options.speedSummary;","};","","/**","* Uploads a block blob or an append blob from a text string. If the blob already exists on the service, it will be overwritten.","* To avoid overwriting and instead throw an error if the blob exists, please pass in an accessConditions parameter in the options object.","*","* @ignore","* ","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {BlobType}           blobType                                      The blob type.","* @param {string|buffer}      content                                       The blob text, as a string or in a Buffer.","* @param {object}             [options]                                     The request options.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]      Specifies whether to absorb the conditional error on retry. (For append blob only)","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {string}             [options.transactionalContentMD5]             The MD5 hash of the blob content. This hash is used to verify the integrity of the blob during transport.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. The default value is true for block blobs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `result` will contain","*                                                                           information about the blob.","*                                                                           `response` will contain information related to this operation.","*/","BlobService.prototype._createBlobFromText = function (container, blob, blobType, content, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('_createBlobFromText', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.blobTypeIsValid(blobType);","    v.callback(callback);","  });","  ","  var options = extend(true, {}, userOptions);","","  var self = this;","  var creationCallback = function (createError, createBlob, createResponse) {","    if (createError) {","      callback(createError, createBlob, createResponse);","    } else {","      self._uploadBlobFromText(true, container, blob, blobType, content, options, callback);","    }","  };","","  var contentLength = azureutil.objectIsNull(content) ? 0 : ((Buffer.isBuffer(content) ? content.length : Buffer.byteLength(content)));","  this._createBlob(container, blob, blobType, contentLength, options, creationCallback);","","  return options.speedSummary; ","};","","/**","* Provides a stream to write to a block blob or an append blob.","*","* @ignore","* ","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {BlobType}           blobType                                      The blob type.","* @param {int}                length                                        The blob length.","* @param {bool}               createNewBlob                                 Specifies whether create a new blob.","* @param {object}             [options]                                     The request options.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]      Specifies whether to absorb the conditional error on retry. (For append blob only)","* @param {string}             [options.blockSize]                           The size of each block. Maximum is 100MB. (For block blob only)","* @param {string}             [options.blockIdPrefix]                       The prefix to be used to generate the block id. (For block blob only)","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {string}             [options.transactionalContentMD5]             The MD5 hash of the blob content. This hash is used to verify the integrity of the blob during transport.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {int}                [options.parallelOperationThreadCount]        Parallel operation thread count.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. ","*                                                                           The default value is false for page blobs and true for block blobs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResponse}    callback                                      The callback function.","* @return {Stream}","*/","BlobService.prototype._createWriteStreamToBlob = function (container, blob, blobType, length, createNewBlob, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('_createWriteStreamToBlob', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.blobTypeIsValid(blobType);","  });","","  var options = extend(true, {}, userOptions);","  ","  var sizeLimitation;","  if (blobType === BlobConstants.BlobTypes.BLOCK) {","    // default to true, unless explicitly set to false","    options.storeBlobContentMD5 = options.storeBlobContentMD5 === false ? false : true;","    sizeLimitation = options.blockSize || BlobConstants.DEFAULT_WRITE_BLOCK_SIZE_IN_BYTES;","  } else if (blobType == BlobConstants.BlobTypes.PAGE) {","    sizeLimitation = BlobConstants.DEFAULT_WRITE_PAGE_SIZE_IN_BYTES;","  } else if (blobType == BlobConstants.BlobTypes.APPEND) {","    sizeLimitation = BlobConstants.DEFAULT_WRITE_BLOCK_SIZE_IN_BYTES;","  }","  ","  var stream = new ChunkStream({ calcContentMd5: options.storeBlobContentMD5 });","  stream._highWaterMark = sizeLimitation;","","  stream.pause(); //Immediately pause the stream in order to wait for the destination to getting ready","","  var self = this;","  var createCallback = function (createError, createBlob, createResponse) {","    if (createError) {","      if (callback) {","        callback(createError, createBlob, createResponse);","      }","    } else {","      self._uploadBlobFromStream(createNewBlob, container, blob, blobType, stream, null, options, function (error, blob, response) {","        if (error) {","          stream.emit('error', error);","        }","        ","        if (callback) {","          callback(error, blob, response);","        }","      });","    }","  };","","  if (createNewBlob === true) {","    this._createBlob(container, blob, blobType, length, options, createCallback);","  } else {","    createCallback();","  }","  ","  return stream;","};","","/**","* Upload blob content from a stream. Assumes the blob already exists.","*","* @ignore","*","* @this {BlobService}","* @param {bool}               isNewBlob                                     Specifies whether the blob is newly created.","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {BlobType}           blobType                                      The blob type.","* @param (Stream)             stream                                        Stream to the data to store.","* @param {int}                streamLength                                  The length of the stream to upload.","* @param {object}             [options]                                     The request options.","* @param {SpeedSummary}       [options.speedSummary]                        The upload tracker objects.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]      Specifies whether to absorb the conditional error on retry. (For append blob only)","* @param {string}             [options.blockIdPrefix]                       The prefix to be used to generate the block id. (For block blob only)","* @param {int}                [options.blockSize]                           The size of each block. Maximum is 100MB. (For block blob only)","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {string}             [options.transactionalContentMD5]             The MD5 hash of the blob content. This hash is used to verify the integrity of the blob during transport.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {int}                [options.parallelOperationThreadCount]        Parallel operation thread count.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. The default value is true for block blobs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      The callback function.","* @return {SpeedSummary}","*/","BlobService.prototype._uploadBlobFromStream = function (isNewBlob, container, blob, blobType, stream, streamLength, optionsOrCallback, callback) {","  var options;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { options = o; callback = c; });","  options.speedSummary = options.speedSummary || new SpeedSummary(blob);","","  if (blobType === BlobConstants.BlobTypes.BLOCK) {","    // default to true, unless explicitly set to false","    options.storeBlobContentMD5 = options.storeBlobContentMD5 === false ? false : true;","  }","","  stream.pause();","","  var self = this;","  var startUpload = function () {","    var putBlockBlobFromStream = function () {","      var finalCallback = function (error, result, response) {","        if (error) {","          callback(error, result, response);","        } else {","          callback(error, result, response);","        }","      };","","      if (streamLength > 0 && azureutil.objectIsNull(azureutil.tryGetValueChain(options, ['contentSettings', 'contentMD5'], null)) && options.storeBlobContentMD5) {","        azureutil.calculateMD5(stream, Math.min(self.singleBlobPutThresholdInBytes, streamLength), options, function (internalBuff, contentMD5) {","          azureutil.setObjectInnerPropertyValue(options, ['contentSettings', 'contentMD5'], contentMD5);","          self._putBlockBlob(container, blob, internalBuff, null, internalBuff.length, options, finalCallback);","        });","        stream.resume();","      } else {","        // Stream will resume when it has a pipe destination or a 'data' listener","        self._putBlockBlob(container, blob, null, stream, streamLength, options, finalCallback);","      }","    };","","    if (streamLength === null || streamLength >= self.singleBlobPutThresholdInBytes || blobType !== BlobConstants.BlobTypes.BLOCK) {","      var chunkStream = new ChunkStreamWithStream(stream, { calcContentMd5: options.storeBlobContentMD5 });","      self._uploadContentFromChunkStream(container, blob, blobType, chunkStream, streamLength, options, callback);","    } else {","      putBlockBlobFromStream();","    }","  };","","  if (!isNewBlob) {","    if (options.storeBlobContentMD5 && blobType !== BlobConstants.BlobTypes.BLOCK ) {","      throw new Error(SR.MD5_NOT_POSSIBLE);","    }","","    if (blobType === BlobConstants.BlobTypes.APPEND || options.accessConditions) {","      // Do a getBlobProperties right at the beginning for existing blobs and use the user passed in access conditions. ","      // So any pre-condition failure on the first block (in a strictly single writer scenario) is caught.","      // This call also helps us get the append position to append to if the user hasn’t specified an access condition.","      this.getBlobProperties(container, blob, options, function (error, properties, response) {","        if (error && !(options.accessConditions && options.accessConditions.EtagNonMatch === '*' && response.statusCode === 400)) {","          callback(error);","        } else {","          if (blobType === BlobConstants.BlobTypes.APPEND) {","            options.appendPosition = properties.contentLength;","          }","","          startUpload();","        }","      });","    } else {","      startUpload();","    }","  } else {","    startUpload();","  }","","  return  options.speedSummary;","};","","/**","* Upload blob content from a text. Assumes the blob already exists.","*","* @ignore","*","* @this {BlobService}","* @param {bool}               isNewBlob                                     Specifies whether the blob is newly created.","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {BlobType}           blobType                                      The blob type.","* @param (string)             content                                       The blob text, as a string or in a Buffer.","* @param {object}             [options]                                     The request options.","* @param {SpeedSummary}       [options.speedSummary]                        The upload tracker objects.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]      Specifies whether to absorb the conditional error on retry. (For append blob only)","* @param {string}             [options.blockIdPrefix]                       The prefix to be used to generate the block id. (For block blob only)","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {string}             [options.transactionalContentMD5]             The MD5 hash of the blob content. This hash is used to verify the integrity of the blob during transport.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {int}                [options.parallelOperationThreadCount]        Parallel operation thread count.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. The default value is true for block blobs.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      The callback function.","* @return {SpeedSummary}","*/","BlobService.prototype._uploadBlobFromText = function (isNewBlob, container, blob, blobType, content, optionsOrCallback, callback) {","  var options;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { options = o; callback = c; });","  options.speedSummary = options.speedSummary || new SpeedSummary(blob);","  options[HeaderConstants.CONTENT_TYPE] = (options.contentSettings && options.contentSettings.contentType) || 'text/plain;charset=\"utf-8\"';","","  var self = this;","  var startUpload = function () {","    var operationFunc;","    var length = azureutil.objectIsNull(content) ? 0 : (Buffer.isBuffer(content) ? content.length : Buffer.byteLength(content));","","    if (blobType === BlobConstants.BlobTypes.BLOCK) {","      // default to true, unless explicitly set to false","      options.storeBlobContentMD5 = options.storeBlobContentMD5 === false ? false : true;","      operationFunc = self._putBlockBlob;","","      if (length > BlobConstants.MAX_SINGLE_UPLOAD_BLOB_SIZE_IN_BYTES) {","        throw new RangeError(SR.INVALID_BLOB_LENGTH);","      }","    } else if (blobType === BlobConstants.BlobTypes.APPEND) {","      operationFunc = self._appendBlock;","","      if (length > BlobConstants.MAX_APPEND_BLOB_BLOCK_SIZE) {","        throw new RangeError(SR.INVALID_TEXT_LENGTH);","      }","    }","","    var finalCallback = function (error, blobResult, response) {","      if (blobType !== BlobConstants.BlobTypes.BLOCK) {","        self.setBlobProperties(container, blob, options.contentSettings, function (error, blob, response) {","          blob = extend(false, blob, blobResult);","          callback(error, blob, response);","        });","      } else {","        callback(error, blobResult, response);","      }","    };","","    operationFunc.call(self, container, blob, content, null, length, options, finalCallback);","  };","","  if (!isNewBlob) {","    if (options.storeBlobContentMD5 && blobType !== BlobConstants.BlobTypes.BLOCK ) {","      throw new Error(SR.MD5_NOT_POSSIBLE);","    }","","    if (blobType === BlobConstants.BlobTypes.APPEND || options.accessConditions) {","      // Do a getBlobProperties right at the beginning for existing blobs and use the user passed in access conditions. ","      // So any pre-condition failure on the first block (in a strictly single writer scenario) is caught.","      // This call also helps us get the append position to append to if the user hasn’t specified an access condition.","      this.getBlobProperties(container, blob, options, function (error, properties) {","        if (error) {","          callback(error);","        } else {","          if (blobType === BlobConstants.BlobTypes.APPEND) {","            options.appendPosition = properties.contentLength;","          }","","          startUpload();","        }","      });","    }    ","  } else {","    if (!azureutil.objectIsNull(content) && azureutil.objectIsNull(azureutil.tryGetValueChain(options, ['contentSettings', 'contentMD5'], null)) && options.storeBlobContentMD5) {","      azureutil.setObjectInnerPropertyValue(options, ['contentSettings', 'contentMD5'], azureutil.getContentMd5(content));","    }","    startUpload();","  } ","};","","/**","* Uploads a block blob from a stream.","* @ignore","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {string}             text                                          The blob text.","* @param (Stream)             stream                                        Stream to the data to store.","* @param {int}                length                                        The length of the stream or text to upload.","* @param {object}             [options]                                     The request options.","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {string}             [options.transactionalContentMD5]             The MD5 hash of the blob content. This hash is used to verify the integrity of the blob during transport.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads. The default value is true for block blobs.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `result` will contain","*                                                                           information about the blob.","*                                                                           `response` will contain information related to this operation.","*/","BlobService.prototype._putBlockBlob = function (container, blob, text, stream, length, options, callback) {","  if (!options.speedSummary) {","    options.speedSummary = new SpeedSummary(blob);","  }","","  var speedSummary = options.speedSummary;","  speedSummary.totalSize = length;","","  var resourceName = createResourceName(container, blob);","  var webResource = WebResource.put(resourceName)","    .withHeader(HeaderConstants.CONTENT_TYPE, 'application/octet-stream')","    .withHeader(HeaderConstants.BLOB_TYPE, BlobConstants.BlobTypes.BLOCK)","    .withHeader(HeaderConstants.CONTENT_LENGTH, length);","","  if (!azureutil.objectIsNull(text) && azureutil.objectIsNull(options.transactionalContentMD5) && options.useTransactionalMD5) {","    options.transactionalContentMD5 = azureutil.getContentMd5(text);","  }","","  BlobResult.setHeadersFromBlob(webResource, options);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.blobResult = null;","    if (!responseObject.error) {","      responseObject.blobResult = new BlobResult(container, blob);","      responseObject.blobResult.getPropertiesFromHeaders(responseObject.response.headers);","      if (options.metadata) {","        responseObject.blobResult.metadata = options.metadata;","      }","    }","","    var finalCallback = function (returnObject) {","      if (!returnObject || !returnObject.error) {","        speedSummary.increment(length);","      }","      callback(returnObject.error, returnObject.blobResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  if (!azureutil.objectIsNull(text)) {","    this.performRequest(webResource, text, options, processResponseCallback);","  } else {","    this.performRequestOutputStream(webResource, stream, options, processResponseCallback);","  }","","  return options.speedSummary;","};","","/**","* Appends a new block to an append blob.","* ","* @ignore","*","* @this {BlobService}","* @param {string}             container                                 The container name.","* @param {string}             blob                                      The blob name.","* @param {string|buffer}      content                                   The block content.","* @param (Stream)             stream                                    The stream to the data to store.","* @param {int}                length                                    The length of the stream or content to upload.","* @param {object}             [options]                                 The request options.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]  Specifies whether to absorb the conditional error on retry.","* @param {int}                [options.maxBlobSize]                     The max length in bytes allowed for the append blob to grow to.","* @param {int}                [options.appendPosition]                  The number indicating the byte offset to check for. The append will succeed only if the end position of the blob is equal to this number.","* @param {string}             [options.leaseId]                         The target blob lease identifier.","* @param {string}             [options.transactionalContentMD5]         The blob’s MD5 hash. This hash is used to verify the integrity of the blob during transport.","* @param {bool}               [options.useTransactionalMD5]             Calculate and send/validate content MD5 for transactions.","* @param {AccessConditions}   [options.accessConditions]                The access conditions.","* @param {LocationMode}       [options.locationMode]                    Specifies the location mode used to decide which location the request should be sent to. ","*                                                                       Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]             The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]        The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]        The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                       The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                       execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                 A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]               Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                       The default value is false.","* @param {errorOrResponse}    callback                                  `error` will contain information","*                                                                       if an error occurs; otherwise ","*                                                                       `response` will contain information related to this operation.","*/","BlobService.prototype._appendBlock = function (container, blob, content, stream, length, options, callback) {","  var speedSummary = options.speedSummary || new SpeedSummary(blob);","  speedSummary.totalSize = length;","","  var self = this;","  var startAppendBlock = function () {","    var resourceName = createResourceName(container, blob);","  ","    var webResource = WebResource.put(resourceName)","      .withQueryOption(QueryStringConstants.COMP, 'appendblock')","      .withHeader(HeaderConstants.CONTENT_LENGTH, length)","      .withHeader(HeaderConstants.BLOB_CONDITION_MAX_SIZE, options.maxBlobSize)","      .withHeader(HeaderConstants.BLOB_CONDITION_APPEND_POSITION, options.appendPosition);","","    BlobResult.setHeadersFromBlob(webResource, options);","","    var processResponseCallback = function (responseObject, next) {","      responseObject.blobResult = null;","      if (!responseObject.error) {","        responseObject.blobResult = new BlobResult(container, blob);","        responseObject.blobResult.getPropertiesFromHeaders(responseObject.response.headers);","      }","      ","      var finalCallback = function (returnObject) {","        if (!returnObject || !returnObject.error) {","          speedSummary.increment(length);","        }","        callback(returnObject.error, returnObject.blobResult, returnObject.response);","      };","      ","      next(responseObject, finalCallback);","    };","","    if (!azureutil.objectIsNull(content)) {","      self.performRequest(webResource, content, options, processResponseCallback);","    } else {","      self.performRequestOutputStream(webResource, stream, options, processResponseCallback);","    }","  };","","  if (azureutil.objectIsNull(options.transactionalContentMD5) && options.useTransactionalMD5) {","    if (!azureutil.objectIsNull(content)) {","      options.transactionalContentMD5 = azureutil.getContentMd5(content);","      startAppendBlock();","    } else {","      azureutil.calculateMD5(stream, length, options, function (internalBuff, contentMD5) {","        options.transactionalContentMD5 = contentMD5;","        content = internalBuff;","        length = internalBuff.length;","        startAppendBlock();","      });","    }","  } else {","    startAppendBlock();","  }","  ","  return options.speedSummary;","};","","/**","* Creates and dispatches lease requests.","* @ignore","* ","* @this {BlobService}","* @param {object}             webResource                             The web resource.","* @param {string}             container                               The container name.","* @param {string}             blob                                    The blob name.","* @param {string}             leaseId                                 The lease identifier. Required to renew, change or release the lease.","* @param {string}             leaseAction                             The lease action (BlobConstants.LeaseOperation.*). Required.","* @param {object}             userOptions                             The request options.","* @param {int}                [userOptions.leaseBreakPeriod]          The lease break period.","* @param {string}             [userOptions.leaseDuration]             The lease duration. Default is never to expire.","* @param {string}             [userOptions.proposedLeaseId]           The proposed lease identifier. This is required for the CHANGE lease action.","* @param {LocationMode}       [userOptions.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {AccessConditions}   [options.accessConditions]              The access conditions.","* @param {int}                [userOptions.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [userOptions.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {Function(error, lease, response)}  callback                 `error` will contain information","*                                                                     if an error occurs; otherwise `lease` will contain","*                                                                     the lease information.","*                                                                     `response` will contain information related to this operation.","*/","BlobService.prototype._leaseImpl = function (container, blob, leaseId, leaseAction, options, callback) {","  var webResource;","  if (!azureutil.objectIsNull(blob)) {","    validate.validateArgs('_leaseImpl', function (v) {","      v.string(blob, 'blob');","    });","    var resourceName = createResourceName(container, blob);","    webResource = WebResource.put(resourceName);","  } else {","    webResource = WebResource.put(container)","      .withQueryOption(QueryStringConstants.RESTYPE, 'container');","  }","","  webResource.withQueryOption(QueryStringConstants.COMP, 'lease')","    .withHeader(HeaderConstants.LEASE_ID, leaseId)","    .withHeader(HeaderConstants.LEASE_ACTION, leaseAction.toLowerCase())","    .withHeader(HeaderConstants.LEASE_BREAK_PERIOD, options.leaseBreakPeriod)","    .withHeader(HeaderConstants.PROPOSED_LEASE_ID, options.proposedLeaseId)","    .withHeader(HeaderConstants.LEASE_DURATION, options.leaseDuration);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.leaseResult = null;","    if (!responseObject.error) {","      responseObject.leaseResult = new LeaseResult(container, blob);","      responseObject.leaseResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.leaseResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Updates a page blob from text.","* @ignore","*","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {string}             text                                        The text string.","* @param {Stream}             readStream                                  The read stream.","* @param {int}                rangeStart                                  The range start.","* @param {int}                rangeEnd                                    The range end.","* @param {object}             [options]                                   The request options.","* @param {string}             [options.leaseId]                           The target blob lease identifier.","* @param {string}             [options.transactionalContentMD5]           An MD5 hash of the page content. This hash is used to verify the integrity of the page during transport. ","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {Function(error, pageBlob, response)}  callback                  `error` will contain information","*                                                                         if an error occurs; otherwise `pageBlob` will contain","*                                                                         the blob information.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype._createPages = function (container, blob, text, readStream, rangeStart, rangeEnd, options, callback) {","  var request = this._updatePageBlobPagesImpl(container, blob, rangeStart, rangeEnd, BlobConstants.PageWriteOptions.UPDATE, options);","","  // At this point, we have already validated that the range is less than 4MB. Therefore, we just need to calculate the contentMD5 if required.","  // Even when this is called from the createPagesFromStream method, it is pre-buffered and called with text.","  if (!azureutil.objectIsNull(text) && azureutil.objectIsNull(options.transactionalContentMD5) && options.useTransactionalMD5) {","    request.withHeader(HeaderConstants.CONTENT_MD5, azureutil.getContentMd5(text));","  }","","  var processResponseCallback = function (responseObject, next) {","    responseObject.blobResult = null;","    if (!responseObject.error) {","      responseObject.blobResult = new BlobResult(container, blob);","      responseObject.blobResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.blobResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  if (!azureutil.objectIsNull(text)) {","    this.performRequest(request, text, options, processResponseCallback);","  } else {","    this.performRequestOutputStream(request, readStream, options, processResponseCallback);","  }","};","","/**","* @ignore","*/","BlobService.prototype._updatePageBlobPagesImpl = function (container, blob, rangeStart, rangeEnd, writeMethod, options) {","  if (rangeStart && rangeStart % BlobConstants.PAGE_SIZE !== 0) {","    throw new RangeError(SR.INVALID_PAGE_START_OFFSET);","  }","","  if (rangeEnd && (rangeEnd + 1) % BlobConstants.PAGE_SIZE !== 0) {","    throw new RangeError(SR.INVALID_PAGE_END_OFFSET);","  }","","  // this is necessary if this is called from _uploadContentFromChunkStream->_createPages","  if (!options) {","    options = {};","  }","","  options.rangeStart = rangeStart;","  options.rangeEnd = rangeEnd;","","  options.contentLength = writeMethod === BlobConstants.PageWriteOptions.UPDATE ? (rangeEnd - rangeStart) + 1 : 0;","","  var resourceName = createResourceName(container, blob);","  var webResource = WebResource.put(resourceName)","      .withQueryOption(QueryStringConstants.COMP, 'page')","      .withHeader(HeaderConstants.CONTENT_TYPE, 'application/octet-stream')","      .withHeader(HeaderConstants.PAGE_WRITE, writeMethod);","  ","  BlobResult.setHeadersFromBlob(webResource, options);","","  return webResource;","};","","/**","* Uploads blob content from a stream.","* For block blob, it creates a new block to be committed.","* For page blob, it writes a range of pages.","* For append blob, it appends a new block.","*","* @ignore","*","* @this {BlobService}","* @param {string}             container                                     The container name.","* @param {string}             blob                                          The blob name.","* @param {string}             blobType                                      The blob type.","* @param (Stream)             stream                                        Stream to the data to store.","* @param {int}                streamLength                                  The length of the stream to upload.","* @param {object|function}    [options]                                     The request options.","* @param {SpeedSummary}       [options.speedSummary]                        The download tracker objects;","* @param {int}                [options.parallelOperationThreadCount]        Parallel operation thread count.","* @param {bool}               [options.absorbConditionalErrorsOnRetry]      Specifies whether to absorb the conditional error on retry. (For append blob only)","* @param {int}                [options.maxBlobSize]                         The max length in bytes allowed for the append blob to grow to.","* @param {int}                [options.appendPosition]                      The number indicating the byte offset to check for. The append will succeed only if the end position of the blob is equal to this number.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {string}             [options.blockIdPrefix]                       The prefix to be used to generate the block id. (For block blob only)","* @param {int}                [options.blockSize]                           The size of each block. Maximum is 100MB. (For block blob only)","* @param {string}             [options.leaseId]                             The lease identifier.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {bool}               [options.storeBlobContentMD5]                 Specifies whether the blob's ContentMD5 header should be set on uploads.","* @param {object}             [options.contentSettings]                     The content settings of the blob.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the blob. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the blob.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The Blob service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The blob's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The blob's MD5 hash.","* @param {AccessConditions}   [options.accessConditions]                    The access conditions.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {function(error, null)}  callback                                  The callback function.","* @return {SpeedSummary}","*/","","BlobService.prototype._uploadContentFromChunkStream = function (container, blob, blobType, chunkStream, streamLength, options, callback) {","  this.logger.debug(util.format('_uploadContentFromChunkStream for blob %s', blob));","","  var apiName;","  var isBlockBlobUpload;","  var isPageBlobUpload;","  var isAppendBlobUpload;","  var sizeLimitation;","  var originalContentMD5 = azureutil.tryGetValueChain(options, ['contentSettings', 'contentMD5'], null);","  var parallelOperationThreadCount = options.parallelOperationThreadCount || this.parallelOperationThreadCount;","","  if (blobType == BlobConstants.BlobTypes.BLOCK) {","    apiName = 'createBlockFromText';","    isBlockBlobUpload = true;","","    // BlockBlob can only have 50000 blocks in maximum","    var minBlockSize = Math.ceil(streamLength / 50000);","    if (options.blockSize) {","      if (options.blockSize < minBlockSize) {","        // options.blockSize is less than the minBlockSize, error callback        ","        var error = new ArgumentError('options.blockSize', util.format('The minimum blockSize is %s and the provided blockSize %s is too small.', minBlockSize, options.blockSize));","        callback(error);","        return;","      } else {","        sizeLimitation = options.blockSize;","      }","    } else {","      // 4MB minimum for auto-calculated block size","      sizeLimitation = Math.max(minBlockSize, BlobConstants.DEFAULT_WRITE_BLOCK_SIZE_IN_BYTES);","    }","  } else if (blobType == BlobConstants.BlobTypes.PAGE) {","    apiName = '_createPages';","    isPageBlobUpload = true;","    sizeLimitation = BlobConstants.DEFAULT_WRITE_PAGE_SIZE_IN_BYTES;","  } else if (blobType == BlobConstants.BlobTypes.APPEND) {","    apiName = 'appendBlockFromText';","    isAppendBlobUpload = true;","    parallelOperationThreadCount = 1;","    sizeLimitation = BlobConstants.DEFAULT_WRITE_BLOCK_SIZE_IN_BYTES;","  } else {","    var error = new ArgumentError('blobType', util.format('Unknown blob type %s', blobType));","    callback(error);","    return;","  }","","  chunkStream._highWaterMark = sizeLimitation;","","  this._setOperationExpiryTime(options);","","  // initialize the speed summary","  var speedSummary = options.speedSummary || new SpeedSummary(blob);","  speedSummary.totalSize = streamLength;","","  // initialize chunk allocator","  var allocator = new ChunkAllocator(sizeLimitation, parallelOperationThreadCount, { logger: this.logger });","  chunkStream.setOutputLength(streamLength);","","  // if this is a FileReadStream, set the allocator on that stream","  if (chunkStream._stream && chunkStream._stream.setMemoryAllocator) {","    chunkStream._stream.setMemoryAllocator(allocator);","  }","","  // initialize batch operations","  var batchOperations = new BatchOperation(apiName, { callInOrder: isAppendBlobUpload, callbackInOrder: isAppendBlobUpload, logger : this.logger });","  batchOperations.setConcurrency(parallelOperationThreadCount);","","  // initialize options","  var rangeOptions = {","    leaseId: options.leaseId,","    timeoutIntervalInMs: options.timeoutIntervalInMs,","    clientRequestTimeoutInMs: options.clientRequestTimeoutInMs,","    operationExpiryTime: options.operationExpiryTime,","    maxBlobSize: options.maxBlobSize,","    appendPosition: options.appendPosition || 0,","    initialAppendPosition: options.appendPosition || 0,","    absorbConditionalErrorsOnRetry: options.absorbConditionalErrorsOnRetry","  };","","  // initialize block blob variables","  var blockIdPrefix = options.blockIdPrefix || this.generateBlockIdPrefix();","  var blockCount = 0;","  var blockIds = [];","  var blobResult = {};","","  var self = this;","  chunkStream.on('data', function (data, range) {","    var operation = null;","    var full = false;","    var autoIncrement = speedSummary.getAutoIncrementFunction(data.length);","","    if (data.length > sizeLimitation) {","      throw new RangeError(util.format(SR.EXCEEDED_SIZE_LIMITATION, sizeLimitation, data.length));","    }","","    if (options.useTransactionalMD5) {","      //calculate content md5 for the current uploading block data","      var contentMD5 = azureutil.getContentMd5(data);","      rangeOptions.transactionalContentMD5 = contentMD5;","    }","    ","    var checkLengthLimit = function () {","      if (!streamLength) return true;","      if (range.start >= streamLength) {","        self.logger.debug(util.format('Stop uploading data from %s bytes to %s bytes to blob %s because of limit %s', range.start, range.end, blob, streamLength));","        chunkStream.stop();","        return false;","      } else if (range.end >= streamLength) {","        self.logger.debug(util.format('Clip uploading data from %s bytes to %s bytes to blob %s because of limit %s', range.start, range.end, blob, streamLength));","        range.end = streamLength - 1;","        data = data.slice(0, streamLength - range.start);","        if (options.useTransactionalMD5) {","          rangeOptions.transactionalContentMD5 =  azureutil.getContentMd5(data);","        }","      }","      return true;","    };","","    var uploadBlockBlobChunk = function () {","      if (!checkLengthLimit()) return;","      var blockId = self.getBlockId(blockIdPrefix, blockCount);","      blockIds.push(blockId);","      ","      operation = new BatchOperation.RestOperation(self, apiName, blockId, container, blob, data, rangeOptions, function (error) {","        if (!error) {","          autoIncrement();","        }","        allocator.releaseBuffer(data);","        data = null;","      });","      ","      blockCount++;","    };","","    var uploadPageBlobChunk = function () {","      if (!checkLengthLimit()) return;","      ","      if (azureutil.isBufferAllZero(data)) {","        self.logger.debug(util.format('Skip upload data from %s bytes to %s bytes to blob %s', range.start, range.end, blob));","        speedSummary.increment(data.length);","      } else {","        self.logger.debug(util.format('Upload data from %s bytes to %s bytes to blob %s', range.start, range.end, blob));","        operation = new BatchOperation.RestOperation(self, apiName, container, blob, data, null, range.start, range.end, rangeOptions, function (error) {","          if (!error) {","            autoIncrement();","          } else {","            self.logger.debug(util.format('Error: %s', require('util').inspect(error)));","          }","          allocator.releaseBuffer(data);","          data = null;","        });","      }","    };","","    var uploadAppendBlobChunk = function () {","      if (!checkLengthLimit()) return;","      ","      rangeOptions.appendPosition = Number(rangeOptions.initialAppendPosition) + Number(range.start);","","      // We cannot differentiate between max size condition failing only in the retry versus failing in the first attempt and retry.  ","      // So we will eliminate the latter and handle the former in the append operation callback.","      if (options.maxBlobSize && rangeOptions.appendPosition + data.length > options.maxBlobSize) {","        throw new Error(SR.MAX_BLOB_SIZE_CONDITION_NOT_MEET);","      }","","      operation = new BatchOperation.RestOperation(self, apiName, container, blob, data, rangeOptions, function (error, currentBlob) {","        if (!error) {","          autoIncrement();","        }","        blobResult = currentBlob;","        allocator.releaseBuffer(data);","        data = null;","      });","    };","","    if (isBlockBlobUpload) {","      uploadBlockBlobChunk();","    } else if (isAppendBlobUpload) {","      uploadAppendBlobChunk();","    } else if (isPageBlobUpload) {","      uploadPageBlobChunk();","    }","","    if (operation) {","      full = batchOperations.addOperation(operation);","      operation = null;","","      if (full) {","        self.logger.debug('File stream paused');","        chunkStream.pause();","      }","    }","  });","","  chunkStream.on('end', function () {","    self.logger.debug(util.format('File read stream ended for blob %s', blob));","    batchOperations.enableComplete();","  });","","  batchOperations.on('drain', function () {","    self.logger.debug('file stream resume');","    chunkStream.resume();","  });","","  batchOperations.on('end', function (error) {","    self.logger.debug('batch operations commited');"," ","    speedSummary = null;","    if (error) {","      callback(error);","      return;","    }","","    if (originalContentMD5) {","      options.contentSettings.contentMD5 = originalContentMD5;","    } else if (options.storeBlobContentMD5) {","      var contentMD5 = chunkStream.getContentMd5('base64');","      azureutil.setObjectInnerPropertyValue(options, ['contentSettings', 'contentMD5'], contentMD5);","    }","","    if (isBlockBlobUpload) {","      //commit block list","      var blockList = { 'UncommittedBlocks': blockIds };","      self.commitBlocks(container, blob, blockList, options, function (error, blockList, response) {","        self.logger.debug(util.format('Blob %s committed', blob));","","        if (error) {","          chunkStream.finish();","","          callback(error);","        } else {","          blobResult['commmittedBlocks'] = blockIds;","","          chunkStream.finish();","          callback(error, blobResult, response);","        }","      });","    } else {","      // upload page blob or append blob completely","      var blobProperties = options.contentSettings;","      self.setBlobProperties(container, blob, blobProperties, function (error, blob, response) {","        chunkStream.finish();","        blob = extend(false, blob, blobResult);","        callback(error, blob, response);","      });","    }","  });","","  return speedSummary;","};","","/**","* Checks whether or not a container exists on the service.","* @ignore","*","* @this {BlobService}","* @param {string}             container                                         The container name.","* @param {string}             primaryOnly                                       If true, the request will be executed against the primary storage location.","* @param {object}             [options]                                         The request options.","* @param {string}             [options.leaseId]                                 The lease identifier.","* @param {LocationMode}       [options.locationMode]                            Specifies the location mode used to decide which location the request should be sent to. ","*                                                                               Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                     The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]                The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]                The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                               The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                               execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                         A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                       Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                               The default value is false.","* @param {Function(error, result, response)}  callback                          `error` will contain information","*                                                                               if an error occurs; otherwise `result` will contain","*                                                                               the container information including `exists` boolean member. ","*                                                                               `response` will contain information related to this operation.","*/","BlobService.prototype._doesContainerExist = function (container, primaryOnly, options, callback) {","  var webResource = WebResource.head(container)","    .withQueryOption(QueryStringConstants.RESTYPE, 'container')","    .withHeader(HeaderConstants.LEASE_ID, options.leaseId);","","  if (primaryOnly === false) {","    options.requestLocationMode = RequestLocationMode.PRIMARY_OR_SECONDARY;","  }","","  var processResponseCallback = function (responseObject, next) {","    responseObject.containerResult = new ContainerResult(container);","    if (!responseObject.error) {","      responseObject.containerResult.exists = true;","      responseObject.containerResult.getPropertiesFromHeaders(responseObject.response.headers);","      ","    } else if (responseObject.error && responseObject.error.statusCode === Constants.HttpConstants.HttpResponseCodes.NotFound) {","      responseObject.error = null;","      responseObject.containerResult.exists = false;","      responseObject.response.isSuccessful = true;","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.containerResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Checks whether or not a blob exists on the service.","* @ignore","*","* @this {BlobService}","* @param {string}             container                                         The container name.","* @param {string}             blob                                              The blob name.","* @param {string}             primaryOnly                                       If true, the request will be executed against the primary storage location.","* @param {object}             [options]                                         The request options.","* @param {string}             [options.leaseId]                                 The lease identifier.","* @param {LocationMode}       [options.locationMode]                            Specifies the location mode used to decide which location the request should be sent to. ","*                                                                               Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                     The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]                The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]                The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                               The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                               execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                         A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                       Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                               The default value is false.","* @param {Function(error, result, response)}  callback                          `error` will contain information","*                                                                               if an error occurs; otherwise `result` will contain ","*                                                                               the blob information including `exists` boolean member. ","*                                                                               `response` will contain information related to this operation.","*/","BlobService.prototype._doesBlobExist = function (container, blob, primaryOnly, options, callback) {","  var resourceName = createResourceName(container, blob);","  var webResource = WebResource.head(resourceName)","    .withHeader(HeaderConstants.LEASE_ID, options.leaseId);","","  if (primaryOnly === false) {","    options.requestLocationMode = RequestLocationMode.PRIMARY_OR_SECONDARY;","  }","","  var processResponseCallback = function (responseObject, next) {","    responseObject.blobResult = new BlobResult(container, blob);","    if (!responseObject.error) {","      responseObject.blobResult.exists = true;","      responseObject.blobResult.getPropertiesFromHeaders(responseObject.response.headers);","      ","    } else if (responseObject.error && responseObject.error.statusCode === Constants.HttpConstants.HttpResponseCodes.NotFound) {","      responseObject.error = null;","      responseObject.blobResult.exists = false;","      responseObject.response.isSuccessful = true;","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.blobResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* @ignore","*/","BlobService.prototype._setBlobPropertiesHelper = function (settings) {","  var processResponseCallback = function (responseObject, next) {","    responseObject.blobResult = null;","    if (!responseObject.error) {","      responseObject.blobResult = new BlobResult(settings.container, settings.blob);","      responseObject.blobResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","    ","    var finalCallback = function (returnObject) {","      settings.callback(returnObject.error, returnObject.blobResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","  ","  this.performRequest(settings.webResource, null, settings.options, processResponseCallback);","};","","/**","* @ignore","*/","BlobService.prototype._validateLengthAndMD5 = function (options, responseObject) {","  var storedMD5 = responseObject.response.headers[Constants.HeaderConstants.CONTENT_MD5];","  var contentLength;","","  if (!azureutil.objectIsNull(responseObject.response.headers[Constants.HeaderConstants.CONTENT_LENGTH])) {","    contentLength = parseInt(responseObject.response.headers[Constants.HeaderConstants.CONTENT_LENGTH], 10);","  }","","  // If the user has not specified this option, the default value should be false.","  if (azureutil.objectIsNull(options.disableContentMD5Validation)) {","    options.disableContentMD5Validation = false;","  }","","  // None of the below cases should be retried. So set the error in every case so the retry policy filter handle knows that it shouldn't be retried.","  if (options.disableContentMD5Validation === false && options.useTransactionalMD5 === true && azureutil.objectIsNull(storedMD5)) {","    responseObject.error = new StorageError(SR.MD5_NOT_PRESENT_ERROR);","    responseObject.retryable = false;","  }","","  // Validate length and if required, MD5.","  // If getBlobToText called this method, then the responseObject.length and responseObject.contentMD5 are not set. Calculate them first using responseObject.response.body and then validate.","  if (azureutil.objectIsNull(responseObject.length)) {","    if (typeof responseObject.response.body == 'string') {","      responseObject.length = Buffer.byteLength(responseObject.response.body);","    } else if (Buffer.isBuffer(responseObject.response.body)) {","      responseObject.length = responseObject.response.body.length;","    }","  }","","  if (!azureutil.objectIsNull(contentLength) && responseObject.length !== contentLength) {","    responseObject.error = new Error(SR.CONTENT_LENGTH_MISMATCH);","    responseObject.retryable = false;","  }","","  if (options.disableContentMD5Validation === false && azureutil.objectIsNull(responseObject.contentMD5)) {","    responseObject.contentMD5 = azureutil.getContentMd5(responseObject.response.body);","  }","","  if (options.disableContentMD5Validation === false && !azureutil.objectIsNull(storedMD5) && storedMD5 !== responseObject.contentMD5) {","    responseObject.error = new Error(util.format(SR.HASH_MISMATCH, storedMD5, responseObject.contentMD5));","    responseObject.retryable = false;","  }","};","","/**","* @ignore","*/","BlobService.prototype._setRangeContentMD5Header = function (webResource, options) {","  if (!azureutil.objectIsNull(options.rangeStart) && options.useTransactionalMD5) {","    if (azureutil.objectIsNull(options.rangeEnd)) {","      throw new ArgumentNullError('options.rangeEndHeader', util.format(SR.ARGUMENT_NULL_OR_EMPTY, options.rangeEndHeader));","    }","","    var size = parseInt(options.rangeEnd, 10) - parseInt(options.rangeStart, 10) + 1;","    if (size > BlobConstants.MAX_RANGE_GET_SIZE_WITH_MD5) {","      throw new ArgumentError('options', SR.INVALID_RANGE_FOR_MD5);","    } else {","      webResource.withHeader(HeaderConstants.RANGE_GET_CONTENT_MD5, 'true');","    }","  }","};","","/**","* Downloads a blockblob, pageblob or appendblob into a range stream.","* @ignore","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {string}             blobType                                    The type of blob to download: block blob, page blob or append blob.","* @param {Stream}             writeStream                                 The write stream.","* @param {object}             [options]                                   The request options.","* @param {SpeedSummary}       [options.speedSummary]                      The download tracker objects.","* @param {int}                [options.parallelOperationThreadCount]      Parallel operation thread count.","* @param {string}             [options.snapshotId]                        The snapshot identifier.","* @param {string}             [options.leaseId]                           The lease identifier.","* @param {string}             [options.rangeStart]                        Return only the bytes of the blob in the specified range.","* @param {string}             [options.rangeEnd]                          Return only the bytes of the blob in the specified range.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {boolean}            [options.useTransactionalMD5]               When set to true, Calculate and send/validate content MD5 for transactions.","* @param {boolean}            [options.disableContentMD5Validation]       When set to true, MD5 validation will be disabled when downloading blobs.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information if an error occurs; ","*                                                                         otherwise `result` will contain the blob information.","*                                                                         `response` will contain information related to this operation.","* @return {SpeedSummary}","*/","BlobService.prototype._getBlobToRangeStream = function (container, blob, blobType, writeStream, optionsOrCallback, callback) {","  var options;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { options = o; callback = c; });","  ","  validate.validateArgs('_getBlobToRangeStream', function (v) {","    v.string(container, 'container');","    v.string(blob, 'blob');","    v.containerNameIsValid(container);","    v.blobNameIsValid(container, blob);","    v.blobTypeIsValid(blobType);","    v.callback(callback);","  });","  ","  var rangeStream = null;","  var isPageBlobDownload = true;","  ","  if (blobType == BlobConstants.BlobTypes.PAGE) {","    rangeStream = new PageRangeStream(this, container, blob, options);","  } else if (blobType == BlobConstants.BlobTypes.APPEND) {","    rangeStream = new RangeStream(this, container, blob, options);","    isPageBlobDownload = false;","  } else if (blobType == BlobConstants.BlobTypes.BLOCK) {","    rangeStream = new BlockRangeStream(this, container, blob, options);","    isPageBlobDownload = false;","  } ","  ","  if (!options.speedSummary) {","    options.speedSummary = new SpeedSummary(blob);","  }","  ","  var speedSummary = options.speedSummary;","  var parallelOperationThreadCount = options.parallelOperationThreadCount || this.parallelOperationThreadCount;","  var batchOperations = new BatchOperation('getBlobInRanges', { callbackInOrder: true, logger : this.logger });","  batchOperations.setConcurrency(parallelOperationThreadCount);","","  var self = this;","  var checkMD5sum = !options.disableContentMD5Validation;","  var md5Hash = null;","  if (checkMD5sum) {","    md5Hash = new Md5Wrapper().createMd5Hash();","  }","","  var savedBlobResult = null;","  var savedBlobResponse = null;","","  rangeStream.on('range', function (range) {","    if (!speedSummary.totalSize) {","      speedSummary.totalSize = rangeStream.rangeSize;","    }","","    var requestOptions = {","      rangeStart : range.start,","      rangeEnd : range.end,","      responseEncoding : null //Use Buffer to store the response data","    };","","    var rangeSize = range.size;","    requestOptions.timeoutIntervalInMs = options.timeoutIntervalInMs;","    requestOptions.clientRequestTimeoutInMs = options.clientRequestTimeoutInMs;","    requestOptions.useTransactionalMD5 = options.useTransactionalMD5;","","    if (range.dataSize === 0) {","      if (isPageBlobDownload) {","        var autoIncrement = speedSummary.getAutoIncrementFunction(rangeSize);","        //No operation to do and only wait for write zero to file in callback","        var writeZeroOperation = new BatchOperation.CommonOperation(BatchOperation.noOperation, function (error) {","          if (error) return;","          var bufferAvailable = azureutil.writeZerosToStream(writeStream, rangeSize, md5Hash, autoIncrement);","          //There is no need to pause the rangestream since we can perform http request and write disk at the same time","          self.logger.debug(util.format('Write %s bytes Zero from %s to %s', rangeSize, range.start, range.end));","          if (!bufferAvailable) {","            self.logger.debug('Write stream is full and pause batch operation');","            batchOperations.pause();","          }","        });","        batchOperations.addOperation(writeZeroOperation);","      } else {","        self.logger.debug(util.format('Can not read %s bytes to %s bytes of blob %s', range.start, range.end, blob));","      }","      return;","    }","      ","    if (range.start > range.end) {","      return;","    }","      ","    var operation = new BatchOperation.RestOperation(self, 'getBlobToText', container, blob, requestOptions, function (error, content, blobResult, response) {","      if (!error) {","        if (rangeSize !== content.length) {","          self.logger.warn(util.format('Request %s bytes, but server returns %s bytes', rangeSize, content.length));","        }","        //Save one of the succeeded callback parameters and use them at the final callback","        if (!savedBlobResult) {","          savedBlobResult = blobResult;","        }","        if (!savedBlobResponse) {","          savedBlobResponse = response;","        }","        var autoIncrement = speedSummary.getAutoIncrementFunction(content.length);","        var bufferAvailable = writeStream.write(content, autoIncrement);","        if (!bufferAvailable) {","          self.logger.debug('Write stream is full and pause batch operation');","          batchOperations.pause();","        }","        if (md5Hash) {","          md5Hash.update(content);","        }","        content = null;","      }","    });","","    var full = batchOperations.addOperation(operation);","    if (full) {","      self.logger.debug('Pause range stream');","      rangeStream.pause();","    }    ","  });","  ","  rangeStream.on('end', function () {","    self.logger.debug('Range stream has ended.');","    batchOperations.enableComplete();","  });","  ","  batchOperations.on('drain', function () {","    self.logger.debug('Resume range stream');","    rangeStream.resume();","  });","  ","  writeStream.on('drain', function () {","    self.logger.debug('Resume batch operations');","    batchOperations.resume();","  });","  ","  batchOperations.on('end', function (error) {","    self.logger.debug('Download completed!');","    if (error) {","      callback(error);","      return;","    } else {","      writeStream.end(function () {","        self.logger.debug('Write stream has ended');","        if (writeStream.close) {","          writeStream.close();","        }","        if (!savedBlobResult) {","          savedBlobResult = {};","        }","        ","        azureutil.setObjectInnerPropertyValue(savedBlobResult, ['contentSettings', 'contentMD5'], azureutil.tryGetValueChain(options, ['contentSettings', 'contentMD5'], null));","        savedBlobResult.clientSideContentMD5 = null;","        if (md5Hash) {","          savedBlobResult.clientSideContentMD5 = md5Hash.digest('base64');","        }","        callback(error, savedBlobResult, savedBlobResponse);","      });","    }","  });","  ","  var listOptions = {","    timeoutIntervalInMs : options.timeoutIntervalInMs,","    clientRequestTimeoutInMs : options.clientRequestTimeoutInMs,","    snapshotId : options.snapshotId,","    leaseId : options.leaseId,","    blockListFilter : BlobUtilities.BlockListFilter.COMMITTED","  };","  ","   rangeStream.list(listOptions, function (error) {","    callback(error);","  });","  ","  return speedSummary;","};","","/**","* Downloads a blockblob or pageblob into a stream.","* @ignore","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {Stream}             writeStream                                 The write stream.","* @param {object}             [options]                                   The request options.","* @param {string}             [options.snapshotId]                        The snapshot identifier.","* @param {string}             [options.leaseId]                           The lease identifier.","* @param {string}             [options.rangeStart]                        Return only the bytes of the blob in the specified range.","* @param {string}             [options.rangeEnd]                          Return only the bytes of the blob in the specified range.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {boolean}            [options.useTransactionalMD5]               When set to true, Calculate and send/validate content MD5 for transactions.","* @param {boolean}            [options.disableContentMD5Validation]       When set to true, MD5 validation will be disabled when downloading blobs.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information if an error occurs; ","*                                                                         otherwise `result` will contain the blob information.","*                                                                         `response` will contain information related to this operation.","*/","BlobService.prototype._getBlobToStream = function (container, blob, writeStream, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  var resourceName = createResourceName(container, blob);","  var webResource = WebResource.get(resourceName).withRawResponse();","  ","  var options = extend(true, {}, userOptions);","  webResource.withQueryOption(QueryStringConstants.SNAPSHOT, options.snapshotId);","  ","  BlobResult.setHeadersFromBlob(webResource, options);","  ","  this._setRangeContentMD5Header(webResource, options);","  ","  var self = this;","  var processResponseCallback = function (responseObject, next) {","    responseObject.blobResult = null;","    ","    if (!responseObject.error) {","      responseObject.blobResult = new BlobResult(container, blob);","      responseObject.blobResult.metadata = self.parseMetadataHeaders(responseObject.response.headers);","      responseObject.blobResult.getPropertiesFromHeaders(responseObject.response.headers);","      ","      self._validateLengthAndMD5(options, responseObject);","    }","    ","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.blobResult, returnObject.response);","    };","    ","    next(responseObject, finalCallback);","  };","  ","  this.performRequestInputStream(webResource, null, writeStream, options, processResponseCallback);","};","","/**","* Downloads a blob into a file.","* @ignore","* @this {BlobService}","* @param {string}             container                                   The container name.","* @param {string}             blob                                        The blob name.","* @param {string}             localFileName                               The local path to the file to be downloaded.","* @param {object}             [options]                                   The request options.","* @param {boolean}            [options.skipSizeCheck]                     Skip the size check to perform direct download.","*                                                                         Set the option to true for small blobs.","*                                                                         Parallel download and speed summary won't work with this option on.","* @param {SpeedSummary}       [options.speedSummary]                      The download tracker objects.","* @param {int}                [options.parallelOperationThreadCount]      Parallel operation thread count.","* @param {string}             [options.snapshotId]                        The snapshot identifier.","* @param {string}             [options.leaseId]                           The lease identifier.","* @param {string}             [options.rangeStart]                        Return only the bytes of the blob in the specified range.","* @param {string}             [options.rangeEnd]                          Return only the bytes of the blob in the specified range.","* @param {AccessConditions}   [options.accessConditions]                  The access conditions.","* @param {boolean}            [options.useTransactionalMD5]               When set to true, Calculate and send/validate content MD5 for transactions.","* @param {boolean}            [options.disableContentMD5Validation]       When set to true, MD5 validation will be disabled when downloading blobs.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information if an error occurs; ","*                                                                         otherwise `result` will contain the blob information.","*                                                                         `response` will contain information related to this operation.","* @return {SpeedSummary}","* ","*/","BlobService.prototype._getBlobToLocalFile = function (container, blob, localFileName, optionsOrCallback, callback) {","  var options;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { options = o; callback = c; });","  options.speedSummary = options.speedSummary || new SpeedSummary(blob);","  ","  var writeStream = fs.createWriteStream(localFileName, { 'highWaterMark': BlobConstants.MAX_QUEUED_WRITE_DISK_BUFFER_SIZE });","  ","  this.getBlobToStream(container, blob, writeStream, options, function (error, responseBlob, response) {","    if (error) {","      if (azureutil.pathExistsSync(localFileName)) {","        // make sure writeStream is closed / destroyed to avoid locking issues","        if (writeStream.close) {","          writeStream.close();","        }","        ","        // If the download failed from the beginning, remove the file.","        fs.unlink(localFileName, function () {","          callback(error, responseBlob, response);","        });","        return;","      }","    }","    callback(error, responseBlob, response);","  });","  ","  return options.speedSummary;","};","","/**","* Lists a segment containing a collection of blob items whose names begin with the specified prefix in the container.","* @ignore","* @this {BlobService}","* @param {string}             container                           The container name.","* @param {string}             prefix                              The prefix of the blob name.","* @param {object}             currentToken                        A continuation token returned by a previous listing operation. Please use 'null' or 'undefined' if this is the first operation.","* @param {ListBlobTypes}      listBlobType                        Specifies the item type of the results.","* @param {object}             [options]                           The request options.","* @param {int}                [options.maxResults]                Specifies the maximum number of blobs to return per call to Azure ServiceClient. This does NOT affect list size returned by this function. (maximum: 5000)","* @param {string}             [options.include]                   Specifies that the response should include one or more of the following subsets: '', 'metadata', 'snapshots', 'uncommittedblobs', 'copy').","*                                                                 Please find these values in BlobUtilities.BlobListingDetails. Multiple values can be added separated with a comma (,).","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `result` will contain","*                                                                 the entries of blobs and the continuation token for the next listing operation.","*                                                                 `response` will contain information related to this operation.","*/","BlobService.prototype._listBlobsOrDircotriesSegmentedWithPrefix = function (container, prefix, currentToken, listBlobType, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('listBlobsSegmented', function (v) {","    v.string(container, 'container');","    v.containerNameIsValid(container);","    v.callback(callback);","  });","  ","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.get(container)","    .withQueryOption(QueryStringConstants.RESTYPE, 'container')","    .withQueryOption(QueryStringConstants.COMP, 'list')","    .withQueryOption(QueryStringConstants.MAX_RESULTS, options.maxResults)","    .withQueryOptions(options,","      QueryStringConstants.DELIMITER,","      QueryStringConstants.INCLUDE);","  ","  if (!azureutil.objectIsNull(currentToken)) {","    webResource.withQueryOption(QueryStringConstants.MARKER, currentToken.nextMarker);","  }","  ","  webResource.withQueryOption(QueryStringConstants.PREFIX, prefix);","  ","  options.requestLocationMode = azureutil.getNextListingLocationMode(currentToken);","  ","  var processResponseCallback = function (responseObject, next) {","    responseObject.listBlobsResult = null;","    if (!responseObject.error) {","      responseObject.listBlobsResult = {","        entries: null,","        continuationToken: null","      };","      ","      responseObject.listBlobsResult.entries = [];","      var results = [];","      ","      if (listBlobType == BlobConstants.ListBlobTypes.Directory && responseObject.response.body.EnumerationResults.Blobs.BlobPrefix) {","        results = responseObject.response.body.EnumerationResults.Blobs.BlobPrefix;","        if (!_.isArray(results)) {","          results = [results];","        }","      } else if (listBlobType == BlobConstants.ListBlobTypes.Blob && responseObject.response.body.EnumerationResults.Blobs.Blob) {","        results = responseObject.response.body.EnumerationResults.Blobs.Blob;","        if (!_.isArray(results)) {","          results = [results];","        }","      }","      ","      results.forEach(function (currentBlob) {","        var blobResult = BlobResult.parse(currentBlob);","        responseObject.listBlobsResult.entries.push(blobResult);","      });","      ","      if (responseObject.response.body.EnumerationResults.NextMarker) {","        responseObject.listBlobsResult.continuationToken = {","          nextMarker: null,","          targetLocation: null","        };","        ","        responseObject.listBlobsResult.continuationToken.nextMarker = responseObject.response.body.EnumerationResults.NextMarker;","        responseObject.listBlobsResult.continuationToken.targetLocation = responseObject.targetLocation;","      }","    }","    ","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.listBlobsResult, returnObject.response);","    };","    ","    next(responseObject, finalCallback);","  };","  ","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Create a new blob.","* @ignore","* ","* @this {BlobService}","* @param {string}             container                                The container name.","* @param {string}             blob                                     The blob name.","* @param (BlobType)           blobType                                 The blob type.","* @param {int}                size                                     The blob size. ","* @param {object}             [options]                                The request options.","* @param {errorOrResult}      callback                                 The callback which operates on the specific blob.","*/","BlobService.prototype._createBlob = function (container, blob, blobType, size, options, creationCallback) {","  if (blobType == BlobConstants.BlobTypes.APPEND) {","    this.createOrReplaceAppendBlob(container, blob, options, function (createError, createResponse) {","      creationCallback(createError, null, createResponse);","    });","  } else if (blobType == BlobConstants.BlobTypes.PAGE) {","    this.createPageBlob(container, blob, size, options, function (createError) {","      creationCallback(createError);","    });","  } else if (blobType == BlobConstants.BlobTypes.BLOCK) {","    creationCallback();","  }","};","","/**","* The callback for {BlobService~getBlobToText}.","* @typedef {function} BlobService~blobToText","* @param {object} error      If an error occurs, the error information.","* @param {string} text       The text returned from the blob.","* @param {object} blockBlob  Information about the blob.","* @param {object} response   Information related to this operation.","*/","","BlobService.SpeedSummary = SpeedSummary;","","module.exports = BlobService;",""],"l":{"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"38":1,"39":1,"40":1,"41":1,"42":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"60":1,"63":1,"64":1,"65":1,"66":1,"99":1,"100":0,"102":0,"109":0,"110":0,"113":1,"125":1,"127":0,"128":0,"129":0,"130":0,"131":0,"135":0,"136":0,"139":0,"163":1,"164":0,"165":0,"167":0,"168":0,"171":0,"175":0,"177":0,"178":0,"179":0,"180":0,"184":0,"185":0,"189":0,"192":0,"213":1,"214":0,"238":1,"239":0,"266":1,"267":0,"295":1,"296":0,"297":0,"299":0,"300":0,"303":0,"304":0,"309":0,"310":0,"313":0,"315":0,"317":0,"318":0,"320":0,"321":0,"325":0,"327":0,"329":0,"330":0,"331":0,"332":0,"336":0,"337":0,"338":0,"341":0,"342":0,"347":0,"348":0,"352":0,"353":0,"356":0,"359":0,"385":1,"386":0,"387":0,"389":0,"390":0,"391":0,"392":0,"395":0,"397":0,"424":1,"425":0,"426":0,"428":0,"429":0,"430":0,"432":0,"433":0,"436":0,"437":0,"440":0,"441":0,"443":0,"444":0,"445":0,"446":0,"447":0,"449":0,"450":0,"454":0,"455":0,"458":0,"461":0,"496":1,"497":0,"498":0,"500":0,"501":0,"502":0,"503":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"513":0,"514":0,"515":0,"516":0,"517":0,"519":0,"520":0,"521":0,"523":0,"525":0,"526":0,"529":0,"558":1,"559":0,"560":0,"562":0,"563":0,"564":0,"565":0,"568":0,"569":0,"573":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"584":0,"585":0,"588":0,"591":0,"617":1,"618":0,"619":0,"621":0,"622":0,"623":0,"624":0,"627":0,"628":0,"633":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"644":0,"645":0,"648":0,"651":0,"680":1,"681":0,"682":0,"684":0,"685":0,"686":0,"687":0,"688":0,"691":0,"692":0,"697":0,"699":0,"700":0,"701":0,"702":0,"703":0,"706":0,"707":0,"710":0,"713":0,"738":1,"739":0,"740":0,"742":0,"743":0,"744":0,"745":0,"748":0,"749":0,"754":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"764":0,"765":0,"768":0,"771":0,"797":1,"798":0,"799":0,"801":0,"802":0,"803":0,"804":0,"807":0,"809":0,"810":0,"811":0,"812":0,"814":0,"817":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"835":0,"836":0,"839":0,"842":0,"868":1,"869":0,"870":0,"872":0,"873":0,"874":0,"875":0,"878":0,"879":0,"883":0,"884":0,"885":0,"888":0,"891":0,"919":1,"920":0,"921":0,"923":0,"924":0,"925":0,"926":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"938":0,"939":0,"940":0,"941":0,"942":0,"944":0,"945":0,"946":0,"949":0,"978":1,"979":0,"1006":1,"1007":0,"1008":0,"1009":0,"1011":0,"1041":1,"1042":0,"1073":1,"1074":0,"1104":1,"1105":0,"1106":0,"1108":0,"1109":0,"1110":0,"1111":0,"1114":0,"1116":0,"1117":0,"1120":0,"1146":1,"1147":0,"1148":0,"1150":0,"1151":0,"1152":0,"1153":0,"1156":0,"1158":0,"1186":1,"1187":0,"1188":0,"1190":0,"1191":0,"1192":0,"1193":0,"1196":0,"1198":0,"1199":0,"1226":1,"1227":0,"1228":0,"1230":0,"1231":0,"1232":0,"1233":0,"1236":0,"1238":0,"1267":1,"1268":0,"1269":0,"1271":0,"1272":0,"1273":0,"1274":0,"1277":0,"1279":0,"1311":1,"1312":0,"1313":0,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1322":0,"1323":0,"1324":0,"1326":0,"1327":0,"1330":0,"1332":0,"1334":0,"1335":0,"1336":0,"1337":0,"1338":0,"1339":0,"1340":0,"1343":0,"1344":0,"1347":0,"1350":0,"1380":1,"1381":0,"1382":0,"1384":0,"1385":0,"1386":0,"1387":0,"1388":0,"1391":0,"1392":0,"1393":0,"1395":0,"1396":0,"1398":0,"1400":0,"1402":0,"1403":0,"1404":0,"1405":0,"1406":0,"1407":0,"1408":0,"1411":0,"1412":0,"1415":0,"1418":0,"1453":1,"1454":0,"1455":0,"1457":0,"1458":0,"1459":0,"1460":0,"1461":0,"1464":0,"1465":0,"1466":0,"1469":0,"1471":0,"1507":1,"1508":0,"1509":0,"1511":0,"1512":0,"1513":0,"1514":0,"1515":0,"1516":0,"1519":0,"1520":0,"1521":0,"1524":0,"1526":0,"1527":0,"1529":0,"1530":0,"1531":0,"1532":0,"1533":0,"1536":0,"1537":0,"1540":0,"1543":0,"1590":1,"1591":0,"1592":0,"1594":0,"1595":0,"1596":0,"1597":0,"1598":0,"1599":0,"1602":0,"1639":1,"1640":0,"1641":0,"1643":0,"1644":0,"1645":0,"1646":0,"1649":0,"1650":0,"1651":0,"1652":0,"1655":0,"1656":0,"1660":0,"1707":1,"1708":0,"1709":0,"1710":0,"1712":0,"1713":0,"1714":0,"1715":0,"1716":0,"1717":0,"1720":0,"1722":0,"1729":0,"1730":0,"1732":0,"1733":0,"1734":0,"1735":0,"1737":0,"1738":0,"1739":0,"1740":0,"1741":0,"1743":0,"1745":0,"1747":0,"1748":0,"1749":0,"1751":0,"1757":0,"1790":1,"1791":0,"1792":0,"1794":0,"1795":0,"1796":0,"1797":0,"1798":0,"1801":0,"1802":0,"1803":0,"1806":0,"1808":0,"1809":0,"1811":0,"1813":0,"1814":0,"1815":0,"1816":0,"1818":0,"1819":0,"1820":0,"1821":0,"1822":0,"1824":0,"1827":0,"1828":0,"1831":0,"1834":0,"1865":1,"1866":0,"1867":0,"1869":0,"1870":0,"1871":0,"1872":0,"1873":0,"1876":0,"1877":0,"1878":0,"1881":0,"1882":0,"1885":0,"1886":0,"1888":0,"1890":0,"1891":0,"1892":0,"1895":0,"1898":0,"1923":1,"1924":0,"1925":0,"1927":0,"1928":0,"1929":0,"1930":0,"1931":0,"1934":0,"1936":0,"1970":1,"1971":0,"1972":0,"1974":0,"1975":0,"1976":0,"1977":0,"1978":0,"1981":0,"1982":0,"1983":0,"1984":0,"1985":0,"1986":0,"1987":0,"1988":0,"1990":0,"1991":0,"1992":0,"1993":0,"1994":0,"1996":0,"1997":0,"1998":0,"2001":0,"2033":1,"2034":0,"2035":0,"2037":0,"2038":0,"2039":0,"2040":0,"2041":0,"2044":0,"2045":0,"2046":0,"2049":0,"2051":0,"2052":0,"2053":0,"2054":0,"2057":0,"2058":0,"2061":0,"2064":0,"2097":1,"2098":0,"2099":0,"2101":0,"2102":0,"2103":0,"2104":0,"2105":0,"2106":0,"2109":0,"2111":0,"2113":0,"2114":0,"2115":0,"2116":0,"2119":0,"2120":0,"2122":0,"2125":0,"2128":0,"2129":0,"2132":0,"2133":0,"2134":0,"2136":0,"2137":0,"2138":0,"2139":0,"2140":0,"2142":0,"2143":0,"2147":0,"2148":0,"2151":0,"2154":0,"2179":1,"2180":0,"2181":0,"2183":0,"2184":0,"2185":0,"2186":0,"2187":0,"2190":0,"2192":0,"2193":0,"2198":0,"2200":0,"2201":0,"2202":0,"2205":0,"2208":0,"2233":1,"2235":0,"2236":0,"2239":0,"2240":0,"2244":0,"2245":0,"2246":0,"2247":0,"2250":0,"2251":0,"2252":0,"2253":0,"2255":0,"2258":0,"2259":0,"2260":0,"2261":0,"2264":0,"2267":0,"2268":0,"2269":0,"2272":0,"2276":0,"2277":0,"2303":1,"2304":0,"2305":0,"2306":0,"2309":0,"2310":0,"2311":0,"2313":0,"2316":0,"2317":0,"2318":0,"2321":0,"2322":0,"2323":0,"2326":0,"2327":0,"2366":1,"2367":0,"2368":0,"2370":0,"2371":0,"2372":0,"2373":0,"2374":0,"2375":0,"2378":0,"2379":0,"2382":0,"2384":0,"2386":0,"2392":0,"2394":0,"2395":0,"2396":0,"2399":0,"2402":0,"2447":1,"2448":0,"2493":1,"2494":0,"2543":1,"2544":0,"2593":1,"2594":0,"2626":1,"2627":0,"2628":0,"2630":0,"2631":0,"2632":0,"2633":0,"2634":0,"2637":0,"2639":0,"2640":0,"2643":0,"2644":0,"2645":0,"2646":0,"2647":0,"2650":0,"2681":1,"2682":0,"2683":0,"2685":0,"2686":0,"2687":0,"2688":0,"2689":0,"2692":0,"2694":0,"2695":0,"2699":0,"2700":0,"2703":0,"2704":0,"2707":0,"2709":0,"2711":0,"2712":0,"2713":0,"2714":0,"2716":0,"2717":0,"2718":0,"2720":0,"2721":0,"2725":0,"2726":0,"2731":0,"2735":0,"2736":0,"2739":0,"2742":0,"2773":1,"2774":0,"2775":0,"2777":0,"2778":0,"2779":0,"2780":0,"2781":0,"2784":0,"2786":0,"2787":0,"2792":0,"2793":0,"2796":0,"2797":0,"2800":0,"2801":0,"2804":0,"2806":0,"2808":0,"2809":0,"2810":0,"2811":0,"2813":0,"2814":0,"2816":0,"2817":0,"2820":0,"2821":0,"2827":0,"2831":0,"2832":0,"2834":0,"2835":0,"2838":0,"2839":0,"2845":0,"2850":0,"2851":0,"2854":0,"2857":0,"2885":1,"2886":0,"2887":0,"2889":0,"2890":0,"2891":0,"2892":0,"2893":0,"2896":0,"2897":0,"2899":0,"2900":0,"2901":0,"2902":0,"2905":0,"2908":0,"2936":1,"2937":0,"2938":0,"2940":0,"2941":0,"2942":0,"2943":0,"2944":0,"2947":0,"2948":0,"2949":0,"2952":0,"2953":0,"2956":0,"2958":0,"2995":1,"2996":0,"2997":0,"2999":0,"3000":0,"3001":0,"3002":0,"3003":0,"3006":0,"3007":0,"3008":0,"3011":0,"3012":0,"3016":0,"3017":0,"3018":0,"3022":0,"3023":0,"3026":0,"3027":0,"3028":0,"3029":0,"3030":0,"3033":0,"3034":0,"3037":0,"3040":0,"3086":1,"3087":0,"3133":1,"3134":0,"3174":1,"3175":0,"3223":1,"3224":0,"3255":1,"3256":0,"3257":0,"3259":0,"3260":0,"3261":0,"3262":0,"3263":0,"3264":0,"3265":0,"3268":0,"3270":0,"3271":0,"3273":0,"3304":1,"3305":0,"3306":0,"3308":0,"3309":0,"3310":0,"3311":0,"3312":0,"3315":0,"3316":0,"3318":0,"3319":0,"3321":0,"3355":1,"3356":0,"3358":0,"3359":0,"3360":0,"3365":0,"3367":0,"3368":0,"3369":0,"3372":0,"3375":0,"3376":0,"3378":0,"3382":0,"3383":0,"3384":0,"3385":0,"3387":0,"3388":0,"3389":0,"3390":0,"3391":0,"3395":0,"3434":1,"3435":0,"3436":0,"3438":0,"3439":0,"3440":0,"3441":0,"3442":0,"3445":0,"3447":0,"3448":0,"3449":0,"3454":0,"3456":0,"3457":0,"3458":0,"3459":0,"3460":0,"3461":0,"3464":0,"3465":0,"3468":0,"3471":0,"3499":1,"3500":0,"3501":0,"3503":0,"3504":0,"3505":0,"3506":0,"3507":0,"3510":0,"3511":0,"3512":0,"3517":0,"3519":0,"3520":0,"3521":0,"3522":0,"3525":0,"3526":0,"3529":0,"3532":0,"3538":1,"3539":0,"3540":0,"3546":1,"3547":0,"3584":1,"3585":0,"3586":0,"3588":0,"3589":0,"3590":0,"3591":0,"3592":0,"3595":0,"3597":0,"3599":0,"3604":0,"3606":0,"3607":0,"3608":0,"3611":0,"3614":0,"3659":1,"3660":0,"3706":1,"3707":0,"3750":1,"3751":0,"3795":1,"3796":0,"3840":1,"3841":0,"3882":1,"3883":0,"3884":0,"3886":0,"3887":0,"3888":0,"3889":0,"3890":0,"3891":0,"3894":0,"3896":0,"3897":0,"3898":0,"3899":0,"3901":0,"3902":0,"3903":0,"3904":0,"3906":0,"3908":0,"3912":0,"3955":1,"3956":0,"3957":0,"3959":0,"3960":0,"3961":0,"3962":0,"3963":0,"3964":0,"3965":0,"3968":0,"4009":1,"4010":0,"4046":1,"4047":0,"4048":0,"4050":0,"4051":0,"4052":0,"4053":0,"4054":0,"4055":0,"4056":0,"4059":0,"4061":0,"4062":0,"4064":0,"4098":1,"4099":0,"4100":0,"4102":0,"4103":0,"4104":0,"4105":0,"4106":0,"4109":0,"4110":0,"4111":0,"4112":0,"4114":0,"4163":1,"4164":0,"4165":0,"4167":0,"4168":0,"4169":0,"4170":0,"4171":0,"4172":0,"4173":0,"4176":0,"4177":0,"4179":0,"4180":0,"4182":0,"4183":0,"4184":0,"4187":0,"4188":0,"4191":0,"4192":0,"4193":0,"4194":0,"4196":0,"4198":0,"4203":0,"4204":0,"4205":0,"4207":0,"4208":0,"4212":0,"4258":1,"4259":0,"4260":0,"4262":0,"4263":0,"4264":0,"4265":0,"4266":0,"4267":0,"4268":0,"4269":0,"4272":0,"4274":0,"4275":0,"4276":0,"4277":0,"4279":0,"4283":0,"4285":0,"4329":1,"4330":0,"4331":0,"4333":0,"4334":0,"4335":0,"4336":0,"4337":0,"4338":0,"4341":0,"4343":0,"4344":0,"4345":0,"4346":0,"4348":0,"4352":0,"4353":0,"4355":0,"4401":1,"4402":0,"4403":0,"4405":0,"4406":0,"4407":0,"4408":0,"4409":0,"4412":0,"4414":0,"4415":0,"4417":0,"4418":0,"4419":0,"4420":0,"4421":0,"4422":0,"4425":0,"4426":0,"4428":0,"4430":0,"4431":0,"4432":0,"4433":0,"4434":0,"4437":0,"4438":0,"4439":0,"4442":0,"4443":0,"4449":0,"4450":0,"4452":0,"4455":0,"4502":1,"4503":0,"4504":0,"4505":0,"4507":0,"4509":0,"4512":0,"4514":0,"4515":0,"4516":0,"4517":0,"4518":0,"4519":0,"4521":0,"4525":0,"4526":0,"4527":0,"4528":0,"4530":0,"4533":0,"4537":0,"4538":0,"4539":0,"4541":0,"4545":0,"4546":0,"4547":0,"4550":0,"4554":0,"4555":0,"4556":0,"4558":0,"4559":0,"4562":0,"4566":0,"4569":0,"4572":0,"4617":1,"4618":0,"4619":0,"4620":0,"4621":0,"4623":0,"4624":0,"4625":0,"4626":0,"4628":0,"4630":0,"4631":0,"4633":0,"4634":0,"4636":0,"4637":0,"4639":0,"4640":0,"4644":0,"4645":0,"4646":0,"4647":0,"4648":0,"4651":0,"4655":0,"4658":0,"4659":0,"4660":0,"4663":0,"4667":0,"4668":0,"4669":0,"4671":0,"4672":0,"4675":0,"4680":0,"4681":0,"4683":0,"4725":1,"4726":0,"4727":0,"4730":0,"4731":0,"4733":0,"4734":0,"4739":0,"4740":0,"4743":0,"4745":0,"4746":0,"4747":0,"4748":0,"4749":0,"4750":0,"4751":0,"4755":0,"4756":0,"4757":0,"4759":0,"4762":0,"4765":0,"4766":0,"4768":0,"4771":0,"4807":1,"4808":0,"4809":0,"4811":0,"4812":0,"4813":0,"4815":0,"4821":0,"4823":0,"4824":0,"4825":0,"4826":0,"4827":0,"4830":0,"4831":0,"4832":0,"4834":0,"4837":0,"4840":0,"4841":0,"4843":0,"4847":0,"4848":0,"4849":0,"4850":0,"4852":0,"4853":0,"4854":0,"4855":0,"4856":0,"4860":0,"4863":0,"4896":1,"4897":0,"4898":0,"4899":0,"4900":0,"4902":0,"4903":0,"4905":0,"4909":0,"4916":0,"4917":0,"4918":0,"4919":0,"4920":0,"4923":0,"4924":0,"4927":0,"4930":0,"4963":1,"4964":0,"4968":0,"4969":0,"4972":0,"4973":0,"4974":0,"4975":0,"4976":0,"4979":0,"4980":0,"4983":0,"4986":0,"4987":0,"4989":0,"4996":1,"4997":0,"4998":0,"5001":0,"5002":0,"5006":0,"5007":0,"5010":0,"5011":0,"5013":0,"5015":0,"5016":0,"5021":0,"5023":0,"5074":1,"5075":0,"5077":0,"5078":0,"5079":0,"5080":0,"5081":0,"5082":0,"5083":0,"5085":0,"5086":0,"5087":0,"5090":0,"5091":0,"5092":0,"5094":0,"5095":0,"5096":0,"5098":0,"5102":0,"5104":0,"5105":0,"5106":0,"5107":0,"5108":0,"5109":0,"5110":0,"5111":0,"5112":0,"5114":0,"5115":0,"5116":0,"5119":0,"5121":0,"5124":0,"5125":0,"5128":0,"5129":0,"5132":0,"5133":0,"5137":0,"5138":0,"5141":0,"5153":0,"5154":0,"5155":0,"5156":0,"5158":0,"5159":0,"5160":0,"5161":0,"5162":0,"5164":0,"5165":0,"5168":0,"5170":0,"5171":0,"5174":0,"5175":0,"5176":0,"5177":0,"5178":0,"5179":0,"5180":0,"5181":0,"5182":0,"5183":0,"5184":0,"5185":0,"5188":0,"5191":0,"5192":0,"5193":0,"5194":0,"5196":0,"5197":0,"5198":0,"5200":0,"5201":0,"5204":0,"5207":0,"5208":0,"5210":0,"5211":0,"5212":0,"5214":0,"5215":0,"5216":0,"5217":0,"5219":0,"5221":0,"5222":0,"5227":0,"5228":0,"5230":0,"5234":0,"5235":0,"5238":0,"5239":0,"5240":0,"5242":0,"5243":0,"5244":0,"5248":0,"5249":0,"5250":0,"5251":0,"5252":0,"5253":0,"5256":0,"5257":0,"5258":0,"5260":0,"5261":0,"5262":0,"5267":0,"5268":0,"5269":0,"5272":0,"5273":0,"5274":0,"5277":0,"5278":0,"5280":0,"5281":0,"5282":0,"5283":0,"5286":0,"5287":0,"5288":0,"5289":0,"5290":0,"5293":0,"5295":0,"5296":0,"5297":0,"5299":0,"5300":0,"5302":0,"5304":0,"5306":0,"5307":0,"5312":0,"5313":0,"5314":0,"5315":0,"5316":0,"5321":0,"5348":1,"5349":0,"5353":0,"5354":0,"5357":0,"5358":0,"5359":0,"5360":0,"5361":0,"5363":0,"5364":0,"5365":0,"5366":0,"5369":0,"5370":0,"5373":0,"5376":0,"5404":1,"5405":0,"5406":0,"5409":0,"5410":0,"5413":0,"5414":0,"5415":0,"5416":0,"5417":0,"5419":0,"5420":0,"5421":0,"5422":0,"5425":0,"5426":0,"5429":0,"5432":0,"5438":1,"5439":0,"5440":0,"5441":0,"5442":0,"5443":0,"5446":0,"5447":0,"5450":0,"5453":0,"5459":1,"5460":0,"5461":0,"5463":0,"5464":0,"5468":0,"5469":0,"5473":0,"5474":0,"5475":0,"5480":0,"5481":0,"5482":0,"5483":0,"5484":0,"5488":0,"5489":0,"5490":0,"5493":0,"5494":0,"5497":0,"5498":0,"5499":0,"5506":1,"5507":0,"5508":0,"5509":0,"5512":0,"5513":0,"5514":0,"5516":0,"5554":1,"5555":0,"5556":0,"5558":0,"5559":0,"5560":0,"5561":0,"5562":0,"5563":0,"5564":0,"5567":0,"5568":0,"5570":0,"5571":0,"5572":0,"5573":0,"5574":0,"5575":0,"5576":0,"5577":0,"5580":0,"5581":0,"5584":0,"5585":0,"5586":0,"5587":0,"5589":0,"5590":0,"5591":0,"5592":0,"5593":0,"5596":0,"5597":0,"5599":0,"5600":0,"5601":0,"5604":0,"5610":0,"5611":0,"5612":0,"5613":0,"5615":0,"5616":0,"5617":0,"5619":0,"5620":0,"5621":0,"5623":0,"5624":0,"5625":0,"5626":0,"5629":0,"5631":0,"5633":0,"5636":0,"5637":0,"5640":0,"5641":0,"5642":0,"5643":0,"5646":0,"5647":0,"5649":0,"5650":0,"5652":0,"5653":0,"5654":0,"5655":0,"5656":0,"5658":0,"5659":0,"5661":0,"5665":0,"5666":0,"5667":0,"5668":0,"5672":0,"5673":0,"5674":0,"5677":0,"5678":0,"5679":0,"5682":0,"5683":0,"5684":0,"5687":0,"5688":0,"5689":0,"5690":0,"5691":0,"5693":0,"5694":0,"5695":0,"5696":0,"5698":0,"5699":0,"5702":0,"5703":0,"5704":0,"5705":0,"5707":0,"5712":0,"5720":0,"5721":0,"5724":0,"5756":1,"5757":0,"5758":0,"5760":0,"5761":0,"5763":0,"5764":0,"5766":0,"5768":0,"5770":0,"5771":0,"5772":0,"5774":0,"5775":0,"5776":0,"5777":0,"5779":0,"5782":0,"5783":0,"5786":0,"5789":0,"5828":1,"5829":0,"5830":0,"5831":0,"5833":0,"5835":0,"5836":0,"5837":0,"5839":0,"5840":0,"5844":0,"5845":0,"5847":0,"5850":0,"5853":0,"5883":1,"5884":0,"5885":0,"5887":0,"5888":0,"5889":0,"5890":0,"5893":0,"5894":0,"5902":0,"5903":0,"5906":0,"5908":0,"5910":0,"5911":0,"5912":0,"5913":0,"5918":0,"5919":0,"5921":0,"5922":0,"5923":0,"5924":0,"5926":0,"5927":0,"5928":0,"5929":0,"5933":0,"5934":0,"5935":0,"5938":0,"5939":0,"5944":0,"5945":0,"5949":0,"5950":0,"5953":0,"5956":0,"5971":1,"5972":0,"5973":0,"5974":0,"5976":0,"5977":0,"5978":0,"5980":0,"5981":0,"5994":1,"5996":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/blob/internal/blockrangestream.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/blob/internal/blockrangestream.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":1,"97":0,"98":0,"99":0,"100":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"BlockRangeStream","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":71}}},"2":{"name":"(anonymous_2)","line":51,"loc":{"start":{"line":51,"column":32},"end":{"line":51,"column":59}}},"3":{"name":"(anonymous_3)","line":58,"loc":{"start":{"line":58,"column":34},"end":{"line":58,"column":63}}},"4":{"name":"(anonymous_4)","line":68,"loc":{"start":{"line":68,"column":97},"end":{"line":68,"column":135}}},"5":{"name":"(anonymous_5)","line":89,"loc":{"start":{"line":89,"column":44},"end":{"line":89,"column":56}}},"6":{"name":"(anonymous_6)","line":93,"loc":{"start":{"line":93,"column":20},"end":{"line":93,"column":32}}},"7":{"name":"(anonymous_7)","line":103,"loc":{"start":{"line":103,"column":42},"end":{"line":103,"column":62}}},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":46},"end":{"line":133,"column":77}}},"9":{"name":"(anonymous_9)","line":180,"loc":{"start":{"line":180,"column":35},"end":{"line":180,"column":47}}},"10":{"name":"(anonymous_10)","line":187,"loc":{"start":{"line":187,"column":36},"end":{"line":187,"column":48}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":60}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":50}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":50}},"4":{"start":{"line":24,"column":0},"end":{"line":46,"column":1}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":45}},"6":{"start":{"line":26,"column":2},"end":{"line":26,"column":29}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":19}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":37}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":23}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":27}},"11":{"start":{"line":31,"column":2},"end":{"line":31,"column":32}},"12":{"start":{"line":32,"column":2},"end":{"line":32,"column":33}},"13":{"start":{"line":33,"column":2},"end":{"line":33,"column":19}},"14":{"start":{"line":34,"column":2},"end":{"line":34,"column":23}},"15":{"start":{"line":35,"column":2},"end":{"line":35,"column":27}},"16":{"start":{"line":36,"column":2},"end":{"line":40,"column":3}},"17":{"start":{"line":37,"column":4},"end":{"line":37,"column":43}},"18":{"start":{"line":39,"column":4},"end":{"line":39,"column":26}},"19":{"start":{"line":41,"column":2},"end":{"line":45,"column":3}},"20":{"start":{"line":42,"column":4},"end":{"line":42,"column":39}},"21":{"start":{"line":44,"column":4},"end":{"line":44,"column":39}},"22":{"start":{"line":51,"column":0},"end":{"line":53,"column":2}},"23":{"start":{"line":52,"column":2},"end":{"line":52,"column":36}},"24":{"start":{"line":58,"column":0},"end":{"line":84,"column":2}},"25":{"start":{"line":59,"column":2},"end":{"line":61,"column":3}},"26":{"start":{"line":60,"column":4},"end":{"line":60,"column":17}},"27":{"start":{"line":63,"column":2},"end":{"line":65,"column":3}},"28":{"start":{"line":64,"column":4},"end":{"line":64,"column":64}},"29":{"start":{"line":67,"column":2},"end":{"line":67,"column":18}},"30":{"start":{"line":68,"column":2},"end":{"line":83,"column":5}},"31":{"start":{"line":69,"column":4},"end":{"line":82,"column":5}},"32":{"start":{"line":70,"column":6},"end":{"line":70,"column":22}},"33":{"start":{"line":72,"column":6},"end":{"line":72,"column":100}},"34":{"start":{"line":73,"column":6},"end":{"line":77,"column":7}},"35":{"start":{"line":75,"column":8},"end":{"line":75,"column":51}},"36":{"start":{"line":76,"column":8},"end":{"line":76,"column":72}},"37":{"start":{"line":79,"column":6},"end":{"line":79,"column":34}},"38":{"start":{"line":80,"column":6},"end":{"line":80,"column":28}},"39":{"start":{"line":81,"column":6},"end":{"line":81,"column":30}},"40":{"start":{"line":89,"column":0},"end":{"line":98,"column":2}},"41":{"start":{"line":90,"column":2},"end":{"line":90,"column":67}},"42":{"start":{"line":90,"column":60},"end":{"line":90,"column":67}},"43":{"start":{"line":92,"column":2},"end":{"line":92,"column":18}},"44":{"start":{"line":93,"column":2},"end":{"line":97,"column":5}},"45":{"start":{"line":94,"column":4},"end":{"line":94,"column":27}},"46":{"start":{"line":95,"column":4},"end":{"line":95,"column":28}},"47":{"start":{"line":96,"column":4},"end":{"line":96,"column":30}},"48":{"start":{"line":103,"column":0},"end":{"line":128,"column":2}},"49":{"start":{"line":104,"column":2},"end":{"line":104,"column":26}},"50":{"start":{"line":105,"column":2},"end":{"line":127,"column":3}},"51":{"start":{"line":106,"column":4},"end":{"line":106,"column":26}},"52":{"start":{"line":107,"column":4},"end":{"line":124,"column":5}},"53":{"start":{"line":108,"column":6},"end":{"line":123,"column":7}},"54":{"start":{"line":109,"column":8},"end":{"line":122,"column":9}},"55":{"start":{"line":110,"column":10},"end":{"line":115,"column":11}},"56":{"start":{"line":111,"column":12},"end":{"line":111,"column":47}},"57":{"start":{"line":112,"column":12},"end":{"line":112,"column":29}},"58":{"start":{"line":113,"column":17},"end":{"line":115,"column":11}},"59":{"start":{"line":114,"column":12},"end":{"line":114,"column":21}},"60":{"start":{"line":117,"column":10},"end":{"line":119,"column":11}},"61":{"start":{"line":118,"column":12},"end":{"line":118,"column":19}},"62":{"start":{"line":121,"column":10},"end":{"line":121,"column":53}},"63":{"start":{"line":126,"column":4},"end":{"line":126,"column":29}},"64":{"start":{"line":133,"column":0},"end":{"line":175,"column":2}},"65":{"start":{"line":134,"column":2},"end":{"line":134,"column":45}},"66":{"start":{"line":135,"column":2},"end":{"line":135,"column":25}},"67":{"start":{"line":136,"column":2},"end":{"line":169,"column":3}},"68":{"start":{"line":137,"column":4},"end":{"line":142,"column":5}},"69":{"start":{"line":138,"column":6},"end":{"line":138,"column":43}},"70":{"start":{"line":139,"column":6},"end":{"line":139,"column":24}},"71":{"start":{"line":140,"column":11},"end":{"line":142,"column":5}},"72":{"start":{"line":141,"column":6},"end":{"line":141,"column":15}},"73":{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},"74":{"start":{"line":145,"column":6},"end":{"line":145,"column":13}},"75":{"start":{"line":148,"column":4},"end":{"line":148,"column":38}},"76":{"start":{"line":150,"column":4},"end":{"line":150,"column":28}},"77":{"start":{"line":151,"column":4},"end":{"line":151,"column":27}},"78":{"start":{"line":152,"column":4},"end":{"line":152,"column":31}},"79":{"start":{"line":153,"column":4},"end":{"line":153,"column":45}},"80":{"start":{"line":154,"column":4},"end":{"line":154,"column":33}},"81":{"start":{"line":155,"column":4},"end":{"line":155,"column":22}},"82":{"start":{"line":156,"column":4},"end":{"line":156,"column":22}},"83":{"start":{"line":158,"column":4},"end":{"line":168,"column":5}},"84":{"start":{"line":159,"column":6},"end":{"line":159,"column":12}},"85":{"start":{"line":160,"column":11},"end":{"line":168,"column":5}},"86":{"start":{"line":161,"column":6},"end":{"line":161,"column":15}},"87":{"start":{"line":163,"column":6},"end":{"line":163,"column":61}},"88":{"start":{"line":164,"column":6},"end":{"line":164,"column":55}},"89":{"start":{"line":165,"column":6},"end":{"line":165,"column":47}},"90":{"start":{"line":166,"column":6},"end":{"line":166,"column":34}},"91":{"start":{"line":167,"column":6},"end":{"line":167,"column":41}},"92":{"start":{"line":172,"column":2},"end":{"line":172,"column":36}},"93":{"start":{"line":174,"column":2},"end":{"line":174,"column":13}},"94":{"start":{"line":180,"column":0},"end":{"line":182,"column":2}},"95":{"start":{"line":181,"column":2},"end":{"line":181,"column":22}},"96":{"start":{"line":187,"column":0},"end":{"line":192,"column":2}},"97":{"start":{"line":188,"column":2},"end":{"line":188,"column":23}},"98":{"start":{"line":189,"column":2},"end":{"line":191,"column":3}},"99":{"start":{"line":190,"column":4},"end":{"line":190,"column":26}},"100":{"start":{"line":194,"column":0},"end":{"line":194,"column":34}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"3":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"4":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"5":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"6":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":6},"end":{"line":73,"column":6}},{"start":{"line":73,"column":6},"end":{"line":73,"column":6}}]},"7":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"8":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":6},"end":{"line":90,"column":18}},{"start":{"line":90,"column":22},"end":{"line":90,"column":38}},{"start":{"line":90,"column":42},"end":{"line":90,"column":58}}]},"9":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":107,"column":4}},{"start":{"line":107,"column":4},"end":{"line":107,"column":4}}]},"10":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":8},"end":{"line":109,"column":8}},{"start":{"line":109,"column":8},"end":{"line":109,"column":8}}]},"11":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":10},"end":{"line":110,"column":10}},{"start":{"line":110,"column":10},"end":{"line":110,"column":10}}]},"12":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":14},"end":{"line":110,"column":45}},{"start":{"line":110,"column":49},"end":{"line":110,"column":58}},{"start":{"line":110,"column":62},"end":{"line":110,"column":97}}]},"13":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":17},"end":{"line":113,"column":17}},{"start":{"line":113,"column":17},"end":{"line":113,"column":17}}]},"14":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":10},"end":{"line":117,"column":10}},{"start":{"line":117,"column":10},"end":{"line":117,"column":10}}]},"15":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]},"16":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":8},"end":{"line":137,"column":40}},{"start":{"line":137,"column":44},"end":{"line":137,"column":54}},{"start":{"line":137,"column":58},"end":{"line":137,"column":96}}]},"17":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":11},"end":{"line":140,"column":11}},{"start":{"line":140,"column":11},"end":{"line":140,"column":11}}]},"18":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"19":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":158,"column":4}},{"start":{"line":158,"column":4},"end":{"line":158,"column":4}}]},"20":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":11},"end":{"line":160,"column":11}},{"start":{"line":160,"column":11},"end":{"line":160,"column":11}}]},"21":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":2},"end":{"line":189,"column":2}},{"start":{"line":189,"column":2},"end":{"line":189,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var Constants = require('./../../../common/util/constants');","var EventEmitter = require('events').EventEmitter;","var BlobUtilities = require('./../blobutilities');","","/**","* BlockBlob block range stream","*/","function BlockRangeStream(blobServiceClient, container, blob, options) {","  this.blobServiceClient = blobServiceClient;","  this.container = container;","  this.blob = blob;","  this._emitter = new EventEmitter();","  this._paused = false;","  this._emittedAll = false;","  this._emittedRangeType = null;","  this._emittedRangeIndex = null;","  this._offset = 0;","  this._rangelist = [];","  this._isEmitting = false;","  if (options.rangeStart) {","    this._startOffset = options.rangeStart;","  } else {","    this._startOffset = 0;","  }","  if (options.rangeEnd) {","    this._endOffset = options.rangeEnd;","  } else {","    this._endOffset = Number.MAX_VALUE;","  }","}","","/**","* Add event listener","*/","BlockRangeStream.prototype.on = function (event, listener) {","  this._emitter.on(event, listener);","};","","/**","* Get block list","*/","BlockRangeStream.prototype.list = function (options, callback) {","  if (!options) {","    options = {};","  }","  ","  if (!options.blockListFilter) {","    options.blockListFilter = BlobUtilities.BlockListFilter.ALL;","  }","  ","  var self = this;","  this.blobServiceClient.listBlocks(this.container, this.blob, options.blockListFilter, options, function (error, blocklist, response) {","    if (error) {","      callback(error);","    } else {","      var totalSize = parseInt(response.headers[Constants.HeaderConstants.BLOB_CONTENT_LENGTH], 10);","      if (!blocklist.CommittedBlocks) {","        //Convert single block blob to block blob range","        var name = 'NODESDK_BLOCKBLOB_RANGESTREAM';","        blocklist.CommittedBlocks = [{ Name : name, Size : totalSize }];","      }","      ","      self._rangelist = blocklist;","      self._emitBlockList();","      self = blocklist = null;","    }","  });","};","","/**","* Emit block ranges","*/","BlockRangeStream.prototype._emitBlockList = function () {","  if (this._paused || this._emittedAll || this._isEmitting) return;","  ","  var self = this;","  this._getTypeList(function () {","    self._rangelist = null;","    self._emittedAll = true;","    self._emitter.emit('end');","  });","};","","/**","* Get the block type list","*/","BlockRangeStream.prototype._getTypeList = function (callback) {","  this._isEmitting = true;","  try {","    var typeStart = false;","    if (this._rangelist) {","      for (var blockType in this._rangelist) {","        if (this._rangelist.hasOwnProperty(blockType)) {","          if (this._emittedRangeType === null || typeStart || this._emittedRangeType == blockType) {","            this._emittedRangeType = blockType;","            typeStart = true;","          } else if (this._emittedRangeType !== blockType) {","            continue;","          }","          ","          if (this._paused) {","            return;","          }","          ","          this._emitBlockRange (blockType, callback);","        }","      }","    }","  } finally {","    this._isEmitting = false;","  }","};","","/**","* Get the block list","*/","BlockRangeStream.prototype._emitBlockRange  = function (blockType, callback) {","  var blockList = this._rangelist[blockType];","  var indexStart = false;","  for (var blockIndex = 0; blockIndex < blockList.length; blockIndex++) {","    if (this._emittedRangeIndex === null || indexStart || this._emittedRangeIndex === blockIndex) {","      this._emittedRangeIndex = blockIndex;","      indexStart = true;","    } else if (this._emittedRangeIndex !== blockIndex) {","      continue;","    }","    ","    if (this._paused) {","      return;","    }","    ","    var range = blockList[blockIndex];","    // follow the same naming convention of page ranges and json","    range.name = range.Name;","    range.type = blockType;","    range.start = this._offset;","    this._offset += parseInt(range.Size, 10);","    range.end = this._offset - 1;","    delete range.Name;","    delete range.Size;","    ","    if (range.start > this._endOffset) {","      break;","    } else if (range.end < this._startOffset) {","      continue;","    } else {","      range.start = Math.max(range.start, this._startOffset);","      range.end = Math.min(range.end, this._endOffset);","      range.size = range.end - range.start + 1;","      range.dataSize = range.size;","      this._emitter.emit('range', range);","    }","  }","","  // remove the used range and avoid memory leak","  this._rangelist[blockType] = null;","","  callback();","};","","/**","* Pause the stream","*/","BlockRangeStream.prototype.pause = function () {","  this._paused = true;","};","","/**","* Resume the stream","*/","BlockRangeStream.prototype.resume = function () {","  this._paused = false;","  if (!this._isEmitting) {","    this._emitBlockList();","  }","};","","module.exports = BlockRangeStream;",""],"l":{"17":1,"18":1,"19":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"39":0,"41":0,"42":0,"44":0,"51":1,"52":0,"58":1,"59":0,"60":0,"63":0,"64":0,"67":0,"68":0,"69":0,"70":0,"72":0,"73":0,"75":0,"76":0,"79":0,"80":0,"81":0,"89":1,"90":0,"92":0,"93":0,"94":0,"95":0,"96":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"117":0,"118":0,"121":0,"126":0,"133":1,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"144":0,"145":0,"148":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"158":0,"159":0,"160":0,"161":0,"163":0,"164":0,"165":0,"166":0,"167":0,"172":0,"174":0,"180":1,"181":0,"187":1,"188":0,"189":0,"190":0,"194":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/blob/blobutilities.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/blob/blobutilities.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":25}},"2":{"start":{"line":24,"column":0},"end":{"line":98,"column":2}},"3":{"start":{"line":100,"column":0},"end":{"line":100,"column":31}}},"branchMap":{},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Expose 'BlobUtilities'.","exports = module.exports;","","/**","* Defines constants, enums, and utility functions for use with the Blob service.","* @namespace BlobUtilities","*/","var BlobUtilities = {","  /**","  * Permission types","  *","  * @const","  * @enum {string}","  */","  SharedAccessPermissions: {","    READ: 'r',","    ADD: 'a',","    CREATE: 'c',","    WRITE: 'w',","    DELETE: 'd',","    LIST: 'l'","  },","","  /**","  * Blob listing details.","  *","  * @const","  * @enum {string}","  */","  BlobListingDetails: {","    SNAPSHOTS: 'snapshots',","    METADATA: 'metadata',","    UNCOMMITTED_BLOBS: 'uncommittedblobs',","    COPY: 'copy'","  },","","  /**","  * Deletion options for blob snapshots","  *","  * @const","  * @enum {string}","  */","  SnapshotDeleteOptions: {","    SNAPSHOTS_ONLY: 'only',","    BLOB_AND_SNAPSHOTS: 'include'","  },","","  /**","  * Type of block list to retrieve","  *","  * @const","  * @enum {string}","  */","  BlockListFilter: {","    ALL: 'all',","    COMMITTED: 'committed',","    UNCOMMITTED: 'uncommitted'","  },","","  /**","  * Blobs and container public access types.","  *","  * @const","  * @enum {string}","  */","  BlobContainerPublicAccessType: {","    OFF: null,","    CONTAINER: 'container',","    BLOB: 'blob'","  },","","  /**","  * Describes actions that can be performed on a page blob sequence number.","  * @const","  * @enum","  */","  SequenceNumberAction: {","    MAX: 'max',","    UPDATE: 'update',","    INCREMENT: 'increment'","  }","};","","module.exports = BlobUtilities;"],"l":{"18":1,"24":1,"100":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/blob/internal/pagerangestream.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/blob/internal/pagerangestream.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"PageRangeStream","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":70}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":67}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":60}},"4":{"start":{"line":24,"column":0},"end":{"line":39,"column":1}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":84}},"6":{"start":{"line":27,"column":2},"end":{"line":31,"column":3}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":46}},"8":{"start":{"line":30,"column":4},"end":{"line":30,"column":78}},"9":{"start":{"line":32,"column":2},"end":{"line":36,"column":3}},"10":{"start":{"line":33,"column":4},"end":{"line":33,"column":46}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":82}},"12":{"start":{"line":37,"column":2},"end":{"line":37,"column":69}},"13":{"start":{"line":38,"column":2},"end":{"line":38,"column":52}},"14":{"start":{"line":41,"column":0},"end":{"line":41,"column":44}},"15":{"start":{"line":43,"column":0},"end":{"line":43,"column":33}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var util = require('util');","var RangeStream = require('./../../../common/streams/rangestream');","var Constants = require('./../../../common/util/constants');","","/**","* PageBlob page range stream","*/","function PageRangeStream(blobServiceClient, container, blob, options) {","  PageRangeStream['super_'].call(this, blobServiceClient, container, blob, options);","  ","  if (options.minRangeSize) {","    this._minRangeSize = options.minRangeSize;","  } else {","    this._minRangeSize = Constants.BlobConstants.MIN_WRITE_PAGE_SIZE_IN_BYTES;","  }","  if (options.maxRangeSize) {","    this._maxRangeSize = options.maxRangeSize;","  } else {","    this._maxRangeSize = Constants.BlobConstants.DEFAULT_WRITE_PAGE_SIZE_IN_BYTES;","  }","  this._lengthHeader = Constants.HeaderConstants.BLOB_CONTENT_LENGTH;","  this._listFunc = blobServiceClient.listPageRanges;","}","","util.inherits(PageRangeStream, RangeStream);","","module.exports = PageRangeStream;",""],"l":{"17":1,"18":1,"19":1,"24":1,"25":0,"27":0,"28":0,"30":0,"32":0,"33":0,"35":0,"37":0,"38":0,"41":1,"43":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/streams/rangestream.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/common/streams/rangestream.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":0,"143":1,"144":0,"145":1,"146":0,"147":0,"148":0,"149":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"RangeStream","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}}},"2":{"name":"(anonymous_2)","line":60,"loc":{"start":{"line":60,"column":29},"end":{"line":60,"column":58}}},"3":{"name":"(anonymous_3)","line":78,"loc":{"start":{"line":78,"column":15},"end":{"line":78,"column":50}}},"4":{"name":"(anonymous_4)","line":104,"loc":{"start":{"line":104,"column":25},"end":{"line":104,"column":37}}},"5":{"name":"(anonymous_5)","line":124,"loc":{"start":{"line":124,"column":44},"end":{"line":124,"column":62}}},"6":{"name":"(anonymous_6)","line":168,"loc":{"start":{"line":168,"column":37},"end":{"line":168,"column":82}}},"7":{"name":"(anonymous_7)","line":176,"loc":{"start":{"line":176,"column":36},"end":{"line":176,"column":74}}},"8":{"name":"(anonymous_8)","line":187,"loc":{"start":{"line":187,"column":43},"end":{"line":187,"column":71}}},"9":{"name":"(anonymous_9)","line":212,"loc":{"start":{"line":212,"column":35},"end":{"line":212,"column":47}}},"10":{"name":"(anonymous_10)","line":238,"loc":{"start":{"line":238,"column":41},"end":{"line":238,"column":97}}},"11":{"name":"(anonymous_11)","line":240,"loc":{"start":{"line":240,"column":55},"end":{"line":240,"column":71}}},"12":{"name":"(anonymous_12)","line":242,"loc":{"start":{"line":242,"column":51},"end":{"line":242,"column":86}}},"13":{"name":"(anonymous_13)","line":259,"loc":{"start":{"line":259,"column":27},"end":{"line":259,"column":54}}},"14":{"name":"(anonymous_14)","line":266,"loc":{"start":{"line":266,"column":30},"end":{"line":266,"column":42}}},"15":{"name":"(anonymous_15)","line":273,"loc":{"start":{"line":273,"column":31},"end":{"line":273,"column":43}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":41}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":33}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":47}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":50}},"5":{"start":{"line":25,"column":0},"end":{"line":55,"column":1}},"6":{"start":{"line":26,"column":2},"end":{"line":26,"column":37}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":37}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":23}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":27}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":30}},"11":{"start":{"line":31,"column":2},"end":{"line":31,"column":23}},"12":{"start":{"line":32,"column":2},"end":{"line":32,"column":26}},"13":{"start":{"line":33,"column":2},"end":{"line":33,"column":27}},"14":{"start":{"line":34,"column":2},"end":{"line":34,"column":33}},"15":{"start":{"line":35,"column":2},"end":{"line":35,"column":64}},"16":{"start":{"line":36,"column":2},"end":{"line":36,"column":76}},"17":{"start":{"line":37,"column":2},"end":{"line":37,"column":80}},"18":{"start":{"line":38,"column":2},"end":{"line":42,"column":3}},"19":{"start":{"line":39,"column":4},"end":{"line":39,"column":43}},"20":{"start":{"line":41,"column":4},"end":{"line":41,"column":26}},"21":{"start":{"line":43,"column":2},"end":{"line":43,"column":39}},"22":{"start":{"line":44,"column":2},"end":{"line":48,"column":3}},"23":{"start":{"line":45,"column":4},"end":{"line":45,"column":39}},"24":{"start":{"line":47,"column":4},"end":{"line":47,"column":39}},"25":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"26":{"start":{"line":50,"column":4},"end":{"line":50,"column":39}},"27":{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},"28":{"start":{"line":53,"column":4},"end":{"line":53,"column":34}},"29":{"start":{"line":60,"column":0},"end":{"line":117,"column":2}},"30":{"start":{"line":61,"column":2},"end":{"line":61,"column":32}},"31":{"start":{"line":62,"column":2},"end":{"line":62,"column":10}},"32":{"start":{"line":63,"column":2},"end":{"line":63,"column":79}},"33":{"start":{"line":65,"column":2},"end":{"line":71,"column":3}},"34":{"start":{"line":67,"column":4},"end":{"line":67,"column":43}},"35":{"start":{"line":68,"column":4},"end":{"line":68,"column":26}},"36":{"start":{"line":70,"column":4},"end":{"line":70,"column":77}},"37":{"start":{"line":72,"column":2},"end":{"line":72,"column":29}},"38":{"start":{"line":73,"column":2},"end":{"line":75,"column":3}},"39":{"start":{"line":74,"column":4},"end":{"line":74,"column":27}},"40":{"start":{"line":77,"column":2},"end":{"line":77,"column":18}},"41":{"start":{"line":78,"column":2},"end":{"line":111,"column":4}},"42":{"start":{"line":79,"column":4},"end":{"line":110,"column":5}},"43":{"start":{"line":80,"column":6},"end":{"line":80,"column":22}},"44":{"start":{"line":82,"column":6},"end":{"line":82,"column":73}},"45":{"start":{"line":83,"column":6},"end":{"line":83,"column":63}},"46":{"start":{"line":84,"column":6},"end":{"line":84,"column":46}},"47":{"start":{"line":86,"column":6},"end":{"line":93,"column":7}},"48":{"start":{"line":89,"column":8},"end":{"line":89,"column":68}},"49":{"start":{"line":90,"column":13},"end":{"line":93,"column":7}},"50":{"start":{"line":92,"column":8},"end":{"line":92,"column":96}},"51":{"start":{"line":95,"column":6},"end":{"line":97,"column":7}},"52":{"start":{"line":96,"column":8},"end":{"line":96,"column":38}},"53":{"start":{"line":98,"column":6},"end":{"line":98,"column":39}},"54":{"start":{"line":99,"column":6},"end":{"line":99,"column":43}},"55":{"start":{"line":100,"column":6},"end":{"line":100,"column":24}},"56":{"start":{"line":103,"column":6},"end":{"line":109,"column":7}},"57":{"start":{"line":104,"column":8},"end":{"line":108,"column":11}},"58":{"start":{"line":105,"column":10},"end":{"line":105,"column":24}},"59":{"start":{"line":106,"column":10},"end":{"line":106,"column":39}},"60":{"start":{"line":107,"column":10},"end":{"line":107,"column":22}},"61":{"start":{"line":113,"column":2},"end":{"line":113,"column":69}},"62":{"start":{"line":114,"column":2},"end":{"line":114,"column":30}},"63":{"start":{"line":115,"column":2},"end":{"line":115,"column":29}},"64":{"start":{"line":116,"column":2},"end":{"line":116,"column":58}},"65":{"start":{"line":124,"column":0},"end":{"line":163,"column":2}},"66":{"start":{"line":125,"column":2},"end":{"line":125,"column":34}},"67":{"start":{"line":126,"column":2},"end":{"line":126,"column":101}},"68":{"start":{"line":127,"column":2},"end":{"line":127,"column":26}},"69":{"start":{"line":128,"column":2},"end":{"line":128,"column":20}},"70":{"start":{"line":130,"column":2},"end":{"line":162,"column":3}},"71":{"start":{"line":131,"column":4},"end":{"line":131,"column":33}},"72":{"start":{"line":132,"column":4},"end":{"line":132,"column":58}},"73":{"start":{"line":134,"column":4},"end":{"line":154,"column":5}},"74":{"start":{"line":136,"column":6},"end":{"line":136,"column":51}},"75":{"start":{"line":138,"column":6},"end":{"line":142,"column":7}},"76":{"start":{"line":140,"column":8},"end":{"line":140,"column":57}},"77":{"start":{"line":141,"column":8},"end":{"line":141,"column":36}},"78":{"start":{"line":144,"column":6},"end":{"line":153,"column":7}},"79":{"start":{"line":146,"column":8},"end":{"line":146,"column":79}},"80":{"start":{"line":147,"column":8},"end":{"line":147,"column":36}},"81":{"start":{"line":148,"column":13},"end":{"line":153,"column":7}},"82":{"start":{"line":150,"column":8},"end":{"line":150,"column":57}},"83":{"start":{"line":152,"column":8},"end":{"line":152,"column":50}},"84":{"start":{"line":157,"column":4},"end":{"line":159,"column":5}},"85":{"start":{"line":158,"column":6},"end":{"line":158,"column":55}},"86":{"start":{"line":161,"column":4},"end":{"line":161,"column":44}},"87":{"start":{"line":168,"column":0},"end":{"line":171,"column":2}},"88":{"start":{"line":169,"column":2},"end":{"line":169,"column":104}},"89":{"start":{"line":170,"column":2},"end":{"line":170,"column":52}},"90":{"start":{"line":176,"column":0},"end":{"line":181,"column":2}},"91":{"start":{"line":177,"column":2},"end":{"line":177,"column":64}},"92":{"start":{"line":178,"column":2},"end":{"line":178,"column":49}},"93":{"start":{"line":179,"column":2},"end":{"line":179,"column":38}},"94":{"start":{"line":180,"column":2},"end":{"line":180,"column":22}},"95":{"start":{"line":187,"column":0},"end":{"line":207,"column":2}},"96":{"start":{"line":188,"column":2},"end":{"line":188,"column":46}},"97":{"start":{"line":189,"column":2},"end":{"line":189,"column":27}},"98":{"start":{"line":190,"column":2},"end":{"line":190,"column":22}},"99":{"start":{"line":192,"column":2},"end":{"line":206,"column":3}},"100":{"start":{"line":193,"column":4},"end":{"line":193,"column":84}},"101":{"start":{"line":194,"column":4},"end":{"line":194,"column":58}},"102":{"start":{"line":195,"column":4},"end":{"line":195,"column":28}},"103":{"start":{"line":196,"column":4},"end":{"line":196,"column":32}},"104":{"start":{"line":197,"column":4},"end":{"line":201,"column":5}},"105":{"start":{"line":198,"column":6},"end":{"line":198,"column":28}},"106":{"start":{"line":200,"column":6},"end":{"line":200,"column":38}},"107":{"start":{"line":202,"column":4},"end":{"line":202,"column":26}},"108":{"start":{"line":203,"column":4},"end":{"line":203,"column":30}},"109":{"start":{"line":204,"column":4},"end":{"line":204,"column":29}},"110":{"start":{"line":205,"column":4},"end":{"line":205,"column":29}},"111":{"start":{"line":212,"column":0},"end":{"line":233,"column":2}},"112":{"start":{"line":213,"column":2},"end":{"line":213,"column":67}},"113":{"start":{"line":213,"column":60},"end":{"line":213,"column":67}},"114":{"start":{"line":214,"column":2},"end":{"line":214,"column":26}},"115":{"start":{"line":215,"column":2},"end":{"line":232,"column":3}},"116":{"start":{"line":216,"column":4},"end":{"line":223,"column":5}},"117":{"start":{"line":217,"column":6},"end":{"line":219,"column":7}},"118":{"start":{"line":218,"column":8},"end":{"line":218,"column":15}},"119":{"start":{"line":220,"column":6},"end":{"line":220,"column":59}},"120":{"start":{"line":221,"column":6},"end":{"line":221,"column":41}},"121":{"start":{"line":222,"column":6},"end":{"line":222,"column":54}},"122":{"start":{"line":225,"column":4},"end":{"line":229,"column":5}},"123":{"start":{"line":226,"column":6},"end":{"line":226,"column":29}},"124":{"start":{"line":227,"column":6},"end":{"line":227,"column":30}},"125":{"start":{"line":228,"column":6},"end":{"line":228,"column":32}},"126":{"start":{"line":231,"column":4},"end":{"line":231,"column":29}},"127":{"start":{"line":238,"column":0},"end":{"line":254,"column":2}},"128":{"start":{"line":239,"column":2},"end":{"line":239,"column":14}},"129":{"start":{"line":240,"column":2},"end":{"line":240,"column":103}},"130":{"start":{"line":240,"column":73},"end":{"line":240,"column":85}},"131":{"start":{"line":240,"column":86},"end":{"line":240,"column":99}},"132":{"start":{"line":242,"column":2},"end":{"line":253,"column":5}},"133":{"start":{"line":243,"column":4},"end":{"line":252,"column":5}},"134":{"start":{"line":244,"column":6},"end":{"line":244,"column":22}},"135":{"start":{"line":246,"column":6},"end":{"line":246,"column":23}},"136":{"start":{"line":247,"column":6},"end":{"line":247,"column":80}},"137":{"start":{"line":248,"column":6},"end":{"line":248,"column":120}},"138":{"start":{"line":249,"column":6},"end":{"line":249,"column":56}},"139":{"start":{"line":250,"column":6},"end":{"line":250,"column":40}},"140":{"start":{"line":251,"column":6},"end":{"line":251,"column":39}},"141":{"start":{"line":259,"column":0},"end":{"line":261,"column":2}},"142":{"start":{"line":260,"column":2},"end":{"line":260,"column":36}},"143":{"start":{"line":266,"column":0},"end":{"line":268,"column":2}},"144":{"start":{"line":267,"column":2},"end":{"line":267,"column":22}},"145":{"start":{"line":273,"column":0},"end":{"line":278,"column":2}},"146":{"start":{"line":274,"column":2},"end":{"line":274,"column":23}},"147":{"start":{"line":275,"column":2},"end":{"line":277,"column":3}},"148":{"start":{"line":276,"column":4},"end":{"line":276,"column":22}},"149":{"start":{"line":280,"column":0},"end":{"line":280,"column":29}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"2":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"5":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"6":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"7":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"8":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":6}},{"start":{"line":86,"column":6},"end":{"line":86,"column":6}}]},"9":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":13},"end":{"line":90,"column":13}},{"start":{"line":90,"column":13},"end":{"line":90,"column":13}}]},"10":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":6},"end":{"line":95,"column":6}},{"start":{"line":95,"column":6},"end":{"line":95,"column":6}}]},"11":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":6},"end":{"line":103,"column":6}},{"start":{"line":103,"column":6},"end":{"line":103,"column":6}}]},"12":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"13":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":6},"end":{"line":138,"column":6}},{"start":{"line":138,"column":6},"end":{"line":138,"column":6}}]},"14":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":6},"end":{"line":144,"column":6}},{"start":{"line":144,"column":6},"end":{"line":144,"column":6}}]},"15":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":13},"end":{"line":148,"column":13}},{"start":{"line":148,"column":13},"end":{"line":148,"column":13}}]},"16":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"17":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":8},"end":{"line":157,"column":34}},{"start":{"line":157,"column":38},"end":{"line":157,"column":75}}]},"18":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":4},"end":{"line":197,"column":4}},{"start":{"line":197,"column":4},"end":{"line":197,"column":4}}]},"19":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":2},"end":{"line":213,"column":2}},{"start":{"line":213,"column":2},"end":{"line":213,"column":2}}]},"20":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":6},"end":{"line":213,"column":18}},{"start":{"line":213,"column":22},"end":{"line":213,"column":38}},{"start":{"line":213,"column":42},"end":{"line":213,"column":58}}]},"21":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":6},"end":{"line":217,"column":6}},{"start":{"line":217,"column":6},"end":{"line":217,"column":6}}]},"22":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":4},"end":{"line":225,"column":4}},{"start":{"line":225,"column":4},"end":{"line":225,"column":4}}]},"23":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":4},"end":{"line":243,"column":4}},{"start":{"line":243,"column":4},"end":{"line":243,"column":4}}]},"24":{"line":247,"type":"cond-expr","locations":[{"start":{"line":247,"column":44},"end":{"line":247,"column":75}},{"start":{"line":247,"column":78},"end":{"line":247,"column":79}}]},"25":{"line":248,"type":"cond-expr","locations":[{"start":{"line":248,"column":40},"end":{"line":248,"column":92}},{"start":{"line":248,"column":95},"end":{"line":248,"column":119}}]},"26":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":2},"end":{"line":275,"column":2}},{"start":{"line":275,"column":2},"end":{"line":275,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var azureCommon = require('./../common');","var azureutil = azureCommon.util;","var Constants = require('./../util/constants');","var EventEmitter = require('events').EventEmitter;","","/**","* Range stream","*/","function RangeStream(serviceClient, container, blob, options) {","  this.serviceClient = serviceClient;","  this._emitter = new EventEmitter();","  this._paused = false;","  this._emittedAll = false;","  this._emittedRangeIndex = 0;","  this._rangelist = [];","  this._resourcePath = [];","  this._isEmitting = false;","  this._rangeStreamEnded = false;","  this._lengthHeader = Constants.HeaderConstants.CONTENT_LENGTH;","  this._minRangeSize = Constants.BlobConstants.MIN_WRITE_PAGE_SIZE_IN_BYTES;","  this._maxRangeSize = Constants.BlobConstants.DEFAULT_WRITE_PAGE_SIZE_IN_BYTES;","  if (options.rangeStart) {","    this._startOffset = options.rangeStart;","  } else {","    this._startOffset = 0;","  }","  this._dataOffset = this._startOffset;","  if (options.rangeEnd) {","    this._endOffset = options.rangeEnd;","  } else {","    this._endOffset = Number.MAX_VALUE;","  }","  if (container) {","    this._resourcePath.push(container);","  }","  if (blob) {","    this._resourcePath.push(blob); ","  }","}","","/**","* Get range list","*/","RangeStream.prototype.list = function (options, callback) {","  var start = this._startOffset;","  var end;","  var singleRangeSize = Constants.BlobConstants.MAX_SINGLE_GET_PAGE_RANGE_SIZE;","","  if (this._listFunc === undefined) {","    // the default function puts the whole blob into a single list item","    this._listFunc = this._defaultListFunc;","    end = this._endOffset;","  } else {","    end = Math.min(this._startOffset + singleRangeSize - 1, this._endOffset);","  }","  options.rangeStart = start;","  if (end != Number.MAX_VALUE) {","    options.rangeEnd = end;","  }","","  var self = this;","  var onList = function (error, ranges, response) {","    if (error) {","      callback(error);","    } else {","      var totalSize = parseInt(response.headers[self._lengthHeader], 10);","      var endOffset = Math.min(totalSize - 1, self._endOffset);","      var rangeEnd = Math.min(end, endOffset);","  ","      if (!ranges.length) {","        // convert single object to range","        // start >= end means there is no valid regions","        ranges.push({ start : start, end : rangeEnd, dataSize: 0 });","      } else if (ranges[ranges.length - 1].end !== rangeEnd) {","        // don't forget the zero chunk at the end of range","        ranges.push({ start : ranges[ranges.length - 1].end + 1, end : rangeEnd, dataSize: 0 });","      }","      ","      if (end >= endOffset) {","        self._rangeStreamEnded = true;","      }","      self.resizeAndSaveRanges(ranges);","      self._startOffset += singleRangeSize;","      self._emitRange();","      ","      // This is only valid when listing pages because when listing with the default function, the \"endOffset\" will always equal to or greater than the \"end\". ","      if (end < endOffset) {","        process.nextTick(function () {","          ranges = null;","          self.list(options, callback);","          self = null;","        });","      }","    }","  };","","  var callArguments = Array.prototype.slice.call(this._resourcePath);","  callArguments.push(options);","  callArguments.push(onList);","  this._listFunc.apply(this.serviceClient, callArguments);","};","","/**","* Resize regions:","*   1. Merge small pieces into a range no less than this._minRangeSize","*   2. Split large pieces into ranges no more than this._maxRangeSize","*/","RangeStream.prototype.resizeAndSaveRanges = function (ranges) {","  var rangeList = this._rangelist;","  var holdingRange = { type : 'range', size : 0, dataSize : 0, start : this._startOffset, end : -1 };","  var readingRange = null;","  var rangeSize = 0;","","  for (var index = 0; index < ranges.length; index++) {","    readingRange = ranges[index];","    rangeSize = readingRange.end - holdingRange.start + 1;","    ","    if (rangeSize < this._minRangeSize) {","      // merge fragment ranges","      this.mergeRanges(holdingRange, readingRange);","    } else {","      if (holdingRange.end != -1) {","        // save the holding range list and hold the reading range","        this.splitAndSaveRanges(holdingRange, rangeList);","        holdingRange = readingRange;","      }","      ","      if (this._dataOffset != readingRange.start) {","        // padding zero for empty range and hold the reading range ","        this.putZeroRange(this._dataOffset, readingRange.start - 1, rangeList);","        holdingRange = readingRange;","      } else if (holdingRange.end == -1) {","        // if holdingRange is never set, it means readingRange exceeds MIN_WRITE_FILE_SIZE_IN_BYTES","        this.splitAndSaveRanges(readingRange, rangeList);","        // reading range has been saved, offset the holding start position for calculating the range size in next loop","        holdingRange.start = readingRange.end + 1;","      }","    }","    ","    // If it is the last range, put the holding range into list anyway","    if (index == ranges.length - 1 && holdingRange.end > holdingRange.start) {","      this.splitAndSaveRanges(holdingRange, rangeList);","    }","    ","    this._dataOffset = readingRange.end + 1;","  }","};","","/**","* Put a zero range into range list","*/","RangeStream.prototype.putZeroRange = function (startOffset, endOffset, rangeList) {","  var zeroDataRange = { type : 'range', size : -1, dataSize : 0, start : startOffset, end : endOffset };","  this.splitAndSaveRanges(zeroDataRange, rangeList);","};","","/**","* Merge small ranges","*/","RangeStream.prototype.mergeRanges = function (holdingRange, readingRange) {","  holdingRange.size = readingRange.end - holdingRange.start + 1;","  holdingRange.dataSize += readingRange.dataSize;","  holdingRange.end = readingRange.end;","  return holdingRange;","};","","/**","* Split range into small pieces with maximum _maxRangeSize and minimum _minRangeSize size.","* For example, [0, 10G - 1] => [0, 4MB - 1], [4MB, 8MB - 1] ... [10GB - 4MB, 10GB - 1]","*/","RangeStream.prototype.splitAndSaveRanges = function (range, rangeList) {","  var rangeSize = range.end - range.start + 1;","  var offset = range.start;","  var limitedSize = 0;","","  while (rangeSize > 0) {","    var newRange = { type : 'range', size : 0, dataSize : 0, start : -1, end : -1 };","    limitedSize = Math.min(rangeSize, this._maxRangeSize);","    newRange.start = offset;","    newRange.size = limitedSize;","    if (range.dataSize === 0) {","      newRange.dataSize = 0;","    } else {","      newRange.dataSize = limitedSize;","    }","    offset += limitedSize;","    newRange.end = offset - 1;","    rangeList.push(newRange);","    rangeSize -= limitedSize;","  }","};","","/**","* Emit a range","*/","RangeStream.prototype._emitRange = function () {","  if (this._paused || this._emittedAll || this._isEmitting) return;","  this._isEmitting = true;","  try {","    for (; this._emittedRangeIndex < this._rangelist.length; this._emittedRangeIndex++) {","      if (this._paused) {","        return;","      }","      var range = this._rangelist[this._emittedRangeIndex];","      this._emitter.emit('range', range);","      this._rangelist[this._emittedRangeIndex] = null;","    }","    ","    if (this._rangeStreamEnded) {","      this._rangelist = null;","      this._emittedAll = true;","      this._emitter.emit('end');","    }","  } finally {","    this._isEmitting = false;","  }","};","","/**","* The Default list function which puts the whole blob into one range.","*/","RangeStream.prototype._defaultListFunc = function (container, blob, optionsOrCallback, callback) {","  var options;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { options = o; callback = c; });","  ","  this.getBlobProperties(container, blob, options, function (error, result, response) {","    if (error) {","      callback(error);","    } else {","      var range = [{}];","      range[0].start = options.rangeStart ? Math.max(options.rangeStart, 0) : 0;","      range[0].end = options.rangeEnd ? Math.min(options.rangeEnd, result.contentLength - 1) : result.contentLength - 1;","      range[0].size = range[0].end - range[0].start + 1;","      range[0].dataSize = range[0].size;","      callback(error, range, response);","    }","  });","};","","/**","* Add event listener","*/","RangeStream.prototype.on = function (event, listener) {","  this._emitter.on(event, listener);","};","","/**","* Pause the stream","*/","RangeStream.prototype.pause = function () {","  this._paused = true;","};","","/**","* Resume the stream","*/","RangeStream.prototype.resume = function () {","  this._paused = false;","  if (!this._isEmitting) {","    this._emitRange();","  }","};","","module.exports = RangeStream;",""],"l":{"17":1,"18":1,"19":1,"20":1,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0,"43":0,"44":0,"45":0,"47":0,"49":0,"50":0,"52":0,"53":0,"60":1,"61":0,"62":0,"63":0,"65":0,"67":0,"68":0,"70":0,"72":0,"73":0,"74":0,"77":0,"78":0,"79":0,"80":0,"82":0,"83":0,"84":0,"86":0,"89":0,"90":0,"92":0,"95":0,"96":0,"98":0,"99":0,"100":0,"103":0,"104":0,"105":0,"106":0,"107":0,"113":0,"114":0,"115":0,"116":0,"124":1,"125":0,"126":0,"127":0,"128":0,"130":0,"131":0,"132":0,"134":0,"136":0,"138":0,"140":0,"141":0,"144":0,"146":0,"147":0,"148":0,"150":0,"152":0,"157":0,"158":0,"161":0,"168":1,"169":0,"170":0,"176":1,"177":0,"178":0,"179":0,"180":0,"187":1,"188":0,"189":0,"190":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"200":0,"202":0,"203":0,"204":0,"205":0,"212":1,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"220":0,"221":0,"222":0,"225":0,"226":0,"227":0,"228":0,"231":0,"238":1,"239":0,"240":0,"242":0,"243":0,"244":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"259":1,"260":0,"266":1,"267":0,"273":1,"274":0,"275":0,"276":0,"280":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/blob/models/blocklistresult.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/blob/models/blocklistresult.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":30,"loc":{"start":{"line":30,"column":20},"end":{"line":30,"column":43}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":37},"end":{"line":35,"column":54}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":40},"end":{"line":43,"column":57}}},"4":{"name":"(anonymous_4)","line":51,"loc":{"start":{"line":51,"column":42},"end":{"line":51,"column":59}}},"5":{"name":"(anonymous_5)","line":61,"loc":{"start":{"line":61,"column":16},"end":{"line":61,"column":40}}},"6":{"name":"(anonymous_6)","line":69,"loc":{"start":{"line":69,"column":44},"end":{"line":69,"column":60}}},"7":{"name":"(anonymous_7)","line":79,"loc":{"start":{"line":79,"column":46},"end":{"line":79,"column":62}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":54}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":40}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"5":{"start":{"line":30,"column":0},"end":{"line":59,"column":2}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":41}},"7":{"start":{"line":32,"column":2},"end":{"line":32,"column":119}},"8":{"start":{"line":34,"column":2},"end":{"line":40,"column":3}},"9":{"start":{"line":35,"column":4},"end":{"line":39,"column":7}},"10":{"start":{"line":36,"column":6},"end":{"line":38,"column":14}},"11":{"start":{"line":42,"column":2},"end":{"line":48,"column":3}},"12":{"start":{"line":43,"column":4},"end":{"line":47,"column":7}},"13":{"start":{"line":44,"column":6},"end":{"line":46,"column":14}},"14":{"start":{"line":50,"column":2},"end":{"line":56,"column":3}},"15":{"start":{"line":51,"column":4},"end":{"line":55,"column":7}},"16":{"start":{"line":52,"column":6},"end":{"line":54,"column":14}},"17":{"start":{"line":58,"column":2},"end":{"line":58,"column":39}},"18":{"start":{"line":61,"column":0},"end":{"line":85,"column":2}},"19":{"start":{"line":62,"column":2},"end":{"line":62,"column":27}},"20":{"start":{"line":64,"column":2},"end":{"line":72,"column":3}},"21":{"start":{"line":65,"column":4},"end":{"line":65,"column":73}},"22":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"23":{"start":{"line":67,"column":6},"end":{"line":67,"column":74}},"24":{"start":{"line":69,"column":4},"end":{"line":71,"column":7}},"25":{"start":{"line":70,"column":6},"end":{"line":70,"column":63}},"26":{"start":{"line":74,"column":2},"end":{"line":82,"column":3}},"27":{"start":{"line":75,"column":4},"end":{"line":75,"column":77}},"28":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"29":{"start":{"line":77,"column":6},"end":{"line":77,"column":78}},"30":{"start":{"line":79,"column":4},"end":{"line":81,"column":7}},"31":{"start":{"line":80,"column":6},"end":{"line":80,"column":63}},"32":{"start":{"line":84,"column":2},"end":{"line":84,"column":25}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"3":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"4":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"5":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":34}},{"start":{"line":64,"column":38},"end":{"line":64,"column":72}}]},"6":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"7":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"8":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":36}},{"start":{"line":74,"column":40},"end":{"line":74,"column":76}}]},"9":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var _ = require('underscore');","","var azureCommon = require('./../../../common/common');","var xmlbuilder = azureCommon.xmlbuilder;","var Constants = azureCommon.Constants;","","/**","* Builds an XML representation for a block list.","*","* @param  {array}  The block list.","* @return {string} The XML block list.","*/","exports.serialize = function (blockListJs) {","  var blockListDoc = xmlbuilder.create();","  blockListDoc = blockListDoc.begin(Constants.BlobConstants.BLOCK_LIST_ELEMENT, { version: '1.0', encoding: 'utf-8' });","","  if (blockListJs.LatestBlocks) {","    blockListJs.LatestBlocks.forEach(function (block) {","      blockListDoc = blockListDoc.ele(Constants.BlobConstants.LATEST_ELEMENT)","        .txt(new Buffer(block).toString('base64'))","        .up();","    });","  }","","  if (blockListJs.CommittedBlocks) {","    blockListJs.CommittedBlocks.forEach(function (block) {","      blockListDoc = blockListDoc.ele(Constants.BlobConstants.COMMITTED_ELEMENT)","        .txt(new Buffer(block).toString('base64'))","        .up();","    });","  }","","  if (blockListJs.UncommittedBlocks) {","    blockListJs.UncommittedBlocks.forEach(function (block) {","      blockListDoc = blockListDoc.ele(Constants.BlobConstants.UNCOMMITTED_ELEMENT)","        .txt(new Buffer(block).toString('base64'))","        .up();","    });","  }","","  return blockListDoc.doc().toString();","};","","exports.parse = function (blockListXml) {","  var blockListResult = {};","","  if (blockListXml.CommittedBlocks && blockListXml.CommittedBlocks.Block) {","    blockListResult.CommittedBlocks = blockListXml.CommittedBlocks.Block;","    if (!_.isArray(blockListResult.CommittedBlocks)) {","      blockListResult.CommittedBlocks = [blockListResult.CommittedBlocks];","    }","    blockListResult.CommittedBlocks.forEach(function(block) {","      block.Name = new Buffer(block.Name, 'base64').toString();","    });","  }","","  if (blockListXml.UncommittedBlocks && blockListXml.UncommittedBlocks.Block) {","    blockListResult.UncommittedBlocks = blockListXml.UncommittedBlocks.Block;","    if (!_.isArray(blockListResult.UncommittedBlocks)) {","      blockListResult.UncommittedBlocks = [blockListResult.UncommittedBlocks];","    }","    blockListResult.UncommittedBlocks.forEach(function(block) {","      block.Name = new Buffer(block.Name, 'base64').toString();","    });","  }","","  return blockListResult;","};"],"l":{"18":1,"20":1,"21":1,"22":1,"30":1,"31":0,"32":0,"34":0,"35":0,"36":0,"42":0,"43":0,"44":0,"50":0,"51":0,"52":0,"58":0,"61":1,"62":0,"64":0,"65":0,"66":0,"67":0,"69":0,"70":0,"74":0,"75":0,"76":0,"77":0,"79":0,"80":0,"84":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/blob/models/blobresult.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/blob/models/blobresult.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"BlobResult","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":37}}},"2":{"name":"(anonymous_2)","line":78,"loc":{"start":{"line":78,"column":19},"end":{"line":78,"column":38}}},"3":{"name":"(anonymous_3)","line":148,"loc":{"start":{"line":148,"column":48},"end":{"line":148,"column":67}}},"4":{"name":"(anonymous_4)","line":151,"loc":{"start":{"line":151,"column":35},"end":{"line":151,"column":75}}},"5":{"name":"(anonymous_5)","line":166,"loc":{"start":{"line":166,"column":45},"end":{"line":166,"column":61}}},"6":{"name":"(anonymous_6)","line":182,"loc":{"start":{"line":182,"column":32},"end":{"line":182,"column":61}}},"7":{"name":"(anonymous_7)","line":183,"loc":{"start":{"line":183,"column":34},"end":{"line":183,"column":74}}},"8":{"name":"(anonymous_8)","line":246,"loc":{"start":{"line":246,"column":35},"end":{"line":246,"column":64}}},"9":{"name":"(anonymous_9)","line":247,"loc":{"start":{"line":247,"column":34},"end":{"line":247,"column":74}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":54}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":33}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":48}},"6":{"start":{"line":68,"column":0},"end":{"line":76,"column":1}},"7":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"8":{"start":{"line":70,"column":4},"end":{"line":70,"column":31}},"9":{"start":{"line":73,"column":2},"end":{"line":75,"column":3}},"10":{"start":{"line":74,"column":4},"end":{"line":74,"column":21}},"11":{"start":{"line":78,"column":0},"end":{"line":102,"column":2}},"12":{"start":{"line":79,"column":2},"end":{"line":79,"column":36}},"13":{"start":{"line":81,"column":2},"end":{"line":94,"column":3}},"14":{"start":{"line":82,"column":4},"end":{"line":93,"column":5}},"15":{"start":{"line":83,"column":6},"end":{"line":92,"column":7}},"16":{"start":{"line":85,"column":8},"end":{"line":85,"column":83}},"17":{"start":{"line":86,"column":13},"end":{"line":92,"column":7}},"18":{"start":{"line":87,"column":8},"end":{"line":87,"column":86}},"19":{"start":{"line":88,"column":8},"end":{"line":88,"column":44}},"20":{"start":{"line":89,"column":8},"end":{"line":89,"column":104}},"21":{"start":{"line":91,"column":8},"end":{"line":91,"column":71}},"22":{"start":{"line":97,"column":2},"end":{"line":99,"column":3}},"23":{"start":{"line":98,"column":4},"end":{"line":98,"column":76}},"24":{"start":{"line":101,"column":2},"end":{"line":101,"column":20}},"25":{"start":{"line":104,"column":0},"end":{"line":146,"column":2}},"26":{"start":{"line":148,"column":0},"end":{"line":176,"column":2}},"27":{"start":{"line":149,"column":2},"end":{"line":149,"column":18}},"28":{"start":{"line":151,"column":2},"end":{"line":161,"column":4}},"29":{"start":{"line":152,"column":4},"end":{"line":160,"column":5}},"30":{"start":{"line":153,"column":6},"end":{"line":153,"column":114}},"31":{"start":{"line":155,"column":6},"end":{"line":159,"column":7}},"32":{"start":{"line":156,"column":8},"end":{"line":156,"column":67}},"33":{"start":{"line":157,"column":8},"end":{"line":157,"column":59}},"34":{"start":{"line":158,"column":8},"end":{"line":158,"column":57}},"35":{"start":{"line":164,"column":2},"end":{"line":164,"column":96}},"36":{"start":{"line":166,"column":2},"end":{"line":170,"column":5}},"37":{"start":{"line":167,"column":4},"end":{"line":167,"column":27}},"38":{"start":{"line":168,"column":4},"end":{"line":168,"column":42}},"39":{"start":{"line":169,"column":4},"end":{"line":169,"column":49}},"40":{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},"41":{"start":{"line":174,"column":4},"end":{"line":174,"column":64}},"42":{"start":{"line":182,"column":0},"end":{"line":240,"column":2}},"43":{"start":{"line":183,"column":2},"end":{"line":188,"column":4}},"44":{"start":{"line":184,"column":4},"end":{"line":184,"column":92}},"45":{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},"46":{"start":{"line":186,"column":6},"end":{"line":186,"column":64}},"47":{"start":{"line":190,"column":2},"end":{"line":239,"column":3}},"48":{"start":{"line":192,"column":4},"end":{"line":192,"column":96}},"49":{"start":{"line":195,"column":4},"end":{"line":195,"column":104}},"50":{"start":{"line":198,"column":4},"end":{"line":198,"column":104}},"51":{"start":{"line":201,"column":4},"end":{"line":201,"column":110}},"52":{"start":{"line":204,"column":4},"end":{"line":204,"column":98}},"53":{"start":{"line":207,"column":4},"end":{"line":207,"column":94}},"54":{"start":{"line":210,"column":4},"end":{"line":210,"column":79}},"55":{"start":{"line":213,"column":4},"end":{"line":213,"column":86}},"56":{"start":{"line":216,"column":4},"end":{"line":224,"column":5}},"57":{"start":{"line":217,"column":6},"end":{"line":217,"column":51}},"58":{"start":{"line":219,"column":6},"end":{"line":221,"column":7}},"59":{"start":{"line":220,"column":8},"end":{"line":220,"column":31}},"60":{"start":{"line":223,"column":6},"end":{"line":223,"column":59}},"61":{"start":{"line":227,"column":4},"end":{"line":227,"column":69}},"62":{"start":{"line":230,"column":4},"end":{"line":230,"column":67}},"63":{"start":{"line":233,"column":4},"end":{"line":233,"column":81}},"64":{"start":{"line":234,"column":4},"end":{"line":234,"column":94}},"65":{"start":{"line":236,"column":4},"end":{"line":238,"column":5}},"66":{"start":{"line":237,"column":6},"end":{"line":237,"column":60}},"67":{"start":{"line":246,"column":0},"end":{"line":280,"column":2}},"68":{"start":{"line":247,"column":2},"end":{"line":252,"column":4}},"69":{"start":{"line":248,"column":4},"end":{"line":248,"column":88}},"70":{"start":{"line":249,"column":4},"end":{"line":251,"column":5}},"71":{"start":{"line":250,"column":6},"end":{"line":250,"column":60}},"72":{"start":{"line":254,"column":2},"end":{"line":279,"column":3}},"73":{"start":{"line":256,"column":4},"end":{"line":256,"column":96}},"74":{"start":{"line":259,"column":4},"end":{"line":259,"column":104}},"75":{"start":{"line":262,"column":4},"end":{"line":262,"column":104}},"76":{"start":{"line":265,"column":4},"end":{"line":265,"column":110}},"77":{"start":{"line":268,"column":4},"end":{"line":268,"column":98}},"78":{"start":{"line":271,"column":4},"end":{"line":271,"column":94}},"79":{"start":{"line":274,"column":4},"end":{"line":274,"column":67}},"80":{"start":{"line":276,"column":4},"end":{"line":278,"column":5}},"81":{"start":{"line":277,"column":6},"end":{"line":277,"column":60}},"82":{"start":{"line":282,"column":0},"end":{"line":282,"column":28}}},"branchMap":{"1":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"2":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"3":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"4":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":6}},{"start":{"line":83,"column":6},"end":{"line":83,"column":6}}]},"5":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":13},"end":{"line":86,"column":13}},{"start":{"line":86,"column":13},"end":{"line":86,"column":13}}]},"6":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"7":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]},"8":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":8},"end":{"line":152,"column":72}},{"start":{"line":152,"column":76},"end":{"line":152,"column":113}}]},"9":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":6},"end":{"line":155,"column":6}},{"start":{"line":155,"column":6},"end":{"line":155,"column":6}}]},"10":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":2},"end":{"line":173,"column":2}},{"start":{"line":173,"column":2},"end":{"line":173,"column":2}}]},"11":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":185,"column":4}},{"start":{"line":185,"column":4},"end":{"line":185,"column":4}}]},"12":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":2},"end":{"line":190,"column":2}},{"start":{"line":190,"column":2},"end":{"line":190,"column":2}}]},"13":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"14":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":6},"end":{"line":219,"column":6}},{"start":{"line":219,"column":6},"end":{"line":219,"column":6}}]},"15":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":4},"end":{"line":236,"column":4}},{"start":{"line":236,"column":4},"end":{"line":236,"column":4}}]},"16":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":4},"end":{"line":249,"column":4}},{"start":{"line":249,"column":4},"end":{"line":249,"column":4}}]},"17":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":2},"end":{"line":254,"column":2}},{"start":{"line":254,"column":2},"end":{"line":254,"column":2}}]},"18":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":4},"end":{"line":276,"column":4}},{"start":{"line":276,"column":4},"end":{"line":276,"column":4}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var _ = require('underscore');","","var azureCommon = require('./../../../common/common');","var azureutil = azureCommon.util;","var Constants = azureCommon.Constants;","var HeaderConstants = Constants.HeaderConstants;","","/**","* Creates a new BlobResult object.","* @class","* The BlobResult class is used to store the blob information.","* "," * @property  {string}                      container                             The container name."," * @property  {string}                      name                                  The blob name."," * @property  {object}                      metadata                              The metadata key/value pair."," * @property  {string}                      etag                                  The etag."," * @property  {string}                      lastModified                          The date/time that the blob was last modified."," * @property  {string}                      contentLength                         The size of the blob in bytes."," * @property  {string}                      blobType                              The blob type."," * @property  {boolean}                     isIncrementalCopy                     If the blob is incremental copy blob."," * @property  {string}                      requestId                             The request id."," * @property  {string}                      sequenceNumber                        The current sequence number for a page blob."," * @property  {string}                      contentRange                          The content range."," * @property  {string}                      committedBlockCount                   The committed block count."," * @property  {string}                      serverEncrypted                       If the blob data and application metadata are completely encrypted using the specified algorithm. true/false."," * @property  {object}                      contentSettings                       The content settings."," * @property  {string}                      contentSettings.contentType           The content type."," * @property  {string}                      contentSettings.contentEncoding       The content encoding."," * @property  {string}                      contentSettings.contentLanguage       The content language."," * @property  {string}                      contentSettings.cacheControl          The cache control."," * @property  {string}                      contentSettings.contentDisposition    The content disposition."," * @property  {string}                      contentSettings.contentMD5            The content MD5 hash."," * @property  {object}                      lease                                 The lease information."," * @property  {string}                      lease.id                              The lease id."," * @property  {string}                      lease.status                          The lease status."," * @property  {string}                      lease.state                           The lease state."," * @property  {string}                      lease.duration                        The lease duration."," * @property  {object}                      copy                                  The copy information."," * @property  {string}                      copy.id                               The copy id."," * @property  {string}                      copy.status                           The copy status."," * @property  {string}                      copy.completionTime                   The copy completion time. "," * @property  {string}                      copy.statusDescription                The copy status description."," * @property  {string}                      copy.destinationSnapshot              The snapshot time of the last successful incremental copy snapshot for this blob."," * @property  {string}                      copy.progress                         The copy progress."," * @property  {string}                      copy.source                           The copy source."," * ","* @constructor","* @param {string} [container]  The container name.","* @param {string} [name]       The blob name.","*/","function BlobResult(container, name) {","  if (container) {","    this.container = container;","  }","","  if (name) {","    this.name = name;","  }","}","","BlobResult.parse = function (blobXml) {","  var blobResult = new BlobResult();","  ","  for (var propertyName in blobXml) {","    if (blobXml.hasOwnProperty(propertyName)) {","      if (propertyName === 'Properties') {","        //  Lift out the properties onto the main object to keep consistent across all APIs like: getBlobProperties","        azureutil.setPropertyValueFromXML(blobResult, blobXml[propertyName], true);","      } else if (propertyName === 'Metadata') {","        var resultPropertyName = azureutil.normalizePropertyNameFromXML(propertyName);","        blobResult[resultPropertyName] = {};","        azureutil.setPropertyValueFromXML(blobResult[resultPropertyName], blobXml[propertyName], false);","      } else {","        blobResult[propertyName.toLowerCase()] = blobXml[propertyName];","      }","    }","  }","","  // convert isIncrementalCopy to boolean type","  if (blobResult.isIncrementalCopy !== undefined) {","    blobResult.isIncrementalCopy = (blobResult.isIncrementalCopy == 'true');","  }","","  return blobResult;","};","","var headersForProperties = {","  'lastModified': 'LAST_MODIFIED',","  'etag': 'ETAG',","  'sequenceNumber': 'SEQUENCE_NUMBER',","  'blobType': 'BLOB_TYPE',","  'contentLength': 'CONTENT_LENGTH',","  'blobContentLength': 'BLOB_CONTENT_LENGTH',","  'contentRange': 'CONTENT_RANGE',","  'committedBlockCount': 'BLOB_COMMITTED_BLOCK_COUNT',","  'serverEncrypted': 'SERVER_ENCRYPTED',","  'requestId': 'REQUEST_ID',","  ","  'range': 'RANGE',","  'blobRange': 'STORAGE_RANGE',","  'getContentMd5': 'RANGE_GET_CONTENT_MD5',","  'acceptRanges': 'ACCEPT_RANGES',","  'appendOffset': 'BLOB_APPEND_OFFSET',","","  'isIncrementalCopy': 'INCREMENTAL_COPY',","  ","  // ContentSettings","  'contentSettings.contentType': 'CONTENT_TYPE',","  'contentSettings.contentEncoding': 'CONTENT_ENCODING',","  'contentSettings.contentLanguage': 'CONTENT_LANGUAGE',","  'contentSettings.cacheControl': 'CACHE_CONTROL',","  'contentSettings.contentDisposition': 'CONTENT_DISPOSITION',","  'contentSettings.contentMD5': 'CONTENT_MD5',","","  // Lease","  'lease.id': 'LEASE_ID',","  'lease.status': 'LEASE_STATUS',","  'lease.duration': 'LEASE_DURATION',","  'lease.state': 'LEASE_STATE',","","  // Copy","  'copy.id': 'COPY_ID',","  'copy.status': 'COPY_STATUS',","  'copy.source': 'COPY_SOURCE',","  'copy.progress': 'COPY_PROGRESS',","  'copy.completionTime': 'COPY_COMPLETION_TIME',","  'copy.statusDescription': 'COPY_STATUS_DESCRIPTION',","  'copy.destinationSnapshot': 'COPY_DESTINATION_SNAPSHOT'","};","","BlobResult.prototype.getPropertiesFromHeaders = function (headers) {","  var self = this;","","  var setBlobPropertyFromHeaders = function (blobProperty, headerProperty) {","    if (!azureutil.tryGetValueChain(self, blobProperty.split('.'), null) && headers[headerProperty.toLowerCase()]) {","      azureutil.setObjectInnerPropertyValue(self, blobProperty.split('.'), headers[headerProperty.toLowerCase()]);","      ","      if (blobProperty === 'copy.progress') {","        var info = azureutil.parseCopyProgress(self.copy.progress);","        self.copy.bytesCopied = parseInt(info.bytesCopied);","        self.copy.totalBytes = parseInt(info.totalBytes);","      }","    }","  };","","  // For range get, 'x-ms-blob-content-md5' indicate the overall MD5 of the blob. Try to set the contentMD5 using this header if it presents","  setBlobPropertyFromHeaders('contentSettings.contentMD5', HeaderConstants['BLOB_CONTENT_MD5']);","  ","  _.chain(headersForProperties).pairs().each(function (pair) {","    var property = pair[0];","    var header = HeaderConstants[pair[1]];","    setBlobPropertyFromHeaders(property, header);","  });","","  // convert isIncrementalCopy to boolean type","  if (self.isIncrementalCopy !== undefined) {","    self.isIncrementalCopy = (self.isIncrementalCopy == 'true');","  }","};","","/**","* This method sets the HTTP headers and is used by all methods except setBlobProperties and commitBlocks. Those 2 methods will set the x-ms-* headers using setPropertiesFromBlob.","* @ignore","*/","BlobResult.setHeadersFromBlob = function (webResource, blob) {","  var setHeaderPropertyFromBlob = function (headerProperty, blobProperty) {","    var blobPropertyValue = azureutil.tryGetValueChain(blob, blobProperty.split('.'), null);","    if (blobPropertyValue) {","      webResource.withHeader(headerProperty, blobPropertyValue);","    }","  };","","  if (blob) {","    // Content-Type","    setHeaderPropertyFromBlob(HeaderConstants.BLOB_CONTENT_TYPE, 'contentSettings.contentType');","","    // Content-Encoding","    setHeaderPropertyFromBlob(HeaderConstants.BLOB_CONTENT_ENCODING, 'contentSettings.contentEncoding');","","    // Content-Language","    setHeaderPropertyFromBlob(HeaderConstants.BLOB_CONTENT_LANGUAGE, 'contentSettings.contentLanguage');","","    // Content-Disposition","    setHeaderPropertyFromBlob(HeaderConstants.BLOB_CONTENT_DISPOSITION, 'contentSettings.contentDisposition');","","    // Cache-Control","    setHeaderPropertyFromBlob(HeaderConstants.BLOB_CACHE_CONTROL, 'contentSettings.cacheControl');","","    // Blob's Content-MD5","    setHeaderPropertyFromBlob(HeaderConstants.BLOB_CONTENT_MD5, 'contentSettings.contentMD5');","","    // Content-Length","    setHeaderPropertyFromBlob(HeaderConstants.CONTENT_LENGTH, 'contentLength');","","    // transactional Content-MD5","    setHeaderPropertyFromBlob(HeaderConstants.CONTENT_MD5, 'transactionalContentMD5');","","    // Range","    if (!azureutil.objectIsNull(blob.rangeStart)) {","      var range = 'bytes=' + blob.rangeStart + '-';","","      if (!azureutil.objectIsNull(blob.rangeEnd)) {","        range += blob.rangeEnd;","      }","","      webResource.withHeader(HeaderConstants.RANGE, range);","    }","","    // Blob Type","    setHeaderPropertyFromBlob(HeaderConstants.BLOB_TYPE, 'blobType');","","    // Lease id","    setHeaderPropertyFromBlob(HeaderConstants.LEASE_ID, 'leaseId');","","    // Sequence number","    setHeaderPropertyFromBlob(HeaderConstants.SEQUENCE_NUMBER, 'sequenceNumber');","    setHeaderPropertyFromBlob(HeaderConstants.SEQUENCE_NUMBER_ACTION, 'sequenceNumberAction');","","    if (blob.metadata) {","      webResource.addOptionalMetadataHeaders(blob.metadata);","    }","  }","};","","/**","* This method sets the x-ms-* headers and is used by setBlobProperties and commitBlocks. All other methods will set the regular HTTP headers using setHeadersFromBlob.","* @ignore","*/","BlobResult.setPropertiesFromBlob = function (webResource, blob) {","  var setHeaderPropertyFromBlob = function (headerProperty, blobProperty) {","    var propertyValue = azureutil.tryGetValueChain(blob, blobProperty.split('.'), null);","    if (propertyValue) {","      webResource.withHeader(headerProperty, propertyValue);","    }","  };","","  if (blob) {","    // Content-Type","    setHeaderPropertyFromBlob(HeaderConstants.BLOB_CONTENT_TYPE, 'contentSettings.contentType');","","    // Content-Encoding","    setHeaderPropertyFromBlob(HeaderConstants.BLOB_CONTENT_ENCODING, 'contentSettings.contentEncoding');","","    // Content-Language","    setHeaderPropertyFromBlob(HeaderConstants.BLOB_CONTENT_LANGUAGE, 'contentSettings.contentLanguage');","","    // Content-Disposition","    setHeaderPropertyFromBlob(HeaderConstants.BLOB_CONTENT_DISPOSITION, 'contentSettings.contentDisposition');","","    // Cache-Control","    setHeaderPropertyFromBlob(HeaderConstants.BLOB_CACHE_CONTROL, 'contentSettings.cacheControl');","","    // Content-MD5","    setHeaderPropertyFromBlob(HeaderConstants.BLOB_CONTENT_MD5, 'contentSettings.contentMD5');","","    // Lease id","    setHeaderPropertyFromBlob(HeaderConstants.LEASE_ID, 'leaseId');","","    if (blob.metadata) {","      webResource.addOptionalMetadataHeaders(blob.metadata);","    }","  }","};","","module.exports = BlobResult;",""],"l":{"18":1,"20":1,"21":1,"22":1,"23":1,"68":1,"69":0,"70":0,"73":0,"74":0,"78":1,"79":0,"81":0,"82":0,"83":0,"85":0,"86":0,"87":0,"88":0,"89":0,"91":0,"97":0,"98":0,"101":0,"104":1,"148":1,"149":0,"151":0,"152":0,"153":0,"155":0,"156":0,"157":0,"158":0,"164":0,"166":0,"167":0,"168":0,"169":0,"173":0,"174":0,"182":1,"183":0,"184":0,"185":0,"186":0,"190":0,"192":0,"195":0,"198":0,"201":0,"204":0,"207":0,"210":0,"213":0,"216":0,"217":0,"219":0,"220":0,"223":0,"227":0,"230":0,"233":0,"234":0,"236":0,"237":0,"246":1,"247":0,"248":0,"249":0,"250":0,"254":0,"256":0,"259":0,"262":0,"265":0,"268":0,"271":0,"274":0,"276":0,"277":0,"282":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/blob/models/containerresult.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/blob/models/containerresult.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"ContainerResult","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":50}}},"2":{"name":"(anonymous_2)","line":55,"loc":{"start":{"line":55,"column":24},"end":{"line":55,"column":48}}},"3":{"name":"(anonymous_3)","line":80,"loc":{"start":{"line":80,"column":53},"end":{"line":80,"column":72}}},"4":{"name":"(anonymous_4)","line":83,"loc":{"start":{"line":83,"column":40},"end":{"line":83,"column":85}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":54}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":38}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":48}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":48}},"6":{"start":{"line":45,"column":0},"end":{"line":53,"column":1}},"7":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"8":{"start":{"line":47,"column":4},"end":{"line":47,"column":21}},"9":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"10":{"start":{"line":51,"column":4},"end":{"line":51,"column":47}},"11":{"start":{"line":55,"column":0},"end":{"line":78,"column":2}},"12":{"start":{"line":56,"column":2},"end":{"line":56,"column":46}},"13":{"start":{"line":58,"column":2},"end":{"line":71,"column":3}},"14":{"start":{"line":59,"column":4},"end":{"line":70,"column":5}},"15":{"start":{"line":60,"column":6},"end":{"line":69,"column":7}},"16":{"start":{"line":62,"column":8},"end":{"line":62,"column":93}},"17":{"start":{"line":63,"column":13},"end":{"line":69,"column":7}},"18":{"start":{"line":64,"column":8},"end":{"line":64,"column":86}},"19":{"start":{"line":65,"column":8},"end":{"line":65,"column":49}},"20":{"start":{"line":66,"column":8},"end":{"line":66,"column":114}},"21":{"start":{"line":68,"column":8},"end":{"line":68,"column":81}},"22":{"start":{"line":73,"column":2},"end":{"line":75,"column":3}},"23":{"start":{"line":74,"column":4},"end":{"line":74,"column":88}},"24":{"start":{"line":77,"column":2},"end":{"line":77,"column":25}},"25":{"start":{"line":80,"column":0},"end":{"line":107,"column":2}},"26":{"start":{"line":81,"column":2},"end":{"line":81,"column":18}},"27":{"start":{"line":83,"column":2},"end":{"line":87,"column":4}},"28":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"29":{"start":{"line":85,"column":6},"end":{"line":85,"column":119}},"30":{"start":{"line":89,"column":2},"end":{"line":89,"column":64}},"31":{"start":{"line":90,"column":2},"end":{"line":90,"column":81}},"32":{"start":{"line":91,"column":2},"end":{"line":91,"column":80}},"33":{"start":{"line":92,"column":2},"end":{"line":92,"column":78}},"34":{"start":{"line":93,"column":2},"end":{"line":93,"column":84}},"35":{"start":{"line":94,"column":2},"end":{"line":94,"column":75}},"36":{"start":{"line":96,"column":2},"end":{"line":101,"column":3}},"37":{"start":{"line":97,"column":4},"end":{"line":97,"column":77}},"38":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"39":{"start":{"line":99,"column":6},"end":{"line":99,"column":75}},"40":{"start":{"line":103,"column":2},"end":{"line":106,"column":3}},"41":{"start":{"line":105,"column":4},"end":{"line":105,"column":83}},"42":{"start":{"line":116,"column":0},"end":{"line":116,"column":33}}},"branchMap":{"1":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"3":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"4":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":6}},{"start":{"line":60,"column":6},"end":{"line":60,"column":6}}]},"5":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":13},"end":{"line":63,"column":13}},{"start":{"line":63,"column":13},"end":{"line":63,"column":13}}]},"6":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"7":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"8":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":8},"end":{"line":84,"column":77}},{"start":{"line":84,"column":81},"end":{"line":84,"column":118}}]},"9":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":96,"column":2}},{"start":{"line":96,"column":2},"end":{"line":96,"column":2}}]},"10":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"11":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":2},"end":{"line":103,"column":2}},{"start":{"line":103,"column":2},"end":{"line":103,"column":2}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var azureCommon = require('./../../../common/common');","var azureutil = azureCommon.util;","var Constants = azureCommon.Constants;","","var HeaderConstants = Constants.HeaderConstants;","var BlobUtilities = require('../blobutilities');","","/**","* Creates a new ContainerResult object.","* @class","* The ContainerResult class is used to store the container information.","* "," * @property  {string}                      name                                  The container name."," * @property  {string}                      publicAccessLevel                     The public access level."," * @property  {object}                      metadata                              The metadata key/value pair."," * @property  {string}                      etag                                  The etag."," * @property  {string}                      lastModified                          The date/time that the container was last modified."," * @property  {string}                      requestId                             The request id."," * @property  {object}                      lease                                 The lease information."," * @property  {string}                      lease.status                          The lease status."," * @property  {string}                      lease.state                           The lease state."," * @property  {string}                      lease.duration                        The lease duration."," * ","* @constructor","* @param {string} [container]               The container name.","* @param {string} [publicAccessLevel]       The public access level.","*/","function ContainerResult(name, publicAccessLevel) {","  if (name) {","    this.name = name;","  }","","  if (publicAccessLevel) {","    this.publicAccessLevel = publicAccessLevel;","  }","}","","ContainerResult.parse = function (containerXml) {","  var containerResult = new ContainerResult();","  ","  for (var propertyName in containerXml) {","    if (containerXml.hasOwnProperty(propertyName)) {","      if (propertyName === 'Properties') {","        //  Lift out the properties onto the main object to keep consistent across all APIs like: getContainerProperties","        azureutil.setPropertyValueFromXML(containerResult, containerXml[propertyName], true);","      } else if (propertyName === 'Metadata') {","        var resultPropertyName = azureutil.normalizePropertyNameFromXML(propertyName);","        containerResult[resultPropertyName] = {};","        azureutil.setPropertyValueFromXML(containerResult[resultPropertyName], containerXml[propertyName], false);","      } else {","        containerResult[propertyName.toLowerCase()] = containerXml[propertyName];","      }","    }","  }","","  if (!containerResult.publicAccessLevel) {","    containerResult.publicAccessLevel = BlobUtilities.BlobContainerPublicAccessType.OFF;","  }","","  return containerResult;","};","","ContainerResult.prototype.getPropertiesFromHeaders = function (headers) {","  var self = this;","  ","  var setContainerPropertyFromHeaders = function (containerProperty, headerProperty) {","    if (!azureutil.tryGetValueChain(self, containerProperty.split('.'), null) && headers[headerProperty.toLowerCase()]) {","      azureutil.setObjectInnerPropertyValue(self, containerProperty.split('.'), headers[headerProperty.toLowerCase()]);","    }","  };","","  setContainerPropertyFromHeaders('etag', HeaderConstants.ETAG);","  setContainerPropertyFromHeaders('lastModified', HeaderConstants.LAST_MODIFIED);","  setContainerPropertyFromHeaders('lease.status', HeaderConstants.LEASE_STATUS);","  setContainerPropertyFromHeaders('lease.state', HeaderConstants.LEASE_STATE);","  setContainerPropertyFromHeaders('lease.duration', HeaderConstants.LEASE_DURATION);","  setContainerPropertyFromHeaders('requestId', HeaderConstants.REQUEST_ID);","","  if (!self.publicAccessLevel) {","    self.publicAccessLevel = BlobUtilities.BlobContainerPublicAccessType.OFF;","    if (headers[HeaderConstants.BLOB_PUBLIC_ACCESS]) {","      self.publicAccessLevel = headers[HeaderConstants.BLOB_PUBLIC_ACCESS];","    }","  }","","  if (self.publicAccessLevel === 'true') {","    // The container was marked for full public read access using a version prior to 2009-09-19.","    self.publicAccessLevel = BlobUtilities.BlobContainerPublicAccessType.CONTAINER;","  }","};","","/**","* The container ACL settings.","* @typedef    {object}                        ContainerAclResult","* @extends    {ContainerResult}","* @property   {Object.<string, AccessPolicy>}    signedIdentifiers   The container ACL settings. See `[AccessPolicy]{@link AccessPolicy}` for detailed information.","*/","","module.exports = ContainerResult;"],"l":{"18":1,"19":1,"20":1,"22":1,"23":1,"45":1,"46":0,"47":0,"50":0,"51":0,"55":1,"56":0,"58":0,"59":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"68":0,"73":0,"74":0,"77":0,"80":1,"81":0,"83":0,"84":0,"85":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"96":0,"97":0,"98":0,"99":0,"103":0,"105":0,"116":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/blob/models/leaseresult.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/blob/models/leaseresult.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"LeaseResult","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":48}}},"2":{"name":"(anonymous_2)","line":58,"loc":{"start":{"line":58,"column":49},"end":{"line":58,"column":68}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":62}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":48}},"3":{"start":{"line":40,"column":0},"end":{"line":56,"column":1}},"4":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"5":{"start":{"line":42,"column":4},"end":{"line":42,"column":31}},"6":{"start":{"line":45,"column":2},"end":{"line":47,"column":3}},"7":{"start":{"line":46,"column":4},"end":{"line":46,"column":21}},"8":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"9":{"start":{"line":50,"column":4},"end":{"line":50,"column":17}},"10":{"start":{"line":53,"column":2},"end":{"line":55,"column":3}},"11":{"start":{"line":54,"column":4},"end":{"line":54,"column":21}},"12":{"start":{"line":58,"column":0},"end":{"line":71,"column":2}},"13":{"start":{"line":59,"column":2},"end":{"line":59,"column":18}},"14":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"15":{"start":{"line":62,"column":4},"end":{"line":62,"column":51}},"16":{"start":{"line":65,"column":2},"end":{"line":67,"column":3}},"17":{"start":{"line":66,"column":4},"end":{"line":66,"column":69}},"18":{"start":{"line":69,"column":2},"end":{"line":69,"column":47}},"19":{"start":{"line":70,"column":2},"end":{"line":70,"column":78}},"20":{"start":{"line":73,"column":0},"end":{"line":73,"column":29}}},"branchMap":{"1":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"5":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"6":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":17}},{"start":{"line":61,"column":21},"end":{"line":61,"column":54}}]},"7":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"8":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":19}},{"start":{"line":65,"column":23},"end":{"line":65,"column":58}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var Constants = require('./../../../common/common').Constants;","var HeaderConstants = Constants.HeaderConstants;","","","/**","* Creates a new LeaseResult object.","* @class","* The LeaseResult class is used to store the lease information.","* "," * @property  {string}                      container                         The container name."," * @property  {string}                      blob                              The blob name."," * @property  {string}                      id                                The lease id."," * @property  {string}                      time                              Approximate time remaining in the lease period, in seconds."," * @property  {string}                      etag                              The etag."," * @property  {string}                      lastModified                      The date/time that the lease was last modified."," * ","* @constructor","* @param {string} [container]               The container name.","* @param {string} [blob]                    The blob name.","* @param {string} [id]                      The lease id.","* @param {string} [time]                    Approximate time remaining in the lease period, in seconds.","*/","function LeaseResult(container, blob, id, time) {","  if (container) {","    this.container = container;","  }","","  if (blob) {","    this.blob = blob;","  }","","  if (id) {","    this.id = id;","  }","","  if (time) {","    this.time = time;","  }","}","","LeaseResult.prototype.getPropertiesFromHeaders = function (headers) {","  var self = this;","","  if (!self['id'] && headers[HeaderConstants.LEASE_ID]) {","    self['id'] = headers[HeaderConstants.LEASE_ID];","  }","","  if (!self['time'] && headers[HeaderConstants.LEASE_TIME]) {","    self['time'] = parseInt(headers[HeaderConstants.LEASE_TIME], 10);","  }","","  self['etag'] = headers[HeaderConstants.ETAG];","  self['lastModified'] = headers[HeaderConstants.LAST_MODIFIED.toLowerCase()];","};","","module.exports = LeaseResult;"],"l":{"18":1,"19":1,"40":1,"41":0,"42":0,"45":0,"46":0,"49":0,"50":0,"53":0,"54":0,"58":1,"59":0,"61":0,"62":0,"65":0,"66":0,"69":0,"70":0,"73":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/file/fileservice.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/file/fileservice.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":0,"36":0,"37":0,"38":0,"39":1,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":1,"61":0,"62":1,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":1,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":1,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":1,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":1,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":1,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":1,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":1,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":1,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":1,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":1,"350":0,"351":1,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":1,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":1,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":1,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":1,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":1,"469":0,"470":1,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":1,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":1,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":1,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":1,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":1,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":1,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":1,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":1,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":1,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":1,"728":0,"729":1,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":1,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":1,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":1,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":1,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":1,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":1,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":1,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":1,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":1,"963":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":0,"979":0,"980":0,"981":0,"982":0,"983":0,"984":0,"985":0,"986":0,"987":1,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":1,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":1,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":1,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":1,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":0,"1100":0,"1101":1,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":0,"1109":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":1,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":0,"1134":0,"1135":0,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":1,"1146":0,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":1,"1161":0,"1162":0,"1163":0,"1164":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1204":0,"1205":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":1,"1220":0,"1221":0,"1222":0,"1223":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":1,"1249":0,"1250":0,"1251":0,"1252":0,"1253":0,"1254":0,"1255":0,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":0,"1289":0,"1290":0,"1291":0,"1292":0,"1293":0,"1294":0,"1295":0,"1296":0,"1297":0,"1298":0,"1299":0,"1300":0,"1301":0,"1302":0,"1303":0,"1304":0,"1305":0,"1306":0,"1307":0,"1308":0,"1309":0,"1310":0,"1311":0,"1312":0,"1313":0,"1314":0,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1320":0,"1321":0,"1322":0,"1323":0,"1324":0,"1325":0,"1326":0,"1327":0,"1328":0,"1329":0,"1330":0,"1331":0,"1332":0,"1333":0,"1334":0,"1335":0,"1336":0,"1337":0,"1338":0,"1339":0,"1340":0,"1341":1,"1342":0,"1343":0,"1344":0,"1345":0,"1346":0,"1347":0,"1348":0,"1349":1,"1350":0,"1351":0,"1352":0,"1353":0,"1354":0,"1355":0,"1356":0,"1357":0,"1358":0,"1359":0,"1360":1,"1361":0,"1362":0,"1363":0,"1364":0,"1365":0,"1366":0,"1367":0,"1368":0,"1369":0,"1370":0,"1371":0,"1372":0,"1373":0,"1374":0,"1375":0,"1376":0,"1377":0,"1378":0,"1379":0,"1380":0,"1381":0,"1382":0,"1383":1,"1384":0,"1385":0,"1386":0,"1387":0,"1388":0,"1389":0,"1390":0,"1391":0,"1392":0,"1393":0,"1394":0,"1395":0,"1396":0,"1397":0,"1398":0,"1399":0,"1400":0,"1401":0,"1402":0,"1403":0,"1404":0,"1405":0,"1406":0,"1407":0,"1408":0,"1409":0,"1410":1,"1411":0,"1412":0,"1413":0,"1414":0,"1415":0,"1416":0,"1417":0,"1418":0,"1419":0,"1420":0,"1421":0,"1422":0,"1423":0,"1424":0,"1425":0,"1426":0,"1427":0,"1428":0,"1429":0,"1430":0,"1431":0,"1432":0,"1433":0,"1434":0,"1435":0,"1436":0,"1437":1,"1438":0,"1439":0,"1440":0,"1441":0,"1442":0,"1443":0,"1444":0,"1445":0,"1446":0,"1447":0,"1448":0,"1449":0,"1450":0,"1451":0,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1457":0,"1458":0,"1459":0,"1460":0,"1461":1,"1462":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0},"fnMap":{"1":{"name":"FileService","line":89,"loc":{"start":{"line":89,"column":0},"end":{"line":89,"column":105}}},"2":{"name":"createResourceName","line":116,"loc":{"start":{"line":116,"column":0},"end":{"line":116,"column":60}}},"3":{"name":"(anonymous_3)","line":117,"loc":{"start":{"line":117,"column":15},"end":{"line":117,"column":30}}},"4":{"name":"(anonymous_4)","line":170,"loc":{"start":{"line":170,"column":45},"end":{"line":170,"column":84}}},"5":{"name":"(anonymous_5)","line":195,"loc":{"start":{"line":195,"column":45},"end":{"line":195,"column":103}}},"6":{"name":"(anonymous_6)","line":225,"loc":{"start":{"line":225,"column":44},"end":{"line":225,"column":97}}},"7":{"name":"(anonymous_7)","line":255,"loc":{"start":{"line":255,"column":54},"end":{"line":255,"column":115}}},"8":{"name":"(anonymous_8)","line":257,"loc":{"start":{"line":257,"column":55},"end":{"line":257,"column":71}}},"9":{"name":"(anonymous_9)","line":259,"loc":{"start":{"line":259,"column":38},"end":{"line":259,"column":51}}},"10":{"name":"(anonymous_10)","line":277,"loc":{"start":{"line":277,"column":32},"end":{"line":277,"column":64}}},"11":{"name":"(anonymous_11)","line":296,"loc":{"start":{"line":296,"column":21},"end":{"line":296,"column":45}}},"12":{"name":"(anonymous_12)","line":312,"loc":{"start":{"line":312,"column":24},"end":{"line":312,"column":48}}},"13":{"name":"(anonymous_13)","line":343,"loc":{"start":{"line":343,"column":39},"end":{"line":343,"column":85}}},"14":{"name":"(anonymous_14)","line":371,"loc":{"start":{"line":371,"column":36},"end":{"line":371,"column":82}}},"15":{"name":"(anonymous_15)","line":373,"loc":{"start":{"line":373,"column":55},"end":{"line":373,"column":71}}},"16":{"name":"(anonymous_16)","line":375,"loc":{"start":{"line":375,"column":39},"end":{"line":375,"column":52}}},"17":{"name":"(anonymous_17)","line":389,"loc":{"start":{"line":389,"column":32},"end":{"line":389,"column":64}}},"18":{"name":"(anonymous_18)","line":400,"loc":{"start":{"line":400,"column":24},"end":{"line":400,"column":48}}},"19":{"name":"(anonymous_19)","line":441,"loc":{"start":{"line":441,"column":47},"end":{"line":441,"column":93}}},"20":{"name":"(anonymous_20)","line":443,"loc":{"start":{"line":443,"column":55},"end":{"line":443,"column":71}}},"21":{"name":"(anonymous_21)","line":445,"loc":{"start":{"line":445,"column":50},"end":{"line":445,"column":63}}},"22":{"name":"(anonymous_22)","line":453,"loc":{"start":{"line":453,"column":45},"end":{"line":453,"column":79}}},"23":{"name":"(anonymous_23)","line":464,"loc":{"start":{"line":464,"column":39},"end":{"line":464,"column":93}}},"24":{"name":"(anonymous_24)","line":504,"loc":{"start":{"line":504,"column":43},"end":{"line":504,"column":89}}},"25":{"name":"(anonymous_25)","line":506,"loc":{"start":{"line":506,"column":55},"end":{"line":506,"column":71}}},"26":{"name":"(anonymous_26)","line":508,"loc":{"start":{"line":508,"column":46},"end":{"line":508,"column":59}}},"27":{"name":"(anonymous_27)","line":521,"loc":{"start":{"line":521,"column":32},"end":{"line":521,"column":64}}},"28":{"name":"(anonymous_28)","line":529,"loc":{"start":{"line":529,"column":24},"end":{"line":529,"column":48}}},"29":{"name":"(anonymous_29)","line":560,"loc":{"start":{"line":560,"column":43},"end":{"line":560,"column":101}}},"30":{"name":"(anonymous_30)","line":562,"loc":{"start":{"line":562,"column":55},"end":{"line":562,"column":71}}},"31":{"name":"(anonymous_31)","line":564,"loc":{"start":{"line":564,"column":46},"end":{"line":564,"column":59}}},"32":{"name":"(anonymous_32)","line":580,"loc":{"start":{"line":580,"column":32},"end":{"line":580,"column":64}}},"33":{"name":"(anonymous_33)","line":587,"loc":{"start":{"line":587,"column":24},"end":{"line":587,"column":48}}},"34":{"name":"(anonymous_34)","line":616,"loc":{"start":{"line":616,"column":38},"end":{"line":616,"column":84}}},"35":{"name":"(anonymous_35)","line":618,"loc":{"start":{"line":618,"column":55},"end":{"line":618,"column":71}}},"36":{"name":"(anonymous_36)","line":620,"loc":{"start":{"line":620,"column":41},"end":{"line":620,"column":54}}},"37":{"name":"(anonymous_37)","line":630,"loc":{"start":{"line":630,"column":32},"end":{"line":630,"column":64}}},"38":{"name":"(anonymous_38)","line":638,"loc":{"start":{"line":638,"column":24},"end":{"line":638,"column":48}}},"39":{"name":"(anonymous_39)","line":672,"loc":{"start":{"line":672,"column":41},"end":{"line":672,"column":87}}},"40":{"name":"(anonymous_40)","line":674,"loc":{"start":{"line":674,"column":55},"end":{"line":674,"column":71}}},"41":{"name":"(anonymous_41)","line":676,"loc":{"start":{"line":676,"column":44},"end":{"line":676,"column":57}}},"42":{"name":"(anonymous_42)","line":688,"loc":{"start":{"line":688,"column":32},"end":{"line":688,"column":64}}},"43":{"name":"(anonymous_43)","line":696,"loc":{"start":{"line":696,"column":24},"end":{"line":696,"column":48}}},"44":{"name":"(anonymous_44)","line":730,"loc":{"start":{"line":730,"column":41},"end":{"line":730,"column":97}}},"45":{"name":"(anonymous_45)","line":732,"loc":{"start":{"line":732,"column":55},"end":{"line":732,"column":71}}},"46":{"name":"(anonymous_46)","line":734,"loc":{"start":{"line":734,"column":44},"end":{"line":734,"column":57}}},"47":{"name":"(anonymous_47)","line":748,"loc":{"start":{"line":748,"column":32},"end":{"line":748,"column":64}}},"48":{"name":"(anonymous_48)","line":755,"loc":{"start":{"line":755,"column":24},"end":{"line":755,"column":48}}},"49":{"name":"(anonymous_49)","line":786,"loc":{"start":{"line":786,"column":36},"end":{"line":786,"column":82}}},"50":{"name":"(anonymous_50)","line":788,"loc":{"start":{"line":788,"column":55},"end":{"line":788,"column":71}}},"51":{"name":"(anonymous_51)","line":790,"loc":{"start":{"line":790,"column":39},"end":{"line":790,"column":52}}},"52":{"name":"(anonymous_52)","line":803,"loc":{"start":{"line":803,"column":32},"end":{"line":803,"column":64}}},"53":{"name":"(anonymous_53)","line":811,"loc":{"start":{"line":811,"column":24},"end":{"line":811,"column":48}}},"54":{"name":"(anonymous_54)","line":841,"loc":{"start":{"line":841,"column":36},"end":{"line":841,"column":101}}},"55":{"name":"(anonymous_55)","line":843,"loc":{"start":{"line":843,"column":55},"end":{"line":843,"column":71}}},"56":{"name":"(anonymous_56)","line":845,"loc":{"start":{"line":845,"column":39},"end":{"line":845,"column":52}}},"57":{"name":"(anonymous_57)","line":867,"loc":{"start":{"line":867,"column":32},"end":{"line":867,"column":64}}},"58":{"name":"(anonymous_58)","line":877,"loc":{"start":{"line":877,"column":24},"end":{"line":877,"column":48}}},"59":{"name":"(anonymous_59)","line":908,"loc":{"start":{"line":908,"column":36},"end":{"line":908,"column":82}}},"60":{"name":"(anonymous_60)","line":910,"loc":{"start":{"line":910,"column":55},"end":{"line":910,"column":71}}},"61":{"name":"(anonymous_61)","line":912,"loc":{"start":{"line":912,"column":39},"end":{"line":912,"column":52}}},"62":{"name":"(anonymous_62)","line":922,"loc":{"start":{"line":922,"column":32},"end":{"line":922,"column":64}}},"63":{"name":"(anonymous_63)","line":923,"loc":{"start":{"line":923,"column":24},"end":{"line":923,"column":48}}},"64":{"name":"(anonymous_64)","line":956,"loc":{"start":{"line":956,"column":44},"end":{"line":956,"column":90}}},"65":{"name":"(anonymous_65)","line":958,"loc":{"start":{"line":958,"column":55},"end":{"line":958,"column":71}}},"66":{"name":"(anonymous_66)","line":960,"loc":{"start":{"line":960,"column":47},"end":{"line":960,"column":60}}},"67":{"name":"(anonymous_67)","line":968,"loc":{"start":{"line":968,"column":45},"end":{"line":968,"column":80}}},"68":{"name":"(anonymous_68)","line":975,"loc":{"start":{"line":975,"column":39},"end":{"line":975,"column":78}}},"69":{"name":"(anonymous_69)","line":1016,"loc":{"start":{"line":1016,"column":43},"end":{"line":1016,"column":100}}},"70":{"name":"(anonymous_70)","line":1044,"loc":{"start":{"line":1044,"column":40},"end":{"line":1044,"column":97}}},"71":{"name":"(anonymous_71)","line":1046,"loc":{"start":{"line":1046,"column":55},"end":{"line":1046,"column":71}}},"72":{"name":"(anonymous_72)","line":1048,"loc":{"start":{"line":1048,"column":43},"end":{"line":1048,"column":56}}},"73":{"name":"(anonymous_73)","line":1061,"loc":{"start":{"line":1061,"column":32},"end":{"line":1061,"column":64}}},"74":{"name":"(anonymous_74)","line":1068,"loc":{"start":{"line":1068,"column":24},"end":{"line":1068,"column":48}}},"75":{"name":"(anonymous_75)","line":1111,"loc":{"start":{"line":1111,"column":51},"end":{"line":1111,"column":108}}},"76":{"name":"(anonymous_76)","line":1113,"loc":{"start":{"line":1113,"column":55},"end":{"line":1113,"column":71}}},"77":{"name":"(anonymous_77)","line":1115,"loc":{"start":{"line":1115,"column":54},"end":{"line":1115,"column":67}}},"78":{"name":"(anonymous_78)","line":1124,"loc":{"start":{"line":1124,"column":60},"end":{"line":1124,"column":94}}},"79":{"name":"(anonymous_79)","line":1135,"loc":{"start":{"line":1135,"column":54},"end":{"line":1135,"column":112}}},"80":{"name":"(anonymous_80)","line":1174,"loc":{"start":{"line":1174,"column":47},"end":{"line":1174,"column":104}}},"81":{"name":"(anonymous_81)","line":1176,"loc":{"start":{"line":1176,"column":55},"end":{"line":1176,"column":71}}},"82":{"name":"(anonymous_82)","line":1178,"loc":{"start":{"line":1178,"column":50},"end":{"line":1178,"column":63}}},"83":{"name":"(anonymous_83)","line":1190,"loc":{"start":{"line":1190,"column":32},"end":{"line":1190,"column":64}}},"84":{"name":"(anonymous_84)","line":1198,"loc":{"start":{"line":1198,"column":24},"end":{"line":1198,"column":48}}},"85":{"name":"(anonymous_85)","line":1229,"loc":{"start":{"line":1229,"column":40},"end":{"line":1229,"column":97}}},"86":{"name":"(anonymous_86)","line":1231,"loc":{"start":{"line":1231,"column":55},"end":{"line":1231,"column":71}}},"87":{"name":"(anonymous_87)","line":1233,"loc":{"start":{"line":1233,"column":43},"end":{"line":1233,"column":56}}},"88":{"name":"(anonymous_88)","line":1244,"loc":{"start":{"line":1244,"column":32},"end":{"line":1244,"column":64}}},"89":{"name":"(anonymous_89)","line":1245,"loc":{"start":{"line":1245,"column":24},"end":{"line":1245,"column":48}}},"90":{"name":"(anonymous_90)","line":1278,"loc":{"start":{"line":1278,"column":48},"end":{"line":1278,"column":105}}},"91":{"name":"(anonymous_91)","line":1280,"loc":{"start":{"line":1280,"column":55},"end":{"line":1280,"column":71}}},"92":{"name":"(anonymous_92)","line":1282,"loc":{"start":{"line":1282,"column":51},"end":{"line":1282,"column":64}}},"93":{"name":"(anonymous_93)","line":1291,"loc":{"start":{"line":1291,"column":60},"end":{"line":1291,"column":94}}},"94":{"name":"(anonymous_94)","line":1298,"loc":{"start":{"line":1298,"column":54},"end":{"line":1298,"column":93}}},"95":{"name":"(anonymous_95)","line":1339,"loc":{"start":{"line":1339,"column":57},"end":{"line":1339,"column":128}}},"96":{"name":"(anonymous_96)","line":1369,"loc":{"start":{"line":1369,"column":67},"end":{"line":1369,"column":146}}},"97":{"name":"(anonymous_97)","line":1371,"loc":{"start":{"line":1371,"column":55},"end":{"line":1371,"column":71}}},"98":{"name":"(anonymous_98)","line":1373,"loc":{"start":{"line":1373,"column":46},"end":{"line":1373,"column":59}}},"99":{"name":"(anonymous_99)","line":1392,"loc":{"start":{"line":1392,"column":32},"end":{"line":1392,"column":64}}},"100":{"name":"(anonymous_100)","line":1414,"loc":{"start":{"line":1414,"column":20},"end":{"line":1414,"column":43}}},"101":{"name":"(anonymous_101)","line":1427,"loc":{"start":{"line":1427,"column":26},"end":{"line":1427,"column":54}}},"102":{"name":"(anonymous_102)","line":1444,"loc":{"start":{"line":1444,"column":24},"end":{"line":1444,"column":48}}},"103":{"name":"(anonymous_103)","line":1474,"loc":{"start":{"line":1474,"column":45},"end":{"line":1474,"column":102}}},"104":{"name":"(anonymous_104)","line":1476,"loc":{"start":{"line":1476,"column":55},"end":{"line":1476,"column":71}}},"105":{"name":"(anonymous_105)","line":1478,"loc":{"start":{"line":1478,"column":48},"end":{"line":1478,"column":61}}},"106":{"name":"(anonymous_106)","line":1492,"loc":{"start":{"line":1492,"column":32},"end":{"line":1492,"column":64}}},"107":{"name":"(anonymous_107)","line":1500,"loc":{"start":{"line":1500,"column":24},"end":{"line":1500,"column":48}}},"108":{"name":"(anonymous_108)","line":1531,"loc":{"start":{"line":1531,"column":45},"end":{"line":1531,"column":112}}},"109":{"name":"(anonymous_109)","line":1533,"loc":{"start":{"line":1533,"column":55},"end":{"line":1533,"column":71}}},"110":{"name":"(anonymous_110)","line":1535,"loc":{"start":{"line":1535,"column":48},"end":{"line":1535,"column":61}}},"111":{"name":"(anonymous_111)","line":1551,"loc":{"start":{"line":1551,"column":32},"end":{"line":1551,"column":64}}},"112":{"name":"(anonymous_112)","line":1558,"loc":{"start":{"line":1558,"column":24},"end":{"line":1558,"column":48}}},"113":{"name":"(anonymous_113)","line":1593,"loc":{"start":{"line":1593,"column":54},"end":{"line":1593,"column":117}}},"114":{"name":"(anonymous_114)","line":1600,"loc":{"start":{"line":1600,"column":57},"end":{"line":1600,"column":70}}},"115":{"name":"(anonymous_115)","line":1608,"loc":{"start":{"line":1608,"column":59},"end":{"line":1608,"column":72}}},"116":{"name":"(anonymous_116)","line":1662,"loc":{"start":{"line":1662,"column":31},"end":{"line":1662,"column":84}}},"117":{"name":"(anonymous_117)","line":1663,"loc":{"start":{"line":1663,"column":34},"end":{"line":1663,"column":47}}},"118":{"name":"(anonymous_118)","line":1709,"loc":{"start":{"line":1709,"column":42},"end":{"line":1709,"column":105}}},"119":{"name":"(anonymous_119)","line":1711,"loc":{"start":{"line":1711,"column":55},"end":{"line":1711,"column":71}}},"120":{"name":"(anonymous_120)","line":1713,"loc":{"start":{"line":1713,"column":45},"end":{"line":1713,"column":58}}},"121":{"name":"(anonymous_121)","line":1726,"loc":{"start":{"line":1726,"column":32},"end":{"line":1726,"column":64}}},"122":{"name":"(anonymous_122)","line":1734,"loc":{"start":{"line":1734,"column":24},"end":{"line":1734,"column":48}}},"123":{"name":"(anonymous_123)","line":1768,"loc":{"start":{"line":1768,"column":40},"end":{"line":1768,"column":103}}},"124":{"name":"(anonymous_124)","line":1770,"loc":{"start":{"line":1770,"column":55},"end":{"line":1770,"column":71}}},"125":{"name":"(anonymous_125)","line":1772,"loc":{"start":{"line":1772,"column":43},"end":{"line":1772,"column":56}}},"126":{"name":"(anonymous_126)","line":1786,"loc":{"start":{"line":1786,"column":32},"end":{"line":1786,"column":64}}},"127":{"name":"(anonymous_127)","line":1794,"loc":{"start":{"line":1794,"column":24},"end":{"line":1794,"column":48}}},"128":{"name":"(anonymous_128)","line":1837,"loc":{"start":{"line":1837,"column":42},"end":{"line":1837,"column":117}}},"129":{"name":"(anonymous_129)","line":1839,"loc":{"start":{"line":1839,"column":55},"end":{"line":1839,"column":71}}},"130":{"name":"(anonymous_130)","line":1841,"loc":{"start":{"line":1841,"column":45},"end":{"line":1841,"column":58}}},"131":{"name":"(anonymous_131)","line":1856,"loc":{"start":{"line":1856,"column":32},"end":{"line":1856,"column":63}}},"132":{"name":"(anonymous_132)","line":1863,"loc":{"start":{"line":1863,"column":24},"end":{"line":1863,"column":47}}},"133":{"name":"(anonymous_133)","line":1898,"loc":{"start":{"line":1898,"column":40},"end":{"line":1898,"column":113}}},"134":{"name":"(anonymous_134)","line":1900,"loc":{"start":{"line":1900,"column":55},"end":{"line":1900,"column":71}}},"135":{"name":"(anonymous_135)","line":1902,"loc":{"start":{"line":1902,"column":43},"end":{"line":1902,"column":56}}},"136":{"name":"(anonymous_136)","line":1918,"loc":{"start":{"line":1918,"column":32},"end":{"line":1918,"column":64}}},"137":{"name":"(anonymous_137)","line":1925,"loc":{"start":{"line":1925,"column":24},"end":{"line":1925,"column":48}}},"138":{"name":"(anonymous_138)","line":1957,"loc":{"start":{"line":1957,"column":35},"end":{"line":1957,"column":104}}},"139":{"name":"(anonymous_139)","line":1959,"loc":{"start":{"line":1959,"column":55},"end":{"line":1959,"column":71}}},"140":{"name":"(anonymous_140)","line":1961,"loc":{"start":{"line":1961,"column":38},"end":{"line":1961,"column":51}}},"141":{"name":"(anonymous_141)","line":1977,"loc":{"start":{"line":1977,"column":32},"end":{"line":1977,"column":63}}},"142":{"name":"(anonymous_142)","line":1984,"loc":{"start":{"line":1984,"column":24},"end":{"line":1984,"column":47}}},"143":{"name":"(anonymous_143)","line":2017,"loc":{"start":{"line":2017,"column":38},"end":{"line":2017,"column":101}}},"144":{"name":"(anonymous_144)","line":2053,"loc":{"start":{"line":2053,"column":35},"end":{"line":2053,"column":106}}},"145":{"name":"(anonymous_145)","line":2055,"loc":{"start":{"line":2055,"column":55},"end":{"line":2055,"column":71}}},"146":{"name":"(anonymous_146)","line":2056,"loc":{"start":{"line":2056,"column":38},"end":{"line":2056,"column":51}}},"147":{"name":"(anonymous_147)","line":2073,"loc":{"start":{"line":2073,"column":32},"end":{"line":2073,"column":63}}},"148":{"name":"(anonymous_148)","line":2080,"loc":{"start":{"line":2080,"column":24},"end":{"line":2080,"column":47}}},"149":{"name":"(anonymous_149)","line":2111,"loc":{"start":{"line":2111,"column":35},"end":{"line":2111,"column":98}}},"150":{"name":"(anonymous_150)","line":2113,"loc":{"start":{"line":2113,"column":55},"end":{"line":2113,"column":71}}},"151":{"name":"(anonymous_151)","line":2115,"loc":{"start":{"line":2115,"column":38},"end":{"line":2115,"column":51}}},"152":{"name":"(anonymous_152)","line":2127,"loc":{"start":{"line":2127,"column":32},"end":{"line":2127,"column":64}}},"153":{"name":"(anonymous_153)","line":2128,"loc":{"start":{"line":2128,"column":24},"end":{"line":2128,"column":48}}},"154":{"name":"(anonymous_154)","line":2162,"loc":{"start":{"line":2162,"column":43},"end":{"line":2162,"column":106}}},"155":{"name":"(anonymous_155)","line":2164,"loc":{"start":{"line":2164,"column":55},"end":{"line":2164,"column":71}}},"156":{"name":"(anonymous_156)","line":2166,"loc":{"start":{"line":2166,"column":46},"end":{"line":2166,"column":59}}},"157":{"name":"(anonymous_157)","line":2176,"loc":{"start":{"line":2176,"column":61},"end":{"line":2176,"column":95}}},"158":{"name":"(anonymous_158)","line":2183,"loc":{"start":{"line":2183,"column":55},"end":{"line":2183,"column":94}}},"159":{"name":"(anonymous_159)","line":2226,"loc":{"start":{"line":2226,"column":38},"end":{"line":2226,"column":101}}},"160":{"name":"(anonymous_160)","line":2228,"loc":{"start":{"line":2228,"column":55},"end":{"line":2228,"column":71}}},"161":{"name":"(anonymous_161)","line":2230,"loc":{"start":{"line":2230,"column":41},"end":{"line":2230,"column":54}}},"162":{"name":"(anonymous_162)","line":2247,"loc":{"start":{"line":2247,"column":32},"end":{"line":2247,"column":64}}},"163":{"name":"(anonymous_163)","line":2260,"loc":{"start":{"line":2260,"column":24},"end":{"line":2260,"column":48}}},"164":{"name":"(anonymous_164)","line":2312,"loc":{"start":{"line":2312,"column":43},"end":{"line":2312,"column":121}}},"165":{"name":"(anonymous_165)","line":2314,"loc":{"start":{"line":2314,"column":55},"end":{"line":2314,"column":71}}},"166":{"name":"(anonymous_166)","line":2317,"loc":{"start":{"line":2317,"column":46},"end":{"line":2317,"column":59}}},"167":{"name":"(anonymous_167)","line":2330,"loc":{"start":{"line":2330,"column":69},"end":{"line":2330,"column":110}}},"168":{"name":"(anonymous_168)","line":2339,"loc":{"start":{"line":2339,"column":33},"end":{"line":2339,"column":45}}},"169":{"name":"(anonymous_169)","line":2383,"loc":{"start":{"line":2383,"column":41},"end":{"line":2383,"column":104}}},"170":{"name":"(anonymous_170)","line":2385,"loc":{"start":{"line":2385,"column":55},"end":{"line":2385,"column":71}}},"171":{"name":"(anonymous_171)","line":2387,"loc":{"start":{"line":2387,"column":44},"end":{"line":2387,"column":57}}},"172":{"name":"(anonymous_172)","line":2397,"loc":{"start":{"line":2397,"column":68},"end":{"line":2397,"column":109}}},"173":{"name":"(anonymous_173)","line":2453,"loc":{"start":{"line":2453,"column":40},"end":{"line":2453,"column":116}}},"174":{"name":"(anonymous_174)","line":2455,"loc":{"start":{"line":2455,"column":55},"end":{"line":2455,"column":71}}},"175":{"name":"(anonymous_175)","line":2458,"loc":{"start":{"line":2458,"column":43},"end":{"line":2458,"column":56}}},"176":{"name":"(anonymous_176)","line":2479,"loc":{"start":{"line":2479,"column":77},"end":{"line":2479,"column":106}}},"177":{"name":"(anonymous_177)","line":2531,"loc":{"start":{"line":2531,"column":35},"end":{"line":2531,"column":98}}},"178":{"name":"(anonymous_178)","line":2533,"loc":{"start":{"line":2533,"column":55},"end":{"line":2533,"column":71}}},"179":{"name":"(anonymous_179)","line":2535,"loc":{"start":{"line":2535,"column":38},"end":{"line":2535,"column":51}}},"180":{"name":"(anonymous_180)","line":2550,"loc":{"start":{"line":2550,"column":32},"end":{"line":2550,"column":64}}},"181":{"name":"(anonymous_181)","line":2564,"loc":{"start":{"line":2564,"column":21},"end":{"line":2564,"column":42}}},"182":{"name":"(anonymous_182)","line":2574,"loc":{"start":{"line":2574,"column":24},"end":{"line":2574,"column":48}}},"183":{"name":"(anonymous_183)","line":2609,"loc":{"start":{"line":2609,"column":35},"end":{"line":2609,"column":120}}},"184":{"name":"(anonymous_184)","line":2611,"loc":{"start":{"line":2611,"column":55},"end":{"line":2611,"column":71}}},"185":{"name":"(anonymous_185)","line":2613,"loc":{"start":{"line":2613,"column":38},"end":{"line":2613,"column":51}}},"186":{"name":"(anonymous_186)","line":2626,"loc":{"start":{"line":2626,"column":32},"end":{"line":2626,"column":63}}},"187":{"name":"(anonymous_187)","line":2633,"loc":{"start":{"line":2633,"column":24},"end":{"line":2633,"column":47}}},"188":{"name":"(anonymous_188)","line":2671,"loc":{"start":{"line":2671,"column":47},"end":{"line":2671,"column":144}}},"189":{"name":"(anonymous_189)","line":2673,"loc":{"start":{"line":2673,"column":55},"end":{"line":2673,"column":71}}},"190":{"name":"(anonymous_190)","line":2675,"loc":{"start":{"line":2675,"column":50},"end":{"line":2675,"column":63}}},"191":{"name":"(anonymous_191)","line":2696,"loc":{"start":{"line":2696,"column":56},"end":{"line":2696,"column":91}}},"192":{"name":"(anonymous_192)","line":2741,"loc":{"start":{"line":2741,"column":43},"end":{"line":2741,"column":112}}},"193":{"name":"(anonymous_193)","line":2743,"loc":{"start":{"line":2743,"column":55},"end":{"line":2743,"column":71}}},"194":{"name":"(anonymous_194)","line":2745,"loc":{"start":{"line":2745,"column":46},"end":{"line":2745,"column":59}}},"195":{"name":"(anonymous_195)","line":2766,"loc":{"start":{"line":2766,"column":59},"end":{"line":2766,"column":75}}},"196":{"name":"(anonymous_196)","line":2813,"loc":{"start":{"line":2813,"column":48},"end":{"line":2813,"column":126}}},"197":{"name":"(anonymous_197)","line":2815,"loc":{"start":{"line":2815,"column":55},"end":{"line":2815,"column":71}}},"198":{"name":"(anonymous_198)","line":2817,"loc":{"start":{"line":2817,"column":51},"end":{"line":2817,"column":64}}},"199":{"name":"(anonymous_199)","line":2830,"loc":{"start":{"line":2830,"column":25},"end":{"line":2830,"column":47}}},"200":{"name":"(anonymous_200)","line":2834,"loc":{"start":{"line":2834,"column":66},"end":{"line":2834,"column":82}}},"201":{"name":"(anonymous_201)","line":2885,"loc":{"start":{"line":2885,"column":45},"end":{"line":2885,"column":129}}},"202":{"name":"(anonymous_202)","line":2887,"loc":{"start":{"line":2887,"column":55},"end":{"line":2887,"column":71}}},"203":{"name":"(anonymous_203)","line":2889,"loc":{"start":{"line":2889,"column":48},"end":{"line":2889,"column":61}}},"204":{"name":"(anonymous_204)","line":2905,"loc":{"start":{"line":2905,"column":65},"end":{"line":2905,"column":81}}},"205":{"name":"(anonymous_205)","line":2960,"loc":{"start":{"line":2960,"column":56},"end":{"line":2960,"column":119}}},"206":{"name":"(anonymous_206)","line":2962,"loc":{"start":{"line":2962,"column":55},"end":{"line":2962,"column":71}}},"207":{"name":"(anonymous_207)","line":2964,"loc":{"start":{"line":2964,"column":59},"end":{"line":2964,"column":72}}},"208":{"name":"(anonymous_208)","line":2974,"loc":{"start":{"line":2974,"column":81},"end":{"line":2974,"column":114}}},"209":{"name":"(anonymous_209)","line":3027,"loc":{"start":{"line":3027,"column":51},"end":{"line":3027,"column":122}}},"210":{"name":"(anonymous_210)","line":3029,"loc":{"start":{"line":3029,"column":55},"end":{"line":3029,"column":71}}},"211":{"name":"(anonymous_211)","line":3031,"loc":{"start":{"line":3031,"column":54},"end":{"line":3031,"column":67}}},"212":{"name":"(anonymous_212)","line":3045,"loc":{"start":{"line":3045,"column":59},"end":{"line":3045,"column":75}}},"213":{"name":"(anonymous_213)","line":3052,"loc":{"start":{"line":3052,"column":85},"end":{"line":3052,"column":118}}},"214":{"name":"(anonymous_214)","line":3093,"loc":{"start":{"line":3093,"column":38},"end":{"line":3093,"column":130}}},"215":{"name":"(anonymous_215)","line":3095,"loc":{"start":{"line":3095,"column":55},"end":{"line":3095,"column":71}}},"216":{"name":"(anonymous_216)","line":3097,"loc":{"start":{"line":3097,"column":41},"end":{"line":3097,"column":54}}},"217":{"name":"(anonymous_217)","line":3113,"loc":{"start":{"line":3113,"column":32},"end":{"line":3113,"column":64}}},"218":{"name":"(anonymous_218)","line":3124,"loc":{"start":{"line":3124,"column":24},"end":{"line":3124,"column":48}}},"219":{"name":"(anonymous_219)","line":3157,"loc":{"start":{"line":3157,"column":38},"end":{"line":3157,"column":109}}},"220":{"name":"(anonymous_220)","line":3159,"loc":{"start":{"line":3159,"column":55},"end":{"line":3159,"column":71}}},"221":{"name":"(anonymous_221)","line":3161,"loc":{"start":{"line":3161,"column":41},"end":{"line":3161,"column":54}}},"222":{"name":"(anonymous_222)","line":3177,"loc":{"start":{"line":3177,"column":32},"end":{"line":3177,"column":64}}},"223":{"name":"(anonymous_223)","line":3178,"loc":{"start":{"line":3178,"column":24},"end":{"line":3178,"column":48}}},"224":{"name":"(anonymous_224)","line":3220,"loc":{"start":{"line":3220,"column":38},"end":{"line":3220,"column":131}}},"225":{"name":"(anonymous_225)","line":3228,"loc":{"start":{"line":3228,"column":32},"end":{"line":3228,"column":64}}},"226":{"name":"(anonymous_226)","line":3235,"loc":{"start":{"line":3235,"column":24},"end":{"line":3235,"column":48}}},"227":{"name":"(anonymous_227)","line":3284,"loc":{"start":{"line":3284,"column":51},"end":{"line":3284,"column":130}}},"228":{"name":"(anonymous_228)","line":3319,"loc":{"start":{"line":3319,"column":25},"end":{"line":3319,"column":48}}},"229":{"name":"(anonymous_229)","line":3338,"loc":{"start":{"line":3338,"column":140},"end":{"line":3338,"column":157}}},"230":{"name":"(anonymous_230)","line":3358,"loc":{"start":{"line":3358,"column":24},"end":{"line":3358,"column":36}}},"231":{"name":"(anonymous_231)","line":3363,"loc":{"start":{"line":3363,"column":30},"end":{"line":3363,"column":42}}},"232":{"name":"(anonymous_232)","line":3368,"loc":{"start":{"line":3368,"column":28},"end":{"line":3368,"column":45}}},"233":{"name":"(anonymous_233)","line":3384,"loc":{"start":{"line":3384,"column":67},"end":{"line":3384,"column":100}}},"234":{"name":"(anonymous_234)","line":3423,"loc":{"start":{"line":3423,"column":41},"end":{"line":3423,"column":117}}},"235":{"name":"(anonymous_235)","line":3425,"loc":{"start":{"line":3425,"column":55},"end":{"line":3425,"column":71}}},"236":{"name":"(anonymous_236)","line":3427,"loc":{"start":{"line":3427,"column":44},"end":{"line":3427,"column":57}}},"237":{"name":"(anonymous_237)","line":3444,"loc":{"start":{"line":3444,"column":32},"end":{"line":3444,"column":64}}},"238":{"name":"(anonymous_238)","line":3455,"loc":{"start":{"line":3455,"column":24},"end":{"line":3455,"column":48}}},"239":{"name":"(anonymous_239)","line":3496,"loc":{"start":{"line":3496,"column":46},"end":{"line":3496,"column":122}}},"240":{"name":"(anonymous_240)","line":3498,"loc":{"start":{"line":3498,"column":55},"end":{"line":3498,"column":71}}},"241":{"name":"(anonymous_241)","line":3500,"loc":{"start":{"line":3500,"column":49},"end":{"line":3500,"column":62}}},"242":{"name":"(anonymous_242)","line":3526,"loc":{"start":{"line":3526,"column":26},"end":{"line":3526,"column":43}}},"243":{"name":"(anonymous_243)","line":3545,"loc":{"start":{"line":3545,"column":94},"end":{"line":3545,"column":111}}},"244":{"name":"(anonymous_244)","line":3563,"loc":{"start":{"line":3563,"column":116},"end":{"line":3563,"column":164}}},"245":{"name":"(anonymous_245)","line":3595,"loc":{"start":{"line":3595,"column":24},"end":{"line":3595,"column":36}}},"246":{"name":"(anonymous_246)","line":3600,"loc":{"start":{"line":3600,"column":30},"end":{"line":3600,"column":42}}},"247":{"name":"(anonymous_247)","line":3605,"loc":{"start":{"line":3605,"column":26},"end":{"line":3605,"column":38}}},"248":{"name":"(anonymous_248)","line":3610,"loc":{"start":{"line":3610,"column":28},"end":{"line":3610,"column":45}}},"249":{"name":"(anonymous_249)","line":3615,"loc":{"start":{"line":3615,"column":22},"end":{"line":3615,"column":34}}},"250":{"name":"(anonymous_250)","line":3645,"loc":{"start":{"line":3645,"column":50},"end":{"line":3645,"column":82}}},"251":{"name":"(anonymous_251)","line":3663,"loc":{"start":{"line":3663,"column":41},"end":{"line":3663,"column":119}}},"252":{"name":"(anonymous_252)","line":3688,"loc":{"start":{"line":3688,"column":46},"end":{"line":3688,"column":81}}},"253":{"name":"(anonymous_253)","line":3757,"loc":{"start":{"line":3757,"column":39},"end":{"line":3757,"column":115}}},"254":{"name":"(anonymous_254)","line":3759,"loc":{"start":{"line":3759,"column":55},"end":{"line":3759,"column":71}}},"255":{"name":"(anonymous_255)","line":3761,"loc":{"start":{"line":3761,"column":38},"end":{"line":3761,"column":51}}},"256":{"name":"(anonymous_256)","line":3778,"loc":{"start":{"line":3778,"column":32},"end":{"line":3778,"column":64}}},"257":{"name":"(anonymous_257)","line":3790,"loc":{"start":{"line":3790,"column":24},"end":{"line":3790,"column":48}}},"258":{"name":"(anonymous_258)","line":3824,"loc":{"start":{"line":3824,"column":44},"end":{"line":3824,"column":114}}},"259":{"name":"(anonymous_259)","line":3826,"loc":{"start":{"line":3826,"column":55},"end":{"line":3826,"column":71}}},"260":{"name":"(anonymous_260)","line":3828,"loc":{"start":{"line":3828,"column":43},"end":{"line":3828,"column":56}}},"261":{"name":"(anonymous_261)","line":3844,"loc":{"start":{"line":3844,"column":32},"end":{"line":3844,"column":62}}},"262":{"name":"(anonymous_262)","line":3858,"loc":{"start":{"line":3858,"column":24},"end":{"line":3858,"column":48}}},"263":{"name":"(anonymous_263)","line":3891,"loc":{"start":{"line":3891,"column":40},"end":{"line":3891,"column":99}}},"264":{"name":"(anonymous_264)","line":3893,"loc":{"start":{"line":3893,"column":55},"end":{"line":3893,"column":71}}},"265":{"name":"(anonymous_265)","line":3895,"loc":{"start":{"line":3895,"column":39},"end":{"line":3895,"column":52}}},"266":{"name":"(anonymous_266)","line":3909,"loc":{"start":{"line":3909,"column":32},"end":{"line":3909,"column":62}}},"267":{"name":"(anonymous_267)","line":3922,"loc":{"start":{"line":3922,"column":24},"end":{"line":3922,"column":48}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":23}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":32}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":25}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":27}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":30}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":31}},"7":{"start":{"line":24,"column":0},"end":{"line":24,"column":27}},"8":{"start":{"line":26,"column":0},"end":{"line":26,"column":51}},"9":{"start":{"line":27,"column":0},"end":{"line":27,"column":55}},"10":{"start":{"line":28,"column":0},"end":{"line":28,"column":33}},"11":{"start":{"line":29,"column":0},"end":{"line":29,"column":24}},"12":{"start":{"line":30,"column":0},"end":{"line":30,"column":36}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":44}},"14":{"start":{"line":32,"column":0},"end":{"line":32,"column":60}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":42}},"16":{"start":{"line":36,"column":0},"end":{"line":36,"column":38}},"17":{"start":{"line":37,"column":0},"end":{"line":37,"column":44}},"18":{"start":{"line":38,"column":0},"end":{"line":38,"column":48}},"19":{"start":{"line":39,"column":0},"end":{"line":39,"column":44}},"20":{"start":{"line":40,"column":0},"end":{"line":40,"column":58}},"21":{"start":{"line":43,"column":0},"end":{"line":43,"column":48}},"22":{"start":{"line":44,"column":0},"end":{"line":44,"column":44}},"23":{"start":{"line":45,"column":0},"end":{"line":45,"column":48}},"24":{"start":{"line":46,"column":0},"end":{"line":46,"column":42}},"25":{"start":{"line":47,"column":0},"end":{"line":47,"column":62}},"26":{"start":{"line":48,"column":0},"end":{"line":48,"column":48}},"27":{"start":{"line":49,"column":0},"end":{"line":49,"column":60}},"28":{"start":{"line":52,"column":0},"end":{"line":52,"column":50}},"29":{"start":{"line":53,"column":0},"end":{"line":53,"column":58}},"30":{"start":{"line":54,"column":0},"end":{"line":54,"column":48}},"31":{"start":{"line":55,"column":0},"end":{"line":55,"column":38}},"32":{"start":{"line":58,"column":0},"end":{"line":58,"column":51}},"33":{"start":{"line":59,"column":0},"end":{"line":59,"column":49}},"34":{"start":{"line":89,"column":0},"end":{"line":101,"column":1}},"35":{"start":{"line":90,"column":2},"end":{"line":90,"column":155}},"36":{"start":{"line":92,"column":2},"end":{"line":97,"column":38}},"37":{"start":{"line":99,"column":2},"end":{"line":99,"column":93}},"38":{"start":{"line":100,"column":2},"end":{"line":100,"column":88}},"39":{"start":{"line":103,"column":0},"end":{"line":103,"column":49}},"40":{"start":{"line":116,"column":0},"end":{"line":148,"column":1}},"41":{"start":{"line":117,"column":2},"end":{"line":125,"column":4}},"42":{"start":{"line":118,"column":4},"end":{"line":123,"column":5}},"43":{"start":{"line":119,"column":6},"end":{"line":119,"column":38}},"44":{"start":{"line":120,"column":6},"end":{"line":120,"column":39}},"45":{"start":{"line":121,"column":6},"end":{"line":121,"column":39}},"46":{"start":{"line":122,"column":6},"end":{"line":122,"column":40}},"47":{"start":{"line":124,"column":4},"end":{"line":124,"column":16}},"48":{"start":{"line":127,"column":2},"end":{"line":127,"column":19}},"49":{"start":{"line":129,"column":2},"end":{"line":136,"column":3}},"50":{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},"51":{"start":{"line":132,"column":6},"end":{"line":132,"column":20}},"52":{"start":{"line":135,"column":4},"end":{"line":135,"column":30}},"53":{"start":{"line":138,"column":2},"end":{"line":145,"column":3}},"54":{"start":{"line":140,"column":4},"end":{"line":142,"column":5}},"55":{"start":{"line":141,"column":6},"end":{"line":141,"column":20}},"56":{"start":{"line":144,"column":4},"end":{"line":144,"column":25}},"57":{"start":{"line":147,"column":2},"end":{"line":147,"column":50}},"58":{"start":{"line":170,"column":0},"end":{"line":172,"column":2}},"59":{"start":{"line":171,"column":2},"end":{"line":171,"column":71}},"60":{"start":{"line":195,"column":0},"end":{"line":197,"column":2}},"61":{"start":{"line":196,"column":2},"end":{"line":196,"column":90}},"62":{"start":{"line":225,"column":0},"end":{"line":227,"column":2}},"63":{"start":{"line":226,"column":2},"end":{"line":226,"column":99}},"64":{"start":{"line":255,"column":0},"end":{"line":320,"column":2}},"65":{"start":{"line":256,"column":2},"end":{"line":256,"column":18}},"66":{"start":{"line":257,"column":2},"end":{"line":257,"column":107}},"67":{"start":{"line":257,"column":73},"end":{"line":257,"column":89}},"68":{"start":{"line":257,"column":90},"end":{"line":257,"column":103}},"69":{"start":{"line":259,"column":2},"end":{"line":261,"column":5}},"70":{"start":{"line":260,"column":4},"end":{"line":260,"column":25}},"71":{"start":{"line":263,"column":2},"end":{"line":263,"column":46}},"72":{"start":{"line":264,"column":2},"end":{"line":267,"column":68}},"73":{"start":{"line":269,"column":2},"end":{"line":271,"column":3}},"74":{"start":{"line":270,"column":4},"end":{"line":270,"column":86}},"75":{"start":{"line":273,"column":2},"end":{"line":273,"column":67}},"76":{"start":{"line":277,"column":2},"end":{"line":317,"column":4}},"77":{"start":{"line":278,"column":4},"end":{"line":278,"column":43}},"78":{"start":{"line":280,"column":4},"end":{"line":310,"column":5}},"79":{"start":{"line":281,"column":6},"end":{"line":284,"column":8}},"80":{"start":{"line":285,"column":6},"end":{"line":285,"column":51}},"81":{"start":{"line":287,"column":6},"end":{"line":287,"column":22}},"82":{"start":{"line":289,"column":6},"end":{"line":294,"column":7}},"83":{"start":{"line":290,"column":8},"end":{"line":290,"column":78}},"84":{"start":{"line":291,"column":8},"end":{"line":293,"column":9}},"85":{"start":{"line":292,"column":10},"end":{"line":292,"column":28}},"86":{"start":{"line":296,"column":6},"end":{"line":299,"column":9}},"87":{"start":{"line":297,"column":8},"end":{"line":297,"column":58}},"88":{"start":{"line":298,"column":8},"end":{"line":298,"column":66}},"89":{"start":{"line":301,"column":6},"end":{"line":309,"column":7}},"90":{"start":{"line":302,"column":8},"end":{"line":305,"column":10}},"91":{"start":{"line":307,"column":8},"end":{"line":307,"column":130}},"92":{"start":{"line":308,"column":8},"end":{"line":308,"column":105}},"93":{"start":{"line":312,"column":4},"end":{"line":314,"column":6}},"94":{"start":{"line":313,"column":6},"end":{"line":313,"column":89}},"95":{"start":{"line":316,"column":4},"end":{"line":316,"column":40}},"96":{"start":{"line":319,"column":2},"end":{"line":319,"column":75}},"97":{"start":{"line":343,"column":0},"end":{"line":345,"column":2}},"98":{"start":{"line":344,"column":2},"end":{"line":344,"column":66}},"99":{"start":{"line":371,"column":0},"end":{"line":408,"column":2}},"100":{"start":{"line":372,"column":2},"end":{"line":372,"column":18}},"101":{"start":{"line":373,"column":2},"end":{"line":373,"column":107}},"102":{"start":{"line":373,"column":73},"end":{"line":373,"column":89}},"103":{"start":{"line":373,"column":90},"end":{"line":373,"column":103}},"104":{"start":{"line":375,"column":2},"end":{"line":380,"column":5}},"105":{"start":{"line":376,"column":4},"end":{"line":376,"column":29}},"106":{"start":{"line":377,"column":4},"end":{"line":377,"column":30}},"107":{"start":{"line":378,"column":4},"end":{"line":378,"column":43}},"108":{"start":{"line":379,"column":4},"end":{"line":379,"column":25}},"109":{"start":{"line":382,"column":2},"end":{"line":382,"column":46}},"110":{"start":{"line":383,"column":2},"end":{"line":385,"column":60}},"111":{"start":{"line":387,"column":2},"end":{"line":387,"column":59}},"112":{"start":{"line":389,"column":2},"end":{"line":405,"column":4}},"113":{"start":{"line":390,"column":4},"end":{"line":390,"column":38}},"114":{"start":{"line":391,"column":4},"end":{"line":398,"column":5}},"115":{"start":{"line":392,"column":6},"end":{"line":392,"column":58}},"116":{"start":{"line":393,"column":6},"end":{"line":393,"column":91}},"117":{"start":{"line":395,"column":6},"end":{"line":397,"column":7}},"118":{"start":{"line":396,"column":8},"end":{"line":396,"column":63}},"119":{"start":{"line":400,"column":4},"end":{"line":402,"column":6}},"120":{"start":{"line":401,"column":6},"end":{"line":401,"column":84}},"121":{"start":{"line":404,"column":4},"end":{"line":404,"column":40}},"122":{"start":{"line":407,"column":2},"end":{"line":407,"column":75}},"123":{"start":{"line":441,"column":0},"end":{"line":478,"column":2}},"124":{"start":{"line":442,"column":2},"end":{"line":442,"column":18}},"125":{"start":{"line":443,"column":2},"end":{"line":443,"column":107}},"126":{"start":{"line":443,"column":73},"end":{"line":443,"column":89}},"127":{"start":{"line":443,"column":90},"end":{"line":443,"column":103}},"128":{"start":{"line":445,"column":2},"end":{"line":449,"column":5}},"129":{"start":{"line":446,"column":4},"end":{"line":446,"column":29}},"130":{"start":{"line":447,"column":4},"end":{"line":447,"column":30}},"131":{"start":{"line":448,"column":4},"end":{"line":448,"column":25}},"132":{"start":{"line":451,"column":2},"end":{"line":451,"column":46}},"133":{"start":{"line":452,"column":2},"end":{"line":452,"column":18}},"134":{"start":{"line":453,"column":2},"end":{"line":477,"column":5}},"135":{"start":{"line":454,"column":4},"end":{"line":454,"column":31}},"136":{"start":{"line":455,"column":4},"end":{"line":455,"column":27}},"137":{"start":{"line":456,"column":4},"end":{"line":456,"column":25}},"138":{"start":{"line":458,"column":4},"end":{"line":476,"column":5}},"139":{"start":{"line":459,"column":6},"end":{"line":459,"column":40}},"140":{"start":{"line":460,"column":11},"end":{"line":476,"column":5}},"141":{"start":{"line":461,"column":6},"end":{"line":461,"column":35}},"142":{"start":{"line":462,"column":6},"end":{"line":462,"column":40}},"143":{"start":{"line":464,"column":6},"end":{"line":475,"column":9}},"144":{"start":{"line":465,"column":8},"end":{"line":472,"column":9}},"145":{"start":{"line":466,"column":10},"end":{"line":466,"column":39}},"146":{"start":{"line":468,"column":13},"end":{"line":472,"column":9}},"147":{"start":{"line":470,"column":10},"end":{"line":470,"column":29}},"148":{"start":{"line":471,"column":10},"end":{"line":471,"column":45}},"149":{"start":{"line":474,"column":8},"end":{"line":474,"column":61}},"150":{"start":{"line":504,"column":0},"end":{"line":537,"column":2}},"151":{"start":{"line":505,"column":2},"end":{"line":505,"column":18}},"152":{"start":{"line":506,"column":2},"end":{"line":506,"column":107}},"153":{"start":{"line":506,"column":73},"end":{"line":506,"column":89}},"154":{"start":{"line":506,"column":90},"end":{"line":506,"column":103}},"155":{"start":{"line":508,"column":2},"end":{"line":512,"column":5}},"156":{"start":{"line":509,"column":4},"end":{"line":509,"column":29}},"157":{"start":{"line":510,"column":4},"end":{"line":510,"column":30}},"158":{"start":{"line":511,"column":4},"end":{"line":511,"column":25}},"159":{"start":{"line":514,"column":2},"end":{"line":514,"column":46}},"160":{"start":{"line":515,"column":2},"end":{"line":516,"column":60}},"161":{"start":{"line":520,"column":2},"end":{"line":520,"column":18}},"162":{"start":{"line":521,"column":2},"end":{"line":534,"column":4}},"163":{"start":{"line":522,"column":4},"end":{"line":522,"column":38}},"164":{"start":{"line":523,"column":4},"end":{"line":527,"column":5}},"165":{"start":{"line":524,"column":6},"end":{"line":524,"column":58}},"166":{"start":{"line":525,"column":6},"end":{"line":525,"column":103}},"167":{"start":{"line":526,"column":6},"end":{"line":526,"column":91}},"168":{"start":{"line":529,"column":4},"end":{"line":531,"column":6}},"169":{"start":{"line":530,"column":6},"end":{"line":530,"column":84}},"170":{"start":{"line":533,"column":4},"end":{"line":533,"column":40}},"171":{"start":{"line":536,"column":2},"end":{"line":536,"column":75}},"172":{"start":{"line":560,"column":0},"end":{"line":595,"column":2}},"173":{"start":{"line":561,"column":2},"end":{"line":561,"column":18}},"174":{"start":{"line":562,"column":2},"end":{"line":562,"column":107}},"175":{"start":{"line":562,"column":73},"end":{"line":562,"column":89}},"176":{"start":{"line":562,"column":90},"end":{"line":562,"column":103}},"177":{"start":{"line":564,"column":2},"end":{"line":569,"column":5}},"178":{"start":{"line":565,"column":4},"end":{"line":565,"column":29}},"179":{"start":{"line":566,"column":4},"end":{"line":566,"column":30}},"180":{"start":{"line":567,"column":4},"end":{"line":567,"column":43}},"181":{"start":{"line":568,"column":4},"end":{"line":568,"column":25}},"182":{"start":{"line":571,"column":2},"end":{"line":571,"column":54}},"183":{"start":{"line":572,"column":2},"end":{"line":572,"column":47}},"184":{"start":{"line":573,"column":2},"end":{"line":576,"column":60}},"185":{"start":{"line":578,"column":2},"end":{"line":578,"column":49}},"186":{"start":{"line":580,"column":2},"end":{"line":592,"column":4}},"187":{"start":{"line":581,"column":4},"end":{"line":581,"column":38}},"188":{"start":{"line":582,"column":4},"end":{"line":585,"column":5}},"189":{"start":{"line":583,"column":6},"end":{"line":583,"column":58}},"190":{"start":{"line":584,"column":6},"end":{"line":584,"column":91}},"191":{"start":{"line":587,"column":4},"end":{"line":589,"column":6}},"192":{"start":{"line":588,"column":6},"end":{"line":588,"column":84}},"193":{"start":{"line":591,"column":4},"end":{"line":591,"column":40}},"194":{"start":{"line":594,"column":2},"end":{"line":594,"column":75}},"195":{"start":{"line":616,"column":0},"end":{"line":647,"column":2}},"196":{"start":{"line":617,"column":2},"end":{"line":617,"column":18}},"197":{"start":{"line":618,"column":2},"end":{"line":618,"column":107}},"198":{"start":{"line":618,"column":73},"end":{"line":618,"column":89}},"199":{"start":{"line":618,"column":90},"end":{"line":618,"column":103}},"200":{"start":{"line":620,"column":2},"end":{"line":622,"column":5}},"201":{"start":{"line":621,"column":4},"end":{"line":621,"column":25}},"202":{"start":{"line":624,"column":2},"end":{"line":624,"column":46}},"203":{"start":{"line":625,"column":2},"end":{"line":625,"column":47}},"204":{"start":{"line":626,"column":2},"end":{"line":628,"column":57}},"205":{"start":{"line":630,"column":2},"end":{"line":644,"column":4}},"206":{"start":{"line":631,"column":4},"end":{"line":631,"column":38}},"207":{"start":{"line":632,"column":4},"end":{"line":635,"column":5}},"208":{"start":{"line":633,"column":6},"end":{"line":633,"column":90}},"209":{"start":{"line":634,"column":6},"end":{"line":634,"column":91}},"210":{"start":{"line":638,"column":4},"end":{"line":640,"column":6}},"211":{"start":{"line":639,"column":6},"end":{"line":639,"column":84}},"212":{"start":{"line":643,"column":4},"end":{"line":643,"column":40}},"213":{"start":{"line":646,"column":2},"end":{"line":646,"column":75}},"214":{"start":{"line":672,"column":0},"end":{"line":704,"column":2}},"215":{"start":{"line":673,"column":2},"end":{"line":673,"column":18}},"216":{"start":{"line":674,"column":2},"end":{"line":674,"column":107}},"217":{"start":{"line":674,"column":73},"end":{"line":674,"column":89}},"218":{"start":{"line":674,"column":90},"end":{"line":674,"column":103}},"219":{"start":{"line":676,"column":2},"end":{"line":680,"column":5}},"220":{"start":{"line":677,"column":4},"end":{"line":677,"column":29}},"221":{"start":{"line":678,"column":4},"end":{"line":678,"column":30}},"222":{"start":{"line":679,"column":4},"end":{"line":679,"column":25}},"223":{"start":{"line":682,"column":2},"end":{"line":682,"column":46}},"224":{"start":{"line":683,"column":2},"end":{"line":685,"column":60}},"225":{"start":{"line":687,"column":2},"end":{"line":687,"column":18}},"226":{"start":{"line":688,"column":2},"end":{"line":701,"column":4}},"227":{"start":{"line":689,"column":4},"end":{"line":689,"column":38}},"228":{"start":{"line":690,"column":4},"end":{"line":694,"column":5}},"229":{"start":{"line":691,"column":6},"end":{"line":691,"column":58}},"230":{"start":{"line":692,"column":6},"end":{"line":692,"column":103}},"231":{"start":{"line":693,"column":6},"end":{"line":693,"column":91}},"232":{"start":{"line":696,"column":4},"end":{"line":698,"column":6}},"233":{"start":{"line":697,"column":6},"end":{"line":697,"column":84}},"234":{"start":{"line":700,"column":4},"end":{"line":700,"column":40}},"235":{"start":{"line":703,"column":2},"end":{"line":703,"column":75}},"236":{"start":{"line":730,"column":0},"end":{"line":763,"column":2}},"237":{"start":{"line":731,"column":2},"end":{"line":731,"column":18}},"238":{"start":{"line":732,"column":2},"end":{"line":732,"column":107}},"239":{"start":{"line":732,"column":73},"end":{"line":732,"column":89}},"240":{"start":{"line":732,"column":90},"end":{"line":732,"column":103}},"241":{"start":{"line":734,"column":2},"end":{"line":739,"column":5}},"242":{"start":{"line":735,"column":4},"end":{"line":735,"column":29}},"243":{"start":{"line":736,"column":4},"end":{"line":736,"column":35}},"244":{"start":{"line":737,"column":4},"end":{"line":737,"column":30}},"245":{"start":{"line":738,"column":4},"end":{"line":738,"column":25}},"246":{"start":{"line":741,"column":2},"end":{"line":741,"column":46}},"247":{"start":{"line":742,"column":2},"end":{"line":744,"column":60}},"248":{"start":{"line":746,"column":2},"end":{"line":746,"column":51}},"249":{"start":{"line":748,"column":2},"end":{"line":760,"column":4}},"250":{"start":{"line":749,"column":4},"end":{"line":749,"column":38}},"251":{"start":{"line":750,"column":4},"end":{"line":753,"column":5}},"252":{"start":{"line":751,"column":6},"end":{"line":751,"column":58}},"253":{"start":{"line":752,"column":6},"end":{"line":752,"column":91}},"254":{"start":{"line":755,"column":4},"end":{"line":757,"column":6}},"255":{"start":{"line":756,"column":6},"end":{"line":756,"column":84}},"256":{"start":{"line":759,"column":4},"end":{"line":759,"column":40}},"257":{"start":{"line":762,"column":2},"end":{"line":762,"column":75}},"258":{"start":{"line":786,"column":0},"end":{"line":819,"column":2}},"259":{"start":{"line":787,"column":2},"end":{"line":787,"column":18}},"260":{"start":{"line":788,"column":2},"end":{"line":788,"column":107}},"261":{"start":{"line":788,"column":73},"end":{"line":788,"column":89}},"262":{"start":{"line":788,"column":90},"end":{"line":788,"column":103}},"263":{"start":{"line":790,"column":2},"end":{"line":794,"column":5}},"264":{"start":{"line":791,"column":4},"end":{"line":791,"column":29}},"265":{"start":{"line":792,"column":4},"end":{"line":792,"column":30}},"266":{"start":{"line":793,"column":4},"end":{"line":793,"column":25}},"267":{"start":{"line":796,"column":2},"end":{"line":796,"column":46}},"268":{"start":{"line":797,"column":2},"end":{"line":799,"column":55}},"269":{"start":{"line":801,"column":2},"end":{"line":801,"column":83}},"270":{"start":{"line":803,"column":2},"end":{"line":816,"column":4}},"271":{"start":{"line":804,"column":4},"end":{"line":804,"column":38}},"272":{"start":{"line":805,"column":4},"end":{"line":809,"column":5}},"273":{"start":{"line":806,"column":6},"end":{"line":806,"column":58}},"274":{"start":{"line":807,"column":6},"end":{"line":807,"column":91}},"275":{"start":{"line":808,"column":6},"end":{"line":808,"column":99}},"276":{"start":{"line":811,"column":4},"end":{"line":813,"column":6}},"277":{"start":{"line":812,"column":6},"end":{"line":812,"column":84}},"278":{"start":{"line":815,"column":4},"end":{"line":815,"column":40}},"279":{"start":{"line":818,"column":2},"end":{"line":818,"column":75}},"280":{"start":{"line":841,"column":0},"end":{"line":885,"column":2}},"281":{"start":{"line":842,"column":2},"end":{"line":842,"column":18}},"282":{"start":{"line":843,"column":2},"end":{"line":843,"column":107}},"283":{"start":{"line":843,"column":73},"end":{"line":843,"column":89}},"284":{"start":{"line":843,"column":90},"end":{"line":843,"column":103}},"285":{"start":{"line":845,"column":2},"end":{"line":849,"column":5}},"286":{"start":{"line":846,"column":4},"end":{"line":846,"column":29}},"287":{"start":{"line":847,"column":4},"end":{"line":847,"column":30}},"288":{"start":{"line":848,"column":4},"end":{"line":848,"column":25}},"289":{"start":{"line":851,"column":2},"end":{"line":851,"column":46}},"290":{"start":{"line":853,"column":2},"end":{"line":853,"column":22}},"291":{"start":{"line":854,"column":2},"end":{"line":859,"column":3}},"292":{"start":{"line":855,"column":4},"end":{"line":857,"column":5}},"293":{"start":{"line":856,"column":6},"end":{"line":856,"column":57}},"294":{"start":{"line":858,"column":4},"end":{"line":858,"column":54}},"295":{"start":{"line":861,"column":2},"end":{"line":865,"column":24}},"296":{"start":{"line":867,"column":2},"end":{"line":882,"column":4}},"297":{"start":{"line":868,"column":4},"end":{"line":868,"column":38}},"298":{"start":{"line":869,"column":4},"end":{"line":875,"column":5}},"299":{"start":{"line":870,"column":6},"end":{"line":870,"column":58}},"300":{"start":{"line":871,"column":6},"end":{"line":871,"column":91}},"301":{"start":{"line":872,"column":6},"end":{"line":874,"column":7}},"302":{"start":{"line":873,"column":8},"end":{"line":873,"column":73}},"303":{"start":{"line":877,"column":4},"end":{"line":879,"column":6}},"304":{"start":{"line":878,"column":6},"end":{"line":878,"column":84}},"305":{"start":{"line":881,"column":4},"end":{"line":881,"column":40}},"306":{"start":{"line":884,"column":2},"end":{"line":884,"column":87}},"307":{"start":{"line":908,"column":0},"end":{"line":931,"column":2}},"308":{"start":{"line":909,"column":2},"end":{"line":909,"column":18}},"309":{"start":{"line":910,"column":2},"end":{"line":910,"column":107}},"310":{"start":{"line":910,"column":73},"end":{"line":910,"column":89}},"311":{"start":{"line":910,"column":90},"end":{"line":910,"column":103}},"312":{"start":{"line":912,"column":2},"end":{"line":916,"column":5}},"313":{"start":{"line":913,"column":4},"end":{"line":913,"column":29}},"314":{"start":{"line":914,"column":4},"end":{"line":914,"column":30}},"315":{"start":{"line":915,"column":4},"end":{"line":915,"column":25}},"316":{"start":{"line":918,"column":2},"end":{"line":918,"column":46}},"317":{"start":{"line":919,"column":2},"end":{"line":920,"column":60}},"318":{"start":{"line":922,"column":2},"end":{"line":928,"column":4}},"319":{"start":{"line":923,"column":4},"end":{"line":925,"column":6}},"320":{"start":{"line":924,"column":6},"end":{"line":924,"column":58}},"321":{"start":{"line":927,"column":4},"end":{"line":927,"column":40}},"322":{"start":{"line":930,"column":2},"end":{"line":930,"column":75}},"323":{"start":{"line":956,"column":0},"end":{"line":990,"column":2}},"324":{"start":{"line":957,"column":2},"end":{"line":957,"column":18}},"325":{"start":{"line":958,"column":2},"end":{"line":958,"column":107}},"326":{"start":{"line":958,"column":73},"end":{"line":958,"column":89}},"327":{"start":{"line":958,"column":90},"end":{"line":958,"column":103}},"328":{"start":{"line":960,"column":2},"end":{"line":964,"column":5}},"329":{"start":{"line":961,"column":4},"end":{"line":961,"column":29}},"330":{"start":{"line":962,"column":4},"end":{"line":962,"column":30}},"331":{"start":{"line":963,"column":4},"end":{"line":963,"column":25}},"332":{"start":{"line":966,"column":2},"end":{"line":966,"column":46}},"333":{"start":{"line":967,"column":2},"end":{"line":967,"column":18}},"334":{"start":{"line":968,"column":2},"end":{"line":989,"column":5}},"335":{"start":{"line":969,"column":4},"end":{"line":988,"column":5}},"336":{"start":{"line":970,"column":6},"end":{"line":970,"column":47}},"337":{"start":{"line":971,"column":11},"end":{"line":988,"column":5}},"338":{"start":{"line":972,"column":6},"end":{"line":972,"column":35}},"339":{"start":{"line":973,"column":6},"end":{"line":973,"column":39}},"340":{"start":{"line":975,"column":6},"end":{"line":987,"column":9}},"341":{"start":{"line":976,"column":8},"end":{"line":976,"column":20}},"342":{"start":{"line":977,"column":8},"end":{"line":984,"column":9}},"343":{"start":{"line":978,"column":10},"end":{"line":978,"column":25}},"344":{"start":{"line":979,"column":15},"end":{"line":984,"column":9}},"345":{"start":{"line":981,"column":10},"end":{"line":981,"column":26}},"346":{"start":{"line":982,"column":10},"end":{"line":982,"column":29}},"347":{"start":{"line":983,"column":10},"end":{"line":983,"column":45}},"348":{"start":{"line":986,"column":8},"end":{"line":986,"column":55}},"349":{"start":{"line":1016,"column":0},"end":{"line":1018,"column":2}},"350":{"start":{"line":1017,"column":2},"end":{"line":1017,"column":81}},"351":{"start":{"line":1044,"column":0},"end":{"line":1076,"column":2}},"352":{"start":{"line":1045,"column":2},"end":{"line":1045,"column":18}},"353":{"start":{"line":1046,"column":2},"end":{"line":1046,"column":107}},"354":{"start":{"line":1046,"column":73},"end":{"line":1046,"column":89}},"355":{"start":{"line":1046,"column":90},"end":{"line":1046,"column":103}},"356":{"start":{"line":1048,"column":2},"end":{"line":1053,"column":5}},"357":{"start":{"line":1049,"column":4},"end":{"line":1049,"column":29}},"358":{"start":{"line":1050,"column":4},"end":{"line":1050,"column":37}},"359":{"start":{"line":1051,"column":4},"end":{"line":1051,"column":30}},"360":{"start":{"line":1052,"column":4},"end":{"line":1052,"column":25}},"361":{"start":{"line":1055,"column":2},"end":{"line":1055,"column":46}},"362":{"start":{"line":1056,"column":2},"end":{"line":1057,"column":64}},"363":{"start":{"line":1059,"column":2},"end":{"line":1059,"column":59}},"364":{"start":{"line":1061,"column":2},"end":{"line":1073,"column":4}},"365":{"start":{"line":1062,"column":4},"end":{"line":1062,"column":42}},"366":{"start":{"line":1063,"column":4},"end":{"line":1066,"column":5}},"367":{"start":{"line":1064,"column":6},"end":{"line":1064,"column":70}},"368":{"start":{"line":1065,"column":6},"end":{"line":1065,"column":95}},"369":{"start":{"line":1068,"column":4},"end":{"line":1070,"column":6}},"370":{"start":{"line":1069,"column":6},"end":{"line":1069,"column":88}},"371":{"start":{"line":1072,"column":4},"end":{"line":1072,"column":40}},"372":{"start":{"line":1075,"column":2},"end":{"line":1075,"column":75}},"373":{"start":{"line":1111,"column":0},"end":{"line":1149,"column":2}},"374":{"start":{"line":1112,"column":2},"end":{"line":1112,"column":18}},"375":{"start":{"line":1113,"column":2},"end":{"line":1113,"column":107}},"376":{"start":{"line":1113,"column":73},"end":{"line":1113,"column":89}},"377":{"start":{"line":1113,"column":90},"end":{"line":1113,"column":103}},"378":{"start":{"line":1115,"column":2},"end":{"line":1120,"column":5}},"379":{"start":{"line":1116,"column":4},"end":{"line":1116,"column":29}},"380":{"start":{"line":1117,"column":4},"end":{"line":1117,"column":37}},"381":{"start":{"line":1118,"column":4},"end":{"line":1118,"column":30}},"382":{"start":{"line":1119,"column":4},"end":{"line":1119,"column":25}},"383":{"start":{"line":1122,"column":2},"end":{"line":1122,"column":46}},"384":{"start":{"line":1123,"column":2},"end":{"line":1123,"column":18}},"385":{"start":{"line":1124,"column":2},"end":{"line":1148,"column":5}},"386":{"start":{"line":1125,"column":4},"end":{"line":1125,"column":31}},"387":{"start":{"line":1126,"column":4},"end":{"line":1126,"column":27}},"388":{"start":{"line":1127,"column":4},"end":{"line":1127,"column":25}},"389":{"start":{"line":1129,"column":4},"end":{"line":1147,"column":5}},"390":{"start":{"line":1130,"column":6},"end":{"line":1130,"column":40}},"391":{"start":{"line":1131,"column":11},"end":{"line":1147,"column":5}},"392":{"start":{"line":1132,"column":6},"end":{"line":1132,"column":35}},"393":{"start":{"line":1133,"column":6},"end":{"line":1133,"column":40}},"394":{"start":{"line":1135,"column":6},"end":{"line":1146,"column":9}},"395":{"start":{"line":1136,"column":8},"end":{"line":1143,"column":9}},"396":{"start":{"line":1137,"column":10},"end":{"line":1137,"column":43}},"397":{"start":{"line":1139,"column":13},"end":{"line":1143,"column":9}},"398":{"start":{"line":1141,"column":10},"end":{"line":1141,"column":29}},"399":{"start":{"line":1142,"column":10},"end":{"line":1142,"column":45}},"400":{"start":{"line":1145,"column":8},"end":{"line":1145,"column":65}},"401":{"start":{"line":1174,"column":0},"end":{"line":1206,"column":2}},"402":{"start":{"line":1175,"column":2},"end":{"line":1175,"column":18}},"403":{"start":{"line":1176,"column":2},"end":{"line":1176,"column":107}},"404":{"start":{"line":1176,"column":73},"end":{"line":1176,"column":89}},"405":{"start":{"line":1176,"column":90},"end":{"line":1176,"column":103}},"406":{"start":{"line":1178,"column":2},"end":{"line":1183,"column":5}},"407":{"start":{"line":1179,"column":4},"end":{"line":1179,"column":29}},"408":{"start":{"line":1180,"column":4},"end":{"line":1180,"column":47}},"409":{"start":{"line":1181,"column":4},"end":{"line":1181,"column":30}},"410":{"start":{"line":1182,"column":4},"end":{"line":1182,"column":25}},"411":{"start":{"line":1185,"column":2},"end":{"line":1185,"column":46}},"412":{"start":{"line":1186,"column":2},"end":{"line":1187,"column":64}},"413":{"start":{"line":1189,"column":2},"end":{"line":1189,"column":18}},"414":{"start":{"line":1190,"column":2},"end":{"line":1203,"column":4}},"415":{"start":{"line":1191,"column":4},"end":{"line":1191,"column":42}},"416":{"start":{"line":1192,"column":4},"end":{"line":1196,"column":5}},"417":{"start":{"line":1193,"column":6},"end":{"line":1193,"column":70}},"418":{"start":{"line":1194,"column":6},"end":{"line":1194,"column":107}},"419":{"start":{"line":1195,"column":6},"end":{"line":1195,"column":95}},"420":{"start":{"line":1198,"column":4},"end":{"line":1200,"column":6}},"421":{"start":{"line":1199,"column":6},"end":{"line":1199,"column":88}},"422":{"start":{"line":1202,"column":4},"end":{"line":1202,"column":40}},"423":{"start":{"line":1205,"column":2},"end":{"line":1205,"column":75}},"424":{"start":{"line":1229,"column":0},"end":{"line":1253,"column":2}},"425":{"start":{"line":1230,"column":2},"end":{"line":1230,"column":18}},"426":{"start":{"line":1231,"column":2},"end":{"line":1231,"column":107}},"427":{"start":{"line":1231,"column":73},"end":{"line":1231,"column":89}},"428":{"start":{"line":1231,"column":90},"end":{"line":1231,"column":103}},"429":{"start":{"line":1233,"column":2},"end":{"line":1238,"column":5}},"430":{"start":{"line":1234,"column":4},"end":{"line":1234,"column":29}},"431":{"start":{"line":1235,"column":4},"end":{"line":1235,"column":37}},"432":{"start":{"line":1236,"column":4},"end":{"line":1236,"column":30}},"433":{"start":{"line":1237,"column":4},"end":{"line":1237,"column":25}},"434":{"start":{"line":1240,"column":2},"end":{"line":1240,"column":46}},"435":{"start":{"line":1241,"column":2},"end":{"line":1242,"column":64}},"436":{"start":{"line":1244,"column":2},"end":{"line":1250,"column":4}},"437":{"start":{"line":1245,"column":4},"end":{"line":1247,"column":6}},"438":{"start":{"line":1246,"column":6},"end":{"line":1246,"column":58}},"439":{"start":{"line":1249,"column":4},"end":{"line":1249,"column":40}},"440":{"start":{"line":1252,"column":2},"end":{"line":1252,"column":75}},"441":{"start":{"line":1278,"column":0},"end":{"line":1313,"column":2}},"442":{"start":{"line":1279,"column":2},"end":{"line":1279,"column":18}},"443":{"start":{"line":1280,"column":2},"end":{"line":1280,"column":107}},"444":{"start":{"line":1280,"column":73},"end":{"line":1280,"column":89}},"445":{"start":{"line":1280,"column":90},"end":{"line":1280,"column":103}},"446":{"start":{"line":1282,"column":2},"end":{"line":1287,"column":5}},"447":{"start":{"line":1283,"column":4},"end":{"line":1283,"column":29}},"448":{"start":{"line":1284,"column":4},"end":{"line":1284,"column":37}},"449":{"start":{"line":1285,"column":4},"end":{"line":1285,"column":30}},"450":{"start":{"line":1286,"column":4},"end":{"line":1286,"column":25}},"451":{"start":{"line":1289,"column":2},"end":{"line":1289,"column":46}},"452":{"start":{"line":1290,"column":2},"end":{"line":1290,"column":18}},"453":{"start":{"line":1291,"column":2},"end":{"line":1312,"column":5}},"454":{"start":{"line":1292,"column":4},"end":{"line":1311,"column":5}},"455":{"start":{"line":1293,"column":6},"end":{"line":1293,"column":47}},"456":{"start":{"line":1294,"column":11},"end":{"line":1311,"column":5}},"457":{"start":{"line":1295,"column":6},"end":{"line":1295,"column":35}},"458":{"start":{"line":1296,"column":6},"end":{"line":1296,"column":39}},"459":{"start":{"line":1298,"column":6},"end":{"line":1310,"column":9}},"460":{"start":{"line":1299,"column":8},"end":{"line":1299,"column":20}},"461":{"start":{"line":1300,"column":8},"end":{"line":1307,"column":9}},"462":{"start":{"line":1301,"column":10},"end":{"line":1301,"column":25}},"463":{"start":{"line":1302,"column":15},"end":{"line":1307,"column":9}},"464":{"start":{"line":1304,"column":10},"end":{"line":1304,"column":26}},"465":{"start":{"line":1305,"column":10},"end":{"line":1305,"column":29}},"466":{"start":{"line":1306,"column":10},"end":{"line":1306,"column":45}},"467":{"start":{"line":1309,"column":8},"end":{"line":1309,"column":55}},"468":{"start":{"line":1339,"column":0},"end":{"line":1341,"column":2}},"469":{"start":{"line":1340,"column":2},"end":{"line":1340,"column":128}},"470":{"start":{"line":1369,"column":0},"end":{"line":1452,"column":2}},"471":{"start":{"line":1370,"column":2},"end":{"line":1370,"column":18}},"472":{"start":{"line":1371,"column":2},"end":{"line":1371,"column":107}},"473":{"start":{"line":1371,"column":73},"end":{"line":1371,"column":89}},"474":{"start":{"line":1371,"column":90},"end":{"line":1371,"column":103}},"475":{"start":{"line":1373,"column":2},"end":{"line":1378,"column":5}},"476":{"start":{"line":1374,"column":4},"end":{"line":1374,"column":29}},"477":{"start":{"line":1375,"column":4},"end":{"line":1375,"column":47}},"478":{"start":{"line":1376,"column":4},"end":{"line":1376,"column":30}},"479":{"start":{"line":1377,"column":4},"end":{"line":1377,"column":25}},"480":{"start":{"line":1380,"column":2},"end":{"line":1380,"column":46}},"481":{"start":{"line":1381,"column":2},"end":{"line":1384,"column":75}},"482":{"start":{"line":1386,"column":2},"end":{"line":1388,"column":3}},"483":{"start":{"line":1387,"column":4},"end":{"line":1387,"column":86}},"484":{"start":{"line":1390,"column":2},"end":{"line":1390,"column":67}},"485":{"start":{"line":1392,"column":2},"end":{"line":1449,"column":4}},"486":{"start":{"line":1393,"column":4},"end":{"line":1393,"column":37}},"487":{"start":{"line":1394,"column":4},"end":{"line":1442,"column":5}},"488":{"start":{"line":1395,"column":6},"end":{"line":1398,"column":8}},"489":{"start":{"line":1400,"column":6},"end":{"line":1400,"column":45}},"490":{"start":{"line":1401,"column":6},"end":{"line":1401,"column":51}},"491":{"start":{"line":1402,"column":6},"end":{"line":1402,"column":57}},"492":{"start":{"line":1403,"column":6},"end":{"line":1403,"column":21}},"493":{"start":{"line":1404,"column":6},"end":{"line":1404,"column":27}},"494":{"start":{"line":1407,"column":6},"end":{"line":1412,"column":7}},"495":{"start":{"line":1408,"column":8},"end":{"line":1408,"column":77}},"496":{"start":{"line":1409,"column":8},"end":{"line":1411,"column":9}},"497":{"start":{"line":1410,"column":10},"end":{"line":1410,"column":28}},"498":{"start":{"line":1414,"column":6},"end":{"line":1417,"column":9}},"499":{"start":{"line":1415,"column":8},"end":{"line":1415,"column":55}},"500":{"start":{"line":1416,"column":8},"end":{"line":1416,"column":65}},"501":{"start":{"line":1420,"column":6},"end":{"line":1425,"column":7}},"502":{"start":{"line":1421,"column":8},"end":{"line":1421,"column":88}},"503":{"start":{"line":1422,"column":8},"end":{"line":1424,"column":9}},"504":{"start":{"line":1423,"column":10},"end":{"line":1423,"column":40}},"505":{"start":{"line":1427,"column":6},"end":{"line":1430,"column":9}},"506":{"start":{"line":1428,"column":8},"end":{"line":1428,"column":70}},"507":{"start":{"line":1429,"column":8},"end":{"line":1429,"column":76}},"508":{"start":{"line":1433,"column":6},"end":{"line":1441,"column":7}},"509":{"start":{"line":1434,"column":8},"end":{"line":1437,"column":10}},"510":{"start":{"line":1439,"column":8},"end":{"line":1439,"column":124}},"511":{"start":{"line":1440,"column":8},"end":{"line":1440,"column":99}},"512":{"start":{"line":1444,"column":4},"end":{"line":1446,"column":6}},"513":{"start":{"line":1445,"column":6},"end":{"line":1445,"column":83}},"514":{"start":{"line":1448,"column":4},"end":{"line":1448,"column":40}},"515":{"start":{"line":1451,"column":2},"end":{"line":1451,"column":75}},"516":{"start":{"line":1474,"column":0},"end":{"line":1508,"column":2}},"517":{"start":{"line":1475,"column":2},"end":{"line":1475,"column":18}},"518":{"start":{"line":1476,"column":2},"end":{"line":1476,"column":107}},"519":{"start":{"line":1476,"column":73},"end":{"line":1476,"column":89}},"520":{"start":{"line":1476,"column":90},"end":{"line":1476,"column":103}},"521":{"start":{"line":1478,"column":2},"end":{"line":1483,"column":5}},"522":{"start":{"line":1479,"column":4},"end":{"line":1479,"column":29}},"523":{"start":{"line":1480,"column":4},"end":{"line":1480,"column":47}},"524":{"start":{"line":1481,"column":4},"end":{"line":1481,"column":30}},"525":{"start":{"line":1482,"column":4},"end":{"line":1482,"column":25}},"526":{"start":{"line":1485,"column":2},"end":{"line":1485,"column":46}},"527":{"start":{"line":1486,"column":2},"end":{"line":1486,"column":58}},"528":{"start":{"line":1487,"column":2},"end":{"line":1489,"column":60}},"529":{"start":{"line":1491,"column":2},"end":{"line":1491,"column":18}},"530":{"start":{"line":1492,"column":2},"end":{"line":1505,"column":4}},"531":{"start":{"line":1493,"column":4},"end":{"line":1493,"column":42}},"532":{"start":{"line":1494,"column":4},"end":{"line":1498,"column":5}},"533":{"start":{"line":1495,"column":6},"end":{"line":1495,"column":70}},"534":{"start":{"line":1496,"column":6},"end":{"line":1496,"column":107}},"535":{"start":{"line":1497,"column":6},"end":{"line":1497,"column":95}},"536":{"start":{"line":1500,"column":4},"end":{"line":1502,"column":6}},"537":{"start":{"line":1501,"column":6},"end":{"line":1501,"column":88}},"538":{"start":{"line":1504,"column":4},"end":{"line":1504,"column":40}},"539":{"start":{"line":1507,"column":2},"end":{"line":1507,"column":75}},"540":{"start":{"line":1531,"column":0},"end":{"line":1566,"column":2}},"541":{"start":{"line":1532,"column":2},"end":{"line":1532,"column":18}},"542":{"start":{"line":1533,"column":2},"end":{"line":1533,"column":107}},"543":{"start":{"line":1533,"column":73},"end":{"line":1533,"column":89}},"544":{"start":{"line":1533,"column":90},"end":{"line":1533,"column":103}},"545":{"start":{"line":1535,"column":2},"end":{"line":1541,"column":5}},"546":{"start":{"line":1536,"column":4},"end":{"line":1536,"column":29}},"547":{"start":{"line":1537,"column":4},"end":{"line":1537,"column":47}},"548":{"start":{"line":1538,"column":4},"end":{"line":1538,"column":30}},"549":{"start":{"line":1539,"column":4},"end":{"line":1539,"column":35}},"550":{"start":{"line":1540,"column":4},"end":{"line":1540,"column":25}},"551":{"start":{"line":1543,"column":2},"end":{"line":1543,"column":46}},"552":{"start":{"line":1544,"column":2},"end":{"line":1544,"column":58}},"553":{"start":{"line":1545,"column":2},"end":{"line":1547,"column":60}},"554":{"start":{"line":1549,"column":2},"end":{"line":1549,"column":51}},"555":{"start":{"line":1551,"column":2},"end":{"line":1563,"column":4}},"556":{"start":{"line":1552,"column":4},"end":{"line":1552,"column":42}},"557":{"start":{"line":1553,"column":4},"end":{"line":1556,"column":5}},"558":{"start":{"line":1554,"column":6},"end":{"line":1554,"column":70}},"559":{"start":{"line":1555,"column":6},"end":{"line":1555,"column":95}},"560":{"start":{"line":1558,"column":4},"end":{"line":1560,"column":6}},"561":{"start":{"line":1559,"column":6},"end":{"line":1559,"column":88}},"562":{"start":{"line":1562,"column":4},"end":{"line":1562,"column":40}},"563":{"start":{"line":1565,"column":2},"end":{"line":1565,"column":75}},"564":{"start":{"line":1593,"column":0},"end":{"line":1637,"column":2}},"565":{"start":{"line":1595,"column":2},"end":{"line":1597,"column":3}},"566":{"start":{"line":1596,"column":4},"end":{"line":1596,"column":62}},"567":{"start":{"line":1600,"column":2},"end":{"line":1604,"column":5}},"568":{"start":{"line":1601,"column":4},"end":{"line":1601,"column":29}},"569":{"start":{"line":1602,"column":4},"end":{"line":1602,"column":30}},"570":{"start":{"line":1603,"column":4},"end":{"line":1603,"column":55}},"571":{"start":{"line":1606,"column":2},"end":{"line":1606,"column":55}},"572":{"start":{"line":1607,"column":2},"end":{"line":1615,"column":3}},"573":{"start":{"line":1608,"column":4},"end":{"line":1611,"column":7}},"574":{"start":{"line":1609,"column":6},"end":{"line":1609,"column":49}},"575":{"start":{"line":1610,"column":6},"end":{"line":1610,"column":29}},"576":{"start":{"line":1612,"column":4},"end":{"line":1612,"column":52}},"577":{"start":{"line":1614,"column":4},"end":{"line":1614,"column":19}},"578":{"start":{"line":1617,"column":2},"end":{"line":1633,"column":3}},"579":{"start":{"line":1618,"column":4},"end":{"line":1624,"column":5}},"580":{"start":{"line":1619,"column":6},"end":{"line":1621,"column":7}},"581":{"start":{"line":1620,"column":8},"end":{"line":1620,"column":96}},"582":{"start":{"line":1623,"column":6},"end":{"line":1623,"column":116}},"583":{"start":{"line":1626,"column":4},"end":{"line":1632,"column":5}},"584":{"start":{"line":1627,"column":6},"end":{"line":1629,"column":7}},"585":{"start":{"line":1628,"column":8},"end":{"line":1628,"column":98}},"586":{"start":{"line":1631,"column":6},"end":{"line":1631,"column":118}},"587":{"start":{"line":1635,"column":2},"end":{"line":1635,"column":70}},"588":{"start":{"line":1636,"column":2},"end":{"line":1636,"column":177}},"589":{"start":{"line":1662,"column":0},"end":{"line":1682,"column":2}},"590":{"start":{"line":1663,"column":2},"end":{"line":1667,"column":5}},"591":{"start":{"line":1664,"column":4},"end":{"line":1664,"column":29}},"592":{"start":{"line":1665,"column":4},"end":{"line":1665,"column":47}},"593":{"start":{"line":1666,"column":4},"end":{"line":1666,"column":30}},"594":{"start":{"line":1669,"column":2},"end":{"line":1669,"column":11}},"595":{"start":{"line":1670,"column":2},"end":{"line":1674,"column":3}},"596":{"start":{"line":1671,"column":4},"end":{"line":1671,"column":35}},"597":{"start":{"line":1673,"column":4},"end":{"line":1673,"column":33}},"598":{"start":{"line":1675,"column":2},"end":{"line":1675,"column":41}},"599":{"start":{"line":1676,"column":2},"end":{"line":1678,"column":3}},"600":{"start":{"line":1677,"column":4},"end":{"line":1677,"column":22}},"601":{"start":{"line":1680,"column":2},"end":{"line":1680,"column":56}},"602":{"start":{"line":1681,"column":2},"end":{"line":1681,"column":99}},"603":{"start":{"line":1709,"column":0},"end":{"line":1742,"column":2}},"604":{"start":{"line":1710,"column":2},"end":{"line":1710,"column":18}},"605":{"start":{"line":1711,"column":2},"end":{"line":1711,"column":107}},"606":{"start":{"line":1711,"column":73},"end":{"line":1711,"column":89}},"607":{"start":{"line":1711,"column":90},"end":{"line":1711,"column":103}},"608":{"start":{"line":1713,"column":2},"end":{"line":1719,"column":5}},"609":{"start":{"line":1714,"column":4},"end":{"line":1714,"column":29}},"610":{"start":{"line":1715,"column":4},"end":{"line":1715,"column":47}},"611":{"start":{"line":1716,"column":4},"end":{"line":1716,"column":27}},"612":{"start":{"line":1717,"column":4},"end":{"line":1717,"column":30}},"613":{"start":{"line":1718,"column":4},"end":{"line":1718,"column":25}},"614":{"start":{"line":1721,"column":2},"end":{"line":1721,"column":46}},"615":{"start":{"line":1722,"column":2},"end":{"line":1722,"column":64}},"616":{"start":{"line":1723,"column":2},"end":{"line":1723,"column":51}},"617":{"start":{"line":1725,"column":2},"end":{"line":1725,"column":18}},"618":{"start":{"line":1726,"column":2},"end":{"line":1739,"column":4}},"619":{"start":{"line":1727,"column":4},"end":{"line":1727,"column":37}},"620":{"start":{"line":1728,"column":4},"end":{"line":1732,"column":5}},"621":{"start":{"line":1729,"column":6},"end":{"line":1729,"column":73}},"622":{"start":{"line":1730,"column":6},"end":{"line":1730,"column":102}},"623":{"start":{"line":1731,"column":6},"end":{"line":1731,"column":96}},"624":{"start":{"line":1734,"column":4},"end":{"line":1736,"column":6}},"625":{"start":{"line":1735,"column":6},"end":{"line":1735,"column":83}},"626":{"start":{"line":1738,"column":4},"end":{"line":1738,"column":40}},"627":{"start":{"line":1741,"column":2},"end":{"line":1741,"column":75}},"628":{"start":{"line":1768,"column":0},"end":{"line":1802,"column":2}},"629":{"start":{"line":1769,"column":2},"end":{"line":1769,"column":18}},"630":{"start":{"line":1770,"column":2},"end":{"line":1770,"column":107}},"631":{"start":{"line":1770,"column":73},"end":{"line":1770,"column":89}},"632":{"start":{"line":1770,"column":90},"end":{"line":1770,"column":103}},"633":{"start":{"line":1772,"column":2},"end":{"line":1778,"column":5}},"634":{"start":{"line":1773,"column":4},"end":{"line":1773,"column":29}},"635":{"start":{"line":1774,"column":4},"end":{"line":1774,"column":47}},"636":{"start":{"line":1775,"column":4},"end":{"line":1775,"column":27}},"637":{"start":{"line":1776,"column":4},"end":{"line":1776,"column":30}},"638":{"start":{"line":1777,"column":4},"end":{"line":1777,"column":25}},"639":{"start":{"line":1780,"column":2},"end":{"line":1780,"column":46}},"640":{"start":{"line":1781,"column":2},"end":{"line":1781,"column":64}},"641":{"start":{"line":1782,"column":2},"end":{"line":1783,"column":60}},"642":{"start":{"line":1785,"column":2},"end":{"line":1785,"column":18}},"643":{"start":{"line":1786,"column":2},"end":{"line":1799,"column":4}},"644":{"start":{"line":1787,"column":4},"end":{"line":1787,"column":37}},"645":{"start":{"line":1788,"column":4},"end":{"line":1792,"column":5}},"646":{"start":{"line":1789,"column":6},"end":{"line":1789,"column":73}},"647":{"start":{"line":1790,"column":6},"end":{"line":1790,"column":102}},"648":{"start":{"line":1791,"column":6},"end":{"line":1791,"column":90}},"649":{"start":{"line":1794,"column":4},"end":{"line":1796,"column":6}},"650":{"start":{"line":1795,"column":6},"end":{"line":1795,"column":83}},"651":{"start":{"line":1798,"column":4},"end":{"line":1798,"column":40}},"652":{"start":{"line":1801,"column":2},"end":{"line":1801,"column":75}},"653":{"start":{"line":1837,"column":0},"end":{"line":1871,"column":2}},"654":{"start":{"line":1838,"column":2},"end":{"line":1838,"column":18}},"655":{"start":{"line":1839,"column":2},"end":{"line":1839,"column":107}},"656":{"start":{"line":1839,"column":73},"end":{"line":1839,"column":89}},"657":{"start":{"line":1839,"column":90},"end":{"line":1839,"column":103}},"658":{"start":{"line":1841,"column":2},"end":{"line":1847,"column":5}},"659":{"start":{"line":1842,"column":4},"end":{"line":1842,"column":29}},"660":{"start":{"line":1843,"column":4},"end":{"line":1843,"column":47}},"661":{"start":{"line":1844,"column":4},"end":{"line":1844,"column":27}},"662":{"start":{"line":1845,"column":4},"end":{"line":1845,"column":30}},"663":{"start":{"line":1846,"column":4},"end":{"line":1846,"column":25}},"664":{"start":{"line":1849,"column":2},"end":{"line":1849,"column":115}},"665":{"start":{"line":1850,"column":2},"end":{"line":1850,"column":64}},"666":{"start":{"line":1851,"column":2},"end":{"line":1852,"column":62}},"667":{"start":{"line":1854,"column":2},"end":{"line":1854,"column":49}},"668":{"start":{"line":1856,"column":2},"end":{"line":1868,"column":4}},"669":{"start":{"line":1857,"column":4},"end":{"line":1857,"column":37}},"670":{"start":{"line":1858,"column":4},"end":{"line":1861,"column":5}},"671":{"start":{"line":1859,"column":6},"end":{"line":1859,"column":73}},"672":{"start":{"line":1860,"column":6},"end":{"line":1860,"column":90}},"673":{"start":{"line":1863,"column":4},"end":{"line":1865,"column":6}},"674":{"start":{"line":1864,"column":6},"end":{"line":1864,"column":83}},"675":{"start":{"line":1867,"column":4},"end":{"line":1867,"column":40}},"676":{"start":{"line":1870,"column":2},"end":{"line":1870,"column":75}},"677":{"start":{"line":1898,"column":0},"end":{"line":1933,"column":2}},"678":{"start":{"line":1899,"column":2},"end":{"line":1899,"column":18}},"679":{"start":{"line":1900,"column":2},"end":{"line":1900,"column":107}},"680":{"start":{"line":1900,"column":73},"end":{"line":1900,"column":89}},"681":{"start":{"line":1900,"column":90},"end":{"line":1900,"column":103}},"682":{"start":{"line":1902,"column":2},"end":{"line":1909,"column":5}},"683":{"start":{"line":1903,"column":4},"end":{"line":1903,"column":29}},"684":{"start":{"line":1904,"column":4},"end":{"line":1904,"column":47}},"685":{"start":{"line":1905,"column":4},"end":{"line":1905,"column":27}},"686":{"start":{"line":1906,"column":4},"end":{"line":1906,"column":30}},"687":{"start":{"line":1907,"column":4},"end":{"line":1907,"column":35}},"688":{"start":{"line":1908,"column":4},"end":{"line":1908,"column":25}},"689":{"start":{"line":1911,"column":2},"end":{"line":1911,"column":46}},"690":{"start":{"line":1912,"column":2},"end":{"line":1912,"column":64}},"691":{"start":{"line":1913,"column":2},"end":{"line":1914,"column":60}},"692":{"start":{"line":1916,"column":2},"end":{"line":1916,"column":51}},"693":{"start":{"line":1918,"column":2},"end":{"line":1930,"column":4}},"694":{"start":{"line":1919,"column":4},"end":{"line":1919,"column":37}},"695":{"start":{"line":1920,"column":4},"end":{"line":1923,"column":5}},"696":{"start":{"line":1921,"column":6},"end":{"line":1921,"column":73}},"697":{"start":{"line":1922,"column":6},"end":{"line":1922,"column":90}},"698":{"start":{"line":1925,"column":4},"end":{"line":1927,"column":6}},"699":{"start":{"line":1926,"column":6},"end":{"line":1926,"column":83}},"700":{"start":{"line":1929,"column":4},"end":{"line":1929,"column":40}},"701":{"start":{"line":1932,"column":2},"end":{"line":1932,"column":75}},"702":{"start":{"line":1957,"column":0},"end":{"line":1992,"column":2}},"703":{"start":{"line":1958,"column":2},"end":{"line":1958,"column":18}},"704":{"start":{"line":1959,"column":2},"end":{"line":1959,"column":107}},"705":{"start":{"line":1959,"column":73},"end":{"line":1959,"column":89}},"706":{"start":{"line":1959,"column":90},"end":{"line":1959,"column":103}},"707":{"start":{"line":1961,"column":2},"end":{"line":1968,"column":5}},"708":{"start":{"line":1962,"column":4},"end":{"line":1962,"column":29}},"709":{"start":{"line":1963,"column":4},"end":{"line":1963,"column":47}},"710":{"start":{"line":1964,"column":4},"end":{"line":1964,"column":27}},"711":{"start":{"line":1965,"column":4},"end":{"line":1965,"column":30}},"712":{"start":{"line":1966,"column":4},"end":{"line":1966,"column":18}},"713":{"start":{"line":1967,"column":4},"end":{"line":1967,"column":25}},"714":{"start":{"line":1970,"column":2},"end":{"line":1970,"column":46}},"715":{"start":{"line":1971,"column":2},"end":{"line":1971,"column":64}},"716":{"start":{"line":1972,"column":2},"end":{"line":1973,"column":62}},"717":{"start":{"line":1975,"column":2},"end":{"line":1975,"column":68}},"718":{"start":{"line":1977,"column":2},"end":{"line":1989,"column":4}},"719":{"start":{"line":1978,"column":4},"end":{"line":1978,"column":37}},"720":{"start":{"line":1979,"column":4},"end":{"line":1982,"column":5}},"721":{"start":{"line":1980,"column":6},"end":{"line":1980,"column":73}},"722":{"start":{"line":1981,"column":6},"end":{"line":1981,"column":90}},"723":{"start":{"line":1984,"column":4},"end":{"line":1986,"column":6}},"724":{"start":{"line":1985,"column":6},"end":{"line":1985,"column":83}},"725":{"start":{"line":1988,"column":4},"end":{"line":1988,"column":40}},"726":{"start":{"line":1991,"column":2},"end":{"line":1991,"column":75}},"727":{"start":{"line":2017,"column":0},"end":{"line":2019,"column":2}},"728":{"start":{"line":2018,"column":2},"end":{"line":2018,"column":82}},"729":{"start":{"line":2053,"column":0},"end":{"line":2088,"column":2}},"730":{"start":{"line":2054,"column":2},"end":{"line":2054,"column":18}},"731":{"start":{"line":2055,"column":2},"end":{"line":2055,"column":107}},"732":{"start":{"line":2055,"column":73},"end":{"line":2055,"column":89}},"733":{"start":{"line":2055,"column":90},"end":{"line":2055,"column":103}},"734":{"start":{"line":2056,"column":2},"end":{"line":2063,"column":5}},"735":{"start":{"line":2057,"column":4},"end":{"line":2057,"column":29}},"736":{"start":{"line":2058,"column":4},"end":{"line":2058,"column":47}},"737":{"start":{"line":2059,"column":4},"end":{"line":2059,"column":27}},"738":{"start":{"line":2060,"column":4},"end":{"line":2060,"column":30}},"739":{"start":{"line":2061,"column":4},"end":{"line":2061,"column":20}},"740":{"start":{"line":2062,"column":4},"end":{"line":2062,"column":25}},"741":{"start":{"line":2065,"column":2},"end":{"line":2065,"column":64}},"742":{"start":{"line":2066,"column":2},"end":{"line":2066,"column":46}},"743":{"start":{"line":2067,"column":2},"end":{"line":2069,"column":61}},"744":{"start":{"line":2071,"column":2},"end":{"line":2071,"column":49}},"745":{"start":{"line":2073,"column":2},"end":{"line":2085,"column":4}},"746":{"start":{"line":2074,"column":4},"end":{"line":2074,"column":37}},"747":{"start":{"line":2075,"column":4},"end":{"line":2078,"column":5}},"748":{"start":{"line":2076,"column":6},"end":{"line":2076,"column":73}},"749":{"start":{"line":2077,"column":6},"end":{"line":2077,"column":90}},"750":{"start":{"line":2080,"column":4},"end":{"line":2082,"column":6}},"751":{"start":{"line":2081,"column":6},"end":{"line":2081,"column":83}},"752":{"start":{"line":2084,"column":4},"end":{"line":2084,"column":40}},"753":{"start":{"line":2087,"column":2},"end":{"line":2087,"column":75}},"754":{"start":{"line":2111,"column":0},"end":{"line":2136,"column":2}},"755":{"start":{"line":2112,"column":2},"end":{"line":2112,"column":18}},"756":{"start":{"line":2113,"column":2},"end":{"line":2113,"column":107}},"757":{"start":{"line":2113,"column":73},"end":{"line":2113,"column":89}},"758":{"start":{"line":2113,"column":90},"end":{"line":2113,"column":103}},"759":{"start":{"line":2115,"column":2},"end":{"line":2121,"column":5}},"760":{"start":{"line":2116,"column":4},"end":{"line":2116,"column":29}},"761":{"start":{"line":2117,"column":4},"end":{"line":2117,"column":47}},"762":{"start":{"line":2118,"column":4},"end":{"line":2118,"column":27}},"763":{"start":{"line":2119,"column":4},"end":{"line":2119,"column":30}},"764":{"start":{"line":2120,"column":4},"end":{"line":2120,"column":25}},"765":{"start":{"line":2123,"column":2},"end":{"line":2123,"column":46}},"766":{"start":{"line":2124,"column":2},"end":{"line":2124,"column":64}},"767":{"start":{"line":2125,"column":2},"end":{"line":2125,"column":50}},"768":{"start":{"line":2127,"column":2},"end":{"line":2133,"column":4}},"769":{"start":{"line":2128,"column":4},"end":{"line":2130,"column":6}},"770":{"start":{"line":2129,"column":6},"end":{"line":2129,"column":58}},"771":{"start":{"line":2132,"column":4},"end":{"line":2132,"column":40}},"772":{"start":{"line":2135,"column":2},"end":{"line":2135,"column":75}},"773":{"start":{"line":2162,"column":0},"end":{"line":2198,"column":2}},"774":{"start":{"line":2163,"column":2},"end":{"line":2163,"column":18}},"775":{"start":{"line":2164,"column":2},"end":{"line":2164,"column":107}},"776":{"start":{"line":2164,"column":73},"end":{"line":2164,"column":89}},"777":{"start":{"line":2164,"column":90},"end":{"line":2164,"column":103}},"778":{"start":{"line":2166,"column":2},"end":{"line":2172,"column":5}},"779":{"start":{"line":2167,"column":4},"end":{"line":2167,"column":29}},"780":{"start":{"line":2168,"column":4},"end":{"line":2168,"column":47}},"781":{"start":{"line":2169,"column":4},"end":{"line":2169,"column":27}},"782":{"start":{"line":2170,"column":4},"end":{"line":2170,"column":30}},"783":{"start":{"line":2171,"column":4},"end":{"line":2171,"column":25}},"784":{"start":{"line":2174,"column":2},"end":{"line":2174,"column":46}},"785":{"start":{"line":2175,"column":2},"end":{"line":2175,"column":18}},"786":{"start":{"line":2176,"column":2},"end":{"line":2197,"column":5}},"787":{"start":{"line":2177,"column":4},"end":{"line":2196,"column":5}},"788":{"start":{"line":2178,"column":6},"end":{"line":2178,"column":47}},"789":{"start":{"line":2179,"column":11},"end":{"line":2196,"column":5}},"790":{"start":{"line":2180,"column":6},"end":{"line":2180,"column":35}},"791":{"start":{"line":2181,"column":6},"end":{"line":2181,"column":39}},"792":{"start":{"line":2183,"column":6},"end":{"line":2195,"column":9}},"793":{"start":{"line":2184,"column":8},"end":{"line":2184,"column":20}},"794":{"start":{"line":2185,"column":8},"end":{"line":2192,"column":9}},"795":{"start":{"line":2186,"column":10},"end":{"line":2186,"column":25}},"796":{"start":{"line":2187,"column":15},"end":{"line":2192,"column":9}},"797":{"start":{"line":2189,"column":10},"end":{"line":2189,"column":26}},"798":{"start":{"line":2190,"column":10},"end":{"line":2190,"column":29}},"799":{"start":{"line":2191,"column":10},"end":{"line":2191,"column":45}},"800":{"start":{"line":2194,"column":8},"end":{"line":2194,"column":55}},"801":{"start":{"line":2226,"column":0},"end":{"line":2268,"column":2}},"802":{"start":{"line":2227,"column":2},"end":{"line":2227,"column":18}},"803":{"start":{"line":2228,"column":2},"end":{"line":2228,"column":107}},"804":{"start":{"line":2228,"column":73},"end":{"line":2228,"column":89}},"805":{"start":{"line":2228,"column":90},"end":{"line":2228,"column":103}},"806":{"start":{"line":2230,"column":2},"end":{"line":2236,"column":5}},"807":{"start":{"line":2231,"column":4},"end":{"line":2231,"column":29}},"808":{"start":{"line":2232,"column":4},"end":{"line":2232,"column":47}},"809":{"start":{"line":2233,"column":4},"end":{"line":2233,"column":27}},"810":{"start":{"line":2234,"column":4},"end":{"line":2234,"column":30}},"811":{"start":{"line":2235,"column":4},"end":{"line":2235,"column":25}},"812":{"start":{"line":2238,"column":2},"end":{"line":2238,"column":46}},"813":{"start":{"line":2239,"column":2},"end":{"line":2239,"column":64}},"814":{"start":{"line":2240,"column":2},"end":{"line":2241,"column":23}},"815":{"start":{"line":2243,"column":2},"end":{"line":2243,"column":46}},"816":{"start":{"line":2244,"column":2},"end":{"line":2244,"column":55}},"817":{"start":{"line":2246,"column":2},"end":{"line":2246,"column":18}},"818":{"start":{"line":2247,"column":2},"end":{"line":2265,"column":4}},"819":{"start":{"line":2248,"column":4},"end":{"line":2248,"column":31}},"820":{"start":{"line":2249,"column":4},"end":{"line":2249,"column":37}},"821":{"start":{"line":2251,"column":4},"end":{"line":2258,"column":5}},"822":{"start":{"line":2252,"column":6},"end":{"line":2252,"column":73}},"823":{"start":{"line":2253,"column":6},"end":{"line":2253,"column":96}},"824":{"start":{"line":2254,"column":6},"end":{"line":2254,"column":102}},"825":{"start":{"line":2255,"column":6},"end":{"line":2255,"column":57}},"826":{"start":{"line":2257,"column":6},"end":{"line":2257,"column":58}},"827":{"start":{"line":2260,"column":4},"end":{"line":2262,"column":6}},"828":{"start":{"line":2261,"column":6},"end":{"line":2261,"column":102}},"829":{"start":{"line":2264,"column":4},"end":{"line":2264,"column":40}},"830":{"start":{"line":2267,"column":2},"end":{"line":2267,"column":75}},"831":{"start":{"line":2312,"column":0},"end":{"line":2349,"column":2}},"832":{"start":{"line":2313,"column":2},"end":{"line":2313,"column":18}},"833":{"start":{"line":2314,"column":2},"end":{"line":2314,"column":107}},"834":{"start":{"line":2314,"column":73},"end":{"line":2314,"column":89}},"835":{"start":{"line":2314,"column":90},"end":{"line":2314,"column":103}},"836":{"start":{"line":2315,"column":2},"end":{"line":2315,"column":80}},"837":{"start":{"line":2317,"column":2},"end":{"line":2324,"column":5}},"838":{"start":{"line":2318,"column":4},"end":{"line":2318,"column":29}},"839":{"start":{"line":2319,"column":4},"end":{"line":2319,"column":47}},"840":{"start":{"line":2320,"column":4},"end":{"line":2320,"column":27}},"841":{"start":{"line":2321,"column":4},"end":{"line":2321,"column":45}},"842":{"start":{"line":2322,"column":4},"end":{"line":2322,"column":30}},"843":{"start":{"line":2323,"column":4},"end":{"line":2323,"column":25}},"844":{"start":{"line":2326,"column":2},"end":{"line":2326,"column":46}},"845":{"start":{"line":2328,"column":2},"end":{"line":2328,"column":56}},"846":{"start":{"line":2330,"column":2},"end":{"line":2346,"column":5}},"847":{"start":{"line":2331,"column":4},"end":{"line":2344,"column":5}},"848":{"start":{"line":2333,"column":6},"end":{"line":2335,"column":7}},"849":{"start":{"line":2334,"column":8},"end":{"line":2334,"column":28}},"850":{"start":{"line":2337,"column":6},"end":{"line":2343,"column":7}},"851":{"start":{"line":2339,"column":8},"end":{"line":2342,"column":11}},"852":{"start":{"line":2340,"column":10},"end":{"line":2340,"column":50}},"853":{"start":{"line":2341,"column":10},"end":{"line":2341,"column":17}},"854":{"start":{"line":2345,"column":4},"end":{"line":2345,"column":44}},"855":{"start":{"line":2348,"column":2},"end":{"line":2348,"column":30}},"856":{"start":{"line":2383,"column":0},"end":{"line":2408,"column":2}},"857":{"start":{"line":2384,"column":2},"end":{"line":2384,"column":18}},"858":{"start":{"line":2385,"column":2},"end":{"line":2385,"column":107}},"859":{"start":{"line":2385,"column":73},"end":{"line":2385,"column":89}},"860":{"start":{"line":2385,"column":90},"end":{"line":2385,"column":103}},"861":{"start":{"line":2387,"column":2},"end":{"line":2392,"column":5}},"862":{"start":{"line":2388,"column":4},"end":{"line":2388,"column":29}},"863":{"start":{"line":2389,"column":4},"end":{"line":2389,"column":47}},"864":{"start":{"line":2390,"column":4},"end":{"line":2390,"column":27}},"865":{"start":{"line":2391,"column":4},"end":{"line":2391,"column":30}},"866":{"start":{"line":2394,"column":2},"end":{"line":2394,"column":46}},"867":{"start":{"line":2396,"column":2},"end":{"line":2396,"column":44}},"868":{"start":{"line":2397,"column":2},"end":{"line":2405,"column":5}},"869":{"start":{"line":2398,"column":4},"end":{"line":2400,"column":5}},"870":{"start":{"line":2399,"column":6},"end":{"line":2399,"column":38}},"871":{"start":{"line":2402,"column":4},"end":{"line":2404,"column":5}},"872":{"start":{"line":2403,"column":6},"end":{"line":2403,"column":46}},"873":{"start":{"line":2407,"column":2},"end":{"line":2407,"column":20}},"874":{"start":{"line":2453,"column":0},"end":{"line":2504,"column":2}},"875":{"start":{"line":2454,"column":2},"end":{"line":2454,"column":18}},"876":{"start":{"line":2455,"column":2},"end":{"line":2455,"column":107}},"877":{"start":{"line":2455,"column":73},"end":{"line":2455,"column":89}},"878":{"start":{"line":2455,"column":90},"end":{"line":2455,"column":103}},"879":{"start":{"line":2456,"column":2},"end":{"line":2456,"column":80}},"880":{"start":{"line":2458,"column":2},"end":{"line":2465,"column":5}},"881":{"start":{"line":2459,"column":4},"end":{"line":2459,"column":29}},"882":{"start":{"line":2460,"column":4},"end":{"line":2460,"column":47}},"883":{"start":{"line":2461,"column":4},"end":{"line":2461,"column":27}},"884":{"start":{"line":2462,"column":4},"end":{"line":2462,"column":41}},"885":{"start":{"line":2463,"column":4},"end":{"line":2463,"column":30}},"886":{"start":{"line":2464,"column":4},"end":{"line":2464,"column":25}},"887":{"start":{"line":2467,"column":2},"end":{"line":2467,"column":46}},"888":{"start":{"line":2469,"column":2},"end":{"line":2473,"column":4}},"889":{"start":{"line":2475,"column":2},"end":{"line":2501,"column":3}},"890":{"start":{"line":2476,"column":4},"end":{"line":2476,"column":82}},"891":{"start":{"line":2478,"column":4},"end":{"line":2478,"column":20}},"892":{"start":{"line":2479,"column":4},"end":{"line":2500,"column":7}},"893":{"start":{"line":2480,"column":6},"end":{"line":2499,"column":7}},"894":{"start":{"line":2481,"column":8},"end":{"line":2481,"column":24}},"895":{"start":{"line":2483,"column":8},"end":{"line":2483,"column":17}},"896":{"start":{"line":2484,"column":8},"end":{"line":2490,"column":9}},"897":{"start":{"line":2485,"column":10},"end":{"line":2485,"column":55}},"898":{"start":{"line":2486,"column":10},"end":{"line":2486,"column":89}},"899":{"start":{"line":2487,"column":10},"end":{"line":2487,"column":46}},"900":{"start":{"line":2489,"column":10},"end":{"line":2489,"column":42}},"901":{"start":{"line":2491,"column":8},"end":{"line":2491,"column":46}},"902":{"start":{"line":2493,"column":8},"end":{"line":2498,"column":9}},"903":{"start":{"line":2494,"column":10},"end":{"line":2494,"column":173}},"904":{"start":{"line":2495,"column":10},"end":{"line":2495,"column":93}},"905":{"start":{"line":2497,"column":10},"end":{"line":2497,"column":88}},"906":{"start":{"line":2503,"column":2},"end":{"line":2503,"column":30}},"907":{"start":{"line":2531,"column":0},"end":{"line":2582,"column":2}},"908":{"start":{"line":2532,"column":2},"end":{"line":2532,"column":18}},"909":{"start":{"line":2533,"column":2},"end":{"line":2533,"column":107}},"910":{"start":{"line":2533,"column":73},"end":{"line":2533,"column":89}},"911":{"start":{"line":2533,"column":90},"end":{"line":2533,"column":103}},"912":{"start":{"line":2535,"column":2},"end":{"line":2541,"column":5}},"913":{"start":{"line":2536,"column":4},"end":{"line":2536,"column":29}},"914":{"start":{"line":2537,"column":4},"end":{"line":2537,"column":47}},"915":{"start":{"line":2538,"column":4},"end":{"line":2538,"column":27}},"916":{"start":{"line":2539,"column":4},"end":{"line":2539,"column":30}},"917":{"start":{"line":2540,"column":4},"end":{"line":2540,"column":25}},"918":{"start":{"line":2543,"column":2},"end":{"line":2543,"column":64}},"919":{"start":{"line":2544,"column":2},"end":{"line":2544,"column":46}},"920":{"start":{"line":2545,"column":2},"end":{"line":2546,"column":61}},"921":{"start":{"line":2548,"column":2},"end":{"line":2548,"column":46}},"922":{"start":{"line":2550,"column":2},"end":{"line":2579,"column":4}},"923":{"start":{"line":2551,"column":4},"end":{"line":2551,"column":33}},"924":{"start":{"line":2552,"column":4},"end":{"line":2572,"column":5}},"925":{"start":{"line":2553,"column":6},"end":{"line":2553,"column":33}},"926":{"start":{"line":2555,"column":6},"end":{"line":2555,"column":22}},"927":{"start":{"line":2556,"column":6},"end":{"line":2562,"column":7}},"928":{"start":{"line":2557,"column":8},"end":{"line":2557,"column":59}},"929":{"start":{"line":2559,"column":8},"end":{"line":2561,"column":9}},"930":{"start":{"line":2560,"column":10},"end":{"line":2560,"column":30}},"931":{"start":{"line":2564,"column":6},"end":{"line":2571,"column":9}},"932":{"start":{"line":2565,"column":8},"end":{"line":2568,"column":10}},"933":{"start":{"line":2570,"column":8},"end":{"line":2570,"column":42}},"934":{"start":{"line":2574,"column":4},"end":{"line":2576,"column":6}},"935":{"start":{"line":2575,"column":6},"end":{"line":2575,"column":79}},"936":{"start":{"line":2578,"column":4},"end":{"line":2578,"column":40}},"937":{"start":{"line":2581,"column":2},"end":{"line":2581,"column":75}},"938":{"start":{"line":2609,"column":0},"end":{"line":2641,"column":2}},"939":{"start":{"line":2610,"column":2},"end":{"line":2610,"column":18}},"940":{"start":{"line":2611,"column":2},"end":{"line":2611,"column":107}},"941":{"start":{"line":2611,"column":73},"end":{"line":2611,"column":89}},"942":{"start":{"line":2611,"column":90},"end":{"line":2611,"column":103}},"943":{"start":{"line":2613,"column":2},"end":{"line":2621,"column":5}},"944":{"start":{"line":2614,"column":4},"end":{"line":2614,"column":29}},"945":{"start":{"line":2615,"column":4},"end":{"line":2615,"column":47}},"946":{"start":{"line":2616,"column":4},"end":{"line":2616,"column":27}},"947":{"start":{"line":2617,"column":4},"end":{"line":2617,"column":30}},"948":{"start":{"line":2618,"column":4},"end":{"line":2618,"column":24}},"949":{"start":{"line":2619,"column":4},"end":{"line":2619,"column":22}},"950":{"start":{"line":2620,"column":4},"end":{"line":2620,"column":25}},"951":{"start":{"line":2623,"column":2},"end":{"line":2623,"column":46}},"952":{"start":{"line":2624,"column":2},"end":{"line":2624,"column":132}},"953":{"start":{"line":2626,"column":2},"end":{"line":2638,"column":4}},"954":{"start":{"line":2627,"column":4},"end":{"line":2627,"column":37}},"955":{"start":{"line":2628,"column":4},"end":{"line":2631,"column":5}},"956":{"start":{"line":2629,"column":6},"end":{"line":2629,"column":73}},"957":{"start":{"line":2630,"column":6},"end":{"line":2630,"column":90}},"958":{"start":{"line":2633,"column":4},"end":{"line":2635,"column":6}},"959":{"start":{"line":2634,"column":6},"end":{"line":2634,"column":83}},"960":{"start":{"line":2637,"column":4},"end":{"line":2637,"column":40}},"961":{"start":{"line":2640,"column":2},"end":{"line":2640,"column":71}},"962":{"start":{"line":2671,"column":0},"end":{"line":2703,"column":2}},"963":{"start":{"line":2672,"column":2},"end":{"line":2672,"column":18}},"964":{"start":{"line":2673,"column":2},"end":{"line":2673,"column":107}},"965":{"start":{"line":2673,"column":73},"end":{"line":2673,"column":89}},"966":{"start":{"line":2673,"column":90},"end":{"line":2673,"column":103}},"967":{"start":{"line":2675,"column":2},"end":{"line":2684,"column":5}},"968":{"start":{"line":2676,"column":4},"end":{"line":2676,"column":29}},"969":{"start":{"line":2677,"column":4},"end":{"line":2677,"column":47}},"970":{"start":{"line":2678,"column":4},"end":{"line":2678,"column":27}},"971":{"start":{"line":2679,"column":4},"end":{"line":2679,"column":39}},"972":{"start":{"line":2680,"column":4},"end":{"line":2680,"column":30}},"973":{"start":{"line":2681,"column":4},"end":{"line":2681,"column":24}},"974":{"start":{"line":2682,"column":4},"end":{"line":2682,"column":22}},"975":{"start":{"line":2683,"column":4},"end":{"line":2683,"column":25}},"976":{"start":{"line":2686,"column":2},"end":{"line":2686,"column":46}},"977":{"start":{"line":2687,"column":2},"end":{"line":2687,"column":123}},"978":{"start":{"line":2689,"column":2},"end":{"line":2689,"column":43}},"979":{"start":{"line":2690,"column":2},"end":{"line":2692,"column":3}},"980":{"start":{"line":2691,"column":4},"end":{"line":2691,"column":54}},"981":{"start":{"line":2694,"column":2},"end":{"line":2694,"column":18}},"982":{"start":{"line":2695,"column":2},"end":{"line":2702,"column":3}},"983":{"start":{"line":2696,"column":4},"end":{"line":2699,"column":7}},"984":{"start":{"line":2697,"column":6},"end":{"line":2697,"column":51}},"985":{"start":{"line":2698,"column":6},"end":{"line":2698,"column":123}},"986":{"start":{"line":2701,"column":4},"end":{"line":2701,"column":117}},"987":{"start":{"line":2741,"column":0},"end":{"line":2774,"column":2}},"988":{"start":{"line":2742,"column":2},"end":{"line":2742,"column":18}},"989":{"start":{"line":2743,"column":2},"end":{"line":2743,"column":107}},"990":{"start":{"line":2743,"column":73},"end":{"line":2743,"column":89}},"991":{"start":{"line":2743,"column":90},"end":{"line":2743,"column":103}},"992":{"start":{"line":2745,"column":2},"end":{"line":2752,"column":5}},"993":{"start":{"line":2746,"column":4},"end":{"line":2746,"column":29}},"994":{"start":{"line":2747,"column":4},"end":{"line":2747,"column":47}},"995":{"start":{"line":2748,"column":4},"end":{"line":2748,"column":27}},"996":{"start":{"line":2749,"column":4},"end":{"line":2749,"column":27}},"997":{"start":{"line":2750,"column":4},"end":{"line":2750,"column":30}},"998":{"start":{"line":2751,"column":4},"end":{"line":2751,"column":25}},"999":{"start":{"line":2754,"column":2},"end":{"line":2754,"column":46}},"1000":{"start":{"line":2756,"column":2},"end":{"line":2756,"column":77}},"1001":{"start":{"line":2757,"column":2},"end":{"line":2759,"column":3}},"1002":{"start":{"line":2758,"column":4},"end":{"line":2758,"column":44}},"1003":{"start":{"line":2761,"column":2},"end":{"line":2763,"column":3}},"1004":{"start":{"line":2762,"column":5},"end":{"line":2762,"column":118}},"1005":{"start":{"line":2765,"column":2},"end":{"line":2765,"column":18}},"1006":{"start":{"line":2766,"column":2},"end":{"line":2773,"column":5}},"1007":{"start":{"line":2767,"column":4},"end":{"line":2772,"column":5}},"1008":{"start":{"line":2768,"column":6},"end":{"line":2768,"column":22}},"1009":{"start":{"line":2771,"column":6},"end":{"line":2771,"column":95}},"1010":{"start":{"line":2813,"column":0},"end":{"line":2846,"column":2}},"1011":{"start":{"line":2814,"column":2},"end":{"line":2814,"column":18}},"1012":{"start":{"line":2815,"column":2},"end":{"line":2815,"column":107}},"1013":{"start":{"line":2815,"column":73},"end":{"line":2815,"column":89}},"1014":{"start":{"line":2815,"column":90},"end":{"line":2815,"column":103}},"1015":{"start":{"line":2817,"column":2},"end":{"line":2824,"column":5}},"1016":{"start":{"line":2818,"column":4},"end":{"line":2818,"column":29}},"1017":{"start":{"line":2819,"column":4},"end":{"line":2819,"column":47}},"1018":{"start":{"line":2820,"column":4},"end":{"line":2820,"column":27}},"1019":{"start":{"line":2821,"column":4},"end":{"line":2821,"column":45}},"1020":{"start":{"line":2822,"column":4},"end":{"line":2822,"column":30}},"1021":{"start":{"line":2823,"column":4},"end":{"line":2823,"column":25}},"1022":{"start":{"line":2826,"column":2},"end":{"line":2826,"column":46}},"1023":{"start":{"line":2827,"column":2},"end":{"line":2827,"column":72}},"1024":{"start":{"line":2829,"column":2},"end":{"line":2829,"column":18}},"1025":{"start":{"line":2830,"column":2},"end":{"line":2843,"column":5}},"1026":{"start":{"line":2831,"column":4},"end":{"line":2842,"column":5}},"1027":{"start":{"line":2832,"column":6},"end":{"line":2832,"column":22}},"1028":{"start":{"line":2834,"column":6},"end":{"line":2841,"column":9}},"1029":{"start":{"line":2835,"column":8},"end":{"line":2840,"column":9}},"1030":{"start":{"line":2836,"column":10},"end":{"line":2836,"column":26}},"1031":{"start":{"line":2838,"column":10},"end":{"line":2838,"column":104}},"1032":{"start":{"line":2839,"column":10},"end":{"line":2839,"column":104}},"1033":{"start":{"line":2845,"column":2},"end":{"line":2845,"column":30}},"1034":{"start":{"line":2885,"column":0},"end":{"line":2915,"column":2}},"1035":{"start":{"line":2886,"column":2},"end":{"line":2886,"column":18}},"1036":{"start":{"line":2887,"column":2},"end":{"line":2887,"column":107}},"1037":{"start":{"line":2887,"column":73},"end":{"line":2887,"column":89}},"1038":{"start":{"line":2887,"column":90},"end":{"line":2887,"column":103}},"1039":{"start":{"line":2889,"column":2},"end":{"line":2897,"column":5}},"1040":{"start":{"line":2890,"column":4},"end":{"line":2890,"column":29}},"1041":{"start":{"line":2891,"column":4},"end":{"line":2891,"column":47}},"1042":{"start":{"line":2892,"column":4},"end":{"line":2892,"column":27}},"1043":{"start":{"line":2893,"column":4},"end":{"line":2893,"column":31}},"1044":{"start":{"line":2894,"column":4},"end":{"line":2894,"column":42}},"1045":{"start":{"line":2895,"column":4},"end":{"line":2895,"column":30}},"1046":{"start":{"line":2896,"column":4},"end":{"line":2896,"column":25}},"1047":{"start":{"line":2899,"column":2},"end":{"line":2899,"column":46}},"1048":{"start":{"line":2900,"column":2},"end":{"line":2900,"column":72}},"1049":{"start":{"line":2902,"column":2},"end":{"line":2902,"column":17}},"1050":{"start":{"line":2904,"column":2},"end":{"line":2904,"column":18}},"1051":{"start":{"line":2905,"column":2},"end":{"line":2912,"column":5}},"1052":{"start":{"line":2906,"column":4},"end":{"line":2911,"column":5}},"1053":{"start":{"line":2907,"column":6},"end":{"line":2907,"column":22}},"1054":{"start":{"line":2909,"column":6},"end":{"line":2909,"column":105}},"1055":{"start":{"line":2910,"column":6},"end":{"line":2910,"column":108}},"1056":{"start":{"line":2914,"column":2},"end":{"line":2914,"column":30}},"1057":{"start":{"line":2960,"column":0},"end":{"line":2985,"column":2}},"1058":{"start":{"line":2961,"column":2},"end":{"line":2961,"column":18}},"1059":{"start":{"line":2962,"column":2},"end":{"line":2962,"column":107}},"1060":{"start":{"line":2962,"column":73},"end":{"line":2962,"column":89}},"1061":{"start":{"line":2962,"column":90},"end":{"line":2962,"column":103}},"1062":{"start":{"line":2964,"column":2},"end":{"line":2969,"column":5}},"1063":{"start":{"line":2965,"column":4},"end":{"line":2965,"column":29}},"1064":{"start":{"line":2966,"column":4},"end":{"line":2966,"column":47}},"1065":{"start":{"line":2967,"column":4},"end":{"line":2967,"column":27}},"1066":{"start":{"line":2968,"column":4},"end":{"line":2968,"column":30}},"1067":{"start":{"line":2971,"column":2},"end":{"line":2971,"column":46}},"1068":{"start":{"line":2973,"column":2},"end":{"line":2973,"column":78}},"1069":{"start":{"line":2974,"column":2},"end":{"line":2982,"column":5}},"1070":{"start":{"line":2975,"column":4},"end":{"line":2977,"column":5}},"1071":{"start":{"line":2976,"column":6},"end":{"line":2976,"column":34}},"1072":{"start":{"line":2979,"column":4},"end":{"line":2981,"column":5}},"1073":{"start":{"line":2980,"column":6},"end":{"line":2980,"column":38}},"1074":{"start":{"line":2984,"column":2},"end":{"line":2984,"column":16}},"1075":{"start":{"line":3027,"column":0},"end":{"line":3065,"column":2}},"1076":{"start":{"line":3028,"column":2},"end":{"line":3028,"column":18}},"1077":{"start":{"line":3029,"column":2},"end":{"line":3029,"column":107}},"1078":{"start":{"line":3029,"column":73},"end":{"line":3029,"column":89}},"1079":{"start":{"line":3029,"column":90},"end":{"line":3029,"column":103}},"1080":{"start":{"line":3031,"column":2},"end":{"line":3037,"column":5}},"1081":{"start":{"line":3032,"column":4},"end":{"line":3032,"column":29}},"1082":{"start":{"line":3033,"column":4},"end":{"line":3033,"column":47}},"1083":{"start":{"line":3034,"column":4},"end":{"line":3034,"column":27}},"1084":{"start":{"line":3035,"column":4},"end":{"line":3035,"column":30}},"1085":{"start":{"line":3036,"column":4},"end":{"line":3036,"column":30}},"1086":{"start":{"line":3039,"column":2},"end":{"line":3039,"column":46}},"1087":{"start":{"line":3041,"column":2},"end":{"line":3041,"column":78}},"1088":{"start":{"line":3042,"column":2},"end":{"line":3042,"column":17}},"1089":{"start":{"line":3044,"column":2},"end":{"line":3044,"column":18}},"1090":{"start":{"line":3045,"column":2},"end":{"line":3062,"column":5}},"1091":{"start":{"line":3046,"column":4},"end":{"line":3061,"column":5}},"1092":{"start":{"line":3047,"column":6},"end":{"line":3047,"column":34}},"1093":{"start":{"line":3048,"column":6},"end":{"line":3048,"column":22}},"1094":{"start":{"line":3051,"column":6},"end":{"line":3051,"column":22}},"1095":{"start":{"line":3052,"column":6},"end":{"line":3060,"column":9}},"1096":{"start":{"line":3053,"column":8},"end":{"line":3055,"column":9}},"1097":{"start":{"line":3054,"column":10},"end":{"line":3054,"column":38}},"1098":{"start":{"line":3057,"column":8},"end":{"line":3059,"column":9}},"1099":{"start":{"line":3058,"column":10},"end":{"line":3058,"column":42}},"1100":{"start":{"line":3064,"column":2},"end":{"line":3064,"column":16}},"1101":{"start":{"line":3093,"column":0},"end":{"line":3132,"column":2}},"1102":{"start":{"line":3094,"column":2},"end":{"line":3094,"column":18}},"1103":{"start":{"line":3095,"column":2},"end":{"line":3095,"column":107}},"1104":{"start":{"line":3095,"column":73},"end":{"line":3095,"column":89}},"1105":{"start":{"line":3095,"column":90},"end":{"line":3095,"column":103}},"1106":{"start":{"line":3097,"column":2},"end":{"line":3103,"column":5}},"1107":{"start":{"line":3098,"column":4},"end":{"line":3098,"column":41}},"1108":{"start":{"line":3099,"column":4},"end":{"line":3099,"column":59}},"1109":{"start":{"line":3100,"column":4},"end":{"line":3100,"column":39}},"1110":{"start":{"line":3101,"column":4},"end":{"line":3101,"column":36}},"1111":{"start":{"line":3102,"column":4},"end":{"line":3102,"column":25}},"1112":{"start":{"line":3105,"column":2},"end":{"line":3105,"column":88}},"1113":{"start":{"line":3107,"column":2},"end":{"line":3107,"column":46}},"1114":{"start":{"line":3109,"column":2},"end":{"line":3111,"column":50}},"1115":{"start":{"line":3113,"column":2},"end":{"line":3129,"column":4}},"1116":{"start":{"line":3114,"column":4},"end":{"line":3114,"column":37}},"1117":{"start":{"line":3115,"column":4},"end":{"line":3122,"column":5}},"1118":{"start":{"line":3116,"column":6},"end":{"line":3116,"column":91}},"1119":{"start":{"line":3117,"column":6},"end":{"line":3117,"column":96}},"1120":{"start":{"line":3119,"column":6},"end":{"line":3121,"column":7}},"1121":{"start":{"line":3120,"column":8},"end":{"line":3120,"column":62}},"1122":{"start":{"line":3124,"column":4},"end":{"line":3126,"column":6}},"1123":{"start":{"line":3125,"column":6},"end":{"line":3125,"column":83}},"1124":{"start":{"line":3128,"column":4},"end":{"line":3128,"column":40}},"1125":{"start":{"line":3131,"column":2},"end":{"line":3131,"column":75}},"1126":{"start":{"line":3157,"column":0},"end":{"line":3186,"column":2}},"1127":{"start":{"line":3158,"column":2},"end":{"line":3158,"column":18}},"1128":{"start":{"line":3159,"column":2},"end":{"line":3159,"column":107}},"1129":{"start":{"line":3159,"column":73},"end":{"line":3159,"column":89}},"1130":{"start":{"line":3159,"column":90},"end":{"line":3159,"column":103}},"1131":{"start":{"line":3161,"column":2},"end":{"line":3167,"column":5}},"1132":{"start":{"line":3162,"column":4},"end":{"line":3162,"column":29}},"1133":{"start":{"line":3163,"column":4},"end":{"line":3163,"column":47}},"1134":{"start":{"line":3164,"column":4},"end":{"line":3164,"column":27}},"1135":{"start":{"line":3165,"column":4},"end":{"line":3165,"column":30}},"1136":{"start":{"line":3166,"column":4},"end":{"line":3166,"column":25}},"1137":{"start":{"line":3169,"column":2},"end":{"line":3169,"column":64}},"1138":{"start":{"line":3171,"column":2},"end":{"line":3171,"column":46}},"1139":{"start":{"line":3172,"column":2},"end":{"line":3175,"column":54}},"1140":{"start":{"line":3177,"column":2},"end":{"line":3183,"column":4}},"1141":{"start":{"line":3178,"column":4},"end":{"line":3180,"column":6}},"1142":{"start":{"line":3179,"column":6},"end":{"line":3179,"column":58}},"1143":{"start":{"line":3182,"column":4},"end":{"line":3182,"column":40}},"1144":{"start":{"line":3185,"column":2},"end":{"line":3185,"column":75}},"1145":{"start":{"line":3220,"column":0},"end":{"line":3247,"column":2}},"1146":{"start":{"line":3221,"column":0},"end":{"line":3221,"column":131}},"1147":{"start":{"line":3224,"column":2},"end":{"line":3226,"column":3}},"1148":{"start":{"line":3225,"column":4},"end":{"line":3225,"column":83}},"1149":{"start":{"line":3228,"column":2},"end":{"line":3240,"column":4}},"1150":{"start":{"line":3229,"column":4},"end":{"line":3229,"column":37}},"1151":{"start":{"line":3230,"column":4},"end":{"line":3233,"column":5}},"1152":{"start":{"line":3231,"column":6},"end":{"line":3231,"column":73}},"1153":{"start":{"line":3232,"column":6},"end":{"line":3232,"column":90}},"1154":{"start":{"line":3235,"column":4},"end":{"line":3237,"column":6}},"1155":{"start":{"line":3236,"column":6},"end":{"line":3236,"column":83}},"1156":{"start":{"line":3239,"column":4},"end":{"line":3239,"column":40}},"1157":{"start":{"line":3242,"column":2},"end":{"line":3246,"column":3}},"1158":{"start":{"line":3243,"column":4},"end":{"line":3243,"column":73}},"1159":{"start":{"line":3245,"column":4},"end":{"line":3245,"column":91}},"1160":{"start":{"line":3284,"column":0},"end":{"line":3391,"column":2}},"1161":{"start":{"line":3285,"column":2},"end":{"line":3285,"column":81}},"1162":{"start":{"line":3287,"column":2},"end":{"line":3287,"column":32}},"1163":{"start":{"line":3288,"column":2},"end":{"line":3288,"column":65}},"1164":{"start":{"line":3289,"column":2},"end":{"line":3289,"column":104}},"1165":{"start":{"line":3291,"column":2},"end":{"line":3291,"column":40}},"1166":{"start":{"line":3294,"column":2},"end":{"line":3294,"column":64}},"1167":{"start":{"line":3295,"column":2},"end":{"line":3295,"column":40}},"1168":{"start":{"line":3297,"column":2},"end":{"line":3297,"column":111}},"1169":{"start":{"line":3300,"column":2},"end":{"line":3300,"column":108}},"1170":{"start":{"line":3303,"column":2},"end":{"line":3305,"column":3}},"1171":{"start":{"line":3304,"column":4},"end":{"line":3304,"column":54}},"1172":{"start":{"line":3308,"column":2},"end":{"line":3308,"column":78}},"1173":{"start":{"line":3309,"column":2},"end":{"line":3309,"column":63}},"1174":{"start":{"line":3312,"column":2},"end":{"line":3316,"column":4}},"1175":{"start":{"line":3318,"column":2},"end":{"line":3318,"column":18}},"1176":{"start":{"line":3319,"column":2},"end":{"line":3356,"column":5}},"1177":{"start":{"line":3320,"column":4},"end":{"line":3320,"column":25}},"1178":{"start":{"line":3321,"column":4},"end":{"line":3321,"column":21}},"1179":{"start":{"line":3322,"column":4},"end":{"line":3322,"column":75}},"1180":{"start":{"line":3324,"column":4},"end":{"line":3326,"column":5}},"1181":{"start":{"line":3325,"column":6},"end":{"line":3325,"column":93}},"1182":{"start":{"line":3328,"column":4},"end":{"line":3332,"column":5}},"1183":{"start":{"line":3330,"column":6},"end":{"line":3330,"column":53}},"1184":{"start":{"line":3331,"column":6},"end":{"line":3331,"column":56}},"1185":{"start":{"line":3334,"column":4},"end":{"line":3345,"column":5}},"1186":{"start":{"line":3335,"column":6},"end":{"line":3335,"column":124}},"1187":{"start":{"line":3336,"column":6},"end":{"line":3336,"column":42}},"1188":{"start":{"line":3338,"column":6},"end":{"line":3344,"column":9}},"1189":{"start":{"line":3339,"column":8},"end":{"line":3341,"column":9}},"1190":{"start":{"line":3340,"column":10},"end":{"line":3340,"column":26}},"1191":{"start":{"line":3342,"column":8},"end":{"line":3342,"column":38}},"1192":{"start":{"line":3343,"column":8},"end":{"line":3343,"column":20}},"1193":{"start":{"line":3347,"column":4},"end":{"line":3355,"column":5}},"1194":{"start":{"line":3348,"column":6},"end":{"line":3348,"column":53}},"1195":{"start":{"line":3349,"column":6},"end":{"line":3349,"column":23}},"1196":{"start":{"line":3351,"column":6},"end":{"line":3354,"column":7}},"1197":{"start":{"line":3352,"column":8},"end":{"line":3352,"column":48}},"1198":{"start":{"line":3353,"column":8},"end":{"line":3353,"column":28}},"1199":{"start":{"line":3358,"column":2},"end":{"line":3361,"column":5}},"1200":{"start":{"line":3359,"column":4},"end":{"line":3359,"column":79}},"1201":{"start":{"line":3360,"column":4},"end":{"line":3360,"column":37}},"1202":{"start":{"line":3363,"column":2},"end":{"line":3366,"column":5}},"1203":{"start":{"line":3364,"column":4},"end":{"line":3364,"column":44}},"1204":{"start":{"line":3365,"column":4},"end":{"line":3365,"column":25}},"1205":{"start":{"line":3368,"column":2},"end":{"line":3388,"column":5}},"1206":{"start":{"line":3369,"column":4},"end":{"line":3369,"column":51}},"1207":{"start":{"line":3371,"column":4},"end":{"line":3374,"column":5}},"1208":{"start":{"line":3372,"column":6},"end":{"line":3372,"column":22}},"1209":{"start":{"line":3373,"column":6},"end":{"line":3373,"column":13}},"1210":{"start":{"line":3376,"column":4},"end":{"line":3380,"column":5}},"1211":{"start":{"line":3377,"column":6},"end":{"line":3377,"column":62}},"1212":{"start":{"line":3378,"column":11},"end":{"line":3380,"column":5}},"1213":{"start":{"line":3379,"column":6},"end":{"line":3379,"column":125}},"1214":{"start":{"line":3383,"column":4},"end":{"line":3383,"column":105}},"1215":{"start":{"line":3384,"column":4},"end":{"line":3387,"column":7}},"1216":{"start":{"line":3385,"column":6},"end":{"line":3385,"column":27}},"1217":{"start":{"line":3386,"column":6},"end":{"line":3386,"column":38}},"1218":{"start":{"line":3390,"column":2},"end":{"line":3390,"column":22}},"1219":{"start":{"line":3423,"column":0},"end":{"line":3463,"column":2}},"1220":{"start":{"line":3424,"column":2},"end":{"line":3424,"column":18}},"1221":{"start":{"line":3425,"column":2},"end":{"line":3425,"column":107}},"1222":{"start":{"line":3425,"column":73},"end":{"line":3425,"column":89}},"1223":{"start":{"line":3425,"column":90},"end":{"line":3425,"column":103}},"1224":{"start":{"line":3427,"column":2},"end":{"line":3434,"column":5}},"1225":{"start":{"line":3428,"column":4},"end":{"line":3428,"column":29}},"1226":{"start":{"line":3429,"column":4},"end":{"line":3429,"column":47}},"1227":{"start":{"line":3430,"column":4},"end":{"line":3430,"column":27}},"1228":{"start":{"line":3431,"column":4},"end":{"line":3431,"column":41}},"1229":{"start":{"line":3432,"column":4},"end":{"line":3432,"column":30}},"1230":{"start":{"line":3433,"column":4},"end":{"line":3433,"column":25}},"1231":{"start":{"line":3436,"column":2},"end":{"line":3436,"column":46}},"1232":{"start":{"line":3437,"column":2},"end":{"line":3437,"column":64}},"1233":{"start":{"line":3438,"column":2},"end":{"line":3438,"column":68}},"1234":{"start":{"line":3440,"column":2},"end":{"line":3440,"column":46}},"1235":{"start":{"line":3441,"column":2},"end":{"line":3441,"column":55}},"1236":{"start":{"line":3443,"column":2},"end":{"line":3443,"column":18}},"1237":{"start":{"line":3444,"column":2},"end":{"line":3460,"column":4}},"1238":{"start":{"line":3445,"column":4},"end":{"line":3445,"column":37}},"1239":{"start":{"line":3447,"column":4},"end":{"line":3453,"column":5}},"1240":{"start":{"line":3448,"column":6},"end":{"line":3448,"column":73}},"1241":{"start":{"line":3449,"column":6},"end":{"line":3449,"column":102}},"1242":{"start":{"line":3450,"column":6},"end":{"line":3450,"column":96}},"1243":{"start":{"line":3452,"column":6},"end":{"line":3452,"column":58}},"1244":{"start":{"line":3455,"column":4},"end":{"line":3457,"column":6}},"1245":{"start":{"line":3456,"column":6},"end":{"line":3456,"column":83}},"1246":{"start":{"line":3459,"column":4},"end":{"line":3459,"column":40}},"1247":{"start":{"line":3462,"column":2},"end":{"line":3462,"column":99}},"1248":{"start":{"line":3496,"column":0},"end":{"line":3640,"column":2}},"1249":{"start":{"line":3497,"column":2},"end":{"line":3497,"column":18}},"1250":{"start":{"line":3498,"column":2},"end":{"line":3498,"column":107}},"1251":{"start":{"line":3498,"column":73},"end":{"line":3498,"column":89}},"1252":{"start":{"line":3498,"column":90},"end":{"line":3498,"column":103}},"1253":{"start":{"line":3500,"column":2},"end":{"line":3507,"column":5}},"1254":{"start":{"line":3501,"column":4},"end":{"line":3501,"column":29}},"1255":{"start":{"line":3502,"column":4},"end":{"line":3502,"column":47}},"1256":{"start":{"line":3503,"column":4},"end":{"line":3503,"column":27}},"1257":{"start":{"line":3504,"column":4},"end":{"line":3504,"column":41}},"1258":{"start":{"line":3505,"column":4},"end":{"line":3505,"column":30}},"1259":{"start":{"line":3506,"column":4},"end":{"line":3506,"column":25}},"1260":{"start":{"line":3509,"column":2},"end":{"line":3509,"column":72}},"1261":{"start":{"line":3510,"column":2},"end":{"line":3510,"column":115}},"1262":{"start":{"line":3511,"column":2},"end":{"line":3511,"column":103}},"1263":{"start":{"line":3512,"column":2},"end":{"line":3512,"column":63}},"1264":{"start":{"line":3514,"column":2},"end":{"line":3514,"column":83}},"1265":{"start":{"line":3516,"column":2},"end":{"line":3516,"column":18}},"1266":{"start":{"line":3517,"column":2},"end":{"line":3517,"column":61}},"1267":{"start":{"line":3518,"column":2},"end":{"line":3518,"column":21}},"1268":{"start":{"line":3519,"column":2},"end":{"line":3521,"column":3}},"1269":{"start":{"line":3520,"column":4},"end":{"line":3520,"column":47}},"1270":{"start":{"line":3523,"column":2},"end":{"line":3523,"column":29}},"1271":{"start":{"line":3524,"column":2},"end":{"line":3524,"column":31}},"1272":{"start":{"line":3526,"column":2},"end":{"line":3593,"column":5}},"1273":{"start":{"line":3527,"column":4},"end":{"line":3529,"column":5}},"1274":{"start":{"line":3528,"column":6},"end":{"line":3528,"column":53}},"1275":{"start":{"line":3531,"column":4},"end":{"line":3535,"column":6}},"1276":{"start":{"line":3537,"column":4},"end":{"line":3537,"column":31}},"1277":{"start":{"line":3538,"column":4},"end":{"line":3538,"column":73}},"1278":{"start":{"line":3539,"column":4},"end":{"line":3539,"column":83}},"1279":{"start":{"line":3540,"column":4},"end":{"line":3540,"column":73}},"1280":{"start":{"line":3542,"column":4},"end":{"line":3557,"column":5}},"1281":{"start":{"line":3543,"column":6},"end":{"line":3543,"column":75}},"1282":{"start":{"line":3545,"column":6},"end":{"line":3554,"column":9}},"1283":{"start":{"line":3546,"column":8},"end":{"line":3546,"column":26}},"1284":{"start":{"line":3546,"column":19},"end":{"line":3546,"column":26}},"1285":{"start":{"line":3547,"column":8},"end":{"line":3547,"column":107}},"1286":{"start":{"line":3549,"column":8},"end":{"line":3549,"column":111}},"1287":{"start":{"line":3550,"column":8},"end":{"line":3553,"column":9}},"1288":{"start":{"line":3551,"column":10},"end":{"line":3551,"column":78}},"1289":{"start":{"line":3552,"column":10},"end":{"line":3552,"column":34}},"1290":{"start":{"line":3555,"column":6},"end":{"line":3555,"column":55}},"1291":{"start":{"line":3556,"column":6},"end":{"line":3556,"column":13}},"1292":{"start":{"line":3559,"column":4},"end":{"line":3561,"column":5}},"1293":{"start":{"line":3560,"column":6},"end":{"line":3560,"column":13}},"1294":{"start":{"line":3563,"column":4},"end":{"line":3586,"column":7}},"1295":{"start":{"line":3564,"column":6},"end":{"line":3585,"column":7}},"1296":{"start":{"line":3565,"column":8},"end":{"line":3567,"column":9}},"1297":{"start":{"line":3566,"column":10},"end":{"line":3566,"column":116}},"1298":{"start":{"line":3569,"column":8},"end":{"line":3571,"column":9}},"1299":{"start":{"line":3570,"column":10},"end":{"line":3570,"column":39}},"1300":{"start":{"line":3572,"column":8},"end":{"line":3574,"column":9}},"1301":{"start":{"line":3573,"column":10},"end":{"line":3573,"column":39}},"1302":{"start":{"line":3575,"column":8},"end":{"line":3575,"column":82}},"1303":{"start":{"line":3576,"column":8},"end":{"line":3576,"column":72}},"1304":{"start":{"line":3577,"column":8},"end":{"line":3580,"column":9}},"1305":{"start":{"line":3578,"column":10},"end":{"line":3578,"column":78}},"1306":{"start":{"line":3579,"column":10},"end":{"line":3579,"column":34}},"1307":{"start":{"line":3581,"column":8},"end":{"line":3583,"column":9}},"1308":{"start":{"line":3582,"column":10},"end":{"line":3582,"column":34}},"1309":{"start":{"line":3584,"column":8},"end":{"line":3584,"column":23}},"1310":{"start":{"line":3588,"column":4},"end":{"line":3588,"column":55}},"1311":{"start":{"line":3589,"column":4},"end":{"line":3592,"column":5}},"1312":{"start":{"line":3590,"column":6},"end":{"line":3590,"column":46}},"1313":{"start":{"line":3591,"column":6},"end":{"line":3591,"column":26}},"1314":{"start":{"line":3595,"column":2},"end":{"line":3598,"column":5}},"1315":{"start":{"line":3596,"column":4},"end":{"line":3596,"column":49}},"1316":{"start":{"line":3597,"column":4},"end":{"line":3597,"column":37}},"1317":{"start":{"line":3600,"column":2},"end":{"line":3603,"column":5}},"1318":{"start":{"line":3601,"column":4},"end":{"line":3601,"column":45}},"1319":{"start":{"line":3602,"column":4},"end":{"line":3602,"column":25}},"1320":{"start":{"line":3605,"column":2},"end":{"line":3608,"column":5}},"1321":{"start":{"line":3606,"column":4},"end":{"line":3606,"column":49}},"1322":{"start":{"line":3607,"column":4},"end":{"line":3607,"column":29}},"1323":{"start":{"line":3610,"column":2},"end":{"line":3631,"column":5}},"1324":{"start":{"line":3611,"column":4},"end":{"line":3611,"column":45}},"1325":{"start":{"line":3612,"column":4},"end":{"line":3630,"column":5}},"1326":{"start":{"line":3613,"column":6},"end":{"line":3613,"column":22}},"1327":{"start":{"line":3615,"column":6},"end":{"line":3629,"column":9}},"1328":{"start":{"line":3616,"column":8},"end":{"line":3616,"column":52}},"1329":{"start":{"line":3617,"column":8},"end":{"line":3619,"column":9}},"1330":{"start":{"line":3618,"column":10},"end":{"line":3618,"column":30}},"1331":{"start":{"line":3620,"column":8},"end":{"line":3622,"column":9}},"1332":{"start":{"line":3621,"column":10},"end":{"line":3621,"column":31}},"1333":{"start":{"line":3623,"column":8},"end":{"line":3623,"column":180}},"1334":{"start":{"line":3624,"column":8},"end":{"line":3624,"column":52}},"1335":{"start":{"line":3625,"column":8},"end":{"line":3627,"column":9}},"1336":{"start":{"line":3626,"column":10},"end":{"line":3626,"column":74}},"1337":{"start":{"line":3628,"column":8},"end":{"line":3628,"column":60}},"1338":{"start":{"line":3633,"column":2},"end":{"line":3636,"column":4}},"1339":{"start":{"line":3638,"column":2},"end":{"line":3638,"column":32}},"1340":{"start":{"line":3639,"column":2},"end":{"line":3639,"column":22}},"1341":{"start":{"line":3645,"column":0},"end":{"line":3658,"column":2}},"1342":{"start":{"line":3646,"column":2},"end":{"line":3657,"column":3}},"1343":{"start":{"line":3647,"column":4},"end":{"line":3649,"column":5}},"1344":{"start":{"line":3648,"column":6},"end":{"line":3648,"column":98}},"1345":{"start":{"line":3651,"column":4},"end":{"line":3651,"column":85}},"1346":{"start":{"line":3652,"column":4},"end":{"line":3656,"column":5}},"1347":{"start":{"line":3653,"column":6},"end":{"line":3653,"column":48}},"1348":{"start":{"line":3655,"column":6},"end":{"line":3655,"column":76}},"1349":{"start":{"line":3663,"column":0},"end":{"line":3683,"column":2}},"1350":{"start":{"line":3664,"column":2},"end":{"line":3664,"column":64}},"1351":{"start":{"line":3665,"column":2},"end":{"line":3668,"column":57}},"1352":{"start":{"line":3670,"column":2},"end":{"line":3670,"column":34}},"1353":{"start":{"line":3671,"column":2},"end":{"line":3671,"column":30}},"1354":{"start":{"line":3673,"column":2},"end":{"line":3673,"column":46}},"1355":{"start":{"line":3675,"column":2},"end":{"line":3680,"column":3}},"1356":{"start":{"line":3676,"column":4},"end":{"line":3676,"column":43}},"1357":{"start":{"line":3677,"column":4},"end":{"line":3677,"column":65}},"1358":{"start":{"line":3679,"column":4},"end":{"line":3679,"column":62}},"1359":{"start":{"line":3682,"column":2},"end":{"line":3682,"column":21}},"1360":{"start":{"line":3688,"column":0},"end":{"line":3730,"column":2}},"1361":{"start":{"line":3689,"column":2},"end":{"line":3689,"column":89}},"1362":{"start":{"line":3690,"column":2},"end":{"line":3690,"column":20}},"1363":{"start":{"line":3692,"column":2},"end":{"line":3694,"column":3}},"1364":{"start":{"line":3693,"column":4},"end":{"line":3693,"column":108}},"1365":{"start":{"line":3697,"column":2},"end":{"line":3699,"column":3}},"1366":{"start":{"line":3698,"column":4},"end":{"line":3698,"column":48}},"1367":{"start":{"line":3702,"column":2},"end":{"line":3705,"column":3}},"1368":{"start":{"line":3703,"column":4},"end":{"line":3703,"column":63}},"1369":{"start":{"line":3704,"column":4},"end":{"line":3704,"column":37}},"1370":{"start":{"line":3709,"column":2},"end":{"line":3715,"column":3}},"1371":{"start":{"line":3710,"column":4},"end":{"line":3714,"column":5}},"1372":{"start":{"line":3711,"column":6},"end":{"line":3711,"column":78}},"1373":{"start":{"line":3712,"column":11},"end":{"line":3714,"column":5}},"1374":{"start":{"line":3713,"column":6},"end":{"line":3713,"column":66}},"1375":{"start":{"line":3717,"column":2},"end":{"line":3720,"column":3}},"1376":{"start":{"line":3718,"column":4},"end":{"line":3718,"column":65}},"1377":{"start":{"line":3719,"column":4},"end":{"line":3719,"column":37}},"1378":{"start":{"line":3722,"column":2},"end":{"line":3724,"column":3}},"1379":{"start":{"line":3723,"column":4},"end":{"line":3723,"column":86}},"1380":{"start":{"line":3726,"column":2},"end":{"line":3729,"column":3}},"1381":{"start":{"line":3727,"column":4},"end":{"line":3727,"column":106}},"1382":{"start":{"line":3728,"column":4},"end":{"line":3728,"column":37}},"1383":{"start":{"line":3757,"column":0},"end":{"line":3798,"column":2}},"1384":{"start":{"line":3758,"column":2},"end":{"line":3758,"column":18}},"1385":{"start":{"line":3759,"column":2},"end":{"line":3759,"column":107}},"1386":{"start":{"line":3759,"column":73},"end":{"line":3759,"column":89}},"1387":{"start":{"line":3759,"column":90},"end":{"line":3759,"column":103}},"1388":{"start":{"line":3761,"column":2},"end":{"line":3767,"column":5}},"1389":{"start":{"line":3762,"column":4},"end":{"line":3762,"column":29}},"1390":{"start":{"line":3763,"column":4},"end":{"line":3763,"column":47}},"1391":{"start":{"line":3764,"column":4},"end":{"line":3764,"column":27}},"1392":{"start":{"line":3765,"column":4},"end":{"line":3765,"column":30}},"1393":{"start":{"line":3766,"column":4},"end":{"line":3766,"column":25}},"1394":{"start":{"line":3769,"column":2},"end":{"line":3769,"column":46}},"1395":{"start":{"line":3771,"column":2},"end":{"line":3771,"column":64}},"1396":{"start":{"line":3772,"column":2},"end":{"line":3772,"column":51}},"1397":{"start":{"line":3778,"column":2},"end":{"line":3795,"column":4}},"1398":{"start":{"line":3779,"column":4},"end":{"line":3779,"column":71}},"1399":{"start":{"line":3780,"column":4},"end":{"line":3788,"column":5}},"1400":{"start":{"line":3781,"column":6},"end":{"line":3781,"column":46}},"1401":{"start":{"line":3782,"column":6},"end":{"line":3782,"column":90}},"1402":{"start":{"line":3784,"column":11},"end":{"line":3788,"column":5}},"1403":{"start":{"line":3785,"column":6},"end":{"line":3785,"column":34}},"1404":{"start":{"line":3786,"column":6},"end":{"line":3786,"column":47}},"1405":{"start":{"line":3787,"column":6},"end":{"line":3787,"column":50}},"1406":{"start":{"line":3790,"column":4},"end":{"line":3792,"column":6}},"1407":{"start":{"line":3791,"column":6},"end":{"line":3791,"column":83}},"1408":{"start":{"line":3794,"column":4},"end":{"line":3794,"column":40}},"1409":{"start":{"line":3797,"column":2},"end":{"line":3797,"column":75}},"1410":{"start":{"line":3824,"column":0},"end":{"line":3866,"column":2}},"1411":{"start":{"line":3825,"column":2},"end":{"line":3825,"column":18}},"1412":{"start":{"line":3826,"column":2},"end":{"line":3826,"column":107}},"1413":{"start":{"line":3826,"column":73},"end":{"line":3826,"column":89}},"1414":{"start":{"line":3826,"column":90},"end":{"line":3826,"column":103}},"1415":{"start":{"line":3828,"column":2},"end":{"line":3833,"column":5}},"1416":{"start":{"line":3829,"column":4},"end":{"line":3829,"column":29}},"1417":{"start":{"line":3830,"column":4},"end":{"line":3830,"column":47}},"1418":{"start":{"line":3831,"column":4},"end":{"line":3831,"column":30}},"1419":{"start":{"line":3832,"column":4},"end":{"line":3832,"column":25}},"1420":{"start":{"line":3835,"column":2},"end":{"line":3835,"column":46}},"1421":{"start":{"line":3836,"column":2},"end":{"line":3837,"column":64}},"1422":{"start":{"line":3843,"column":2},"end":{"line":3843,"column":18}},"1423":{"start":{"line":3844,"column":2},"end":{"line":3863,"column":4}},"1424":{"start":{"line":3845,"column":4},"end":{"line":3845,"column":68}},"1425":{"start":{"line":3846,"column":4},"end":{"line":3846,"column":50}},"1426":{"start":{"line":3848,"column":4},"end":{"line":3856,"column":5}},"1427":{"start":{"line":3849,"column":6},"end":{"line":3849,"column":51}},"1428":{"start":{"line":3850,"column":6},"end":{"line":3850,"column":107}},"1429":{"start":{"line":3851,"column":6},"end":{"line":3851,"column":95}},"1430":{"start":{"line":3853,"column":11},"end":{"line":3856,"column":5}},"1431":{"start":{"line":3854,"column":6},"end":{"line":3854,"column":34}},"1432":{"start":{"line":3855,"column":6},"end":{"line":3855,"column":50}},"1433":{"start":{"line":3858,"column":4},"end":{"line":3860,"column":6}},"1434":{"start":{"line":3859,"column":6},"end":{"line":3859,"column":88}},"1435":{"start":{"line":3862,"column":4},"end":{"line":3862,"column":40}},"1436":{"start":{"line":3865,"column":2},"end":{"line":3865,"column":75}},"1437":{"start":{"line":3891,"column":0},"end":{"line":3930,"column":2}},"1438":{"start":{"line":3892,"column":2},"end":{"line":3892,"column":18}},"1439":{"start":{"line":3893,"column":2},"end":{"line":3893,"column":107}},"1440":{"start":{"line":3893,"column":73},"end":{"line":3893,"column":89}},"1441":{"start":{"line":3893,"column":90},"end":{"line":3893,"column":103}},"1442":{"start":{"line":3895,"column":2},"end":{"line":3899,"column":5}},"1443":{"start":{"line":3896,"column":4},"end":{"line":3896,"column":29}},"1444":{"start":{"line":3897,"column":4},"end":{"line":3897,"column":30}},"1445":{"start":{"line":3898,"column":4},"end":{"line":3898,"column":25}},"1446":{"start":{"line":3901,"column":2},"end":{"line":3901,"column":46}},"1447":{"start":{"line":3902,"column":2},"end":{"line":3903,"column":60}},"1448":{"start":{"line":3909,"column":2},"end":{"line":3927,"column":4}},"1449":{"start":{"line":3910,"column":4},"end":{"line":3910,"column":56}},"1450":{"start":{"line":3911,"column":4},"end":{"line":3911,"column":46}},"1451":{"start":{"line":3913,"column":4},"end":{"line":3920,"column":5}},"1452":{"start":{"line":3914,"column":6},"end":{"line":3914,"column":47}},"1453":{"start":{"line":3915,"column":6},"end":{"line":3915,"column":91}},"1454":{"start":{"line":3917,"column":11},"end":{"line":3920,"column":5}},"1455":{"start":{"line":3918,"column":6},"end":{"line":3918,"column":34}},"1456":{"start":{"line":3919,"column":6},"end":{"line":3919,"column":50}},"1457":{"start":{"line":3922,"column":4},"end":{"line":3924,"column":6}},"1458":{"start":{"line":3923,"column":6},"end":{"line":3923,"column":84}},"1459":{"start":{"line":3926,"column":4},"end":{"line":3926,"column":40}},"1460":{"start":{"line":3929,"column":2},"end":{"line":3929,"column":75}},"1461":{"start":{"line":3941,"column":0},"end":{"line":3941,"column":40}},"1462":{"start":{"line":3943,"column":0},"end":{"line":3943,"column":29}}},"branchMap":{"1":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"2":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":8},"end":{"line":118,"column":12}},{"start":{"line":118,"column":16},"end":{"line":118,"column":23}}]},"3":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"4":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"5":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":2},"end":{"line":138,"column":2}},{"start":{"line":138,"column":2},"end":{"line":138,"column":2}}]},"6":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":140,"column":4}},{"start":{"line":140,"column":4},"end":{"line":140,"column":4}}]},"7":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":2},"end":{"line":269,"column":2}},{"start":{"line":269,"column":2},"end":{"line":269,"column":2}}]},"8":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":4},"end":{"line":280,"column":4}},{"start":{"line":280,"column":4},"end":{"line":280,"column":4}}]},"9":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":6},"end":{"line":289,"column":6}},{"start":{"line":289,"column":6},"end":{"line":289,"column":6}}]},"10":{"line":289,"type":"binary-expr","locations":[{"start":{"line":289,"column":10},"end":{"line":289,"column":64}},{"start":{"line":289,"column":68},"end":{"line":289,"column":128}}]},"11":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":8},"end":{"line":291,"column":8}},{"start":{"line":291,"column":8},"end":{"line":291,"column":8}}]},"12":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":6},"end":{"line":301,"column":6}},{"start":{"line":301,"column":6},"end":{"line":301,"column":6}}]},"13":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":4},"end":{"line":391,"column":4}},{"start":{"line":391,"column":4},"end":{"line":391,"column":4}}]},"14":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":6},"end":{"line":395,"column":6}},{"start":{"line":395,"column":6},"end":{"line":395,"column":6}}]},"15":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":4},"end":{"line":458,"column":4}},{"start":{"line":458,"column":4},"end":{"line":458,"column":4}}]},"16":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":11},"end":{"line":460,"column":11}},{"start":{"line":460,"column":11},"end":{"line":460,"column":11}}]},"17":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":8},"end":{"line":465,"column":8}},{"start":{"line":465,"column":8},"end":{"line":465,"column":8}}]},"18":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":13},"end":{"line":468,"column":13}},{"start":{"line":468,"column":13},"end":{"line":468,"column":13}}]},"19":{"line":468,"type":"binary-expr","locations":[{"start":{"line":468,"column":17},"end":{"line":468,"column":28}},{"start":{"line":468,"column":32},"end":{"line":468,"column":99}},{"start":{"line":468,"column":103},"end":{"line":468,"column":175}}]},"20":{"line":523,"type":"if","locations":[{"start":{"line":523,"column":4},"end":{"line":523,"column":4}},{"start":{"line":523,"column":4},"end":{"line":523,"column":4}}]},"21":{"line":582,"type":"if","locations":[{"start":{"line":582,"column":4},"end":{"line":582,"column":4}},{"start":{"line":582,"column":4},"end":{"line":582,"column":4}}]},"22":{"line":632,"type":"if","locations":[{"start":{"line":632,"column":4},"end":{"line":632,"column":4}},{"start":{"line":632,"column":4},"end":{"line":632,"column":4}}]},"23":{"line":690,"type":"if","locations":[{"start":{"line":690,"column":4},"end":{"line":690,"column":4}},{"start":{"line":690,"column":4},"end":{"line":690,"column":4}}]},"24":{"line":750,"type":"if","locations":[{"start":{"line":750,"column":4},"end":{"line":750,"column":4}},{"start":{"line":750,"column":4},"end":{"line":750,"column":4}}]},"25":{"line":805,"type":"if","locations":[{"start":{"line":805,"column":4},"end":{"line":805,"column":4}},{"start":{"line":805,"column":4},"end":{"line":805,"column":4}}]},"26":{"line":854,"type":"if","locations":[{"start":{"line":854,"column":2},"end":{"line":854,"column":2}},{"start":{"line":854,"column":2},"end":{"line":854,"column":2}}]},"27":{"line":855,"type":"if","locations":[{"start":{"line":855,"column":4},"end":{"line":855,"column":4}},{"start":{"line":855,"column":4},"end":{"line":855,"column":4}}]},"28":{"line":864,"type":"cond-expr","locations":[{"start":{"line":864,"column":84},"end":{"line":864,"column":111}},{"start":{"line":864,"column":114},"end":{"line":864,"column":115}}]},"29":{"line":869,"type":"if","locations":[{"start":{"line":869,"column":4},"end":{"line":869,"column":4}},{"start":{"line":869,"column":4},"end":{"line":869,"column":4}}]},"30":{"line":872,"type":"if","locations":[{"start":{"line":872,"column":6},"end":{"line":872,"column":6}},{"start":{"line":872,"column":6},"end":{"line":872,"column":6}}]},"31":{"line":969,"type":"if","locations":[{"start":{"line":969,"column":4},"end":{"line":969,"column":4}},{"start":{"line":969,"column":4},"end":{"line":969,"column":4}}]},"32":{"line":971,"type":"if","locations":[{"start":{"line":971,"column":11},"end":{"line":971,"column":11}},{"start":{"line":971,"column":11},"end":{"line":971,"column":11}}]},"33":{"line":977,"type":"if","locations":[{"start":{"line":977,"column":8},"end":{"line":977,"column":8}},{"start":{"line":977,"column":8},"end":{"line":977,"column":8}}]},"34":{"line":979,"type":"if","locations":[{"start":{"line":979,"column":15},"end":{"line":979,"column":15}},{"start":{"line":979,"column":15},"end":{"line":979,"column":15}}]},"35":{"line":979,"type":"binary-expr","locations":[{"start":{"line":979,"column":19},"end":{"line":979,"column":30}},{"start":{"line":979,"column":34},"end":{"line":979,"column":101}},{"start":{"line":979,"column":105},"end":{"line":979,"column":172}}]},"36":{"line":1063,"type":"if","locations":[{"start":{"line":1063,"column":4},"end":{"line":1063,"column":4}},{"start":{"line":1063,"column":4},"end":{"line":1063,"column":4}}]},"37":{"line":1129,"type":"if","locations":[{"start":{"line":1129,"column":4},"end":{"line":1129,"column":4}},{"start":{"line":1129,"column":4},"end":{"line":1129,"column":4}}]},"38":{"line":1131,"type":"if","locations":[{"start":{"line":1131,"column":11},"end":{"line":1131,"column":11}},{"start":{"line":1131,"column":11},"end":{"line":1131,"column":11}}]},"39":{"line":1136,"type":"if","locations":[{"start":{"line":1136,"column":8},"end":{"line":1136,"column":8}},{"start":{"line":1136,"column":8},"end":{"line":1136,"column":8}}]},"40":{"line":1139,"type":"if","locations":[{"start":{"line":1139,"column":13},"end":{"line":1139,"column":13}},{"start":{"line":1139,"column":13},"end":{"line":1139,"column":13}}]},"41":{"line":1139,"type":"binary-expr","locations":[{"start":{"line":1139,"column":17},"end":{"line":1139,"column":28}},{"start":{"line":1139,"column":32},"end":{"line":1139,"column":99}},{"start":{"line":1139,"column":103},"end":{"line":1139,"column":181}}]},"42":{"line":1192,"type":"if","locations":[{"start":{"line":1192,"column":4},"end":{"line":1192,"column":4}},{"start":{"line":1192,"column":4},"end":{"line":1192,"column":4}}]},"43":{"line":1292,"type":"if","locations":[{"start":{"line":1292,"column":4},"end":{"line":1292,"column":4}},{"start":{"line":1292,"column":4},"end":{"line":1292,"column":4}}]},"44":{"line":1294,"type":"if","locations":[{"start":{"line":1294,"column":11},"end":{"line":1294,"column":11}},{"start":{"line":1294,"column":11},"end":{"line":1294,"column":11}}]},"45":{"line":1300,"type":"if","locations":[{"start":{"line":1300,"column":8},"end":{"line":1300,"column":8}},{"start":{"line":1300,"column":8},"end":{"line":1300,"column":8}}]},"46":{"line":1302,"type":"if","locations":[{"start":{"line":1302,"column":15},"end":{"line":1302,"column":15}},{"start":{"line":1302,"column":15},"end":{"line":1302,"column":15}}]},"47":{"line":1302,"type":"binary-expr","locations":[{"start":{"line":1302,"column":19},"end":{"line":1302,"column":30}},{"start":{"line":1302,"column":34},"end":{"line":1302,"column":101}},{"start":{"line":1302,"column":105},"end":{"line":1302,"column":178}}]},"48":{"line":1386,"type":"if","locations":[{"start":{"line":1386,"column":2},"end":{"line":1386,"column":2}},{"start":{"line":1386,"column":2},"end":{"line":1386,"column":2}}]},"49":{"line":1394,"type":"if","locations":[{"start":{"line":1394,"column":4},"end":{"line":1394,"column":4}},{"start":{"line":1394,"column":4},"end":{"line":1394,"column":4}}]},"50":{"line":1407,"type":"if","locations":[{"start":{"line":1407,"column":6},"end":{"line":1407,"column":6}},{"start":{"line":1407,"column":6},"end":{"line":1407,"column":6}}]},"51":{"line":1409,"type":"if","locations":[{"start":{"line":1409,"column":8},"end":{"line":1409,"column":8}},{"start":{"line":1409,"column":8},"end":{"line":1409,"column":8}}]},"52":{"line":1420,"type":"if","locations":[{"start":{"line":1420,"column":6},"end":{"line":1420,"column":6}},{"start":{"line":1420,"column":6},"end":{"line":1420,"column":6}}]},"53":{"line":1422,"type":"if","locations":[{"start":{"line":1422,"column":8},"end":{"line":1422,"column":8}},{"start":{"line":1422,"column":8},"end":{"line":1422,"column":8}}]},"54":{"line":1433,"type":"if","locations":[{"start":{"line":1433,"column":6},"end":{"line":1433,"column":6}},{"start":{"line":1433,"column":6},"end":{"line":1433,"column":6}}]},"55":{"line":1494,"type":"if","locations":[{"start":{"line":1494,"column":4},"end":{"line":1494,"column":4}},{"start":{"line":1494,"column":4},"end":{"line":1494,"column":4}}]},"56":{"line":1553,"type":"if","locations":[{"start":{"line":1553,"column":4},"end":{"line":1553,"column":4}},{"start":{"line":1553,"column":4},"end":{"line":1553,"column":4}}]},"57":{"line":1595,"type":"if","locations":[{"start":{"line":1595,"column":2},"end":{"line":1595,"column":2}},{"start":{"line":1595,"column":2},"end":{"line":1595,"column":2}}]},"58":{"line":1595,"type":"binary-expr","locations":[{"start":{"line":1595,"column":6},"end":{"line":1595,"column":30}},{"start":{"line":1595,"column":34},"end":{"line":1595,"column":84}}]},"59":{"line":1607,"type":"if","locations":[{"start":{"line":1607,"column":2},"end":{"line":1607,"column":2}},{"start":{"line":1607,"column":2},"end":{"line":1607,"column":2}}]},"60":{"line":1617,"type":"if","locations":[{"start":{"line":1617,"column":2},"end":{"line":1617,"column":2}},{"start":{"line":1617,"column":2},"end":{"line":1617,"column":2}}]},"61":{"line":1618,"type":"if","locations":[{"start":{"line":1618,"column":4},"end":{"line":1618,"column":4}},{"start":{"line":1618,"column":4},"end":{"line":1618,"column":4}}]},"62":{"line":1619,"type":"if","locations":[{"start":{"line":1619,"column":6},"end":{"line":1619,"column":6}},{"start":{"line":1619,"column":6},"end":{"line":1619,"column":6}}]},"63":{"line":1626,"type":"if","locations":[{"start":{"line":1626,"column":4},"end":{"line":1626,"column":4}},{"start":{"line":1626,"column":4},"end":{"line":1626,"column":4}}]},"64":{"line":1627,"type":"if","locations":[{"start":{"line":1627,"column":6},"end":{"line":1627,"column":6}},{"start":{"line":1627,"column":6},"end":{"line":1627,"column":6}}]},"65":{"line":1670,"type":"if","locations":[{"start":{"line":1670,"column":2},"end":{"line":1670,"column":2}},{"start":{"line":1670,"column":2},"end":{"line":1670,"column":2}}]},"66":{"line":1670,"type":"binary-expr","locations":[{"start":{"line":1670,"column":5},"end":{"line":1670,"column":37}},{"start":{"line":1670,"column":41},"end":{"line":1670,"column":58}}]},"67":{"line":1676,"type":"if","locations":[{"start":{"line":1676,"column":2},"end":{"line":1676,"column":2}},{"start":{"line":1676,"column":2},"end":{"line":1676,"column":2}}]},"68":{"line":1676,"type":"binary-expr","locations":[{"start":{"line":1676,"column":5},"end":{"line":1676,"column":9}},{"start":{"line":1676,"column":13},"end":{"line":1676,"column":56}}]},"69":{"line":1728,"type":"if","locations":[{"start":{"line":1728,"column":4},"end":{"line":1728,"column":4}},{"start":{"line":1728,"column":4},"end":{"line":1728,"column":4}}]},"70":{"line":1788,"type":"if","locations":[{"start":{"line":1788,"column":4},"end":{"line":1788,"column":4}},{"start":{"line":1788,"column":4},"end":{"line":1788,"column":4}}]},"71":{"line":1858,"type":"if","locations":[{"start":{"line":1858,"column":4},"end":{"line":1858,"column":4}},{"start":{"line":1858,"column":4},"end":{"line":1858,"column":4}}]},"72":{"line":1920,"type":"if","locations":[{"start":{"line":1920,"column":4},"end":{"line":1920,"column":4}},{"start":{"line":1920,"column":4},"end":{"line":1920,"column":4}}]},"73":{"line":1979,"type":"if","locations":[{"start":{"line":1979,"column":4},"end":{"line":1979,"column":4}},{"start":{"line":1979,"column":4},"end":{"line":1979,"column":4}}]},"74":{"line":2075,"type":"if","locations":[{"start":{"line":2075,"column":4},"end":{"line":2075,"column":4}},{"start":{"line":2075,"column":4},"end":{"line":2075,"column":4}}]},"75":{"line":2177,"type":"if","locations":[{"start":{"line":2177,"column":4},"end":{"line":2177,"column":4}},{"start":{"line":2177,"column":4},"end":{"line":2177,"column":4}}]},"76":{"line":2179,"type":"if","locations":[{"start":{"line":2179,"column":11},"end":{"line":2179,"column":11}},{"start":{"line":2179,"column":11},"end":{"line":2179,"column":11}}]},"77":{"line":2185,"type":"if","locations":[{"start":{"line":2185,"column":8},"end":{"line":2185,"column":8}},{"start":{"line":2185,"column":8},"end":{"line":2185,"column":8}}]},"78":{"line":2187,"type":"if","locations":[{"start":{"line":2187,"column":15},"end":{"line":2187,"column":15}},{"start":{"line":2187,"column":15},"end":{"line":2187,"column":15}}]},"79":{"line":2187,"type":"binary-expr","locations":[{"start":{"line":2187,"column":19},"end":{"line":2187,"column":30}},{"start":{"line":2187,"column":34},"end":{"line":2187,"column":111}},{"start":{"line":2187,"column":115},"end":{"line":2187,"column":181}}]},"80":{"line":2251,"type":"if","locations":[{"start":{"line":2251,"column":4},"end":{"line":2251,"column":4}},{"start":{"line":2251,"column":4},"end":{"line":2251,"column":4}}]},"81":{"line":2315,"type":"binary-expr","locations":[{"start":{"line":2315,"column":29},"end":{"line":2315,"column":53}},{"start":{"line":2315,"column":57},"end":{"line":2315,"column":79}}]},"82":{"line":2331,"type":"if","locations":[{"start":{"line":2331,"column":4},"end":{"line":2331,"column":4}},{"start":{"line":2331,"column":4},"end":{"line":2331,"column":4}}]},"83":{"line":2333,"type":"if","locations":[{"start":{"line":2333,"column":6},"end":{"line":2333,"column":6}},{"start":{"line":2333,"column":6},"end":{"line":2333,"column":6}}]},"84":{"line":2337,"type":"if","locations":[{"start":{"line":2337,"column":6},"end":{"line":2337,"column":6}},{"start":{"line":2337,"column":6},"end":{"line":2337,"column":6}}]},"85":{"line":2398,"type":"if","locations":[{"start":{"line":2398,"column":4},"end":{"line":2398,"column":4}},{"start":{"line":2398,"column":4},"end":{"line":2398,"column":4}}]},"86":{"line":2402,"type":"if","locations":[{"start":{"line":2402,"column":4},"end":{"line":2402,"column":4}},{"start":{"line":2402,"column":4},"end":{"line":2402,"column":4}}]},"87":{"line":2456,"type":"binary-expr","locations":[{"start":{"line":2456,"column":29},"end":{"line":2456,"column":53}},{"start":{"line":2456,"column":57},"end":{"line":2456,"column":79}}]},"88":{"line":2475,"type":"if","locations":[{"start":{"line":2475,"column":2},"end":{"line":2475,"column":2}},{"start":{"line":2475,"column":2},"end":{"line":2475,"column":2}}]},"89":{"line":2480,"type":"if","locations":[{"start":{"line":2480,"column":6},"end":{"line":2480,"column":6}},{"start":{"line":2480,"column":6},"end":{"line":2480,"column":6}}]},"90":{"line":2484,"type":"if","locations":[{"start":{"line":2484,"column":8},"end":{"line":2484,"column":8}},{"start":{"line":2484,"column":8},"end":{"line":2484,"column":8}}]},"91":{"line":2486,"type":"cond-expr","locations":[{"start":{"line":2486,"column":39},"end":{"line":2486,"column":76}},{"start":{"line":2486,"column":79},"end":{"line":2486,"column":88}}]},"92":{"line":2493,"type":"if","locations":[{"start":{"line":2493,"column":8},"end":{"line":2493,"column":8}},{"start":{"line":2493,"column":8},"end":{"line":2493,"column":8}}]},"93":{"line":2552,"type":"if","locations":[{"start":{"line":2552,"column":4},"end":{"line":2552,"column":4}},{"start":{"line":2552,"column":4},"end":{"line":2552,"column":4}}]},"94":{"line":2556,"type":"if","locations":[{"start":{"line":2556,"column":6},"end":{"line":2556,"column":6}},{"start":{"line":2556,"column":6},"end":{"line":2556,"column":6}}]},"95":{"line":2559,"type":"if","locations":[{"start":{"line":2559,"column":8},"end":{"line":2559,"column":8}},{"start":{"line":2559,"column":8},"end":{"line":2559,"column":8}}]},"96":{"line":2628,"type":"if","locations":[{"start":{"line":2628,"column":4},"end":{"line":2628,"column":4}},{"start":{"line":2628,"column":4},"end":{"line":2628,"column":4}}]},"97":{"line":2687,"type":"binary-expr","locations":[{"start":{"line":2687,"column":27},"end":{"line":2687,"column":82}},{"start":{"line":2687,"column":86},"end":{"line":2687,"column":122}}]},"98":{"line":2690,"type":"if","locations":[{"start":{"line":2690,"column":2},"end":{"line":2690,"column":2}},{"start":{"line":2690,"column":2},"end":{"line":2690,"column":2}}]},"99":{"line":2695,"type":"if","locations":[{"start":{"line":2695,"column":2},"end":{"line":2695,"column":2}},{"start":{"line":2695,"column":2},"end":{"line":2695,"column":2}}]},"100":{"line":2756,"type":"cond-expr","locations":[{"start":{"line":2756,"column":39},"end":{"line":2756,"column":50}},{"start":{"line":2756,"column":53},"end":{"line":2756,"column":76}}]},"101":{"line":2757,"type":"if","locations":[{"start":{"line":2757,"column":2},"end":{"line":2757,"column":2}},{"start":{"line":2757,"column":2},"end":{"line":2757,"column":2}}]},"102":{"line":2761,"type":"if","locations":[{"start":{"line":2761,"column":2},"end":{"line":2761,"column":2}},{"start":{"line":2761,"column":2},"end":{"line":2761,"column":2}}]},"103":{"line":2761,"type":"binary-expr","locations":[{"start":{"line":2761,"column":5},"end":{"line":2761,"column":32}},{"start":{"line":2761,"column":36},"end":{"line":2761,"column":136}}]},"104":{"line":2767,"type":"if","locations":[{"start":{"line":2767,"column":4},"end":{"line":2767,"column":4}},{"start":{"line":2767,"column":4},"end":{"line":2767,"column":4}}]},"105":{"line":2827,"type":"binary-expr","locations":[{"start":{"line":2827,"column":25},"end":{"line":2827,"column":45}},{"start":{"line":2827,"column":49},"end":{"line":2827,"column":71}}]},"106":{"line":2831,"type":"if","locations":[{"start":{"line":2831,"column":4},"end":{"line":2831,"column":4}},{"start":{"line":2831,"column":4},"end":{"line":2831,"column":4}}]},"107":{"line":2835,"type":"if","locations":[{"start":{"line":2835,"column":8},"end":{"line":2835,"column":8}},{"start":{"line":2835,"column":8},"end":{"line":2835,"column":8}}]},"108":{"line":2900,"type":"binary-expr","locations":[{"start":{"line":2900,"column":25},"end":{"line":2900,"column":45}},{"start":{"line":2900,"column":49},"end":{"line":2900,"column":71}}]},"109":{"line":2906,"type":"if","locations":[{"start":{"line":2906,"column":4},"end":{"line":2906,"column":4}},{"start":{"line":2906,"column":4},"end":{"line":2906,"column":4}}]},"110":{"line":2975,"type":"if","locations":[{"start":{"line":2975,"column":4},"end":{"line":2975,"column":4}},{"start":{"line":2975,"column":4},"end":{"line":2975,"column":4}}]},"111":{"line":2979,"type":"if","locations":[{"start":{"line":2979,"column":4},"end":{"line":2979,"column":4}},{"start":{"line":2979,"column":4},"end":{"line":2979,"column":4}}]},"112":{"line":3046,"type":"if","locations":[{"start":{"line":3046,"column":4},"end":{"line":3046,"column":4}},{"start":{"line":3046,"column":4},"end":{"line":3046,"column":4}}]},"113":{"line":3053,"type":"if","locations":[{"start":{"line":3053,"column":8},"end":{"line":3053,"column":8}},{"start":{"line":3053,"column":8},"end":{"line":3053,"column":8}}]},"114":{"line":3057,"type":"if","locations":[{"start":{"line":3057,"column":8},"end":{"line":3057,"column":8}},{"start":{"line":3057,"column":8},"end":{"line":3057,"column":8}}]},"115":{"line":3115,"type":"if","locations":[{"start":{"line":3115,"column":4},"end":{"line":3115,"column":4}},{"start":{"line":3115,"column":4},"end":{"line":3115,"column":4}}]},"116":{"line":3119,"type":"if","locations":[{"start":{"line":3119,"column":6},"end":{"line":3119,"column":6}},{"start":{"line":3119,"column":6},"end":{"line":3119,"column":6}}]},"117":{"line":3224,"type":"if","locations":[{"start":{"line":3224,"column":2},"end":{"line":3224,"column":2}},{"start":{"line":3224,"column":2},"end":{"line":3224,"column":2}}]},"118":{"line":3224,"type":"binary-expr","locations":[{"start":{"line":3224,"column":5},"end":{"line":3224,"column":34}},{"start":{"line":3224,"column":38},"end":{"line":3224,"column":93}},{"start":{"line":3224,"column":97},"end":{"line":3224,"column":133}}]},"119":{"line":3230,"type":"if","locations":[{"start":{"line":3230,"column":4},"end":{"line":3230,"column":4}},{"start":{"line":3230,"column":4},"end":{"line":3230,"column":4}}]},"120":{"line":3242,"type":"if","locations":[{"start":{"line":3242,"column":2},"end":{"line":3242,"column":2}},{"start":{"line":3242,"column":2},"end":{"line":3242,"column":2}}]},"121":{"line":3294,"type":"binary-expr","locations":[{"start":{"line":3294,"column":21},"end":{"line":3294,"column":41}},{"start":{"line":3294,"column":45},"end":{"line":3294,"column":63}}]},"122":{"line":3297,"type":"binary-expr","locations":[{"start":{"line":3297,"column":37},"end":{"line":3297,"column":73}},{"start":{"line":3297,"column":77},"end":{"line":3297,"column":110}}]},"123":{"line":3303,"type":"if","locations":[{"start":{"line":3303,"column":2},"end":{"line":3303,"column":2}},{"start":{"line":3303,"column":2},"end":{"line":3303,"column":2}}]},"124":{"line":3303,"type":"binary-expr","locations":[{"start":{"line":3303,"column":6},"end":{"line":3303,"column":25}},{"start":{"line":3303,"column":29},"end":{"line":3303,"column":67}}]},"125":{"line":3324,"type":"if","locations":[{"start":{"line":3324,"column":4},"end":{"line":3324,"column":4}},{"start":{"line":3324,"column":4},"end":{"line":3324,"column":4}}]},"126":{"line":3328,"type":"if","locations":[{"start":{"line":3328,"column":4},"end":{"line":3328,"column":4}},{"start":{"line":3328,"column":4},"end":{"line":3328,"column":4}}]},"127":{"line":3334,"type":"if","locations":[{"start":{"line":3334,"column":4},"end":{"line":3334,"column":4}},{"start":{"line":3334,"column":4},"end":{"line":3334,"column":4}}]},"128":{"line":3339,"type":"if","locations":[{"start":{"line":3339,"column":8},"end":{"line":3339,"column":8}},{"start":{"line":3339,"column":8},"end":{"line":3339,"column":8}}]},"129":{"line":3347,"type":"if","locations":[{"start":{"line":3347,"column":4},"end":{"line":3347,"column":4}},{"start":{"line":3347,"column":4},"end":{"line":3347,"column":4}}]},"130":{"line":3351,"type":"if","locations":[{"start":{"line":3351,"column":6},"end":{"line":3351,"column":6}},{"start":{"line":3351,"column":6},"end":{"line":3351,"column":6}}]},"131":{"line":3371,"type":"if","locations":[{"start":{"line":3371,"column":4},"end":{"line":3371,"column":4}},{"start":{"line":3371,"column":4},"end":{"line":3371,"column":4}}]},"132":{"line":3376,"type":"if","locations":[{"start":{"line":3376,"column":4},"end":{"line":3376,"column":4}},{"start":{"line":3376,"column":4},"end":{"line":3376,"column":4}}]},"133":{"line":3378,"type":"if","locations":[{"start":{"line":3378,"column":11},"end":{"line":3378,"column":11}},{"start":{"line":3378,"column":11},"end":{"line":3378,"column":11}}]},"134":{"line":3447,"type":"if","locations":[{"start":{"line":3447,"column":4},"end":{"line":3447,"column":4}},{"start":{"line":3447,"column":4},"end":{"line":3447,"column":4}}]},"135":{"line":3509,"type":"binary-expr","locations":[{"start":{"line":3509,"column":21},"end":{"line":3509,"column":45}},{"start":{"line":3509,"column":49},"end":{"line":3509,"column":71}}]},"136":{"line":3510,"type":"binary-expr","locations":[{"start":{"line":3510,"column":37},"end":{"line":3510,"column":77}},{"start":{"line":3510,"column":81},"end":{"line":3510,"column":114}}]},"137":{"line":3519,"type":"if","locations":[{"start":{"line":3519,"column":2},"end":{"line":3519,"column":2}},{"start":{"line":3519,"column":2},"end":{"line":3519,"column":2}}]},"138":{"line":3527,"type":"if","locations":[{"start":{"line":3527,"column":4},"end":{"line":3527,"column":4}},{"start":{"line":3527,"column":4},"end":{"line":3527,"column":4}}]},"139":{"line":3542,"type":"if","locations":[{"start":{"line":3542,"column":4},"end":{"line":3542,"column":4}},{"start":{"line":3542,"column":4},"end":{"line":3542,"column":4}}]},"140":{"line":3546,"type":"if","locations":[{"start":{"line":3546,"column":8},"end":{"line":3546,"column":8}},{"start":{"line":3546,"column":8},"end":{"line":3546,"column":8}}]},"141":{"line":3550,"type":"if","locations":[{"start":{"line":3550,"column":8},"end":{"line":3550,"column":8}},{"start":{"line":3550,"column":8},"end":{"line":3550,"column":8}}]},"142":{"line":3559,"type":"if","locations":[{"start":{"line":3559,"column":4},"end":{"line":3559,"column":4}},{"start":{"line":3559,"column":4},"end":{"line":3559,"column":4}}]},"143":{"line":3564,"type":"if","locations":[{"start":{"line":3564,"column":6},"end":{"line":3564,"column":6}},{"start":{"line":3564,"column":6},"end":{"line":3564,"column":6}}]},"144":{"line":3565,"type":"if","locations":[{"start":{"line":3565,"column":8},"end":{"line":3565,"column":8}},{"start":{"line":3565,"column":8},"end":{"line":3565,"column":8}}]},"145":{"line":3569,"type":"if","locations":[{"start":{"line":3569,"column":8},"end":{"line":3569,"column":8}},{"start":{"line":3569,"column":8},"end":{"line":3569,"column":8}}]},"146":{"line":3572,"type":"if","locations":[{"start":{"line":3572,"column":8},"end":{"line":3572,"column":8}},{"start":{"line":3572,"column":8},"end":{"line":3572,"column":8}}]},"147":{"line":3577,"type":"if","locations":[{"start":{"line":3577,"column":8},"end":{"line":3577,"column":8}},{"start":{"line":3577,"column":8},"end":{"line":3577,"column":8}}]},"148":{"line":3581,"type":"if","locations":[{"start":{"line":3581,"column":8},"end":{"line":3581,"column":8}},{"start":{"line":3581,"column":8},"end":{"line":3581,"column":8}}]},"149":{"line":3589,"type":"if","locations":[{"start":{"line":3589,"column":4},"end":{"line":3589,"column":4}},{"start":{"line":3589,"column":4},"end":{"line":3589,"column":4}}]},"150":{"line":3612,"type":"if","locations":[{"start":{"line":3612,"column":4},"end":{"line":3612,"column":4}},{"start":{"line":3612,"column":4},"end":{"line":3612,"column":4}}]},"151":{"line":3617,"type":"if","locations":[{"start":{"line":3617,"column":8},"end":{"line":3617,"column":8}},{"start":{"line":3617,"column":8},"end":{"line":3617,"column":8}}]},"152":{"line":3620,"type":"if","locations":[{"start":{"line":3620,"column":8},"end":{"line":3620,"column":8}},{"start":{"line":3620,"column":8},"end":{"line":3620,"column":8}}]},"153":{"line":3625,"type":"if","locations":[{"start":{"line":3625,"column":8},"end":{"line":3625,"column":8}},{"start":{"line":3625,"column":8},"end":{"line":3625,"column":8}}]},"154":{"line":3646,"type":"if","locations":[{"start":{"line":3646,"column":2},"end":{"line":3646,"column":2}},{"start":{"line":3646,"column":2},"end":{"line":3646,"column":2}}]},"155":{"line":3646,"type":"binary-expr","locations":[{"start":{"line":3646,"column":5},"end":{"line":3646,"column":48}},{"start":{"line":3646,"column":52},"end":{"line":3646,"column":79}}]},"156":{"line":3647,"type":"if","locations":[{"start":{"line":3647,"column":4},"end":{"line":3647,"column":4}},{"start":{"line":3647,"column":4},"end":{"line":3647,"column":4}}]},"157":{"line":3652,"type":"if","locations":[{"start":{"line":3652,"column":4},"end":{"line":3652,"column":4}},{"start":{"line":3652,"column":4},"end":{"line":3652,"column":4}}]},"158":{"line":3675,"type":"if","locations":[{"start":{"line":3675,"column":2},"end":{"line":3675,"column":2}},{"start":{"line":3675,"column":2},"end":{"line":3675,"column":2}}]},"159":{"line":3692,"type":"if","locations":[{"start":{"line":3692,"column":2},"end":{"line":3692,"column":2}},{"start":{"line":3692,"column":2},"end":{"line":3692,"column":2}}]},"160":{"line":3697,"type":"if","locations":[{"start":{"line":3697,"column":2},"end":{"line":3697,"column":2}},{"start":{"line":3697,"column":2},"end":{"line":3697,"column":2}}]},"161":{"line":3702,"type":"if","locations":[{"start":{"line":3702,"column":2},"end":{"line":3702,"column":2}},{"start":{"line":3702,"column":2},"end":{"line":3702,"column":2}}]},"162":{"line":3702,"type":"binary-expr","locations":[{"start":{"line":3702,"column":6},"end":{"line":3702,"column":51}},{"start":{"line":3702,"column":55},"end":{"line":3702,"column":91}},{"start":{"line":3702,"column":95},"end":{"line":3702,"column":128}}]},"163":{"line":3709,"type":"if","locations":[{"start":{"line":3709,"column":2},"end":{"line":3709,"column":2}},{"start":{"line":3709,"column":2},"end":{"line":3709,"column":2}}]},"164":{"line":3710,"type":"if","locations":[{"start":{"line":3710,"column":4},"end":{"line":3710,"column":4}},{"start":{"line":3710,"column":4},"end":{"line":3710,"column":4}}]},"165":{"line":3712,"type":"if","locations":[{"start":{"line":3712,"column":11},"end":{"line":3712,"column":11}},{"start":{"line":3712,"column":11},"end":{"line":3712,"column":11}}]},"166":{"line":3717,"type":"if","locations":[{"start":{"line":3717,"column":2},"end":{"line":3717,"column":2}},{"start":{"line":3717,"column":2},"end":{"line":3717,"column":2}}]},"167":{"line":3717,"type":"binary-expr","locations":[{"start":{"line":3717,"column":5},"end":{"line":3717,"column":43}},{"start":{"line":3717,"column":47},"end":{"line":3717,"column":86}}]},"168":{"line":3722,"type":"if","locations":[{"start":{"line":3722,"column":2},"end":{"line":3722,"column":2}},{"start":{"line":3722,"column":2},"end":{"line":3722,"column":2}}]},"169":{"line":3722,"type":"binary-expr","locations":[{"start":{"line":3722,"column":5},"end":{"line":3722,"column":50}},{"start":{"line":3722,"column":54},"end":{"line":3722,"column":103}}]},"170":{"line":3726,"type":"if","locations":[{"start":{"line":3726,"column":2},"end":{"line":3726,"column":2}},{"start":{"line":3726,"column":2},"end":{"line":3726,"column":2}}]},"171":{"line":3726,"type":"binary-expr","locations":[{"start":{"line":3726,"column":6},"end":{"line":3726,"column":51}},{"start":{"line":3726,"column":55},"end":{"line":3726,"column":89}},{"start":{"line":3726,"column":93},"end":{"line":3726,"column":132}}]},"172":{"line":3780,"type":"if","locations":[{"start":{"line":3780,"column":4},"end":{"line":3780,"column":4}},{"start":{"line":3780,"column":4},"end":{"line":3780,"column":4}}]},"173":{"line":3784,"type":"if","locations":[{"start":{"line":3784,"column":11},"end":{"line":3784,"column":11}},{"start":{"line":3784,"column":11},"end":{"line":3784,"column":11}}]},"174":{"line":3784,"type":"binary-expr","locations":[{"start":{"line":3784,"column":15},"end":{"line":3784,"column":35}},{"start":{"line":3784,"column":39},"end":{"line":3784,"column":125}}]},"175":{"line":3848,"type":"if","locations":[{"start":{"line":3848,"column":4},"end":{"line":3848,"column":4}},{"start":{"line":3848,"column":4},"end":{"line":3848,"column":4}}]},"176":{"line":3853,"type":"if","locations":[{"start":{"line":3853,"column":11},"end":{"line":3853,"column":11}},{"start":{"line":3853,"column":11},"end":{"line":3853,"column":11}}]},"177":{"line":3853,"type":"binary-expr","locations":[{"start":{"line":3853,"column":15},"end":{"line":3853,"column":35}},{"start":{"line":3853,"column":39},"end":{"line":3853,"column":125}}]},"178":{"line":3913,"type":"if","locations":[{"start":{"line":3913,"column":4},"end":{"line":3913,"column":4}},{"start":{"line":3913,"column":4},"end":{"line":3913,"column":4}}]},"179":{"line":3917,"type":"if","locations":[{"start":{"line":3917,"column":11},"end":{"line":3917,"column":11}},{"start":{"line":3917,"column":11},"end":{"line":3917,"column":11}}]},"180":{"line":3917,"type":"binary-expr","locations":[{"start":{"line":3917,"column":15},"end":{"line":3917,"column":35}},{"start":{"line":3917,"column":39},"end":{"line":3917,"column":125}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var fs = require('fs');","var qs = require('querystring');","var url = require('url');","var util = require('util');","var _ = require('underscore');","var extend = require('extend');","var path = require('path');","","var azureCommon = require('./../../common/common');","var Md5Wrapper = require('./../../common/md5-wrapper');","var azureutil = azureCommon.util;","var SR = azureCommon.SR;","var validate = azureCommon.validate;","var SpeedSummary = azureCommon.SpeedSummary;","var StorageServiceClient = azureCommon.StorageServiceClient;","var WebResource = azureCommon.WebResource;","","// Constants","var Constants = azureCommon.Constants;","var FileConstants = Constants.FileConstants;","var HeaderConstants = Constants.HeaderConstants;","var HttpConstants = Constants.HttpConstants;","var QueryStringConstants = Constants.QueryStringConstants;","","// Streams","var BatchOperation = azureCommon.BatchOperation;","var SpeedSummary = azureCommon.SpeedSummary;","var ChunkAllocator = azureCommon.ChunkAllocator;","var ChunkStream = azureCommon.ChunkStream;","var ChunkStreamWithStream = azureCommon.ChunkStreamWithStream;","var FileReadStream = azureCommon.FileReadStream;","var FileRangeStream = require('./internal/filerangestream');","","// Models requires","var ShareResult = require('./models/shareresult');","var DirectoryResult = require('./models/directoryresult');","var FileResult = require('./models/fileresult');","var AclResult = azureCommon.AclResult;","","// Errors requires","var errors = require('../../common/errors/errors');","var ArgumentNullError = errors.ArgumentNullError;","","/**","* Creates a new FileService object.","* If no connection string or storageaccount and storageaccesskey are provided,","* the AZURE_STORAGE_CONNECTION_STRING or AZURE_STORAGE_ACCOUNT and AZURE_STORAGE_ACCESS_KEY environment variables will be used.","* @class","* The FileService class is used to perform operations on the Microsoft Azure File Service.","* The File Service provides storage for binary large objects, and provides functions for working with data stored in files.","* ","* For more information on the File Service, as well as task focused information on using it in a Node.js application, see","* [How to Use the File Service from Node.js](http://azure.microsoft.com/en-us/documentation/articles/storage-nodejs-how-to-use-file-storage/).","* The following defaults can be set on the file service.","* defaultTimeoutIntervalInMs                          The default timeout interval, in milliseconds, to use for request made via the file service.","* defaultClientRequestTimeoutInMs                     The default timeout of client requests, in milliseconds, to use for the request made via the file service.","* defaultMaximumExecutionTimeInMs                     The default maximum execution time across all potential retries, for requests made via the file service.","* defaultLocationMode                                 The default location mode for requests made via the file service.","* parallelOperationThreadCount                        The number of parallel operations that may be performed when uploading a file.","* useNagleAlgorithm                                   Determines whether the Nagle algorithm is used for requests made via the file service; true to use the  ","*                                                     Nagle algorithm; otherwise, false. The default value is false.","* @constructor","* @extends {StorageServiceClient}","*","* @param {string} [storageAccountOrConnectionString]  The storage account or the connection string.","* @param {string} [storageAccessKey]                  The storage access key.","* @param {string|object} [host]                       The host address. To define primary only, pass a string. ","*                                                     Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.","* @param {string} [sasToken]                          The Shared Access Signature token.","* @param {string} [endpointSuffix]                    The endpoint suffix.","*/","function FileService(storageAccountOrConnectionString, storageAccessKey, host, sasToken, endpointSuffix) {","  var storageServiceSettings = StorageServiceClient.getStorageSettings(storageAccountOrConnectionString, storageAccessKey, host, sasToken, endpointSuffix);","","  FileService['super_'].call(this,","    storageServiceSettings._name,","    storageServiceSettings._key,","    storageServiceSettings._fileEndpoint,","    storageServiceSettings._usePathStyleUri,","    storageServiceSettings._sasToken);","","  this.singleFileThresholdInBytes = FileConstants.DEFAULT_SINGLE_FILE_GET_THRESHOLD_IN_BYTES;","  this.parallelOperationThreadCount = Constants.DEFAULT_PARALLEL_OPERATION_THREAD_COUNT;","}","","util.inherits(FileService, StorageServiceClient);","","// Utility methods","","/**","* Create resource name","* @ignore","*","* @param {string} share          Share name","* @param {string} [directory]    Directory name","* @param {string} [file]         File name","* @return {string} The encoded resource name.","*/","function createResourceName(share, directory, file, forSAS) {","  var encode = function(name) {","    if (name && !forSAS) {","      name = encodeURIComponent(name);","      name = name.replace(/%2F/g, '/');","      name = name.replace(/%5C/g, '/');","      name = name.replace(/\\+/g, '%20');","    }","    return name;","  };","","  var name = share;","","  if (directory) {","    // if directory does not start with '/', add it","    if (directory[0] !== '/') {","      name += ('/');","    }","","    name += encode(directory);","  } ","","  if (file) {","    // if the current path does not end with '/', add it","    if (name[name.length - 1] !== '/') {","      name += ('/');","    }","    ","    name += encode(file);","  }","","  return path.normalize(name).replace(/\\\\/g, '/');","}","","// File service methods","","/**","* Gets the properties of a storage account's File service, including Azure Storage Analytics.","*","* @this {FileService}","* @param {object}       [options]                               The request options.","* @param {LocationMode} [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                               Please see StorageUtilities.LocationMode for the possible values.","* @param {int}          [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}          [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}          [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                               The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                               execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}       [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}         [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                               The default value is false.","* @param {errorOrResult}  callback                              `error` will contain information if an error occurs; otherwise, `[result]{@link ServiceProperties}` will contain the properties ","*                                                               and `response` will contain information related to this operation.","*/","FileService.prototype.getServiceProperties = function (optionsOrCallback, callback) {","  return this.getAccountServiceProperties(optionsOrCallback, callback);","};","","/**","* Sets the properties of a storage account's File service, including Azure Storage Analytics.","* You can also use this operation to set the default request version for all incoming requests that do not have a version specified.","*","* @this {FileService}","* @param {object}             serviceProperties                        The service properties.","* @param {object}             [options]                                The request options.","* @param {LocationMode}       [options.locationMode]                   Specifies the location mode used to decide which location the request should be sent to. ","*                                                                      Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]            The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]       The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]       The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                      The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                      execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]              Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                      The default value is false.","* @param {errorOrResponse}    callback                                 `error` will contain information","*                                                                      if an error occurs; otherwise, `response`","*                                                                      will contain information related to this operation.","*/","FileService.prototype.setServiceProperties = function (serviceProperties, optionsOrCallback, callback) {","  return this.setAccountServiceProperties(serviceProperties, optionsOrCallback, callback);","};","","// Share methods","","/**","* Lists a segment containing a collection of share items under the specified account.","*","* @this {FileService}","* @param {object}             currentToken                                A continuation token returned by a previous listing operation. Please use 'null' or 'undefined' if this is the first operation.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.maxResults]                        Specifies the maximum number of shares to return per call to Azure storage.","* @param {string}             [options.include]                           Include this parameter to specify that the share's metadata be returned as part of the response body. (allowed values: '', 'metadata')","*                                                                         **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `result` will contain `entries` and `continuationToken`. ","*                                                                         `entries`  gives a list of `[shares]{@link ShareResult}` and the `continuationToken` is used for the next listing operation.","*                                                                         `response` will contain information related to this operation.","*/","FileService.prototype.listSharesSegmented = function (currentToken, optionsOrCallback, callback) {","  this.listSharesSegmentedWithPrefix(null /* prefix */, currentToken, optionsOrCallback, callback);","};","","/**","* Lists a segment containing a collection of share items whose names begin with the specified prefix under the specified account.","*","* @this {FileService}","* @param {string}             prefix                                      The prefix of the share name.","* @param {object}             currentToken                                A continuation token returned by a previous listing operation. Please use 'null' or 'undefined' if this is the first operation.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {string}             [options.prefix]                            Filters the results to return only shares whose name begins with the specified prefix.","* @param {int}                [options.maxResults]                        Specifies the maximum number of shares to return per call to Azure storage.","* @param {string}             [options.include]                           Include this parameter to specify that the share's metadata be returned as part of the response body. (allowed values: '', 'metadata')","*                                                                         **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `result` will contain `entries` and `continuationToken`. ","*                                                                         `entries`  gives a list of `[shares]{@link ShareResult}` and the `continuationToken` is used for the next listing operation.","*                                                                         `response` will contain information related to this operation.","*/","FileService.prototype.listSharesSegmentedWithPrefix = function (prefix, currentToken, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('listShares', function (v) {","    v.callback(callback);","  });","  ","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.get()","    .withQueryOption(QueryStringConstants.COMP, 'list')","    .withQueryOption(QueryStringConstants.MAX_RESULTS, options.maxResults)","    .withQueryOption(QueryStringConstants.INCLUDE, options.include);","  ","  if (!azureutil.objectIsNull(currentToken)) {","    webResource.withQueryOption(QueryStringConstants.MARKER, currentToken.nextMarker);","  }","  ","  webResource.withQueryOption(QueryStringConstants.PREFIX, prefix);","  ","  //options.requestLocationMode = azureutil.getNextListingLocationMode(currentToken);","  ","  var processResponseCallback = function (responseObject, next) {","    responseObject.listSharesResult = null;","    ","    if (!responseObject.error) {","      responseObject.listSharesResult = {","        entries: null,","        continuationToken: null","      };","      responseObject.listSharesResult.entries = [];","      ","      var shares = [];","      ","      if (responseObject.response.body.EnumerationResults.Shares && responseObject.response.body.EnumerationResults.Shares.Share) {","        shares = responseObject.response.body.EnumerationResults.Shares.Share;","        if (!_.isArray(shares)) {","          shares = [shares];","        }","      }","      ","      shares.forEach(function (currentShare) {","        var shareResult = ShareResult.parse(currentShare);","        responseObject.listSharesResult.entries.push(shareResult);","      });","      ","      if (responseObject.response.body.EnumerationResults.NextMarker) {","        responseObject.listSharesResult.continuationToken = {","          nextMarker: null,","          targetLocation: null","        };","        ","        responseObject.listSharesResult.continuationToken.nextMarker = responseObject.response.body.EnumerationResults.NextMarker;","        responseObject.listSharesResult.continuationToken.targetLocation = responseObject.targetLocation;","      }","    }","    ","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.listSharesResult, returnObject.response);","    };","    ","    next(responseObject, finalCallback);","  };","  ","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Checks whether or not a share exists on the service.","*","* @this {FileService}","* @param {string}             share                                   The share name.","* @param {object}             [options]                               The request options.","* @param {LocationMode}       [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {errorOrResult}      callback                                `error` will contain information","*                                                                     if an error occurs; otherwise `[result]{@link ShareResult}` will contain","*                                                                     the share information including `exists` boolean member. ","*                                                                     `response` will contain information related to this operation.","*/","FileService.prototype.doesShareExist = function (share, optionsOrCallback, callback) {","  this._doesShareExist(share, false, optionsOrCallback, callback);","};","","/**","* Creates a new share under the specified account.","* If a share with the same name already exists, the operation fails.","*","* @this {FileService}","* @param {string}             share                               The share name.","* @param {object}             [options]                           The request options.","* @param {int}                [options.quota]                     Specifies the maximum size of the share, in gigabytes.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {object}             [options.metadata]                  The metadata key/value pairs.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.   ","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `[result]{@link ShareResult}` will contain","*                                                                 the share information.","*                                                                 `response` will contain information related to this operation.","*/","FileService.prototype.createShare = function (share, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createShare', function (v) {","    v.string(share, 'share');","    v.shareNameIsValid(share);","    v.shareQuotaIsValid(userOptions.quota);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.put(share)","    .withQueryOption(QueryStringConstants.RESTYPE, 'share')","    .withHeader(HeaderConstants.SHARE_QUOTA, options.quota);","","  webResource.addOptionalMetadataHeaders(options.metadata);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.shareResult = null;","    if (!responseObject.error) {","      responseObject.shareResult = new ShareResult(share);","      responseObject.shareResult.getPropertiesFromHeaders(responseObject.response.headers);","","      if (options.metadata) {","        responseObject.shareResult.metadata = options.metadata;","      }","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.shareResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Creates a new share under the specified account if the share does not exists.","*","* @this {FileService}","* @param {string}             share                                     The share name.","* @param {object}             [options]                                 The request options.","* @param {LocationMode}       [options.locationMode]                    Specifies the location mode used to decide which location the request should be sent to. ","*                                                                       Please see StorageUtilities.LocationMode for the possible values.","* @param {object}             [options.metadata]                        The metadata key/value pairs.","* @param {int}                [options.timeoutIntervalInMs]             The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]        The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]        The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                       The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                       execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                 A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]               Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                       The default value is false.","* @param {errorOrResult}      callback                                  `error` will contain information","*                                                                       if an error occurs; otherwise `[result]{@link ShareResult}` will contain","*                                                                       the share information including `created` boolean member.","*                                                                       `response` will contain information related to this operation.","*","* @example","* var azure = require('azure-storage');","* var FileService = azure.createFileService();","* FileService.createShareIfNotExists('taskshare', function(error) {","*   if(!error) {","*     // Share created or already existed","*   }","* }); ","*/","FileService.prototype.createShareIfNotExists = function (share, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createShareIfNotExists', function (v) {","    v.string(share, 'share');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var self = this;","  self._doesShareExist(share, true, options, function(error, result, response) {","    var exists = result.exists;","    result.created = false;","    delete result.exists;","    ","    if(error){","      callback(error, result, response);","    } else if (exists) {","      response.isSuccessful = true;","      callback(error, result, response);","    } else {","      self.createShare(share, options, function (createError, responseShare, createResponse) {","        if(!createError){","          responseShare.created = true;","        }","        else if (createError && createError.statusCode === HttpConstants.HttpResponseCodes.Conflict && createError.code === Constants.FileErrorCodeStrings.SHARE_ALREADY_EXISTS) {","          // If it was created before, there was no actual error.","          createError = null;","          createResponse.isSuccessful = true;","        }","","        callback(createError, responseShare, createResponse);","      });","    }","  });","};","","/**","* Retrieves a share and its properties from a specified account.","* **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","","","*","* @this {FileService}","* @param {string}             share                               The share name.","* @param {object}             [options]                           The request options.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `[result]{@link ShareResult}` will contain","*                                                                 information for the share.","*                                                                 `response` will contain information related to this operation.","*/","FileService.prototype.getShareProperties = function (share, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getShareProperties', function (v) {","    v.string(share, 'share');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.head(share)","    .withQueryOption(QueryStringConstants.RESTYPE, 'share');","","  //options.requestLocationMode = Constants.RequestLocationMode.PRIMARY_OR_SECONDARY;","","  var self = this;","  var processResponseCallback = function (responseObject, next) {","    responseObject.shareResult = null;","    if (!responseObject.error) {","      responseObject.shareResult = new ShareResult(share);","      responseObject.shareResult.metadata = self.parseMetadataHeaders(responseObject.response.headers);","      responseObject.shareResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.shareResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Sets the properties for the specified share.","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {object}             [properties]                                The share properties to set.","* @param {string|int}         [properties.quota]                          Specifies the maximum size of the share, in gigabytes.","* @param {object}             [options]                                   The request options.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[share]{@link ShareResult}` will contain","*                                                                         information about the share.","*                                                                         `response` will contain information related to this operation.","*/","FileService.prototype.setShareProperties = function (share, properties, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('setShareProperties', function (v) {","    v.string(share, 'share');","    v.shareNameIsValid(share);","    v.shareQuotaIsValid(userOptions.quota);","    v.callback(callback);","  });","  ","  var options = extend(true, properties, userOptions);","  var resourceName = createResourceName(share);","  var webResource = WebResource.put(resourceName)","    .withQueryOption(QueryStringConstants.RESTYPE, 'share')","    .withQueryOption(QueryStringConstants.COMP, 'properties')","    .withHeader(HeaderConstants.SHARE_QUOTA, options.quota);","  ","  FileResult.setProperties(webResource, options);","  ","  var processResponseCallback = function (responseObject, next) {","    responseObject.shareResult = null;","    if (!responseObject.error) {","      responseObject.shareResult = new ShareResult(share);","      responseObject.shareResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","    ","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.shareResult, returnObject.response);","    };","    ","    next(responseObject, finalCallback);","  };","  ","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Gets the share statistics for a share.","*","* @this {FileService}","* @param {string}           share                                   The share name.","* @param {object}           [options]                               The request options.","* @param {LocationMode}     [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                   Please see StorageUtilities.LocationMode for the possible values.","* @param {int}              [options.timeoutIntervalInMs]           The timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]    The timeout of client requests, in milliseconds, to use for the request.","* @param {int}              [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                   The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                   execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}           [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}             [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                   The default value is false.","* @param {errorOrResult}    callback                                `error` will contain information if an error occurs; otherwise, `[result]{@link ServiceStats}` will contain the stats and ","*                                                                   `response` will contain information related to this operation.","*/","FileService.prototype.getShareStats = function (share, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('getShareStats', function (v) {","    v.callback(callback);","  });","  ","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(share);","  var webResource = WebResource.get(resourceName)","    .withQueryOption(QueryStringConstants.RESTYPE, 'share')","    .withQueryOption(QueryStringConstants.COMP, 'stats');","  ","  var processResponseCallback = function (responseObject, next) {","    responseObject.shareResult = null;","    if (!responseObject.error) {","      responseObject.shareResult = ShareResult.parse(responseObject.response.body, share);","      responseObject.shareResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","    ","    // function to be called after all filters","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.shareResult, returnObject.response);","    };","    ","    // call the first filter","    next(responseObject, finalCallback);","  };","  ","  this.performRequest(webResource, null, options, processResponseCallback);","};","","","/**","* Returns all user-defined metadata for the share.","* **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","*","* @this {FileService}","* @param {string}             share                                     The share name.","* @param {object}             [options]                                 The request options.","* @param {LocationMode}       [options.locationMode]                    Specifies the location mode used to decide which location the request should be sent to. ","*                                                                       Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]             The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]        The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]        The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                       The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                       execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                 A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]               Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                       The default value is false.","* @param {errorOrResult}      callback                                  `error` will contain information","*                                                                       if an error occurs; otherwise `[result]{@link ShareResult}` will contain","*                                                                       information for the share.","*                                                                       `response` will contain information related to this operation.","*/","FileService.prototype.getShareMetadata = function (share, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getShareMetadata', function (v) {","    v.string(share, 'share');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.head(share)","    .withQueryOption(QueryStringConstants.RESTYPE, 'share')","    .withQueryOption(QueryStringConstants.COMP, 'metadata');","","  var self = this;","  var processResponseCallback = function (responseObject, next) {","    responseObject.shareResult = null;","    if (!responseObject.error) {","      responseObject.shareResult = new ShareResult(share);","      responseObject.shareResult.metadata = self.parseMetadataHeaders(responseObject.response.headers);","      responseObject.shareResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.shareResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Sets the share's metadata.","*","* Calling the Set Share Metadata operation overwrites all existing metadata that is associated with the share.","* It's not possible to modify an individual name/value pair.","*","* @this {FileService}","* @param {string}             share                               The share name.","* @param {object}             metadata                            The metadata key/value pairs.","* @param {object}             [options]                           The request options.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResponse}  callback                              `error` will contain information","*                                                                 if an error occurs; otherwise ","*                                                                 `response` will contain information related to this operation.","*/","FileService.prototype.setShareMetadata = function (share, metadata, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('setShareMetadata', function (v) {","    v.string(share, 'share');","    v.object(metadata, 'metadata');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.put(share)","    .withQueryOption(QueryStringConstants.RESTYPE, 'share')","    .withQueryOption(QueryStringConstants.COMP, 'metadata');","","  webResource.addOptionalMetadataHeaders(metadata);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.shareResult = null;","    if (!responseObject.error) {","      responseObject.shareResult = new ShareResult(share);","      responseObject.shareResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.shareResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Gets the share's ACL.","*","* @this {FileService}","* @param {string}             share                               The share name.","* @param {object}             [options]                           The request options.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `[result]{@link ShareAclResult}` will contain","*                                                                 information for the share.","*                                                                 `response` will contain information related to this operation.","*/","FileService.prototype.getShareAcl = function (share, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('getShareAcl', function (v) {","    v.string(share, 'share');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","  ","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.get(share)","    .withQueryOption(QueryStringConstants.RESTYPE, 'share')","    .withQueryOption(QueryStringConstants.COMP, 'acl');","  ","  options.requestLocationMode = Constants.RequestLocationMode.PRIMARY_OR_SECONDARY;","  ","  var processResponseCallback = function (responseObject, next) {","    responseObject.shareResult = null;","    if (!responseObject.error) {","      responseObject.shareResult = new ShareResult(share);","      responseObject.shareResult.getPropertiesFromHeaders(responseObject.response.headers);","      responseObject.shareResult.signedIdentifiers = AclResult.parse(responseObject.response.body);","    }","    ","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.shareResult, returnObject.response);","    };","    ","    next(responseObject, finalCallback);","  };","  ","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Updates the share's ACL.","*","* @this {FileService}","* @param {string}                         share                               The share name.","* @param {Object.<string, AccessPolicy>}  signedIdentifiers                   The share ACL settings. See `[AccessPolicy]{@link AccessPolicy}` for detailed information.","* @param {object}                         [options]                           The request options.","* @param {int}                            [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                            [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                            [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                             The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                             execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}                         [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}                           [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                             The default value is false.","* @param {errorOrResult}                  callback                            `error` will contain information","*                                                                             if an error occurs; otherwise `[result]{@link ShareAclResult}` will contain","*                                                                             information for the share.","*                                                                             `response` will contain information related to this operation.","*/","FileService.prototype.setShareAcl = function (share, signedIdentifiers, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('setShareAcl', function (v) {","    v.string(share, 'share');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","  ","  var options = extend(true, {}, userOptions);","  ","  var policies = null;","  if (signedIdentifiers) {","    if(_.isArray(signedIdentifiers)) {","      throw new TypeError(SR.INVALID_SIGNED_IDENTIFIERS);","    }","    policies = AclResult.serialize(signedIdentifiers);","  }","  ","  var webResource = WebResource.put(share)","    .withQueryOption(QueryStringConstants.RESTYPE, 'share')","    .withQueryOption(QueryStringConstants.COMP, 'acl')","    .withHeader(HeaderConstants.CONTENT_LENGTH, !azureutil.objectIsNull(policies) ? Buffer.byteLength(policies) : 0)","    .withBody(policies);","  ","  var processResponseCallback = function (responseObject, next) {","    responseObject.shareResult = null;","    if (!responseObject.error) {","      responseObject.shareResult = new ShareResult(share);","      responseObject.shareResult.getPropertiesFromHeaders(responseObject.response.headers);","      if (signedIdentifiers) {","        responseObject.shareResult.signedIdentifiers = signedIdentifiers;","      }","    }","    ","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.shareResult, returnObject.response);","    };","    ","    next(responseObject, finalCallback);","  };","  ","  this.performRequest(webResource, webResource.body, options, processResponseCallback);","};","","/**","* Marks the specified share for deletion.","* The share and any files contained within it are later deleted during garbage collection.","*","* @this {FileService}","* @param {string}             share                               The share name.","* @param {object}             [options]                           The request options.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResponse}  callback                              `error` will contain information","*                                                                 if an error occurs; otherwise","*                                                                 `response` will contain information related to this operation.","*/","FileService.prototype.deleteShare = function (share, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('deleteShare', function (v) {","    v.string(share, 'share');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.del(share)","    .withQueryOption(QueryStringConstants.RESTYPE, 'share');","  ","  var processResponseCallback = function (responseObject, next) {","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Marks the specified share for deletion if it exists.","* The share and any files contained within it are later deleted during garbage collection.","*","* @this {FileService}","* @param {string}             share                               The share name.","* @param {object}             [options]                           The request options.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `result` will ","*                                                                 be true if the share exists and was deleted, or false if the share","*                                                                 did not exist.","*                                                                 `response` will contain information related to this operation.","*/","FileService.prototype.deleteShareIfExists = function (share, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('deleteShareIfExists', function (v) {","    v.string(share, 'share');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var self = this;","  self._doesShareExist(share, true, options, function (error, result, response) {","    if(error){","      callback(error, result.exists, response);","    } else if (!result.exists) {","      response.isSuccessful = true;","      callback(error, false, response);","    } else {","      self.deleteShare(share, options, function (deleteError, deleteResponse) {","        var deleted;","        if (!deleteError){","          deleted = true;","        } else if (deleteError && deleteError.statuscode === HttpConstants.HttpResponseCodes.NotFound && deleteError.code === Constants.FileErrorCodeStrings.SHARE_NOT_FOUND) {","          // If it was deleted already, there was no actual error.","          deleted = false;","          deleteError = null;","          deleteResponse.isSuccessful = true;","        }","","        callback(deleteError, deleted, deleteResponse);","      });","    }","  });","};","","// Directory methods","","/**","* Checks whether or not a directory exists on the service.","*","* @this {FileService}","* @param {string}             share                                   The share name.","* @param {string}             directory                               The directory name. Use '' to refer to the base directory.","* @param {object}             [options]                               The request options.","* @param {LocationMode}       [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {errorOrResult}      callback                                `error` will contain information","*                                                                     if an error occurs; otherwise `[result]{@link DirectoryResult}` will contain","*                                                                     the directory information including `exists` boolean member.","*                                                                     `response` will contain information related to this operation.","*/","FileService.prototype.doesDirectoryExist = function (share, directory, optionsOrCallback, callback) {","  this._doesDirectoryExist(share, directory, false, optionsOrCallback, callback);","};","","/**","* Creates a new directory under the specified account.","* If a directory with the same name already exists, the operation fails.","*","* @this {FileService}","* @param {string}             share                               The share name.","* @param {string}             directory                           The directory name.","* @param {object}             [options]                           The request options.","* @param {object}             [options.metadata]                  The metadata key/value pairs.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.    ","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `[result]{@link DirectoryResult}` will contain","*                                                                 the directory information.","*                                                                 `response` will contain information related to this operation.","*/","FileService.prototype.createDirectory = function (share, directory, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createDirectory', function (v) {","    v.string(share, 'share');","    v.string(directory, 'directory');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.put(createResourceName(share, directory))","    .withQueryOption(QueryStringConstants.RESTYPE, 'directory');","","  webResource.addOptionalMetadataHeaders(options.metadata);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.directoryResult = null;","    if (!responseObject.error) {","      responseObject.directoryResult = new DirectoryResult(directory);","      responseObject.directoryResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.directoryResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Creates a new directory under the specified account if the directory does not exists.","*","* @this {FileService}","* @param {string}             share                                     The share name.","* @param {string}             directory                                 The directory name.","* @param {object}             [options]                                 The request options.","* @param {object}             [options.metadata]                        The metadata key/value pairs.","* @param {LocationMode}       [options.locationMode]                    Specifies the location mode used to decide which location the request should be sent to. ","*                                                                       Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]             The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]        The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]        The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                       The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                       execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                 A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]               Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                       The default value is false.","* @param {errorOrResult}      callback                                  `error` will contain information","*                                                                       if an error occurs; otherwise `[result]{@link DirectoryResult}` will contain","*                                                                       the directory information including `created` boolean member.","*                                                                       already exists.","*                                                                       `response` will contain information related to this operation.","*","* @example","* var azure = require('azure-storage');","* var FileService = azure.createFileService();","* FileService.createDirectoryIfNotExists('taskshare', taskdirectory', function(error) {","*   if(!error) {","*     // Directory created or already existed","*   }","* }); ","*/","FileService.prototype.createDirectoryIfNotExists = function (share, directory, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createDirectoryIfNotExists', function (v) {","    v.string(share, 'share');","    v.string(directory, 'directory');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var self = this;","  self._doesDirectoryExist(share, directory, true, options, function(error, result, response) {","    var exists = result.exists;","    result.created = false;","    delete result.exists;","    ","    if(error){","      callback(error, result, response);","    } else if (exists) {","      response.isSuccessful = true;","      callback(error, result, response);","    } else {","      self.createDirectory(share, directory, options, function (createError, responseDirectory, createResponse) {","        if(!createError){","          responseDirectory.created = true;","        }","        else if (createError && createError.statusCode === HttpConstants.HttpResponseCodes.Conflict && createError.code === Constants.StorageErrorCodeStrings.RESOURCE_ALREADY_EXISTS) {","          // If it was created before, there was no actual error.","          createError = null;","          createResponse.isSuccessful = true;","        }","","        callback(createError, responseDirectory, createResponse);","      });","    }","  });","};","","/**","* Retrieves a directory and its properties from a specified account.","* **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","*","* @this {FileService}","* @param {string}             share                               The share name.","* @param {string}             directory                           The directory name. Use '' to refer to the base directory.","* @param {object}             [options]                           The request options.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `[result]{@link DirectoryResult}` will contain","*                                                                 information for the directory.","*                                                                 `response` will contain information related to this operation.","*/","FileService.prototype.getDirectoryProperties = function (share, directory, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getDirectoryProperties', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.head(createResourceName(share, directory))","    .withQueryOption(QueryStringConstants.RESTYPE, 'directory');","  ","  var self = this;","  var processResponseCallback = function (responseObject, next) {","    responseObject.directoryResult = null;","    if (!responseObject.error) {","      responseObject.directoryResult = new DirectoryResult(directory);","      responseObject.directoryResult.metadata = self.parseMetadataHeaders(responseObject.response.headers);","      responseObject.directoryResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.directoryResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Marks the specified directory for deletion. The directory must be empty before it can be deleted.","*","* @this {FileService}","* @param {string}             share                               The share name.","* @param {string}             directory                           The directory name.","* @param {object}             [options]                           The request options.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResponse}  callback                              `error` will contain information","*                                                                 if an error occurs; otherwise","*                                                                 `response` will contain information related to this operation.","*/","FileService.prototype.deleteDirectory = function (share, directory, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('deleteDirectory', function (v) {","    v.string(share, 'share');","    v.string(directory, 'directory');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.del(createResourceName(share, directory))","    .withQueryOption(QueryStringConstants.RESTYPE, 'directory');","  ","  var processResponseCallback = function (responseObject, next) {","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Marks the specified directory for deletion if it exists. The directory must be empty before it can be deleted.","*","* @this {FileService}","* @param {string}             share                               The share name.","* @param {string}             directory                           The directory name.","* @param {object}             [options]                           The request options.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `result` will ","*                                                                 be true if the directory exists and was deleted, or false if the directory","*                                                                 did not exist.","*                                                                 `response` will contain information related to this operation.","*/","FileService.prototype.deleteDirectoryIfExists = function (share, directory, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('deleteDirectoryIfExists', function (v) {","    v.string(share, 'share');","    v.string(directory, 'directory');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var self = this;","  self._doesDirectoryExist(share, directory, true, options, function(error, result, response) {","    if(error){","      callback(error, result.exists, response);","    } else if (!result.exists) {","      response.isSuccessful = true;","      callback(error, false, response);","    } else {","      self.deleteDirectory(share, directory, options, function (deleteError, deleteResponse) {","        var deleted;","        if (!deleteError){","          deleted = true;","        } else if (deleteError && deleteError.statuscode === HttpConstants.HttpResponseCodes.NotFound && deleteError.code === Constants.StorageErrorCodeStrings.RESOURCE_NOT_FOUND) {","          // If it was deleted already, there was no actual error.","          deleted = false;","          deleteError = null;","          deleteResponse.isSuccessful = true;","        }","","        callback(deleteError, deleted, deleteResponse);","      });","    }","  });","};","","/**","* Lists a segment containing a collection of file items in the directory.","*","* @this {FileService}","* @param {string}             share                               The share name.","* @param {string}             directory                           The directory name. Use '' to refer to the base directory.","* @param {object}             currentToken                        A continuation token returned by a previous listing operation. Please use 'null' or 'undefined' if this is the first operation.","* @param {object}             [options]                           The request options.","* @param {int}                [options.maxResults]                Specifies the maximum number of files to return per call to Azure ServiceClient. This does NOT affect list size returned by this function. (maximum: 5000)","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `result` will contain","*                                                                 entries.files which contains a list of `[files]{@link FileResult}`, entries.directories which contains a list of `[directories]{@link DirectoryResult}` and the continuationToken for the next listing operation.","*                                                                 `response` will contain information related to this operation.","*/","FileService.prototype.listFilesAndDirectoriesSegmented = function (share, directory, currentToken, optionsOrCallback, callback) {","  this.listFilesAndDirectoriesSegmentedWithPrefix(share, directory, null /*prefix*/, currentToken, optionsOrCallback, callback);","};","","","/**","* Lists a segment containing a collection of file items in the directory.","*","* @this {FileService}","* @param {string}             share                               The share name.","* @param {string}             directory                           The directory name. Use '' to refer to the base directory.","* @param {string}             prefix                              The prefix of the directory/files name.","* @param {object}             currentToken                        A continuation token returned by a previous listing operation. Please use 'null' or 'undefined' if this is the first operation.","* @param {object}             [options]                           The request options.","* @param {int}                [options.maxResults]                Specifies the maximum number of files to return per call to Azure ServiceClient. This does NOT affect list size returned by this function. (maximum: 5000)","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `result` will contain","*                                                                 entries.files which contains a list of `[files]{@link FileResult}`, entries.directories which contains a list of `[directories]{@link DirectoryResult}` and the continuationToken for the next listing operation.","*                                                                 `response` will contain information related to this operation.","*/","FileService.prototype.listFilesAndDirectoriesSegmentedWithPrefix = function (share, directory, prefix, currentToken, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('listFilesSegmented', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.get(createResourceName(share, directory))","    .withQueryOption(QueryStringConstants.RESTYPE, 'directory')","    .withQueryOption(QueryStringConstants.COMP, 'list')","    .withQueryOption(QueryStringConstants.MAX_RESULTS, options.maxResults);","","  if (!azureutil.objectIsNull(currentToken)) {","    webResource.withQueryOption(QueryStringConstants.MARKER, currentToken.nextMarker);","  }","","  webResource.withQueryOption(QueryStringConstants.PREFIX, prefix);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.listResult = null;","    if (!responseObject.error) {","      responseObject.listResult = {","        entries: null,","        continuationToken: null","      };","","      responseObject.listResult.entries = {};","      responseObject.listResult.entries.files = [];","      responseObject.listResult.entries.directories = [];","      var files = [];","      var directories = [];","","      // parse files","      if (responseObject.response.body.EnumerationResults.Entries.File) {","        files = responseObject.response.body.EnumerationResults.Entries.File;","        if (!_.isArray(files)) {","          files = [ files ];","        }","      }","","      files.forEach(function (currentFile) {","        var fileResult = FileResult.parse(currentFile);","        responseObject.listResult.entries.files.push(fileResult);","      });","","      // parse directories","      if (responseObject.response.body.EnumerationResults.Entries.Directory) {","        directories = responseObject.response.body.EnumerationResults.Entries.Directory;","        if (!_.isArray(directories)) {","          directories = [ directories ];","        }","      }","","      directories.forEach(function (currentDirectory) {","        var directoryResult = DirectoryResult.parse(currentDirectory);","        responseObject.listResult.entries.directories.push(directoryResult);","      });","","      // parse continuation token","      if(responseObject.response.body.EnumerationResults.NextMarker) {","        responseObject.listResult.continuationToken = {","          nextMarker: null,","          targetLocation: null","        };","","        responseObject.listResult.continuationToken.nextMarker = responseObject.response.body.EnumerationResults.NextMarker;","        responseObject.listResult.continuationToken.targetLocation = responseObject.targetLocation;","      }","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.listResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Returns all user-defined metadata for the specified directory.","* **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {string}             directory                                   The directory name. Use '' to refer to the base directory.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link DirectoryResult}` will contain","*                                                                         information about the directory.","*                                                                         `response` will contain information related to this operation.","*/","FileService.prototype.getDirectoryMetadata = function (share, directory, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('getDirectoryMetadata', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","  ","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(share, directory);","  var webResource = WebResource.head(resourceName)","    .withQueryOption(QueryStringConstants.RESTYPE, 'directory')","    .withQueryOption(QueryStringConstants.COMP, 'metadata');","  ","  var self = this;","  var processResponseCallback = function (responseObject, next) {","    responseObject.directoryResult = null;","    if (!responseObject.error) {","      responseObject.directoryResult = new DirectoryResult(directory);","      responseObject.directoryResult.metadata = self.parseMetadataHeaders(responseObject.response.headers);","      responseObject.directoryResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","    ","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.directoryResult, returnObject.response);","    };","    ","    next(responseObject, finalCallback);","  };","  ","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Sets user-defined metadata for the specified directory as one or more name-value pairs ","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {string}             directory                                   The directory name. Use '' to refer to the base directory.","* @param {object}             metadata                                    The metadata key/value pairs.","* @param {object}             [options]                                   The request options.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link DirectoryResult}` will contain","*                                                                         information on the directory.","*                                                                         `response` will contain information related to this operation.","*/","FileService.prototype.setDirectoryMetadata = function (share, directory, metadata, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('setDirectoryMetadata', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.shareNameIsValid(share);","    v.object(metadata, 'metadata');","    v.callback(callback);","  });","  ","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(share, directory);","  var webResource = WebResource.put(resourceName)","    .withQueryOption(QueryStringConstants.RESTYPE, 'directory')","    .withQueryOption(QueryStringConstants.COMP, 'metadata');","  ","  webResource.addOptionalMetadataHeaders(metadata);","  ","  var processResponseCallback = function (responseObject, next) {","    responseObject.directoryResult = null;","    if (!responseObject.error) {","      responseObject.directoryResult = new DirectoryResult(directory);","      responseObject.directoryResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","    ","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.directoryResult, returnObject.response);","    };","    ","    next(responseObject, finalCallback);","  };","  ","  this.performRequest(webResource, null, options, processResponseCallback);","};","","// File methods","","/**","* Retrieves a shared access signature token.","*","* @this {FileService}","* @param {string}                   share                                               The share name.","* @param {string}                   [directory]                                         The directory name. Use '' to refer to the base directory.","* @param {string}                   [file]                                              The file name.","* @param {object}                   sharedAccessPolicy                                  The shared access policy.","* @param {string}                   [sharedAccessPolicy.Id]                             The signed identifier.","* @param {object}                   [sharedAccessPolicy.AccessPolicy.Permissions]       The permission type.","* @param {date|string}              [sharedAccessPolicy.AccessPolicy.Start]             The time at which the Shared Access Signature becomes valid (The UTC value will be used).","* @param {date|string}              [sharedAccessPolicy.AccessPolicy.Expiry]            The time at which the Shared Access Signature becomes expired (The UTC value will be used).","* @param {string}                   [sharedAccessPolicy.AccessPolicy.IPAddressOrRange]  An IP address or a range of IP addresses from which to accept requests. When specifying a range, note that the range is inclusive.","* @param {string}                   [sharedAccessPolicy.AccessPolicy.Protocols]         The protocols permitted for a request made with the account SAS. ","*                                                                                       Possible values are both HTTPS and HTTP (https,http) or HTTPS only (https). The default value is https,http.","* @param {object}                   [headers]                                           The optional header values to set for a file returned wth this SAS.","* @param {string}                   [headers.cacheControl]                              The optional value of the Cache-Control response header to be returned when this SAS is used.","* @param {string}                   [headers.contentType]                               The optional value of the Content-Type response header to be returned when this SAS is used.","* @param {string}                   [headers.contentEncoding]                           The optional value of the Content-Encoding response header to be returned when this SAS is used.","* @param {string}                   [headers.contentLanguage]                           The optional value of the Content-Language response header to be returned when this SAS is used.","* @param {string}                   [headers.contentDisposition]                        The optional value of the Content-Disposition response header to be returned when this SAS is used.","* @return {string}                                                                      The shared access signature query string. Note this string does not contain the leading \"?\".","*/","FileService.prototype.generateSharedAccessSignature = function (share, directory, file, sharedAccessPolicy, headers) {","  // check if the FileService is able to generate a shared access signature","  if (!this.storageCredentials || !this.storageCredentials.generateSignedQueryString) {","    throw new Error(SR.CANNOT_CREATE_SAS_WITHOUT_ACCOUNT_KEY);","  }","","  // Validate share name. File name is optional.","  validate.validateArgs('generateSharedAccessSignature', function (v) {","    v.string(share, 'share');","    v.shareNameIsValid(share);","    v.object(sharedAccessPolicy, 'sharedAccessPolicy');","  });","","  var resourceType = FileConstants.ResourceTypes.SHARE;","  if (file) {","    validate.validateArgs('generateSharedAccessSignature', function (v) {","      v.stringAllowEmpty(directory, 'directory');","      v.string(file, 'file');","    });","    resourceType = FileConstants.ResourceTypes.FILE;","  } else {","    directory = ''; // If file is not set, directory is not a part of the string to sign.","  }","","  if (sharedAccessPolicy.AccessPolicy) {","    if (!azureutil.objectIsNull(sharedAccessPolicy.AccessPolicy.Start)) {","      if (!_.isDate(sharedAccessPolicy.AccessPolicy.Start)) {","        sharedAccessPolicy.AccessPolicy.Start = new Date(sharedAccessPolicy.AccessPolicy.Start);","      }"," ","      sharedAccessPolicy.AccessPolicy.Start = azureutil.truncatedISO8061Date(sharedAccessPolicy.AccessPolicy.Start);","    }","","    if (!azureutil.objectIsNull(sharedAccessPolicy.AccessPolicy.Expiry)) {","      if (!_.isDate(sharedAccessPolicy.AccessPolicy.Expiry)) {","        sharedAccessPolicy.AccessPolicy.Expiry = new Date(sharedAccessPolicy.AccessPolicy.Expiry);","      }","","      sharedAccessPolicy.AccessPolicy.Expiry = azureutil.truncatedISO8061Date(sharedAccessPolicy.AccessPolicy.Expiry);","    }","  }","","  var resourceName = createResourceName(share, directory, file, true);","  return this.storageCredentials.generateSignedQueryString(Constants.ServiceType.File, resourceName, sharedAccessPolicy, null, { headers: headers, resourceType: resourceType });","};","","/**","* Retrieves a file or directory URL.","*","* @param {string}                   share                    The share name.","* @param {string}                   directory                The directory name. Use '' to refer to the base directory.","* @param {string}                   [file]                   The file name. File names may not start or end with the delimiter '/'.","* @param {string}                   [sasToken]               The Shared Access Signature token.","* @param {boolean}                  [primary]                A boolean representing whether to use the primary or the secondary endpoint.","* @return {string}                                           The formatted URL string.","* @example","* var azure = require('azure-storage');","* var fileService = azure.createFileService();","* var sharedAccessPolicy = {","*   AccessPolicy: {","*     Permissions: azure.FileUtilities.SharedAccessPermissions.READ,","*     Start: startDate,","*     Expiry: expiryDate","*   },","* };","* ","* var sasToken = fileService.generateSharedAccessSignature(shareName, directoryName, fileName, sharedAccessPolicy);","* var url = fileService.getUrl(shareName, directoryName, fileName, sasToken, true);","*/","FileService.prototype.getUrl = function (share, directory, file, sasToken, primary) {","  validate.validateArgs('getUrl', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.shareNameIsValid(share);","  });","","  var host;","  if(!azureutil.objectIsNull(primary) && primary === false) {","    host = this.host.secondaryHost;","  } else {","    host = this.host.primaryHost;","  }","  host = azureutil.trimPortFromUri(host);","  if(host && host.lastIndexOf('/') !== (host.length - 1)){","    host = host + '/';","  }","","  var name = createResourceName(share, directory, file);","  return url.resolve(host, url.format({pathname: this._getPath(name), query: qs.parse(sasToken)}));","};","","/**","* Returns all user-defined metadata, standard HTTP properties, and system properties for the file.","* It does not return or modify the content of the file.","* **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {string}             directory                                   The directory name. Use '' to refer to the base directory.","* @param {string}             file                                        The file name. File names may not start or end with the delimiter '/'.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link FileResult}` will contain","*                                                                         information about the file.","*                                                                         `response` will contain information related to this operation.","*/","FileService.prototype.getFileProperties = function (share, directory, file, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getFileProperties', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(share, directory, file);","  var webResource = WebResource.head(resourceName);","","  var self = this;","  var processResponseCallback = function (responseObject, next) {","    responseObject.fileResult = null;","    if (!responseObject.error) {","      responseObject.fileResult = new FileResult(share, directory, file);","      responseObject.fileResult.metadata = self.parseMetadataHeaders(responseObject.response.headers);","      responseObject.fileResult.getPropertiesFromHeaders(responseObject.response.headers, true);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.fileResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Returns all user-defined metadata for the specified file.","* It does not modify or return the content of the file.","* **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {string}             directory                                   The directory name. Use '' to refer to the base directory.","* @param {string}             file                                        The file name. File names may not start or end with the delimiter '/'.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link FileResult}` will contain","*                                                                         information about the file.","*                                                                         `response` will contain information related to this operation.","*/","FileService.prototype.getFileMetadata = function (share, directory, file, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getFileMetadata', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(share, directory, file);","  var webResource = WebResource.head(resourceName)","    .withQueryOption(QueryStringConstants.COMP, 'metadata');","","  var self = this;","  var processResponseCallback = function (responseObject, next) {","    responseObject.fileResult = null;","    if (!responseObject.error) {","      responseObject.fileResult = new FileResult(share, directory, file);","      responseObject.fileResult.metadata = self.parseMetadataHeaders(responseObject.response.headers);","      responseObject.fileResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.fileResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Sets user-defined properties for the specified file.","* It does not modify or return the content of the file.","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {string}             directory                                   The directory name. Use '' to refer to the base directory.","* @param {string}             file                                        The file name. File names may not start or end with the delimiter '/'.","* @param {object}             [properties]                                The file properties to set.","* @param {string}             [properties.contentType]                    The MIME content type of the file. The default type is application/octet-stream.","* @param {string}             [properties.contentEncoding]                The content encodings that have been applied to the file.","* @param {string}             [properties.contentLanguage]                The natural languages used by this resource.","* @param {string}             [properties.cacheControl]                   The file's cache control.","* @param {string}             [properties.contentDisposition]             The file's content disposition.","* @param {string}             [properties.contentLength]                  Resizes a file to the specified size. If the specified byte value is less than the current size of the file, ","*                                                                         then all ranges above the specified byte value are cleared.","* @param {string}             [properties.contentMD5]                     The file's MD5 hash.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link FileResult}` will contain","*                                                                         information about the file.","*                                                                         `response` will contain information related to this operation.","*/","FileService.prototype.setFileProperties = function (share, directory, file, properties, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('setFileProperties', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {contentSettings: properties, contentLength: properties.contentLength }, userOptions);","  var resourceName = createResourceName(share, directory, file);","  var webResource = WebResource.put(resourceName)","    .withQueryOption(QueryStringConstants.COMP, 'properties');","","  FileResult.setProperties(webResource, options);","","  var processResponseCallback = function(responseObject, next) {","    responseObject.fileResult = null;","    if (!responseObject.error) {","      responseObject.fileResult = new FileResult(share, directory, file);","      responseObject.fileResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","    ","    var finalCallback = function(returnObject) {","      callback(returnObject.error, returnObject.fileResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","  ","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Sets user-defined metadata for the specified file as one or more name-value pairs ","* It does not modify or return the content of the file.","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {string}             directory                                   The directory name. Use '' to refer to the base directory.","* @param {string}             file                                        The file name. File names may not start or end with the delimiter '/'.","* @param {object}             metadata                                    The metadata key/value pairs.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link FileResult}` will contain","*                                                                         information on the file.","*                                                                         `response` will contain information related to this operation.","*/","FileService.prototype.setFileMetadata = function (share, directory, file, metadata, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('setFileMetadata', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.shareNameIsValid(share);","    v.object(metadata, 'metadata');","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(share, directory, file);","  var webResource = WebResource.put(resourceName)","    .withQueryOption(QueryStringConstants.COMP, 'metadata');","","  webResource.addOptionalMetadataHeaders(metadata);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.fileResult = null;","    if (!responseObject.error) {","      responseObject.fileResult = new FileResult(share, directory, file);","      responseObject.fileResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.fileResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Resizes a file.","*","* @this {FileService}","* @param {string}               share                                       The share name.","* @param {string}               directory                                   The directory name. Use '' to refer to the base directory.","* @param {string}               file                                        The file name. File names may not start or end with the delimiter '/'.","* @param {String}               size                                        The size of the file, in bytes.","* @param {object}               [options]                                   The request options.","* @param {int}                  [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                  [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}               [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}                 [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}        callback                                    `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link FileResult}` will contain","*                                                                           information about the file.","*                                                                           `response` will contain information related to this operation.","*/","FileService.prototype.resizeFile = function (share, directory, file, size, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('resizeFile', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.shareNameIsValid(share);","    v.value(size);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(share, directory, file);","  var webResource = WebResource.put(resourceName)","    .withQueryOption(QueryStringConstants.COMP, 'properties');","","  webResource.withHeader(HeaderConstants.FILE_CONTENT_LENGTH, size);","","  var processResponseCallback = function(responseObject, next) {","    responseObject.fileResult = null;","    if (!responseObject.error) {","      responseObject.fileResult = new FileResult(share, directory, file);","      responseObject.fileResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","    ","    var finalCallback = function(returnObject) {","      callback(returnObject.error, returnObject.fileResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","  ","  this.performRequest(webResource, null, options, processResponseCallback);  ","};","","/**","* Checks whether or not a file exists on the service.","*","* @this {FileService}","* @param {string}             share                                   The share name.","* @param {string}             directory                               The directory name. Use '' to refer to the base directory.","* @param {string}             file                                    The file name. File names may not start or end with the delimiter '/'.","* @param {object}             [options]                               The request options.","* @param {LocationMode}       [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {Function(error, result, response)}  callback                `error` will contain information","*                                                                     if an error occurs; otherwise `[result]{@link FileResult}` will contain","*                                                                     the file information including the `exists` boolean member. ","*                                                                     `response` will contain information related to this operation.","*/","FileService.prototype.doesFileExist = function (share, directory, file, optionsOrCallback, callback) {","  this._doesFileExist(share, directory, file, false, optionsOrCallback, callback);","};","","/**","* Creates a file of the specified length. If the file already exists on the service, it will be overwritten.","*","* @this {FileService}","* @param {string}             share                                         The share name.","* @param {string}             directory                                     The directory name. Use '' to refer to the base directory.","* @param {string}             file                                          The file name. File names may not start or end with the delimiter '/'.","* @param {int}                length                                        The length of the file in bytes.","* @param {object}             [options]                                     The request options.","* @param {object}             [options.contentSettings]                     The file's content settings.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the file. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the file.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The file service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The file's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The file's MD5 hash.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information","*                                                                           if an error occurs; otherwise `[result]{@link FileResult}` will contain","*                                                                           the file information.","*                                                                           `response` will contain information related to this operation.","*/","FileService.prototype.createFile = function (share, directory, file, length, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  validate.validateArgs('createFile', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.shareNameIsValid(share);","    v.value(length);","    v.callback(callback);","  });","","  var resourceName = createResourceName(share, directory, file);","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.put(resourceName)","    .withHeader(HeaderConstants.TYPE, 'file')","    .withHeader(HeaderConstants.FILE_CONTENT_LENGTH, length);","","  FileResult.setProperties(webResource, options);","","  var processResponseCallback = function(responseObject, next) {","    responseObject.fileResult = null;","    if (!responseObject.error) {","      responseObject.fileResult = new FileResult(share, directory, file);","      responseObject.fileResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","    ","    var finalCallback = function(returnObject) {","      callback(returnObject.error, returnObject.fileResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Marks the specified file for deletion. The file is later deleted during garbage collection.","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {string}             directory                                   The directory name. Use '' to refer to the base directory.","* @param {string}             file                                        The file name. File names may not start or end with the delimiter '/'.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResponse}  callback                                      `error` will contain information","*                                                                         if an error occurs; `response` will contain information related to this operation.","*/","FileService.prototype.deleteFile = function (share, directory, file, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('deleteFile', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(share, directory, file);","  var webResource = WebResource.del(resourceName);","","  var processResponseCallback = function (responseObject, next) {","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Marks the specified file for deletion if it exists. The file is later deleted during garbage collection.","*","* @this {FileService}","* @param {string}             share                               The share name.","* @param {string}             directory                           The directory name. Use '' to refer to the base directory.","* @param {string}             file                                The file name. File names may not start or end with the delimiter '/'. ","* @param {object}             [options]                           The request options.","* @param {LocationMode}       [options.locationMode]              Specifies the location mode used to decide which location the request should be sent to. ","*                                                                 Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]       The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]  The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]  The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                 execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]           A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]         Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                 The default value is false.","* @param {errorOrResult}      callback                            `error` will contain information","*                                                                 if an error occurs; otherwise `result` will","*                                                                 be true if the file was deleted, or false if the file","*                                                                 does not exist.","*                                                                 `response` will contain information related to this operation.","*/","FileService.prototype.deleteFileIfExists = function (share, directory, file, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('deleteFileIfExists', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var self = this;","  self._doesFileExist(share, directory, file, true, options, function(error, result, response) {","    if(error){","      callback(error, result.exists, response);","    } else if (!result.exists) {","      response.isSuccessful = true;","      callback(error, false, response);","    } else {","      self.deleteFile(share, directory, file, options, function (deleteError, deleteResponse) {","        var deleted;","        if (!deleteError){","          deleted = true;","        } else if (deleteError && deleteError.statusCode === Constants.HttpConstants.HttpResponseCodes.NotFound && deleteError.code === Constants.FileErrorCodeStrings.FILE_NOT_FOUND) {","          // If it was deleted already, there was no actual error.","          deleted = false;","          deleteError = null;","          deleteResponse.isSuccessful = true;","        }","","        callback(deleteError, deleted, deleteResponse);","      });","    }","  });","};","","/**","* Downloads a file into a text string.","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {string}             directory                                   The directory name. Use '' to refer to the base directory.","* @param {string}             file                                        The file name. File names may not start or end with the delimiter '/'.","* @param {object}             [options]                                   The request options.","* @param {int}                [options.rangeStart]                        The range start.","* @param {int}                [options.rangeEnd]                          The range end.","* @param {boolean}            [options.disableContentMD5Validation]       When set to true, MD5 validation will be disabled when downloading files.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {FileService~FileToText}  callback                               `error` will contain information","*                                                                         if an error occurs; otherwise `text` will contain the file contents,","*                                                                         and `[file]{@link FileResult}` will contain the file information.","*                                                                         `response` will contain information related to this operation.","*/","FileService.prototype.getFileToText = function (share, directory, file, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getFileToText', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(share, directory, file);","  var webResource = WebResource.get(resourceName)","    .withRawResponse();","","  FileResult.setHeaders(webResource, options);","  this._setRangeContentMD5Header(webResource, options);","","  var self = this;","  var processResponseCallback = function (responseObject, next) {","    responseObject.text = null;","    responseObject.fileResult = null;","","    if (!responseObject.error) {","      responseObject.fileResult = new FileResult(share, directory, file);","      responseObject.fileResult.getPropertiesFromHeaders(responseObject.response.headers, true);","      responseObject.fileResult.metadata = self.parseMetadataHeaders(responseObject.response.headers);","      responseObject.text = responseObject.response.body;","","      self._validateLengthAndMD5(options, responseObject);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.text, returnObject.fileResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Downloads an Azure file into a file.","* (Not recommended for use in the JavaScript Client Library)","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {string}             directory                                   The directory name. Use '' to refer to the base directory.","* @param {string}             file                                        The file name. File names may not start or end with the delimiter '/'.","* @param {string}             localFileName                               The local path to the file to be downloaded.","* @param {object}             [options]                                   The request options.","* @param {boolean}            [options.skipSizeCheck]                     Skip the size check to perform direct download.","*                                                                         Set the option to true for small files.","*                                                                         Parallel download and speed summary won't work with this option on.","* @param {SpeedSummary}       [options.speedSummary]                      The download tracker objects.","* @param {int}                [options.parallelOperationThreadCount]      Parallel operation thread count.","* @param {string}             [options.rangeStart]                        Return only the bytes of the file in the specified range.","* @param {string}             [options.rangeEnd]                          Return only the bytes of the file in the specified range.","* @param {boolean}            [options.useTransactionalMD5]               When set to true, Calculate and send/validate content MD5 for transactions.","* @param {boolean}            [options.disableContentMD5Validation]       When set to true, MD5 validation will be disabled when downloading files.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information if an error occurs; ","*                                                                         otherwise `[result]{@link FileResult}` will contain the file information.","*                                                                         `response` will contain information related to this operation.","* @return {SpeedSummary}","* ","* @example","* var azure = require('azure-storage');","* var FileService = azure.createFileService();","* FileService.getFileToLocalFile('taskshare', taskdirectory', 'task1', 'task1-download.txt', function(error, serverFile) {","*   if(!error) {","*     // file available in serverFile.file variable","*   }","*/","FileService.prototype.getFileToLocalFile = function (share, directory, file, localFileName, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  userOptions.speedSummary = userOptions.speedSummary || new SpeedSummary(file);","","  validate.validateArgs('getFileToLocalFile', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.string(localFileName, 'localFileName');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  var writeStream = fs.createWriteStream(localFileName);","","  this.getFileToStream(share, directory, file, writeStream, options, function (error, responseFile, response) {","    if (error) {","      // make sure writeStream is closed / destroyed to avoid locking issues","      if (writeStream.close) {","        writeStream.close();","      }","","      if (azureutil.pathExistsSync(localFileName)) {","        // If the download failed from the beginning, remove the file.","        fs.unlink(localFileName, function () {","          callback(error, responseFile, response);","          return;","        });","      }","    }","    callback(error, responseFile, response); ","  });","  ","  return options.speedSummary;","};","","/**","* Provides a stream to read from a file.","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {string}             directory                                   The directory name. Use '' to refer to the base directory.","* @param {string}             file                                        The file name. File names may not start or end with the delimiter '/'.","* @param {object}             [options]                                   The request options.","* @param {string}             [options.rangeStart]                        Return only the bytes of the file in the specified range.","* @param {string}             [options.rangeEnd]                          Return only the bytes of the file in the specified range.","* @param {boolean}            [options.useTransactionalMD5]               When set to true, Calculate and send/validate content MD5 for transactions.","* @param {boolean}            [options.disableContentMD5Validation]       When set to true, MD5 validation will be disabled when downloading files.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information if an error occurs; ","*                                                                         otherwise `[result]{@link FileResult}` will contain the file information.","*                                                                         `response` will contain information related to this operation.","* @return {Stream}","* @example","* var azure = require('azure-storage');","* var fileService = azure.createFileService();","* var writable = fs.createWriteStream(destinationFileNameTarget);","* fileService.createReadStream(shareName, directoryName, fileName).pipe(writable);","*/","FileService.prototype.createReadStream = function (share, directory, file, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createReadStream', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.shareNameIsValid(share);","  });","","  var options = extend(true, {}, userOptions);","","  var readStream = new ChunkStream(options);","  this.getFileToStream(share, directory, file, readStream, options, function (error, fileResponse, response) {","    if(error) {","      readStream.emit('error', error);","    }","","    if(callback) {","      callback(error, fileResponse, response);","    }","  });","","  return readStream;","};","","/**","* Downloads a file into a stream.","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {string}             directory                                   The directory name. Use '' to refer to the base directory.","* @param {string}             file                                        The file name. File names may not start or end with the delimiter '/'.","* @param {Stream}             writeStream                                 The write stream.","* @param {object}             [options]                                   The request options.","* @param {boolean}            [options.skipSizeCheck]                     Skip the size check to perform direct download.","*                                                                         Set the option to true for small files.","*                                                                         Parallel download and speed summary won't work with this option on.","* @param {SpeedSummary}       [options.speedSummary]                      The download tracker objects.","* @param {int}                [options.parallelOperationThreadCount]      Parallel operation thread count.","* @param {string}             [options.rangeStart]                        Return only the bytes of the file in the specified range.","* @param {string}             [options.rangeEnd]                          Return only the bytes of the file in the specified range. ","* @param {boolean}            [options.useTransactionalMD5]               When set to true, Calculate and send/validate content MD5 for transactions.","* @param {boolean}            [options.disableContentMD5Validation]       When set to true, MD5 validation will be disabled when downloading files.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information if an error occurs; ","*                                                                         otherwise `[result]{@link FileResult}` will contain the file information.","*                                                                         `response` will contain information related to this operation.","* @return {SpeedSummary}","* ","*","* @example","* var azure = require('azure-storage');","* var FileService = azure.createFileService();","* FileService.getFileToStream('taskshare', taskdirectory', 'task1', fs.createWriteStream('task1-download.txt'), function(error, serverFile) {","*   if(!error) {","*     // file available in serverFile.file variable","*   }","* }); ","*/","FileService.prototype.getFileToStream = function (share, directory, file, writeStream, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  userOptions.speedSummary = userOptions.speedSummary || new SpeedSummary(file);  ","  ","  validate.validateArgs('getFileToStream', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.object(writeStream, 'writeStream');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  var propertiesRequestOptions = {","    timeoutIntervalInMs : options.timeoutIntervalInMs,","    clientRequestTimeoutInMs : options.clientRequestTimeoutInMs,","    accessConditions : options.accessConditions","  };","  ","  if (options.skipSizeCheck) {","    this._getFileToStream(share, directory, file, writeStream, options, callback);","  } else {","    var self = this;","    this.getFileProperties(share, directory, file, propertiesRequestOptions, function (error, properties) {","      if (error) {","        callback(error);","      } else {","        var size;","        if (options.rangeStart) {","          var endOffset = properties.contentLength - 1;","          var end = options.rangeEnd ? Math.min(options.rangeEnd, endOffset) : endOffset;","          size = end - options.rangeStart + 1;","        } else {","          size = properties.contentLength;","        }","        options.speedSummary.totalSize = size;","        ","        if (size > self.singleFileThresholdInBytes) {","          azureutil.setObjectInnerPropertyValue(options, ['contentSettings', 'contentMD5'], azureutil.tryGetValueChain(properties, ['contentSettings', 'contentMD5'], null));","          self._getFileToRangeStream(share, directory, file, writeStream, options, callback);","        } else {","          self._getFileToStream(share, directory, file, writeStream, options, callback);","        }","      }","    });","  }","  ","  return options.speedSummary;","};","","/**","* Lists file ranges. Lists all of the ranges by default, or only the ranges over a specific range of bytes if rangeStart and rangeEnd are specified.","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {string}             directory                                   The directory name. Use '' to refer to the base directory.","* @param {string}             file                                        The file name. File names may not start or end with the delimiter '/'.","* @param {object}             [options]                                   The request options.","* @param {int}                [options.rangeStart]                        The range start.","* @param {int}                [options.rangeEnd]                          The range end.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link FileResult}` will contain","*                                                                         the range information.","*                                                                         `response` will contain information related to this operation.","*/","FileService.prototype.listRanges = function (share, directory, file, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('listRanges', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var resourceName = createResourceName(share, directory, file);","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.get(resourceName)","    .withQueryOption(QueryStringConstants.COMP, 'rangelist');","","  FileResult.setHeaders(webResource, options);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.ranges = null;","    if (!responseObject.error) {","      responseObject.ranges = [];","","      var ranges = [];","      if (responseObject.response.body.Ranges.Range) {","        ranges = responseObject.response.body.Ranges.Range;","","        if (!_.isArray(ranges)) {","          ranges = [ ranges ];","        }","      }","","      ranges.forEach(function (fileRange) {","        var range = {","          start: parseInt(fileRange.Start, 10),","          end: parseInt(fileRange.End, 10)","        };","","        responseObject.ranges.push(range);","      });","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.ranges, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Clears a range. Clears all of the ranges by default, or only the ranges over a specific range of bytes if rangeStart and rangeEnd are specified.","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {string}             directory                                   The directory name. Use '' to refer to the base directory.","* @param {string}             file                                        The file name. File names may not start or end with the delimiter '/'.","* @param {int}                rangeStart                                  The range start.","* @param {int}                rangeEnd                                    The range end.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link FileResult}` will contain","*                                                                         the directory information.","*                                                                        `response` will contain information related to this operation.","*/","FileService.prototype.clearRange = function (share, directory, file, rangeStart, rangeEnd, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('clearRange', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.shareNameIsValid(share);","    v.value(rangeStart);","    v.value(rangeEnd);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var request = this._updateFilesImpl(share, directory, file, rangeStart, rangeEnd, FileConstants.RangeWriteOptions.CLEAR, options);","","  var processResponseCallback = function(responseObject, next) {","    responseObject.fileResult = null;","    if (!responseObject.error) {","      responseObject.fileResult = new FileResult(share, directory, file);","      responseObject.fileResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","    ","    var finalCallback = function(returnObject) {","      callback(returnObject.error, returnObject.fileResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(request, null, options, processResponseCallback);","};","","/**","* Updates a range from a stream.","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {string}             directory                                   The directory name. Use '' to refer to the base directory.","* @param {string}             file                                        The file name. File names may not start or end with the delimiter '/'.","* @param {Stream}             readStream                                  The read stream.","* @param {int}                rangeStart                                  The range start.","* @param {int}                rangeEnd                                    The range end.","* @param {object}             [options]                                   The request options.","* @param {bool}               [options.useTransactionalMD5]               Calculate and send/validate content MD5 for transactions.","* @param {string}             [options.transactionalContentMD5]           An optional hash value used to ensure transactional integrity for the page. ","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link FileResult}` will contain","*                                                                         the file information.","*                                                                         `response` will contain information related to this operation.","*/","FileService.prototype.createRangesFromStream = function (share, directory, file, readStream, rangeStart, rangeEnd, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createRangesFromStream', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.object(readStream, 'readStream');","    v.shareNameIsValid(share);","    v.value(rangeStart);","    v.value(rangeEnd);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var requiresContentMD5 = azureutil.objectIsNull(options.transactionalContentMD5) && options.useTransactionalMD5 === true;","","  var length = (rangeEnd - rangeStart) + 1;","  if(length > FileConstants.MAX_UPDATE_FILE_SIZE) {","    throw new Error(SR.INVALID_FILE_RANGE_FOR_UPDATE);","  }","","  var self = this;","  if (requiresContentMD5) {","    azureutil.calculateMD5(readStream, length, options, function(internalBuff, contentMD5) {","      options.transactionalContentMD5 = contentMD5;","      self._createRanges(share, directory, file, internalBuff, null /* stream */, rangeStart, rangeEnd, options, callback);","    });","  } else {","    self._createRanges(share, directory, file, null /* text */, readStream, rangeStart, rangeEnd, options, callback);","  }","};","","/**","* Uploads a file from a text string. If the file already exists on the service, it will be overwritten.","*","* @this {FileService}","* @param {string}             share                                         The share name.","* @param {string}             directory                                     The directory name. Use '' to refer to the base directory.","* @param {string}             file                                          The file name. File names may not start or end with the delimiter '/'.","* @param {string|object}      text                                          The file text, as a string or in a Buffer.","* @param {object}             [options]                                     The request options.","* @param {SpeedSummary}       [options.speedSummary]                        The upload tracker objects;","* @param {bool}               [options.storeFileContentMD5]                 Specifies whether the file's ContentMD5 header should be set on uploads. ","*                                                                           The default value is false for files.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The file's content settings.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the file. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the file.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The file service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The file's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The file's MD5 hash.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {FileService~FileToText}  callback                                 `error` will contain information","*                                                                           if an error occurs; otherwise `text` will contain the file contents,","*                                                                           and `[file]{@link FileResult}` will contain the file information.","*                                                                           `response` will contain information related to this operation.","*/","FileService.prototype.createFileFromText = function (share, directory, file, text, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createFileFromText', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.exists(text, 'text');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  var length = Buffer.isBuffer(text) ? text.length : Buffer.byteLength(text);","  if (length > FileConstants.MAX_UPDATE_FILE_SIZE) {","    throw new Error(SR.INVALID_FILE_LENGTH);","  }","","  if(options.storeFileContentMD5 && azureutil.objectIsNull(azureutil.tryGetValueChain(options, ['contentSettings', 'contentMD5'], null))) {","     azureutil.setObjectInnerPropertyValue(options, ['contentSettings', 'contentMD5'], azureutil.getContentMd5(text));","  }","","  var self = this;","  this.createFile(share, directory, file, length, options, function(error) {","    if(error) {","      callback(error);","    }","    else {","      self._createRanges(share, directory, file, text, null, 0, length - 1, options, callback);","    }","  });","};","","/**","* Uploads a file to storage from a local file. If the file already exists on the service, it will be overwritten.","* (Not recommended for use in the JavaScript Client Library)","*","* @this {FileService}","* @param {string}             share                                         The share name.","* @param {string}             directory                                     The directory name. Use '' to refer to the base directory.","* @param {string}             file                                          The file name. File names may not start or end with the delimiter '/'.","* @param (string)             localFileName                                 The local path to the file to be uploaded.","* @param {object}             [options]                                     The request options.","* @param {SpeedSummary}       [options.speedSummary]                        The download tracker objects;","* @param {bool}               [options.storeFileContentMD5]                 Specifies whether the file's ContentMD5 header should be set on uploads. ","*                                                                           The default value is false for files.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The file's content settings.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the file. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the file.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The file service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The file's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The file's MD5 hash.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information if an error occurs; ","*                                                                           otherwise `[result]{@link FileResult}` will contain the file information.","*                                                                           `response` will contain information related to this operation.","* @return {SpeedSummary}","*/","FileService.prototype.createFileFromLocalFile = function (share, directory, file, localFileName, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createFileFromLocalFile', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.string(localFileName, 'localFileName');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  options.speedSummary = options.speedSummary || new SpeedSummary(file);","","  var self = this;","  fs.stat(localFileName, function(error, stat) {","    if (error) {","      callback(error);","    } else {","      self.createFile(share, directory, file, stat.size, options, function(error) {","        if(error) {","          callback(error);","        } else {","          var stream = new FileReadStream(localFileName, {calcContentMd5: options.storeFileContentMD5});","          self._createFileFromChunkStream(share, directory, file, stream, stat.size, options, callback);","        }","      });","    }","  });","","  return options.speedSummary;","};","","/**","* Uploads a file from a stream. If the file already exists on the service, it will be overwritten.","*","* @this {FileService}","* @param {string}             share                                         The share name.","* @param {string}             directory                                     The directory name. Use '' to refer to the base directory.","* @param {string}             file                                          The file name. File names may not start or end with the delimiter '/'. ","* @param (Stream)             stream                                        Stream to the data to store.","* @param {int}                streamLength                                  The length of the stream to upload.","* @param {object}             [options]                                     The request options.","* @param {SpeedSummary}       [options.speedSummary]                        The download tracker objects;","* @param {bool}               [options.storeFileContentMD5]                 Specifies whether the file's ContentMD5 header should be set on uploads. ","*                                                                           The default value is false for files.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The file's content settings.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the file. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the file.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The file service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The file's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The file's MD5 hash.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information if an error occurs; ","*                                                                           otherwise `[result]{@link FileResult}` will contain the file information.","*                                                                           `response` will contain information related to this operation.","* @return {SpeedSummary}","*/","FileService.prototype.createFileFromStream = function(share, directory, file, stream, streamLength, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createFileFromStream', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.object(stream, 'stream');","    v.value(streamLength, 'streamLength');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  options.speedSummary = options.speedSummary || new SpeedSummary(file);","","  stream.pause(); // Immediately pause the stream in order to compatible with Node v0.8","","  var self = this;","  this.createFile(share, directory, file, streamLength, options, function(error) {","    if(error) {","      callback(error);","    } else {","      var chunkStream = new ChunkStreamWithStream(stream, {calcContentMd5: options.storeFileContentMD5});","      self._createFileFromChunkStream(share, directory, file, chunkStream, streamLength, options, callback);","    }","  });","","  return options.speedSummary;","};","","/**","* Provides a stream to write to a file. Assumes that the file exists. ","* If it does not, please create the file using createFile before calling this method or use createWriteStreamNewFile.","*","* @this {FileService}","* @param {string}             share                                         The share name.","* @param {string}             directory                                     The directory name. Use '' to refer to the base directory.","* @param {string}             file                                          The file name. File names may not start or end with the delimiter '/'.","* @param {object}             [options]                                     The request options.","* @param {SpeedSummary}       [options.speedSummary]                        The download tracker objects;","* @param {bool}               [options.storeFileContentMD5]                 Specifies whether the file's ContentMD5 header should be set on uploads. ","*                                                                           The default value is false for files.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The file's content settings.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the file. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the file.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The file service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The file's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The file's MD5 hash.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information if an error occurs; ","*                                                                           otherwise `[result]{@link FileResult}` will contain the file information.","*                                                                           `response` will contain information related to this operation.","* @return {Stream}","* @example","* var azure = require('azure-storage');","* var FileService = azure.createFileService();","* FileService.createFile(shareName, directoryName, fileName, 1024, function (err) {","*   // Pipe file to a file","*   var stream = fs.createReadStream(fileNameTarget).pipe(FileService.createWriteStreamToExistingFile(shareName, directoryName, fileName));","* });","*/","FileService.prototype.createWriteStreamToExistingFile = function (share, directory, file, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createWriteStreamToExistingFile', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.shareNameIsValid(share);","  });","","  var options = extend(true, {}, userOptions);","","  var stream = new ChunkStream({calcContentMd5: options.storeFileContentMD5});","  this._createFileFromChunkStream(share, directory, file, stream, null, options, function (error, file, response) {","    if(error) {","      stream.emit('error', error);","    }","","    if (callback) {","      callback(error, file, response);","    }","  });","","  return stream;","};","","/**","* Provides a stream to write to a file. Creates the file before writing data.","*","* @this {FileService}","* @param {string}             share                                         The share name.","* @param {string}             directory                                     The directory name. Use '' to refer to the base directory.","* @param {string}             file                                          The file name. File names may not start or end with the delimiter '/'.","* @param {string}             length                                        The file length.","* @param {object}             [options]                                     The request options.","* @param {SpeedSummary}       [options.speedSummary]                        The download tracker objects;","* @param {bool}               [options.storeFileContentMD5]                 Specifies whether the file's ContentMD5 header should be set on uploads. ","*                                                                           The default value is false for files.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {object}             [options.contentSettings]                     The file's content settings.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the file. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the file.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The file service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The file's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The file's MD5 hash.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {errorOrResult}      callback                                      `error` will contain information if an error occurs; ","*                                                                           otherwise `[result]{@link FileResult}` will contain the file information.","*                                                                           `response` will contain information related to this operation.","* @return {Stream}","* @example","* var azure = require('azure-storage');","* var FileService = azure.createFileService();","* var stream = fs.createReadStream(fileNameTarget).pipe(FileService.createWriteStreamToNewFile(shareName, directoryName, fileName));","*/","FileService.prototype.createWriteStreamToNewFile = function (share, directory, file, length, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createWriteStreamToNewFile', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.value(length, 'length');","    v.shareNameIsValid(share);","  });","","  var options = extend(true, {}, userOptions);","","  var stream = new ChunkStream({calcContentMd5: options.storeFileContentMD5});","  stream.pause();","  ","  var self = this;","  this.createFile(share, directory, file, length, options, function(error) {","    if(error) {","      stream.emit('error', error);","      callback(error);","    }","    else {","      stream.resume();","      self._createFileFromChunkStream(share, directory, file, stream, null, options, function (error, file, response) {","        if(error) {","          stream.emit('error', error);","        }","","        if (callback) {","          callback(error, file, response);","        }","      });","    }","  });","  ","  return stream;","};","","/**","* Starts to copy a file to a destination within the storage account.","*","* @this {FileService}","* @param {string}             sourceUri                                 The source file or blob URI.","* @param {string}             targetShare                               The target share name.","* @param {string}             targetDirectory                           The target directory name.","* @param {string}             targetFile                                The target file name.","* @param {object}             [options]                                 The request options.","* @param {object}             [options.metadata]                        The target file metadata key/value pairs.","* @param {AccessConditions}   [options.accessConditions]                The access conditions.","* @param {AccessConditions}   [options.sourceAccessConditions]          The source access conditions.","* @param {LocationMode}       [options.locationMode]                    Specifies the location mode used to decide which location the request should be sent to. ","*                                                                       Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]             The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]        The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]        The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                       The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                       execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                 A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]               Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                       The default value is false.","* @param {errorOrResult}      callback                                  `error` will contain information if an error occurs; ","*                                                                       otherwise `[result]{@link FileResult}` will contain the file information.","*                                                                       `response` will contain information related to this operation.","*/","FileService.prototype.startCopyFile = function (sourceUri, targetShare, targetDirectory, targetFile, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('startCopyFile', function (v) {","    v.string(targetShare, 'targetShare');","    v.stringAllowEmpty(targetDirectory, 'targetDirectory');","    v.string(targetFile, 'targetFile');","    v.shareNameIsValid(targetShare);","    v.callback(callback);","  });","  ","  var targetResourceName = createResourceName(targetShare, targetDirectory, targetFile);","  ","  var options = extend(true, {}, userOptions);","  ","  var webResource = WebResource.put(targetResourceName)","    .withHeader(HeaderConstants.COPY_SOURCE, sourceUri)","    .addOptionalMetadataHeaders(options.metadata);","  ","  var processResponseCallback = function (responseObject, next) {","    responseObject.fileResult = null;","    if (!responseObject.error) {","      responseObject.fileResult = new FileResult(targetShare, targetDirectory, targetFile);","      responseObject.fileResult.getPropertiesFromHeaders(responseObject.response.headers, true);","      ","      if (options.metadata) {","        responseObject.fileResult.metadata = options.metadata;","      }","    }","    ","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.fileResult, returnObject.response);","    };","    ","    next(responseObject, finalCallback);","  };","  ","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Abort a file copy operation.","*","* @this {FileService}","* @param {string}             share                                     The destination share name.","* @param {string}             directory                                 The destination directory name.","* @param {string}             file                                      The destination file name.","* @param {string}             copyId                                    The copy operation identifier.","* @param {object}             [options]                                 The request options.","* @param {LocationMode}       [options.locationMode]                    Specifies the location mode used to decide which location the request should be sent to. ","*                                                                       Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]             The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]        The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]        The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                       The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                       execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                 A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]               Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                       The default value is false.","* @param {errorOrResult}      callback                                  `error` will contain information if an error occurs; ","*                                                                       otherwise `[result]{@link FileResult}` will contain the file information.","*                                                                       `response` will contain information related to this operation.","*/","FileService.prototype.abortCopyFile = function (share, directory, file, copyId, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","  ","  validate.validateArgs('abortCopyFile', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","  ","  var resourceName = createResourceName(share, directory, file);","  ","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.put(resourceName)","    .withQueryOption(QueryStringConstants.COPY_ID, copyId)","    .withQueryOption(QueryStringConstants.COMP, 'copy')","    .withHeader(HeaderConstants.COPY_ACTION, 'abort');","  ","  var processResponseCallback = function (responseObject, next) {","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.response);","    };","    ","    next(responseObject, finalCallback);","  };","  ","  this.performRequest(webResource, null, options, processResponseCallback);","};","","// Internal Methods","","/**","* Updates a file from text.","* @ignore","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {string}             directory                                   The directory name. Use '' to refer to the base directory.","* @param {string}             file                                        The file name. File names may not start or end with the delimiter '/'.","* @param {string}             text                                        The text string.","* @param {Stream}             readStream                                  The read stream.","* @param {int}                rangeStart                                  The range start.","* @param {int}                rangeEnd                                    The range end.","* @param {object}             [options]                                   The request options.","* @param {bool}               [options.useTransactionalMD5]               Calculate and send/validate content MD5 for transactions.","* @param {bool}               [options.transactionalContentMD5]           An MD5 hash of the content. This hash is used to verify the integrity of the data during transport.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {Function(error, file, response)}  callback                      `error` will contain information","*                                                                         if an error occurs; otherwise `file` will contain","*                                                                         the file information.","*                                                                         `response` will contain information related to this operation.","*/","FileService.prototype._createRanges = function (share, directory, file, text, readStream, rangeStart, rangeEnd, options, callback) {","var request = this._updateFilesImpl(share, directory, file, rangeStart, rangeEnd, FileConstants.RangeWriteOptions.UPDATE, options);","","  // At this point, we have already validated that the range is less than 4MB. Therefore, we just need to calculate the contentMD5 if required.","  if(!azureutil.objectIsNull(text) && azureutil.objectIsNull(options.transactionalContentMD5) && options.useTransactionalMD5 === true) {","    request.withHeader(HeaderConstants.CONTENT_MD5, azureutil.getContentMd5(text));","  }","","  var processResponseCallback = function (responseObject, next) {","    responseObject.fileResult = null;","    if (!responseObject.error) {","      responseObject.fileResult = new FileResult(share, directory, file);","      responseObject.fileResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.fileResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  if(!azureutil.objectIsNull(text)) {","    this.performRequest(request, text, options, processResponseCallback);","  } else {","    this.performRequestOutputStream(request, readStream, options, processResponseCallback);","  }","};","","/**","* Uploads a file from a stream.","* @ignore","*","* @this {FileService}","* @param {string}             share                                         The share name.","* @param {string}             directory                                     The directory name. Use '' to refer to the base directory.","* @param {string}             file                                          The file name. File names may not start or end with the delimiter '/'.","* @param (Stream)             stream                                        Stream to the data to store.","* @param {int}                streamLength                                  The length of the stream to upload.","* @param {object|function}    [options]                                     The request options.","* @param {SpeedSummary}       [options.speedSummary]                        The download tracker objects;","* @param {int}                [options.parallelOperationThreadCount]        Parallel operation thread count.","* @param {bool}               [options.useTransactionalMD5]                 Calculate and send/validate content MD5 for transactions.","* @param {bool}               [options.storeFileContentMD5]                 Specifies whether the file's ContentMD5 header should be set on uploads.","* @param {string}             [options.contentSettings.contentType]         The MIME content type of the file. The default type is application/octet-stream.","* @param {string}             [options.contentSettings.contentEncoding]     The content encodings that have been applied to the file.","* @param {string}             [options.contentSettings.contentLanguage]     The natural languages used by this resource.","* @param {string}             [options.contentSettings.cacheControl]        The file service stores this value but does not use or modify it.","* @param {string}             [options.contentSettings.contentDisposition]  The file's content disposition.","* @param {string}             [options.contentSettings.contentMD5]          The MD5 hash of the file content.","* @param {object}             [options.metadata]                            The metadata key/value pairs.","* @param {LocationMode}       [options.locationMode]                        Specifies the location mode used to decide which location the request should be sent to. ","*                                                                           Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                 The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]            The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]            The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                           The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                           execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                     A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                   Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                           The default value is false.","* @param {function(error, null)}  callback                                  The callback function.","* @return {SpeedSummary}","*/","FileService.prototype._createFileFromChunkStream = function(share, directory, file, chunkStream, streamLength, options, callback) {","  this.logger.debug(util.format('_createFileFromChunkStream for file %s', file));","","  var apiName = '_createRanges';","  var sizeLimitation = FileConstants.DEFAULT_WRITE_SIZE_IN_BYTES;","  var originalContentMD5 = azureutil.tryGetValueChain(options, ['contentSettings', 'contentMD5'], null);","","  this._setOperationExpiryTime(options);","","  // initialize the speed summary","  var speedSummary = options.speedSummary || new SpeedSummary();","  speedSummary.totalSize = streamLength;","","  var parallelOperationThreadCount = options.parallelOperationThreadCount || this.parallelOperationThreadCount;","","  // initialize chunk allocator","  var allocator = new ChunkAllocator(sizeLimitation, parallelOperationThreadCount, { logger: this.logger });","","  // if this is a FileReadStream, set the allocator on that stream","  if (chunkStream._stream && chunkStream._stream.setMemoryAllocator) {","    chunkStream._stream.setMemoryAllocator(allocator);","  }","","  // initialize batch operations","  var batchOperations = new BatchOperation(apiName, { logger : this.logger });","  batchOperations.setConcurrency(parallelOperationThreadCount);","","  // initialize options","  var rangeOptions = {","    timeoutIntervalInMs: options.timeoutIntervalInMs,","    clientRequestTimeoutInMs: options.clientRequestTimeoutInMs,","    operationExpiryTime: options.operationExpiryTime","  };","","  var self = this;","  chunkStream.on('data', function (data, range) {","    var operation = null;","    var full = false;","    var autoIncrement = speedSummary.getAutoIncrementFunction(data.length);","","    if(data.length > sizeLimitation) {","      throw new Error(util.format(SR.EXCEEDED_SIZE_LIMITATION, sizeLimitation, data.length));","    }","","    if (options.useTransactionalMD5) {","      //calculate content md5 for the current uploading block data","      var contentMD5 = azureutil.getContentMd5(data);","      rangeOptions.transactionalContentMD5 = contentMD5;","    }","","    if (azureutil.isBufferAllZero(data)) {","      self.logger.debug(util.format('Skip upload data from %s bytes to %s bytes to file %s', range.start, range.end, file));","      speedSummary.increment(data.length);","    } else {","      operation = new BatchOperation.RestOperation(self, apiName, share, directory, file, data, null, range.start, range.end, rangeOptions, function (error) {","        if(!error) {","          autoIncrement();","        }","        allocator.releaseBuffer(data);","        data = null;","      });","    }","","    if (operation) {","      full = batchOperations.addOperation(operation);","      operation = null;","","      if(full) {","        self.logger.debug('file stream paused');","        chunkStream.pause();","      }","    }","  });","","  chunkStream.on('end', function () {","    self.logger.debug(util.format('File read stream ended for file %s', file));","    batchOperations.enableComplete();","  });","","  batchOperations.on('drain', function () {","    self.logger.debug('File stream resume');","    chunkStream.resume();","  });","","  batchOperations.on('end', function (error) {","    self.logger.debug('batch operations commited');"," ","    if (error) {","      callback(error);","      return;","    }","","    if (originalContentMD5) {","      options.contentSettings.contentMD5 = originalContentMD5;","    } else if (options.storeFileContentMD5) {","      azureutil.setObjectInnerPropertyValue(options, ['contentSettings', 'contentMD5'], chunkStream.getContentMd5('base64'));","    }","","    // upload file completely","    var fileProperties = extend(false, options.contentSettings, { contentLength: options.streamLength });","    self.setFileProperties(share, directory, file, fileProperties, function (error, file, response) {","      chunkStream.finish();","      callback(error, file, response);","    });","  });","","  return speedSummary;","};","","/**","* Downloads a file into a stream.","* @ignore","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {string}             directory                                   The directory name. Use '' to refer to the base directory.","* @param {string}             file                                        The file name. File names may not start or end with the delimiter '/'.","* @param {Stream}             writeStream                                 The write stream.","* @param {object}             [options]                                   The request options.","* @param {string}             [options.rangeStart]                        Return only the bytes of the file in the specified range.","* @param {string}             [options.rangeEnd]                          Return only the bytes of the file in the specified range. ","* @param {boolean}            [options.useTransactionalMD5]               When set to true, Calculate and send/validate content MD5 for transactions.","* @param {boolean}            [options.disableContentMD5Validation]       When set to true, MD5 validation will be disabled when downloading files.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information if an error occurs; ","*                                                                         otherwise `result` will contain the file information.","*                                                                         `response` will contain information related to this operation.","*","* @return {SpeedSummary}","*/","FileService.prototype._getFileToStream = function (share, directory, file, writeStream, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('_getFileToStream', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.object(writeStream, 'writeStream');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var resourceName = createResourceName(share, directory, file);","  var webResource = WebResource.get(resourceName).withRawResponse();","","  FileResult.setHeaders(webResource, options);","  this._setRangeContentMD5Header(webResource, options);","","  var self = this;","  var processResponseCallback = function (responseObject, next) {","    responseObject.fileResult = null;","","    if (!responseObject.error) {","      responseObject.fileResult = new FileResult(share, directory, file);","      responseObject.fileResult.metadata = self.parseMetadataHeaders(responseObject.response.headers);","      responseObject.fileResult.getPropertiesFromHeaders(responseObject.response.headers, true);","","      self._validateLengthAndMD5(options, responseObject);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.fileResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequestInputStream(webResource, null, writeStream, options, processResponseCallback);","};","","/**","* Downloads a file into a range stream.","* @ignore","*","* @this {FileService}","* @param {string}             share                                       The share name.","* @param {string}             directory                                   The directory name. Use '' to refer to the base directory.","* @param {string}             file                                        The file name. File names may not start or end with the delimiter '/'.","* @param {Stream}             writeStream                                 The write stream.","* @param {object}             [options]                                   The request options.","* @param {int}                [options.parallelOperationThreadCount]      Parallel operation thread count.","* @param {string}             [options.rangeStart]                        Return only the bytes of the file in the specified range.","* @param {string}             [options.rangeEnd]                          Return only the bytes of the file in the specified range. ","* @param {boolean}            [options.useTransactionalMD5]               When set to true, Calculate and send/validate content MD5 for transactions.","* @param {boolean}            [options.disableContentMD5Validation]       When set to true, MD5 validation will be disabled when downloading files.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information if an error occurs; ","*                                                                         otherwise `result` will contain the file information.","*                                                                         `response` will contain information related to this operation.","*","* @return {SpeedSummary}","*/","FileService.prototype._getFileToRangeStream = function (share, directory, file, writeStream, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('_getFileToRangeStream', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.object(writeStream, 'writeStream');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var speedSummary = userOptions.speedSummary || new SpeedSummary(file);","  var parallelOperationThreadCount = userOptions.parallelOperationThreadCount || this.parallelOperationThreadCount;","  var batchOperations = new BatchOperation('getfile', { callbackInOrder: true, logger : this.logger });","  batchOperations.setConcurrency(parallelOperationThreadCount);","","  var rangeStream = new FileRangeStream(this, share, directory, file, userOptions);","","  var self = this;","  var checkMD5sum = !userOptions.disableContentMD5Validation;","  var md5Hash = null;","  if (checkMD5sum) {","    md5Hash = new Md5Wrapper().createMd5Hash();","  }","","  var savedFileResult = null;","  var savedFileResponse = null;","","  rangeStream.on('range', function (range) {","    if (!speedSummary.totalSize) {","      speedSummary.totalSize = rangeStream.rangeSize;","    }","","    var requestOptions = {","      rangeStart : range.start,","      rangeEnd : range.end,","      responseEncoding : null //Use Buffer to store the response data","    };","","    var rangeSize = range.size;","    requestOptions.timeoutIntervalInMs = userOptions.timeoutIntervalInMs;","    requestOptions.clientRequestTimeoutInMs = userOptions.clientRequestTimeoutInMs;","    requestOptions.useTransactionalMD5 = userOptions.useTransactionalMD5;","","    if (range.dataSize === 0) {","      var autoIncrement = speedSummary.getAutoIncrementFunction(rangeSize);","      //No operation to do and only wait for write zero to file in callback","      var writeZeroOperation = new BatchOperation.CommonOperation(BatchOperation.noOperation, function (error) {","        if (error) return;","        var bufferAvailable = azureutil.writeZerosToStream(writeStream, rangeSize, md5Hash, autoIncrement);","        //There is no need to pause the rangestream since we can perform http request and write disk at the same time","        self.logger.debug(util.format('Write %s bytes Zero from %s to %s', rangeSize, range.start, range.end));","        if (!bufferAvailable) {","          self.logger.debug('Write stream is full and pause batch operation');","          batchOperations.pause();","        }","      });","      batchOperations.addOperation(writeZeroOperation);","      return;","    }","      ","    if (range.start > range.end) {","      return;","    }","      ","    var operation = new BatchOperation.RestOperation(self, 'getFileToText', share, directory, file, requestOptions, function (error, content, fileResult, response) {","      if (!error) {","        if (rangeSize !== content.length) {","          self.logger.warn(util.format('Request %s bytes, but server returns %s bytes', rangeSize, content.length));","        }","        //Save one of the succeeded callback parameters and use them at the final callback","        if (!savedFileResult) {","          savedFileResult = fileResult;","        }","        if (!savedFileResponse) {","          savedFileResponse = response;","        }","        var autoIncrement = speedSummary.getAutoIncrementFunction(content.length);","        var bufferAvailable = writeStream.write(content, autoIncrement);","        if (!bufferAvailable) {","          self.logger.debug('Write stream is full and pause batch operation');","          batchOperations.pause();","        }","        if (md5Hash) {","          md5Hash.update(content);","        }","        content = null;","      }","    });","","    var full = batchOperations.addOperation(operation);","    if (full) {","      self.logger.debug('Pause range stream');","      rangeStream.pause();","    }    ","  });","  ","  rangeStream.on('end', function () {","    self.logger.debug('Range stream has ended.');","    batchOperations.enableComplete();","  });","  ","  batchOperations.on('drain', function () {","    self.logger.debug('Resume range stream');","    rangeStream.resume();","  });","  ","  writeStream.on('drain', function () {","    self.logger.debug('Resume batch operations');","    batchOperations.resume();","  });","  ","  batchOperations.on('end', function (error) {","    self.logger.debug('Download completed!');","    if (error) {","      callback(error);","    } else {","      writeStream.end(function () {","        self.logger.debug('Write stream has ended');","        if (writeStream.close) {","          writeStream.close();","        }","        if (!savedFileResult) {","          savedFileResult = {};","        }","        azureutil.setObjectInnerPropertyValue(savedFileResult, ['contentSettings', 'contentMD5'], azureutil.tryGetValueChain(userOptions, ['contentSettings', 'contentMD5'], null));","        savedFileResult.clientSideContentMD5 = null;","        if (md5Hash) {","          savedFileResult.clientSideContentMD5 = md5Hash.digest('base64');","        }","        callback(error, savedFileResult, savedFileResponse);","      });","    }","  });","  ","  var listOptions = {","    timeoutIntervalInMs : userOptions.timeoutIntervalInMs,","    clientRequestTimeoutInMs : userOptions.clientRequestTimeoutInMs,","  };","  ","  rangeStream.list(listOptions);","  return speedSummary;","};","","/**","* @ignore","*/","FileService.prototype._setRangeContentMD5Header = function (webResource, options) {","  if(!azureutil.objectIsNull(options.rangeStart) && options.useTransactionalMD5) {","    if(azureutil.objectIsNull(options.rangeEnd)) {","      throw new ArgumentNullError(util.format(SR.ARGUMENT_NULL_OR_EMPTY, options.rangeEndHeader));","    }","","    var size = parseInt(options.rangeEnd, 10) - parseInt(options.rangeStart, 10) + 1;","    if (size > FileConstants.MAX_RANGE_GET_SIZE_WITH_MD5) {","      throw new Error(SR.INVALID_RANGE_FOR_MD5);","    } else {","      webResource.withHeader(HeaderConstants.RANGE_GET_CONTENT_MD5, 'true');","    }","  }","};","","/**","* @ignore","*/","FileService.prototype._updateFilesImpl = function (share, directory, file, rangeStart, rangeEnd, writeMethod, options) {","  var resourceName = createResourceName(share, directory, file);","  var webResource = WebResource.put(resourceName)","    .withQueryOption(QueryStringConstants.COMP, 'range')","    .withHeader(HeaderConstants.CONTENT_TYPE, 'application/octet-stream')","    .withHeader(HeaderConstants.FILE_WRITE, writeMethod);","","  options.rangeStart = rangeStart;","  options.rangeEnd = rangeEnd;","","  FileResult.setHeaders(webResource, options); ","","  if(writeMethod === FileConstants.RangeWriteOptions.UPDATE) {","    var size = (rangeEnd - rangeStart) + 1;","    webResource.withHeader(HeaderConstants.CONTENT_LENGTH, size);","  } else {","    webResource.withHeader(HeaderConstants.CONTENT_LENGTH, 0);","  }","","  return webResource;","};","","/**","* @ignore","*/","FileService.prototype._validateLengthAndMD5 = function (options, responseObject) {","  var storedMD5 = responseObject.response.headers[Constants.HeaderConstants.CONTENT_MD5];","  var contentLength;","","  if (!azureutil.objectIsNull(responseObject.response.headers[Constants.HeaderConstants.CONTENT_LENGTH])) {","    contentLength = parseInt(responseObject.response.headers[Constants.HeaderConstants.CONTENT_LENGTH], 10);","  }","","  // If the user has not specified this option, the default value should be false.","  if(azureutil.objectIsNull(options.disableContentMD5Validation)) {","    options.disableContentMD5Validation = false;","  }","","  // None of the below cases should be retried. So set the error in every case so the retry policy filter handle knows that it shouldn't be retried.","  if (options.disableContentMD5Validation === false && options.useTransactionalMD5 === true && azureutil.objectIsNull(storedMD5)) {","    responseObject.error = new Error(SR.MD5_NOT_PRESENT_ERROR);","    responseObject.retryable = false;","  }","","  // Validate length and if required, MD5.","  // If getFileToText called this method, then the responseObject.length and responseObject.contentMD5 are not set. Calculate them first using responseObject.response.body and then validate.","  if(azureutil.objectIsNull(responseObject.length)) {","    if (typeof responseObject.response.body == 'string') {","      responseObject.length = Buffer.byteLength(responseObject.response.body);","    } else if (Buffer.isBuffer(responseObject.response.body)) {","      responseObject.length = responseObject.response.body.length;","    }","  }","","  if(!azureutil.objectIsNull(contentLength) && responseObject.length !== contentLength) {","    responseObject.error = new Error(SR.CONTENT_LENGTH_MISMATCH);","    responseObject.retryable = false;","  }","","  if(options.disableContentMD5Validation === false && azureutil.objectIsNull(responseObject.contentMD5)) {","    responseObject.contentMD5 = azureutil.getContentMd5(responseObject.response.body);","  }","","  if (options.disableContentMD5Validation === false && !azureutil.objectIsNull(storedMD5) && storedMD5 !== responseObject.contentMD5) {","    responseObject.error = new Error(util.format(SR.HASH_MISMATCH, storedMD5, responseObject.contentMD5));","    responseObject.retryable = false;","  }","};","","/**","* Checks whether or not a file exists on the service.","* @ignore","*","* @this {FileService}","* @param {string}             share                                             The share name.","* @param {string}             directory                                         The directory name. Use '' to refer to the base directory.","* @param {string}             file                                              The file name. File names may not start or end with the delimiter '/'.","* @param {string}             primaryOnly                                       If true, the request will be executed against the primary storage location.","* @param {object}             [options]                                         The request options.","* @param {LocationMode}       [options.locationMode]                            Specifies the location mode used to decide which location the request should be sent to. ","*                                                                               Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                     The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]                The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]                The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                               The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                               execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                         A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                       Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                               The default value is false.","* @param {Function(error, result, response)}  callback                          `error` will contain information","*                                                                               if an error occurs; otherwise `result` will contain","*                                                                               the file information including the `exists` boolean member.","*                                                                               `response` will contain information related to this operation.","*/","FileService.prototype._doesFileExist = function (share, directory, file, primaryOnly, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('FileExists', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.string(file, 'file');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  var resourceName = createResourceName(share, directory, file);","  var webResource = WebResource.head(resourceName);","","  /*if(primaryOnly === false) {","    options.requestLocationMode = RequestLocationMode.PRIMARY_OR_SECONDARY;","  }*/","  ","  var processResponseCallback = function (responseObject, next) {","    responseObject.fileResult = new FileResult(share, directory, file);","    if (!responseObject.error) {","      responseObject.fileResult.exists = true;","      responseObject.fileResult.getPropertiesFromHeaders(responseObject.response.headers);","      ","    } else if (responseObject.error && responseObject.error.statusCode === Constants.HttpConstants.HttpResponseCodes.NotFound) {","      responseObject.error = null;","      responseObject.fileResult.exists = false;","      responseObject.response.isSuccessful = true;","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.fileResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Checks whether or not a directory exists on the service.","* @ignore","*","* @this {FileService}","* @param {string}             share                                             The share name.","* @param {string}             directory                                         The directory name. Use '' to refer to the base directory.","* @param {string}             primaryOnly                                       If true, the request will be executed against the primary storage location.","* @param {object}             [options]                                         The request options.","* @param {LocationMode}       [options.locationMode]                            Specifies the location mode used to decide which location the request should be sent to. ","*                                                                               Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]                     The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]                The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]                The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                               The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                               execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                         A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                       Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                               The default value is false.","* @param {Function(error, result, response)}  callback                          `error` will contain information","*                                                                               if an error occurs; otherwise `result` will contain","*                                                                               the directory information including `exists` boolean member. ","*                                                                               `response` will contain information related to this operation.","*/","FileService.prototype._doesDirectoryExist = function (share, directory, primaryOnly, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('directoryExists', function (v) {","    v.string(share, 'share');","    v.stringAllowEmpty(directory, 'directory');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.head(createResourceName(share, directory))","    .withQueryOption(QueryStringConstants.RESTYPE, 'directory');","","  /*if(primaryOnly === false) {","    options.requestLocationMode = RequestLocationMode.PRIMARY_OR_SECONDARY;","  }*/","    ","  var self = this;","  var processResponseCallback = function(responseObject, next){","    responseObject.directoryResult = new DirectoryResult(directory);","    responseObject.directoryResult.exists = false;","    ","    if (!responseObject.error) {","      responseObject.directoryResult.exists = true;","      responseObject.directoryResult.metadata = self.parseMetadataHeaders(responseObject.response.headers);","      responseObject.directoryResult.getPropertiesFromHeaders(responseObject.response.headers);","      ","    } else if (responseObject.error && responseObject.error.statusCode === Constants.HttpConstants.HttpResponseCodes.NotFound) {","      responseObject.error = null;","      responseObject.response.isSuccessful = true;","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.directoryResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Checks whether or not a share exists on the service.","* @ignore","*","* @this {FileService}","* @param {string}             share                                   The share name.","* @param {string}             primaryOnly                             If true, the request will be executed against the primary storage location.","* @param {object}             [options]                               The request options.","* @param {LocationMode}       [options.locationMode]                  Specifies the location mode used to decide which location the request should be sent to. ","*                                                                     Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]           The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]      The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]      The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                     The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                     execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]               A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]             Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                     The default value is false.","* @param {Function(error, result, response)}      callback            `error` will contain information","*                                                                     if an error occurs; otherwise `result` will contain","*                                                                     the share information including `exists` boolean member.","*                                                                     `response` will contain information related to this operation.","*/","FileService.prototype._doesShareExist = function (share, primaryOnly, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('shareExists', function (v) {","    v.string(share, 'share');","    v.shareNameIsValid(share);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.head(share)","    .withQueryOption(QueryStringConstants.RESTYPE, 'share');","","  /*if(primaryOnly === false) {","    options.requestLocationMode = RequestLocationMode.PRIMARY_OR_SECONDARY;","  }*/","  ","  var processResponseCallback = function(responseObject, next){","    responseObject.shareResult = new ShareResult(share);","    responseObject.shareResult.exists = false;","    ","    if (!responseObject.error) {","      responseObject.shareResult.exists = true;","      responseObject.shareResult.getPropertiesFromHeaders(responseObject.response.headers);","      ","    } else if (responseObject.error && responseObject.error.statusCode === Constants.HttpConstants.HttpResponseCodes.NotFound) {","      responseObject.error = null;","      responseObject.response.isSuccessful = true;","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.shareResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* The callback for {FileService~getFileToText}.","* @typedef {function} FileService~FileToText","* @param {object} error      If an error occurs, the error information.","* @param {string} text       The text returned from the file.","* @param {object} file       Information about the file.","* @param {object} response   Information related to this operation.","*/","","FileService.SpeedSummary = SpeedSummary;","","module.exports = FileService;",""],"l":{"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"36":1,"37":1,"38":1,"39":1,"40":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"52":1,"53":1,"54":1,"55":1,"58":1,"59":1,"89":1,"90":0,"92":0,"99":0,"100":0,"103":1,"116":1,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"124":0,"127":0,"129":0,"131":0,"132":0,"135":0,"138":0,"140":0,"141":0,"144":0,"147":0,"170":1,"171":0,"195":1,"196":0,"225":1,"226":0,"255":1,"256":0,"257":0,"259":0,"260":0,"263":0,"264":0,"269":0,"270":0,"273":0,"277":0,"278":0,"280":0,"281":0,"285":0,"287":0,"289":0,"290":0,"291":0,"292":0,"296":0,"297":0,"298":0,"301":0,"302":0,"307":0,"308":0,"312":0,"313":0,"316":0,"319":0,"343":1,"344":0,"371":1,"372":0,"373":0,"375":0,"376":0,"377":0,"378":0,"379":0,"382":0,"383":0,"387":0,"389":0,"390":0,"391":0,"392":0,"393":0,"395":0,"396":0,"400":0,"401":0,"404":0,"407":0,"441":1,"442":0,"443":0,"445":0,"446":0,"447":0,"448":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"458":0,"459":0,"460":0,"461":0,"462":0,"464":0,"465":0,"466":0,"468":0,"470":0,"471":0,"474":0,"504":1,"505":0,"506":0,"508":0,"509":0,"510":0,"511":0,"514":0,"515":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"529":0,"530":0,"533":0,"536":0,"560":1,"561":0,"562":0,"564":0,"565":0,"566":0,"567":0,"568":0,"571":0,"572":0,"573":0,"578":0,"580":0,"581":0,"582":0,"583":0,"584":0,"587":0,"588":0,"591":0,"594":0,"616":1,"617":0,"618":0,"620":0,"621":0,"624":0,"625":0,"626":0,"630":0,"631":0,"632":0,"633":0,"634":0,"638":0,"639":0,"643":0,"646":0,"672":1,"673":0,"674":0,"676":0,"677":0,"678":0,"679":0,"682":0,"683":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"696":0,"697":0,"700":0,"703":0,"730":1,"731":0,"732":0,"734":0,"735":0,"736":0,"737":0,"738":0,"741":0,"742":0,"746":0,"748":0,"749":0,"750":0,"751":0,"752":0,"755":0,"756":0,"759":0,"762":0,"786":1,"787":0,"788":0,"790":0,"791":0,"792":0,"793":0,"796":0,"797":0,"801":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"811":0,"812":0,"815":0,"818":0,"841":1,"842":0,"843":0,"845":0,"846":0,"847":0,"848":0,"851":0,"853":0,"854":0,"855":0,"856":0,"858":0,"861":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"877":0,"878":0,"881":0,"884":0,"908":1,"909":0,"910":0,"912":0,"913":0,"914":0,"915":0,"918":0,"919":0,"922":0,"923":0,"924":0,"927":0,"930":0,"956":1,"957":0,"958":0,"960":0,"961":0,"962":0,"963":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"975":0,"976":0,"977":0,"978":0,"979":0,"981":0,"982":0,"983":0,"986":0,"1016":1,"1017":0,"1044":1,"1045":0,"1046":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1055":0,"1056":0,"1059":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1068":0,"1069":0,"1072":0,"1075":0,"1111":1,"1112":0,"1113":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":0,"1135":0,"1136":0,"1137":0,"1139":0,"1141":0,"1142":0,"1145":0,"1174":1,"1175":0,"1176":0,"1178":0,"1179":0,"1180":0,"1181":0,"1182":0,"1185":0,"1186":0,"1189":0,"1190":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1198":0,"1199":0,"1202":0,"1205":0,"1229":1,"1230":0,"1231":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1240":0,"1241":0,"1244":0,"1245":0,"1246":0,"1249":0,"1252":0,"1278":1,"1279":0,"1280":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1289":0,"1290":0,"1291":0,"1292":0,"1293":0,"1294":0,"1295":0,"1296":0,"1298":0,"1299":0,"1300":0,"1301":0,"1302":0,"1304":0,"1305":0,"1306":0,"1309":0,"1339":1,"1340":0,"1369":1,"1370":0,"1371":0,"1373":0,"1374":0,"1375":0,"1376":0,"1377":0,"1380":0,"1381":0,"1386":0,"1387":0,"1390":0,"1392":0,"1393":0,"1394":0,"1395":0,"1400":0,"1401":0,"1402":0,"1403":0,"1404":0,"1407":0,"1408":0,"1409":0,"1410":0,"1414":0,"1415":0,"1416":0,"1420":0,"1421":0,"1422":0,"1423":0,"1427":0,"1428":0,"1429":0,"1433":0,"1434":0,"1439":0,"1440":0,"1444":0,"1445":0,"1448":0,"1451":0,"1474":1,"1475":0,"1476":0,"1478":0,"1479":0,"1480":0,"1481":0,"1482":0,"1485":0,"1486":0,"1487":0,"1491":0,"1492":0,"1493":0,"1494":0,"1495":0,"1496":0,"1497":0,"1500":0,"1501":0,"1504":0,"1507":0,"1531":1,"1532":0,"1533":0,"1535":0,"1536":0,"1537":0,"1538":0,"1539":0,"1540":0,"1543":0,"1544":0,"1545":0,"1549":0,"1551":0,"1552":0,"1553":0,"1554":0,"1555":0,"1558":0,"1559":0,"1562":0,"1565":0,"1593":1,"1595":0,"1596":0,"1600":0,"1601":0,"1602":0,"1603":0,"1606":0,"1607":0,"1608":0,"1609":0,"1610":0,"1612":0,"1614":0,"1617":0,"1618":0,"1619":0,"1620":0,"1623":0,"1626":0,"1627":0,"1628":0,"1631":0,"1635":0,"1636":0,"1662":1,"1663":0,"1664":0,"1665":0,"1666":0,"1669":0,"1670":0,"1671":0,"1673":0,"1675":0,"1676":0,"1677":0,"1680":0,"1681":0,"1709":1,"1710":0,"1711":0,"1713":0,"1714":0,"1715":0,"1716":0,"1717":0,"1718":0,"1721":0,"1722":0,"1723":0,"1725":0,"1726":0,"1727":0,"1728":0,"1729":0,"1730":0,"1731":0,"1734":0,"1735":0,"1738":0,"1741":0,"1768":1,"1769":0,"1770":0,"1772":0,"1773":0,"1774":0,"1775":0,"1776":0,"1777":0,"1780":0,"1781":0,"1782":0,"1785":0,"1786":0,"1787":0,"1788":0,"1789":0,"1790":0,"1791":0,"1794":0,"1795":0,"1798":0,"1801":0,"1837":1,"1838":0,"1839":0,"1841":0,"1842":0,"1843":0,"1844":0,"1845":0,"1846":0,"1849":0,"1850":0,"1851":0,"1854":0,"1856":0,"1857":0,"1858":0,"1859":0,"1860":0,"1863":0,"1864":0,"1867":0,"1870":0,"1898":1,"1899":0,"1900":0,"1902":0,"1903":0,"1904":0,"1905":0,"1906":0,"1907":0,"1908":0,"1911":0,"1912":0,"1913":0,"1916":0,"1918":0,"1919":0,"1920":0,"1921":0,"1922":0,"1925":0,"1926":0,"1929":0,"1932":0,"1957":1,"1958":0,"1959":0,"1961":0,"1962":0,"1963":0,"1964":0,"1965":0,"1966":0,"1967":0,"1970":0,"1971":0,"1972":0,"1975":0,"1977":0,"1978":0,"1979":0,"1980":0,"1981":0,"1984":0,"1985":0,"1988":0,"1991":0,"2017":1,"2018":0,"2053":1,"2054":0,"2055":0,"2056":0,"2057":0,"2058":0,"2059":0,"2060":0,"2061":0,"2062":0,"2065":0,"2066":0,"2067":0,"2071":0,"2073":0,"2074":0,"2075":0,"2076":0,"2077":0,"2080":0,"2081":0,"2084":0,"2087":0,"2111":1,"2112":0,"2113":0,"2115":0,"2116":0,"2117":0,"2118":0,"2119":0,"2120":0,"2123":0,"2124":0,"2125":0,"2127":0,"2128":0,"2129":0,"2132":0,"2135":0,"2162":1,"2163":0,"2164":0,"2166":0,"2167":0,"2168":0,"2169":0,"2170":0,"2171":0,"2174":0,"2175":0,"2176":0,"2177":0,"2178":0,"2179":0,"2180":0,"2181":0,"2183":0,"2184":0,"2185":0,"2186":0,"2187":0,"2189":0,"2190":0,"2191":0,"2194":0,"2226":1,"2227":0,"2228":0,"2230":0,"2231":0,"2232":0,"2233":0,"2234":0,"2235":0,"2238":0,"2239":0,"2240":0,"2243":0,"2244":0,"2246":0,"2247":0,"2248":0,"2249":0,"2251":0,"2252":0,"2253":0,"2254":0,"2255":0,"2257":0,"2260":0,"2261":0,"2264":0,"2267":0,"2312":1,"2313":0,"2314":0,"2315":0,"2317":0,"2318":0,"2319":0,"2320":0,"2321":0,"2322":0,"2323":0,"2326":0,"2328":0,"2330":0,"2331":0,"2333":0,"2334":0,"2337":0,"2339":0,"2340":0,"2341":0,"2345":0,"2348":0,"2383":1,"2384":0,"2385":0,"2387":0,"2388":0,"2389":0,"2390":0,"2391":0,"2394":0,"2396":0,"2397":0,"2398":0,"2399":0,"2402":0,"2403":0,"2407":0,"2453":1,"2454":0,"2455":0,"2456":0,"2458":0,"2459":0,"2460":0,"2461":0,"2462":0,"2463":0,"2464":0,"2467":0,"2469":0,"2475":0,"2476":0,"2478":0,"2479":0,"2480":0,"2481":0,"2483":0,"2484":0,"2485":0,"2486":0,"2487":0,"2489":0,"2491":0,"2493":0,"2494":0,"2495":0,"2497":0,"2503":0,"2531":1,"2532":0,"2533":0,"2535":0,"2536":0,"2537":0,"2538":0,"2539":0,"2540":0,"2543":0,"2544":0,"2545":0,"2548":0,"2550":0,"2551":0,"2552":0,"2553":0,"2555":0,"2556":0,"2557":0,"2559":0,"2560":0,"2564":0,"2565":0,"2570":0,"2574":0,"2575":0,"2578":0,"2581":0,"2609":1,"2610":0,"2611":0,"2613":0,"2614":0,"2615":0,"2616":0,"2617":0,"2618":0,"2619":0,"2620":0,"2623":0,"2624":0,"2626":0,"2627":0,"2628":0,"2629":0,"2630":0,"2633":0,"2634":0,"2637":0,"2640":0,"2671":1,"2672":0,"2673":0,"2675":0,"2676":0,"2677":0,"2678":0,"2679":0,"2680":0,"2681":0,"2682":0,"2683":0,"2686":0,"2687":0,"2689":0,"2690":0,"2691":0,"2694":0,"2695":0,"2696":0,"2697":0,"2698":0,"2701":0,"2741":1,"2742":0,"2743":0,"2745":0,"2746":0,"2747":0,"2748":0,"2749":0,"2750":0,"2751":0,"2754":0,"2756":0,"2757":0,"2758":0,"2761":0,"2762":0,"2765":0,"2766":0,"2767":0,"2768":0,"2771":0,"2813":1,"2814":0,"2815":0,"2817":0,"2818":0,"2819":0,"2820":0,"2821":0,"2822":0,"2823":0,"2826":0,"2827":0,"2829":0,"2830":0,"2831":0,"2832":0,"2834":0,"2835":0,"2836":0,"2838":0,"2839":0,"2845":0,"2885":1,"2886":0,"2887":0,"2889":0,"2890":0,"2891":0,"2892":0,"2893":0,"2894":0,"2895":0,"2896":0,"2899":0,"2900":0,"2902":0,"2904":0,"2905":0,"2906":0,"2907":0,"2909":0,"2910":0,"2914":0,"2960":1,"2961":0,"2962":0,"2964":0,"2965":0,"2966":0,"2967":0,"2968":0,"2971":0,"2973":0,"2974":0,"2975":0,"2976":0,"2979":0,"2980":0,"2984":0,"3027":1,"3028":0,"3029":0,"3031":0,"3032":0,"3033":0,"3034":0,"3035":0,"3036":0,"3039":0,"3041":0,"3042":0,"3044":0,"3045":0,"3046":0,"3047":0,"3048":0,"3051":0,"3052":0,"3053":0,"3054":0,"3057":0,"3058":0,"3064":0,"3093":1,"3094":0,"3095":0,"3097":0,"3098":0,"3099":0,"3100":0,"3101":0,"3102":0,"3105":0,"3107":0,"3109":0,"3113":0,"3114":0,"3115":0,"3116":0,"3117":0,"3119":0,"3120":0,"3124":0,"3125":0,"3128":0,"3131":0,"3157":1,"3158":0,"3159":0,"3161":0,"3162":0,"3163":0,"3164":0,"3165":0,"3166":0,"3169":0,"3171":0,"3172":0,"3177":0,"3178":0,"3179":0,"3182":0,"3185":0,"3220":1,"3221":0,"3224":0,"3225":0,"3228":0,"3229":0,"3230":0,"3231":0,"3232":0,"3235":0,"3236":0,"3239":0,"3242":0,"3243":0,"3245":0,"3284":1,"3285":0,"3287":0,"3288":0,"3289":0,"3291":0,"3294":0,"3295":0,"3297":0,"3300":0,"3303":0,"3304":0,"3308":0,"3309":0,"3312":0,"3318":0,"3319":0,"3320":0,"3321":0,"3322":0,"3324":0,"3325":0,"3328":0,"3330":0,"3331":0,"3334":0,"3335":0,"3336":0,"3338":0,"3339":0,"3340":0,"3342":0,"3343":0,"3347":0,"3348":0,"3349":0,"3351":0,"3352":0,"3353":0,"3358":0,"3359":0,"3360":0,"3363":0,"3364":0,"3365":0,"3368":0,"3369":0,"3371":0,"3372":0,"3373":0,"3376":0,"3377":0,"3378":0,"3379":0,"3383":0,"3384":0,"3385":0,"3386":0,"3390":0,"3423":1,"3424":0,"3425":0,"3427":0,"3428":0,"3429":0,"3430":0,"3431":0,"3432":0,"3433":0,"3436":0,"3437":0,"3438":0,"3440":0,"3441":0,"3443":0,"3444":0,"3445":0,"3447":0,"3448":0,"3449":0,"3450":0,"3452":0,"3455":0,"3456":0,"3459":0,"3462":0,"3496":1,"3497":0,"3498":0,"3500":0,"3501":0,"3502":0,"3503":0,"3504":0,"3505":0,"3506":0,"3509":0,"3510":0,"3511":0,"3512":0,"3514":0,"3516":0,"3517":0,"3518":0,"3519":0,"3520":0,"3523":0,"3524":0,"3526":0,"3527":0,"3528":0,"3531":0,"3537":0,"3538":0,"3539":0,"3540":0,"3542":0,"3543":0,"3545":0,"3546":0,"3547":0,"3549":0,"3550":0,"3551":0,"3552":0,"3555":0,"3556":0,"3559":0,"3560":0,"3563":0,"3564":0,"3565":0,"3566":0,"3569":0,"3570":0,"3572":0,"3573":0,"3575":0,"3576":0,"3577":0,"3578":0,"3579":0,"3581":0,"3582":0,"3584":0,"3588":0,"3589":0,"3590":0,"3591":0,"3595":0,"3596":0,"3597":0,"3600":0,"3601":0,"3602":0,"3605":0,"3606":0,"3607":0,"3610":0,"3611":0,"3612":0,"3613":0,"3615":0,"3616":0,"3617":0,"3618":0,"3620":0,"3621":0,"3623":0,"3624":0,"3625":0,"3626":0,"3628":0,"3633":0,"3638":0,"3639":0,"3645":1,"3646":0,"3647":0,"3648":0,"3651":0,"3652":0,"3653":0,"3655":0,"3663":1,"3664":0,"3665":0,"3670":0,"3671":0,"3673":0,"3675":0,"3676":0,"3677":0,"3679":0,"3682":0,"3688":1,"3689":0,"3690":0,"3692":0,"3693":0,"3697":0,"3698":0,"3702":0,"3703":0,"3704":0,"3709":0,"3710":0,"3711":0,"3712":0,"3713":0,"3717":0,"3718":0,"3719":0,"3722":0,"3723":0,"3726":0,"3727":0,"3728":0,"3757":1,"3758":0,"3759":0,"3761":0,"3762":0,"3763":0,"3764":0,"3765":0,"3766":0,"3769":0,"3771":0,"3772":0,"3778":0,"3779":0,"3780":0,"3781":0,"3782":0,"3784":0,"3785":0,"3786":0,"3787":0,"3790":0,"3791":0,"3794":0,"3797":0,"3824":1,"3825":0,"3826":0,"3828":0,"3829":0,"3830":0,"3831":0,"3832":0,"3835":0,"3836":0,"3843":0,"3844":0,"3845":0,"3846":0,"3848":0,"3849":0,"3850":0,"3851":0,"3853":0,"3854":0,"3855":0,"3858":0,"3859":0,"3862":0,"3865":0,"3891":1,"3892":0,"3893":0,"3895":0,"3896":0,"3897":0,"3898":0,"3901":0,"3902":0,"3909":0,"3910":0,"3911":0,"3913":0,"3914":0,"3915":0,"3917":0,"3918":0,"3919":0,"3922":0,"3923":0,"3926":0,"3929":0,"3941":1,"3943":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/file/internal/filerangestream.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/file/internal/filerangestream.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"FileRangeStream","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":77}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":67}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":60}},"4":{"start":{"line":24,"column":0},"end":{"line":42,"column":1}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":79}},"6":{"start":{"line":27,"column":2},"end":{"line":27,"column":69}},"7":{"start":{"line":28,"column":2},"end":{"line":32,"column":3}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":46}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":78}},"10":{"start":{"line":33,"column":2},"end":{"line":37,"column":3}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":46}},"12":{"start":{"line":36,"column":4},"end":{"line":36,"column":77}},"13":{"start":{"line":38,"column":2},"end":{"line":38,"column":48}},"14":{"start":{"line":39,"column":2},"end":{"line":39,"column":33}},"15":{"start":{"line":40,"column":2},"end":{"line":40,"column":37}},"16":{"start":{"line":41,"column":2},"end":{"line":41,"column":32}},"17":{"start":{"line":44,"column":0},"end":{"line":44,"column":44}},"18":{"start":{"line":46,"column":0},"end":{"line":46,"column":33}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var util = require('util');","var RangeStream = require('./../../../common/streams/rangestream');","var Constants = require('./../../../common/util/constants');","","/**","* File range stream","*/","function FileRangeStream(fileServiceClient, share, directory, file, options) {","  FileRangeStream['super_'].call(this, fileServiceClient, null, null, options);","    ","  this._lengthHeader = Constants.HeaderConstants.FILE_CONTENT_LENGTH;","  if (options.minRangeSize) {","    this._minRangeSize = options.minRangeSize;","  } else {","    this._minRangeSize = Constants.FileConstants.MIN_WRITE_FILE_SIZE_IN_BYTES;","  }","  if (options.maxRangeSize) {","    this._maxRangeSize = options.maxRangeSize;","  } else {","    this._maxRangeSize = Constants.FileConstants.DEFAULT_WRITE_SIZE_IN_BYTES;","  }","  this._listFunc = fileServiceClient.listRanges;","  this._resourcePath.push(share);","  this._resourcePath.push(directory);","  this._resourcePath.push(file);","}","","util.inherits(FileRangeStream, RangeStream);","","module.exports = FileRangeStream;",""],"l":{"17":1,"18":1,"19":1,"24":1,"25":0,"27":0,"28":0,"29":0,"31":0,"33":0,"34":0,"36":0,"38":0,"39":0,"40":0,"41":0,"44":1,"46":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/file/models/shareresult.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/file/models/shareresult.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"ShareResult","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":27}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":20},"end":{"line":42,"column":46}}},"3":{"name":"(anonymous_3)","line":62,"loc":{"start":{"line":62,"column":49},"end":{"line":62,"column":68}}},"4":{"name":"(anonymous_4)","line":65,"loc":{"start":{"line":65,"column":36},"end":{"line":65,"column":77}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":54}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":38}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":48}},"5":{"start":{"line":38,"column":0},"end":{"line":40,"column":1}},"6":{"start":{"line":39,"column":2},"end":{"line":39,"column":19}},"7":{"start":{"line":42,"column":0},"end":{"line":60,"column":2}},"8":{"start":{"line":43,"column":2},"end":{"line":43,"column":42}},"9":{"start":{"line":44,"column":2},"end":{"line":57,"column":3}},"10":{"start":{"line":45,"column":4},"end":{"line":56,"column":5}},"11":{"start":{"line":46,"column":6},"end":{"line":55,"column":7}},"12":{"start":{"line":48,"column":8},"end":{"line":48,"column":85}},"13":{"start":{"line":49,"column":13},"end":{"line":55,"column":7}},"14":{"start":{"line":50,"column":8},"end":{"line":50,"column":86}},"15":{"start":{"line":51,"column":8},"end":{"line":51,"column":45}},"16":{"start":{"line":52,"column":8},"end":{"line":52,"column":130}},"17":{"start":{"line":54,"column":8},"end":{"line":54,"column":73}},"18":{"start":{"line":59,"column":2},"end":{"line":59,"column":21}},"19":{"start":{"line":62,"column":0},"end":{"line":75,"column":2}},"20":{"start":{"line":63,"column":2},"end":{"line":63,"column":18}},"21":{"start":{"line":65,"column":2},"end":{"line":69,"column":4}},"22":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"23":{"start":{"line":67,"column":6},"end":{"line":67,"column":66}},"24":{"start":{"line":71,"column":2},"end":{"line":71,"column":60}},"25":{"start":{"line":72,"column":2},"end":{"line":72,"column":77}},"26":{"start":{"line":73,"column":2},"end":{"line":73,"column":71}},"27":{"start":{"line":74,"column":2},"end":{"line":74,"column":68}},"28":{"start":{"line":84,"column":0},"end":{"line":84,"column":29}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":6}},{"start":{"line":46,"column":6},"end":{"line":46,"column":6}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":13},"end":{"line":49,"column":13}},{"start":{"line":49,"column":13},"end":{"line":49,"column":13}}]},"4":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":17},"end":{"line":49,"column":44}},{"start":{"line":49,"column":48},"end":{"line":49,"column":77}}]},"5":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"6":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":8},"end":{"line":66,"column":28}},{"start":{"line":66,"column":32},"end":{"line":66,"column":69}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var azureCommon = require('./../../../common/common');","var azureutil = azureCommon.util;","var Constants = azureCommon.Constants;","var HeaderConstants = Constants.HeaderConstants;","","/**","* Creates a new ShareResult object.","* @class","* The ShareResult class is used to store the share information.","* "," * @property  {string}                      name                                  The share name."," * @property  {object}                      metadata                              The metadata key/value pair."," * @property  {string}                      etag                                  The etag."," * @property  {string}                      lastModified                          The date/time that the share was last modified."," * @property  {string}                      requestId                             The request id."," * @property  {string}                      quota                                 The share quota."," * ","* @constructor","* @param {string} [name]                    The share name.","*/","function ShareResult(name) {","  this.name = name;","}","","ShareResult.parse = function (shareXml, name) {","  var shareResult = new ShareResult(name);","  for (var propertyName in shareXml) {","    if (shareXml.hasOwnProperty(propertyName)) {","      if (propertyName === 'Properties') {","        //  Lift out the properties onto the main object to keep consistent across all APIs like: getShareProperties","        azureutil.setPropertyValueFromXML(shareResult, shareXml[propertyName], true);","      } else if (propertyName === 'Metadata' || propertyName === 'ShareStats') {","        var resultPropertyName = azureutil.normalizePropertyNameFromXML(propertyName);","        shareResult[resultPropertyName] = {};","        azureutil.setPropertyValueFromXML(shareResult[resultPropertyName], shareXml[propertyName], propertyName === 'ShareStats');","      } else {","        shareResult[propertyName.toLowerCase()] = shareXml[propertyName];","      }","    }","  }","","  return shareResult;","};","","ShareResult.prototype.getPropertiesFromHeaders = function (headers) {","  var self = this;","","  var setSharePropertyFromHeaders = function (shareProperty, headerProperty) {","    if (!self[shareProperty] && headers[headerProperty.toLowerCase()]) {","      self[shareProperty] = headers[headerProperty.toLowerCase()];","    }","  };","","  setSharePropertyFromHeaders('etag', HeaderConstants.ETAG);","  setSharePropertyFromHeaders('lastModified', HeaderConstants.LAST_MODIFIED);","  setSharePropertyFromHeaders('requestId', HeaderConstants.REQUEST_ID);","  setSharePropertyFromHeaders('quota', HeaderConstants.SHARE_QUOTA);","};","","/**","* The share ACL settings.","* @typedef    {object}                ShareAclResult","* @extends    {ShareAclResult}","* @property   {Object.<string, AccessPolicy>}    signedIdentifiers   The container ACL settings. See `[AccessPolicy]{@link AccessPolicy}` for detailed information.","*/","","module.exports = ShareResult;"],"l":{"18":1,"19":1,"20":1,"21":1,"38":1,"39":0,"42":1,"43":0,"44":0,"45":0,"46":0,"48":0,"49":0,"50":0,"51":0,"52":0,"54":0,"59":0,"62":1,"63":0,"65":0,"66":0,"67":0,"71":0,"72":0,"73":0,"74":0,"84":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/file/models/directoryresult.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/file/models/directoryresult.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"DirectoryResult","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":31}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":24},"end":{"line":38,"column":42}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":53},"end":{"line":42,"column":72}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":40},"end":{"line":45,"column":85}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":84}},"2":{"start":{"line":34,"column":0},"end":{"line":36,"column":1}},"3":{"start":{"line":35,"column":2},"end":{"line":35,"column":19}},"4":{"start":{"line":38,"column":0},"end":{"line":40,"column":2}},"5":{"start":{"line":39,"column":2},"end":{"line":39,"column":42}},"6":{"start":{"line":42,"column":0},"end":{"line":54,"column":2}},"7":{"start":{"line":43,"column":2},"end":{"line":43,"column":18}},"8":{"start":{"line":45,"column":2},"end":{"line":49,"column":4}},"9":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"10":{"start":{"line":47,"column":6},"end":{"line":47,"column":70}},"11":{"start":{"line":51,"column":2},"end":{"line":51,"column":64}},"12":{"start":{"line":52,"column":2},"end":{"line":52,"column":81}},"13":{"start":{"line":53,"column":2},"end":{"line":53,"column":75}},"14":{"start":{"line":56,"column":0},"end":{"line":56,"column":33}}},"branchMap":{"1":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"2":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":32}},{"start":{"line":46,"column":36},"end":{"line":46,"column":73}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var HeaderConstants = require('./../../../common/common').Constants.HeaderConstants;","","/**","* Creates a new DirectoryResult object.","* @class","* The DirectoryResult class is used to store the directory information.","* "," * @property  {string}                      name                                  The container name."," * @property  {object}                      metadata                              The metadata key/value pair."," * @property  {string}                      etag                                  The etag."," * @property  {string}                      lastModified                          The date/time that the directory was last modified."," * @property  {string}                      requestId                             The request id."," * ","* @constructor","* @param {string} [name]                    The directory name.","*/","function DirectoryResult(name) {","  this.name = name;","}","","DirectoryResult.parse = function (dirXml) {","  return new DirectoryResult(dirXml.Name);","};","","DirectoryResult.prototype.getPropertiesFromHeaders = function (headers) {","  var self = this;","","  var setDirectoryPropertyFromHeaders = function (directoryProperty, headerProperty) {","    if (!self[directoryProperty] && headers[headerProperty.toLowerCase()]) {","      self[directoryProperty] = headers[headerProperty.toLowerCase()];","    }","  };","","  setDirectoryPropertyFromHeaders('etag', HeaderConstants.ETAG);","  setDirectoryPropertyFromHeaders('lastModified', HeaderConstants.LAST_MODIFIED);","  setDirectoryPropertyFromHeaders('requestId', HeaderConstants.REQUEST_ID);","};","","module.exports = DirectoryResult;"],"l":{"18":1,"34":1,"35":0,"38":1,"39":0,"42":1,"43":0,"45":0,"46":0,"47":0,"51":0,"52":0,"53":0,"56":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/file/models/fileresult.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/file/models/fileresult.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"FileResult","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":44}}},"2":{"name":"(anonymous_2)","line":66,"loc":{"start":{"line":66,"column":19},"end":{"line":66,"column":39}}},"3":{"name":"(anonymous_3)","line":101,"loc":{"start":{"line":101,"column":48},"end":{"line":101,"column":76}}},"4":{"name":"(anonymous_4)","line":104,"loc":{"start":{"line":104,"column":35},"end":{"line":104,"column":75}}},"5":{"name":"(anonymous_5)","line":124,"loc":{"start":{"line":124,"column":43},"end":{"line":124,"column":59}}},"6":{"name":"(anonymous_6)","line":137,"loc":{"start":{"line":137,"column":24},"end":{"line":137,"column":56}}},"7":{"name":"(anonymous_7)","line":138,"loc":{"start":{"line":138,"column":26},"end":{"line":138,"column":66}}},"8":{"name":"(anonymous_8)","line":169,"loc":{"start":{"line":169,"column":27},"end":{"line":169,"column":59}}},"9":{"name":"(anonymous_9)","line":170,"loc":{"start":{"line":170,"column":26},"end":{"line":170,"column":66}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":54}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":33}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":48}},"6":{"start":{"line":60,"column":0},"end":{"line":64,"column":1}},"7":{"start":{"line":61,"column":2},"end":{"line":61,"column":21}},"8":{"start":{"line":62,"column":2},"end":{"line":62,"column":29}},"9":{"start":{"line":63,"column":2},"end":{"line":63,"column":19}},"10":{"start":{"line":66,"column":0},"end":{"line":78,"column":2}},"11":{"start":{"line":67,"column":2},"end":{"line":67,"column":36}},"12":{"start":{"line":68,"column":2},"end":{"line":75,"column":3}},"13":{"start":{"line":69,"column":4},"end":{"line":74,"column":5}},"14":{"start":{"line":71,"column":8},"end":{"line":71,"column":84}},"15":{"start":{"line":73,"column":6},"end":{"line":73,"column":70}},"16":{"start":{"line":77,"column":2},"end":{"line":77,"column":20}},"17":{"start":{"line":80,"column":0},"end":{"line":99,"column":2}},"18":{"start":{"line":101,"column":0},"end":{"line":131,"column":2}},"19":{"start":{"line":102,"column":2},"end":{"line":102,"column":18}},"20":{"start":{"line":104,"column":2},"end":{"line":114,"column":4}},"21":{"start":{"line":105,"column":4},"end":{"line":113,"column":5}},"22":{"start":{"line":106,"column":6},"end":{"line":106,"column":114}},"23":{"start":{"line":108,"column":6},"end":{"line":112,"column":7}},"24":{"start":{"line":109,"column":8},"end":{"line":109,"column":67}},"25":{"start":{"line":110,"column":8},"end":{"line":110,"column":59}},"26":{"start":{"line":111,"column":8},"end":{"line":111,"column":57}},"27":{"start":{"line":117,"column":2},"end":{"line":117,"column":96}},"28":{"start":{"line":119,"column":2},"end":{"line":119,"column":59}},"29":{"start":{"line":120,"column":2},"end":{"line":120,"column":76}},"30":{"start":{"line":121,"column":2},"end":{"line":121,"column":70}},"31":{"start":{"line":123,"column":2},"end":{"line":130,"column":4}},"32":{"start":{"line":124,"column":5},"end":{"line":128,"column":7}},"33":{"start":{"line":125,"column":6},"end":{"line":125,"column":29}},"34":{"start":{"line":126,"column":6},"end":{"line":126,"column":44}},"35":{"start":{"line":127,"column":6},"end":{"line":127,"column":51}},"36":{"start":{"line":137,"column":0},"end":{"line":163,"column":2}},"37":{"start":{"line":138,"column":2},"end":{"line":143,"column":4}},"38":{"start":{"line":139,"column":4},"end":{"line":139,"column":91}},"39":{"start":{"line":140,"column":4},"end":{"line":142,"column":5}},"40":{"start":{"line":141,"column":6},"end":{"line":141,"column":60}},"41":{"start":{"line":145,"column":2},"end":{"line":162,"column":3}},"42":{"start":{"line":147,"column":4},"end":{"line":147,"column":78}},"43":{"start":{"line":150,"column":4},"end":{"line":150,"column":71}},"44":{"start":{"line":153,"column":4},"end":{"line":161,"column":5}},"45":{"start":{"line":154,"column":6},"end":{"line":154,"column":54}},"46":{"start":{"line":156,"column":6},"end":{"line":158,"column":7}},"47":{"start":{"line":157,"column":8},"end":{"line":157,"column":34}},"48":{"start":{"line":160,"column":6},"end":{"line":160,"column":67}},"49":{"start":{"line":169,"column":0},"end":{"line":203,"column":2}},"50":{"start":{"line":170,"column":2},"end":{"line":175,"column":4}},"51":{"start":{"line":171,"column":4},"end":{"line":171,"column":91}},"52":{"start":{"line":172,"column":4},"end":{"line":174,"column":5}},"53":{"start":{"line":173,"column":6},"end":{"line":173,"column":60}},"54":{"start":{"line":177,"column":2},"end":{"line":202,"column":3}},"55":{"start":{"line":179,"column":4},"end":{"line":179,"column":76}},"56":{"start":{"line":182,"column":4},"end":{"line":182,"column":88}},"57":{"start":{"line":185,"column":4},"end":{"line":185,"column":96}},"58":{"start":{"line":188,"column":4},"end":{"line":188,"column":96}},"59":{"start":{"line":191,"column":4},"end":{"line":191,"column":102}},"60":{"start":{"line":194,"column":4},"end":{"line":194,"column":90}},"61":{"start":{"line":197,"column":4},"end":{"line":197,"column":86}},"62":{"start":{"line":199,"column":4},"end":{"line":201,"column":5}},"63":{"start":{"line":200,"column":6},"end":{"line":200,"column":63}},"64":{"start":{"line":205,"column":0},"end":{"line":205,"column":28}}},"branchMap":{"1":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"2":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"3":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":72}},{"start":{"line":105,"column":76},"end":{"line":105,"column":113}}]},"4":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":6},"end":{"line":108,"column":6}},{"start":{"line":108,"column":6},"end":{"line":108,"column":6}}]},"5":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":123,"column":2}},{"start":{"line":123,"column":2},"end":{"line":123,"column":2}}]},"6":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":140,"column":4}},{"start":{"line":140,"column":4},"end":{"line":140,"column":4}}]},"7":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"8":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":153,"column":4}},{"start":{"line":153,"column":4},"end":{"line":153,"column":4}}]},"9":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":6},"end":{"line":156,"column":6}},{"start":{"line":156,"column":6},"end":{"line":156,"column":6}}]},"10":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"11":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":177,"column":2}},{"start":{"line":177,"column":2},"end":{"line":177,"column":2}}]},"12":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var _ = require('underscore');","","var azureCommon = require('./../../../common/common');","var azureutil = azureCommon.util;","var Constants = azureCommon.Constants;","var HeaderConstants = Constants.HeaderConstants;","","/**","* Creates a new FileResult object.","* @class","* The FileResult class is used to store the file information.","* "," * @property  {string}                      share                                 The share name."," * @property  {string}                      directory                             The directory name."," * @property  {string}                      name                                  The file name."," * @property  {object}                      metadata                              The metadata key/value pair."," * @property  {string}                      etag                                  The etag."," * @property  {string}                      lastModified                          The date/time that the file was last modified."," * @property  {string}                      requestId                             The request id."," * @property  {string}                      acceptRanges                          The accept ranges."," * @property  {string}                      contentRange                          The content range"," * @property  {string}                      contentLength                         The size of the file in bytes."," * @property  {object}                      contentSettings                       The content settings."," * @property  {string}                      contentSettings.contentType           The content type."," * @property  {string}                      contentSettings.contentEncoding       The content encoding."," * @property  {string}                      contentSettings.contentLanguage       The content language."," * @property  {string}                      contentSettings.cacheControl          The cache control."," * @property  {string}                      contentSettings.contentDisposition    The content disposition."," * @property  {string}                      contentSettings.contentMD5            The content MD5 hash."," * @property  {object}                      copy                                  The copy information."," * @property  {string}                      copy.id                               The copy id."," * @property  {string}                      copy.status                           The copy status."," * @property  {string}                      copy.completionTime                   The copy completion time. "," * @property  {string}                      copy.statusDescription                The copy status description."," * @property  {string}                      copy.progress                         The copy progress."," * @property  {string}                      copy.source                           The copy source."," * ","* @constructor","* @param {string} [share]      The share name.","* @param {string} [directory]  The directory name.","* @param {string} [name]       The file name.","*/","function FileResult(share, directory, name) {","  this.share = share;","  this.directory = directory;","  this.name = name;","}","","FileResult.parse = function (entryXml) {","  var listResult = new FileResult();","  for (var propertyName in entryXml) {","    if (propertyName === 'Properties') {","      //  Lift out the properties onto the main object to keep consistent across all APIs like: getFileProperties","        azureutil.setPropertyValueFromXML(listResult, entryXml[propertyName], true);","    } else {","      listResult[propertyName.toLowerCase()] = entryXml[propertyName];","    }","  }","","  return listResult;","};","","var responseHeaders = {","  'acceptRanges': 'ACCEPT_RANGES',","  'contentLength': 'CONTENT_LENGTH',","  'contentRange': 'CONTENT_RANGE',","","  'contentSettings.contentType': 'CONTENT_TYPE',","  'contentSettings.contentEncoding': 'CONTENT_ENCODING',","  'contentSettings.contentLanguage': 'CONTENT_LANGUAGE',","  'contentSettings.cacheControl': 'CACHE_CONTROL',","  'contentSettings.contentDisposition': 'CONTENT_DISPOSITION',","  'contentSettings.contentMD5': 'CONTENT_MD5',","  'contentSettings.fileContentMD5': 'FILE_CONTENT_MD5',","  ","  'copy.id': 'COPY_ID',","  'copy.status': 'COPY_STATUS',","  'copy.source': 'COPY_SOURCE',","  'copy.progress': 'COPY_PROGRESS',","  'copy.completionTime': 'COPY_COMPLETION_TIME',","  'copy.statusDescription': 'COPY_STATUS_DESCRIPTION'","};","","FileResult.prototype.getPropertiesFromHeaders = function (headers, content) {","  var self = this;","  ","  var setFilePropertyFromHeaders = function (fileProperty, headerProperty) {","    if (!azureutil.tryGetValueChain(self, fileProperty.split('.'), null) && headers[headerProperty.toLowerCase()]) {","      azureutil.setObjectInnerPropertyValue(self, fileProperty.split('.'), headers[headerProperty.toLowerCase()]);","      ","      if (fileProperty === 'copy.progress') {","        var info = azureutil.parseCopyProgress(self.copy.progress);","        self.copy.bytesCopied = parseInt(info.bytesCopied);","        self.copy.totalBytes = parseInt(info.totalBytes);","      }","    }","  };","   ","  // For range get, 'x-ms-content-md5' indicate the overall MD5 of the file. Try to set the contentMD5 using this header if it presents","  setFilePropertyFromHeaders('contentSettings.contentMD5', HeaderConstants['FILE_CONTENT_MD5']); ","","  setFilePropertyFromHeaders('etag', HeaderConstants.ETAG);","  setFilePropertyFromHeaders('lastModified', HeaderConstants.LAST_MODIFIED);","  setFilePropertyFromHeaders('requestId', HeaderConstants.REQUEST_ID);   ","","  if (content) {","     _.chain(responseHeaders).pairs().each(function (pair) {","      var property = pair[0];","      var header = HeaderConstants[pair[1]];","      setFilePropertyFromHeaders(property, header);","    });","","   }","};","","/**","* This method sets the HTTP headers and is used by all methods except setFileProperties and createFile. ","* Those methods will set the x-ms-* headers using setProperties.","*/","FileResult.setHeaders = function (webResource, options) {","  var setHeaderProperty = function (headerProperty, fileProperty) {","    var propertyValue = azureutil.tryGetValueChain(options, fileProperty.split('.'), null);","    if (propertyValue) {","      webResource.withHeader(headerProperty, propertyValue);","    }","  };","","  if (options) {","    // Content-MD5","    setHeaderProperty(HeaderConstants.CONTENT_MD5, 'transactionalContentMD5');","","    // Content-Length","    setHeaderProperty(HeaderConstants.CONTENT_LENGTH, 'contentLength');","","    // Range","    if (!azureutil.objectIsNull(options.rangeStart)) {","      var range = 'bytes=' + options.rangeStart + '-';","","      if (!azureutil.objectIsNull(options.rangeEnd)) {","        range += options.rangeEnd;","      }","","      webResource.withHeader(HeaderConstants.STORAGE_RANGE, range);","    }   ","  }","};","","/**","* This method sets the x-ms-* headers and is used by setFileProperties and createFile. ","* All other methods will set the regular HTTP headers using setHeaders.","*/","FileResult.setProperties = function (webResource, options) {","  var setHeaderProperty = function (headerProperty, fileProperty) {","    var propertyValue = azureutil.tryGetValueChain(options, fileProperty.split('.'), null);","    if (propertyValue) {","      webResource.withHeader(headerProperty, propertyValue);","    }","  };","","  if (options) {","    // Content-Length","    setHeaderProperty(HeaderConstants.FILE_CONTENT_LENGTH, 'contentLength');","    ","    // Content-Type","    setHeaderProperty(HeaderConstants.FILE_CONTENT_TYPE, 'contentSettings.contentType');","","    // Content-Encoding","    setHeaderProperty(HeaderConstants.FILE_CONTENT_ENCODING, 'contentSettings.contentEncoding');","","    // Content-Language","    setHeaderProperty(HeaderConstants.FILE_CONTENT_LANGUAGE, 'contentSettings.contentLanguage');","","    // Content-Disposition","    setHeaderProperty(HeaderConstants.FILE_CONTENT_DISPOSITION, 'contentSettings.contentDisposition');","","    // Cache-Control","    setHeaderProperty(HeaderConstants.FILE_CACHE_CONTROL, 'contentSettings.cacheControl');","","    // Content-MD5","    setHeaderProperty(HeaderConstants.FILE_CONTENT_MD5, 'contentSettings.contentMD5');","","    if (options.metadata) {","      webResource.addOptionalMetadataHeaders(options.metadata);","    }","  }","};","","module.exports = FileResult;"],"l":{"18":1,"20":1,"21":1,"22":1,"23":1,"60":1,"61":0,"62":0,"63":0,"66":1,"67":0,"68":0,"69":0,"71":0,"73":0,"77":0,"80":1,"101":1,"102":0,"104":0,"105":0,"106":0,"108":0,"109":0,"110":0,"111":0,"117":0,"119":0,"120":0,"121":0,"123":0,"124":0,"125":0,"126":0,"127":0,"137":1,"138":0,"139":0,"140":0,"141":0,"145":0,"147":0,"150":0,"153":0,"154":0,"156":0,"157":0,"160":0,"169":1,"170":0,"171":0,"172":0,"173":0,"177":0,"179":0,"182":0,"185":0,"188":0,"191":0,"194":0,"197":0,"199":0,"200":0,"205":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/queue/queueservice.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/queue/queueservice.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1,"47":0,"48":1,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":1,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":1,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":1,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":1,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":1,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":1,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":1,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":1,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":1,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":1,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":1,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":1,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":1,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":1,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":1,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":1,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":1,"486":0,"487":0,"488":0,"489":0,"490":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0},"fnMap":{"1":{"name":"QueueService","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":106}}},"2":{"name":"(anonymous_2)","line":112,"loc":{"start":{"line":112,"column":41},"end":{"line":112,"column":80}}},"3":{"name":"(anonymous_3)","line":114,"loc":{"start":{"line":114,"column":55},"end":{"line":114,"column":71}}},"4":{"name":"(anonymous_4)","line":116,"loc":{"start":{"line":116,"column":43},"end":{"line":116,"column":56}}},"5":{"name":"(anonymous_5)","line":127,"loc":{"start":{"line":127,"column":32},"end":{"line":127,"column":64}}},"6":{"name":"(anonymous_6)","line":134,"loc":{"start":{"line":134,"column":24},"end":{"line":134,"column":48}}},"7":{"name":"(anonymous_7)","line":165,"loc":{"start":{"line":165,"column":46},"end":{"line":165,"column":85}}},"8":{"name":"(anonymous_8)","line":190,"loc":{"start":{"line":190,"column":46},"end":{"line":190,"column":104}}},"9":{"name":"(anonymous_9)","line":218,"loc":{"start":{"line":218,"column":45},"end":{"line":218,"column":98}}},"10":{"name":"(anonymous_10)","line":248,"loc":{"start":{"line":248,"column":55},"end":{"line":248,"column":116}}},"11":{"name":"(anonymous_11)","line":250,"loc":{"start":{"line":250,"column":55},"end":{"line":250,"column":71}}},"12":{"name":"(anonymous_12)","line":252,"loc":{"start":{"line":252,"column":57},"end":{"line":252,"column":70}}},"13":{"name":"(anonymous_13)","line":269,"loc":{"start":{"line":269,"column":32},"end":{"line":269,"column":64}}},"14":{"name":"(anonymous_14)","line":287,"loc":{"start":{"line":287,"column":23},"end":{"line":287,"column":47}}},"15":{"name":"(anonymous_15)","line":304,"loc":{"start":{"line":304,"column":24},"end":{"line":304,"column":48}}},"16":{"name":"(anonymous_16)","line":335,"loc":{"start":{"line":335,"column":40},"end":{"line":335,"column":86}}},"17":{"name":"(anonymous_17)","line":361,"loc":{"start":{"line":361,"column":37},"end":{"line":361,"column":83}}},"18":{"name":"(anonymous_18)","line":363,"loc":{"start":{"line":363,"column":55},"end":{"line":363,"column":71}}},"19":{"name":"(anonymous_19)","line":365,"loc":{"start":{"line":365,"column":39},"end":{"line":365,"column":52}}},"20":{"name":"(anonymous_20)","line":377,"loc":{"start":{"line":377,"column":32},"end":{"line":377,"column":64}}},"21":{"name":"(anonymous_21)","line":386,"loc":{"start":{"line":386,"column":24},"end":{"line":386,"column":48}}},"22":{"name":"(anonymous_22)","line":427,"loc":{"start":{"line":427,"column":48},"end":{"line":427,"column":94}}},"23":{"name":"(anonymous_23)","line":429,"loc":{"start":{"line":429,"column":55},"end":{"line":429,"column":71}}},"24":{"name":"(anonymous_24)","line":431,"loc":{"start":{"line":431,"column":50},"end":{"line":431,"column":63}}},"25":{"name":"(anonymous_25)","line":439,"loc":{"start":{"line":439,"column":45},"end":{"line":439,"column":79}}},"26":{"name":"(anonymous_26)","line":450,"loc":{"start":{"line":450,"column":39},"end":{"line":450,"column":92}}},"27":{"name":"(anonymous_27)","line":485,"loc":{"start":{"line":485,"column":37},"end":{"line":485,"column":83}}},"28":{"name":"(anonymous_28)","line":487,"loc":{"start":{"line":487,"column":55},"end":{"line":487,"column":71}}},"29":{"name":"(anonymous_29)","line":489,"loc":{"start":{"line":489,"column":39},"end":{"line":489,"column":52}}},"30":{"name":"(anonymous_30)","line":497,"loc":{"start":{"line":497,"column":32},"end":{"line":497,"column":64}}},"31":{"name":"(anonymous_31)","line":498,"loc":{"start":{"line":498,"column":24},"end":{"line":498,"column":48}}},"32":{"name":"(anonymous_32)","line":529,"loc":{"start":{"line":529,"column":45},"end":{"line":529,"column":91}}},"33":{"name":"(anonymous_33)","line":531,"loc":{"start":{"line":531,"column":55},"end":{"line":531,"column":71}}},"34":{"name":"(anonymous_34)","line":533,"loc":{"start":{"line":533,"column":47},"end":{"line":533,"column":60}}},"35":{"name":"existsCallback","line":541,"loc":{"start":{"line":541,"column":45},"end":{"line":541,"column":100}}},"36":{"name":"(anonymous_36)","line":548,"loc":{"start":{"line":548,"column":39},"end":{"line":548,"column":77}}},"37":{"name":"(anonymous_37)","line":586,"loc":{"start":{"line":586,"column":42},"end":{"line":586,"column":88}}},"38":{"name":"(anonymous_38)","line":588,"loc":{"start":{"line":588,"column":55},"end":{"line":588,"column":71}}},"39":{"name":"(anonymous_39)","line":590,"loc":{"start":{"line":590,"column":44},"end":{"line":590,"column":57}}},"40":{"name":"(anonymous_40)","line":603,"loc":{"start":{"line":603,"column":32},"end":{"line":603,"column":64}}},"41":{"name":"(anonymous_41)","line":611,"loc":{"start":{"line":611,"column":24},"end":{"line":611,"column":48}}},"42":{"name":"(anonymous_42)","line":643,"loc":{"start":{"line":643,"column":42},"end":{"line":643,"column":98}}},"43":{"name":"(anonymous_43)","line":645,"loc":{"start":{"line":645,"column":55},"end":{"line":645,"column":71}}},"44":{"name":"(anonymous_44)","line":647,"loc":{"start":{"line":647,"column":44},"end":{"line":647,"column":57}}},"45":{"name":"(anonymous_45)","line":658,"loc":{"start":{"line":658,"column":32},"end":{"line":658,"column":64}}},"46":{"name":"(anonymous_46)","line":665,"loc":{"start":{"line":665,"column":24},"end":{"line":665,"column":48}}},"47":{"name":"(anonymous_47)","line":711,"loc":{"start":{"line":711,"column":39},"end":{"line":711,"column":98}}},"48":{"name":"(anonymous_48)","line":713,"loc":{"start":{"line":713,"column":55},"end":{"line":713,"column":71}}},"49":{"name":"(anonymous_49)","line":715,"loc":{"start":{"line":715,"column":41},"end":{"line":715,"column":54}}},"50":{"name":"(anonymous_50)","line":731,"loc":{"start":{"line":731,"column":32},"end":{"line":731,"column":64}}},"51":{"name":"(anonymous_51)","line":741,"loc":{"start":{"line":741,"column":23},"end":{"line":741,"column":42}}},"52":{"name":"(anonymous_52)","line":747,"loc":{"start":{"line":747,"column":24},"end":{"line":747,"column":48}}},"53":{"name":"(anonymous_53)","line":796,"loc":{"start":{"line":796,"column":37},"end":{"line":796,"column":83}}},"54":{"name":"(anonymous_54)","line":798,"loc":{"start":{"line":798,"column":55},"end":{"line":798,"column":71}}},"55":{"name":"(anonymous_55)","line":800,"loc":{"start":{"line":800,"column":39},"end":{"line":800,"column":52}}},"56":{"name":"(anonymous_56)","line":850,"loc":{"start":{"line":850,"column":36},"end":{"line":850,"column":82}}},"57":{"name":"(anonymous_57)","line":852,"loc":{"start":{"line":852,"column":55},"end":{"line":852,"column":71}}},"58":{"name":"(anonymous_58)","line":854,"loc":{"start":{"line":854,"column":38},"end":{"line":854,"column":51}}},"59":{"name":"(anonymous_59)","line":863,"loc":{"start":{"line":863,"column":22},"end":{"line":863,"column":57}}},"60":{"name":"(anonymous_60)","line":897,"loc":{"start":{"line":897,"column":38},"end":{"line":897,"column":84}}},"61":{"name":"(anonymous_61)","line":899,"loc":{"start":{"line":899,"column":55},"end":{"line":899,"column":71}}},"62":{"name":"(anonymous_62)","line":901,"loc":{"start":{"line":901,"column":40},"end":{"line":901,"column":53}}},"63":{"name":"(anonymous_63)","line":935,"loc":{"start":{"line":935,"column":37},"end":{"line":935,"column":83}}},"64":{"name":"(anonymous_64)","line":937,"loc":{"start":{"line":937,"column":55},"end":{"line":937,"column":71}}},"65":{"name":"(anonymous_65)","line":939,"loc":{"start":{"line":939,"column":39},"end":{"line":939,"column":52}}},"66":{"name":"(anonymous_66)","line":948,"loc":{"start":{"line":948,"column":22},"end":{"line":948,"column":57}}},"67":{"name":"(anonymous_67)","line":981,"loc":{"start":{"line":981,"column":39},"end":{"line":981,"column":108}}},"68":{"name":"(anonymous_68)","line":983,"loc":{"start":{"line":983,"column":55},"end":{"line":983,"column":71}}},"69":{"name":"(anonymous_69)","line":985,"loc":{"start":{"line":985,"column":41},"end":{"line":985,"column":54}}},"70":{"name":"(anonymous_70)","line":1003,"loc":{"start":{"line":1003,"column":32},"end":{"line":1003,"column":64}}},"71":{"name":"(anonymous_71)","line":1004,"loc":{"start":{"line":1004,"column":24},"end":{"line":1004,"column":48}}},"72":{"name":"(anonymous_72)","line":1034,"loc":{"start":{"line":1034,"column":39},"end":{"line":1034,"column":85}}},"73":{"name":"(anonymous_73)","line":1036,"loc":{"start":{"line":1036,"column":55},"end":{"line":1036,"column":71}}},"74":{"name":"(anonymous_74)","line":1038,"loc":{"start":{"line":1038,"column":41},"end":{"line":1038,"column":54}}},"75":{"name":"(anonymous_75)","line":1047,"loc":{"start":{"line":1047,"column":32},"end":{"line":1047,"column":64}}},"76":{"name":"(anonymous_76)","line":1048,"loc":{"start":{"line":1048,"column":24},"end":{"line":1048,"column":48}}},"77":{"name":"(anonymous_77)","line":1084,"loc":{"start":{"line":1084,"column":39},"end":{"line":1084,"column":127}}},"78":{"name":"(anonymous_78)","line":1086,"loc":{"start":{"line":1086,"column":55},"end":{"line":1086,"column":71}}},"79":{"name":"(anonymous_79)","line":1088,"loc":{"start":{"line":1088,"column":41},"end":{"line":1088,"column":54}}},"80":{"name":"(anonymous_80)","line":1117,"loc":{"start":{"line":1117,"column":32},"end":{"line":1117,"column":64}}},"81":{"name":"(anonymous_81)","line":1124,"loc":{"start":{"line":1124,"column":24},"end":{"line":1124,"column":48}}},"82":{"name":"(anonymous_82)","line":1155,"loc":{"start":{"line":1155,"column":37},"end":{"line":1155,"column":83}}},"83":{"name":"(anonymous_83)","line":1157,"loc":{"start":{"line":1157,"column":55},"end":{"line":1157,"column":71}}},"84":{"name":"(anonymous_84)","line":1159,"loc":{"start":{"line":1159,"column":39},"end":{"line":1159,"column":52}}},"85":{"name":"(anonymous_85)","line":1171,"loc":{"start":{"line":1171,"column":32},"end":{"line":1171,"column":64}}},"86":{"name":"(anonymous_86)","line":1179,"loc":{"start":{"line":1179,"column":24},"end":{"line":1179,"column":48}}},"87":{"name":"(anonymous_87)","line":1234,"loc":{"start":{"line":1234,"column":37},"end":{"line":1234,"column":102}}},"88":{"name":"(anonymous_88)","line":1236,"loc":{"start":{"line":1236,"column":55},"end":{"line":1236,"column":71}}},"89":{"name":"(anonymous_89)","line":1238,"loc":{"start":{"line":1238,"column":39},"end":{"line":1238,"column":52}}},"90":{"name":"(anonymous_90)","line":1259,"loc":{"start":{"line":1259,"column":32},"end":{"line":1259,"column":64}}},"91":{"name":"(anonymous_91)","line":1269,"loc":{"start":{"line":1269,"column":24},"end":{"line":1269,"column":48}}},"92":{"name":"(anonymous_92)","line":1294,"loc":{"start":{"line":1294,"column":55},"end":{"line":1294,"column":92}}},"93":{"name":"(anonymous_93)","line":1300,"loc":{"start":{"line":1300,"column":57},"end":{"line":1300,"column":70}}},"94":{"name":"(anonymous_94)","line":1333,"loc":{"start":{"line":1333,"column":41},"end":{"line":1333,"column":100}}},"95":{"name":"(anonymous_95)","line":1335,"loc":{"start":{"line":1335,"column":55},"end":{"line":1335,"column":71}}},"96":{"name":"(anonymous_96)","line":1337,"loc":{"start":{"line":1337,"column":42},"end":{"line":1337,"column":54}}},"97":{"name":"(anonymous_97)","line":1351,"loc":{"start":{"line":1351,"column":32},"end":{"line":1351,"column":63}}},"98":{"name":"(anonymous_98)","line":1365,"loc":{"start":{"line":1365,"column":24},"end":{"line":1365,"column":48}}},"99":{"name":"(anonymous_99)","line":1378,"loc":{"start":{"line":1378,"column":44},"end":{"line":1378,"column":90}}},"100":{"name":"(anonymous_100)","line":1380,"loc":{"start":{"line":1380,"column":55},"end":{"line":1380,"column":71}}},"101":{"name":"(anonymous_101)","line":1382,"loc":{"start":{"line":1382,"column":46},"end":{"line":1382,"column":59}}},"102":{"name":"(anonymous_102)","line":1406,"loc":{"start":{"line":1406,"column":32},"end":{"line":1406,"column":64}}},"103":{"name":"(anonymous_103)","line":1419,"loc":{"start":{"line":1419,"column":25},"end":{"line":1419,"column":44}}},"104":{"name":"(anonymous_104)","line":1426,"loc":{"start":{"line":1426,"column":24},"end":{"line":1426,"column":48}}},"105":{"name":"(anonymous_105)","line":1457,"loc":{"start":{"line":1457,"column":32},"end":{"line":1457,"column":68}}},"106":{"name":"(anonymous_106)","line":1458,"loc":{"start":{"line":1458,"column":34},"end":{"line":1458,"column":47}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":31}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":51}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":33}},"6":{"start":{"line":24,"column":0},"end":{"line":24,"column":24}},"7":{"start":{"line":25,"column":0},"end":{"line":25,"column":36}},"8":{"start":{"line":27,"column":0},"end":{"line":27,"column":60}},"9":{"start":{"line":28,"column":0},"end":{"line":28,"column":42}},"10":{"start":{"line":29,"column":0},"end":{"line":29,"column":38}},"11":{"start":{"line":30,"column":0},"end":{"line":30,"column":58}},"12":{"start":{"line":31,"column":0},"end":{"line":31,"column":48}},"13":{"start":{"line":32,"column":0},"end":{"line":32,"column":56}},"14":{"start":{"line":35,"column":0},"end":{"line":35,"column":50}},"15":{"start":{"line":36,"column":0},"end":{"line":36,"column":38}},"16":{"start":{"line":37,"column":0},"end":{"line":37,"column":64}},"17":{"start":{"line":38,"column":0},"end":{"line":38,"column":59}},"18":{"start":{"line":39,"column":0},"end":{"line":39,"column":56}},"19":{"start":{"line":68,"column":0},"end":{"line":88,"column":1}},"20":{"start":{"line":69,"column":2},"end":{"line":69,"column":155}},"21":{"start":{"line":71,"column":2},"end":{"line":76,"column":38}},"22":{"start":{"line":78,"column":2},"end":{"line":80,"column":3}},"23":{"start":{"line":79,"column":4},"end":{"line":79,"column":58}},"24":{"start":{"line":87,"column":2},"end":{"line":87,"column":77}},"25":{"start":{"line":90,"column":0},"end":{"line":90,"column":50}},"26":{"start":{"line":112,"column":0},"end":{"line":143,"column":2}},"27":{"start":{"line":113,"column":2},"end":{"line":113,"column":18}},"28":{"start":{"line":114,"column":2},"end":{"line":114,"column":107}},"29":{"start":{"line":114,"column":73},"end":{"line":114,"column":89}},"30":{"start":{"line":114,"column":90},"end":{"line":114,"column":103}},"31":{"start":{"line":116,"column":2},"end":{"line":118,"column":5}},"32":{"start":{"line":117,"column":4},"end":{"line":117,"column":25}},"33":{"start":{"line":120,"column":2},"end":{"line":120,"column":46}},"34":{"start":{"line":121,"column":2},"end":{"line":123,"column":62}},"35":{"start":{"line":125,"column":2},"end":{"line":125,"column":73}},"36":{"start":{"line":127,"column":2},"end":{"line":140,"column":4}},"37":{"start":{"line":128,"column":4},"end":{"line":128,"column":45}},"38":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"39":{"start":{"line":130,"column":6},"end":{"line":130,"column":117}},"40":{"start":{"line":134,"column":4},"end":{"line":136,"column":6}},"41":{"start":{"line":135,"column":6},"end":{"line":135,"column":91}},"42":{"start":{"line":139,"column":4},"end":{"line":139,"column":40}},"43":{"start":{"line":142,"column":2},"end":{"line":142,"column":75}},"44":{"start":{"line":165,"column":0},"end":{"line":167,"column":2}},"45":{"start":{"line":166,"column":2},"end":{"line":166,"column":71}},"46":{"start":{"line":190,"column":0},"end":{"line":192,"column":2}},"47":{"start":{"line":191,"column":2},"end":{"line":191,"column":90}},"48":{"start":{"line":218,"column":0},"end":{"line":220,"column":2}},"49":{"start":{"line":219,"column":2},"end":{"line":219,"column":99}},"50":{"start":{"line":248,"column":0},"end":{"line":312,"column":2}},"51":{"start":{"line":249,"column":2},"end":{"line":249,"column":18}},"52":{"start":{"line":250,"column":2},"end":{"line":250,"column":107}},"53":{"start":{"line":250,"column":73},"end":{"line":250,"column":89}},"54":{"start":{"line":250,"column":90},"end":{"line":250,"column":103}},"55":{"start":{"line":252,"column":2},"end":{"line":254,"column":5}},"56":{"start":{"line":253,"column":4},"end":{"line":253,"column":25}},"57":{"start":{"line":256,"column":2},"end":{"line":256,"column":46}},"58":{"start":{"line":257,"column":2},"end":{"line":257,"column":38}},"59":{"start":{"line":258,"column":2},"end":{"line":261,"column":58}},"60":{"start":{"line":263,"column":2},"end":{"line":265,"column":3}},"61":{"start":{"line":264,"column":4},"end":{"line":264,"column":86}},"62":{"start":{"line":267,"column":2},"end":{"line":267,"column":83}},"63":{"start":{"line":269,"column":2},"end":{"line":309,"column":4}},"64":{"start":{"line":270,"column":4},"end":{"line":270,"column":43}},"65":{"start":{"line":272,"column":4},"end":{"line":302,"column":5}},"66":{"start":{"line":273,"column":6},"end":{"line":276,"column":8}},"67":{"start":{"line":277,"column":6},"end":{"line":277,"column":51}},"68":{"start":{"line":278,"column":6},"end":{"line":278,"column":22}},"69":{"start":{"line":280,"column":6},"end":{"line":301,"column":7}},"70":{"start":{"line":281,"column":8},"end":{"line":281,"column":78}},"71":{"start":{"line":283,"column":8},"end":{"line":285,"column":9}},"72":{"start":{"line":284,"column":10},"end":{"line":284,"column":30}},"73":{"start":{"line":287,"column":8},"end":{"line":290,"column":11}},"74":{"start":{"line":288,"column":10},"end":{"line":288,"column":60}},"75":{"start":{"line":289,"column":10},"end":{"line":289,"column":68}},"76":{"start":{"line":292,"column":8},"end":{"line":300,"column":9}},"77":{"start":{"line":293,"column":10},"end":{"line":296,"column":12}},"78":{"start":{"line":298,"column":10},"end":{"line":298,"column":132}},"79":{"start":{"line":299,"column":10},"end":{"line":299,"column":107}},"80":{"start":{"line":304,"column":4},"end":{"line":306,"column":6}},"81":{"start":{"line":305,"column":6},"end":{"line":305,"column":89}},"82":{"start":{"line":308,"column":4},"end":{"line":308,"column":40}},"83":{"start":{"line":311,"column":2},"end":{"line":311,"column":75}},"84":{"start":{"line":335,"column":0},"end":{"line":337,"column":2}},"85":{"start":{"line":336,"column":2},"end":{"line":336,"column":66}},"86":{"start":{"line":361,"column":0},"end":{"line":394,"column":2}},"87":{"start":{"line":362,"column":2},"end":{"line":362,"column":18}},"88":{"start":{"line":363,"column":2},"end":{"line":363,"column":107}},"89":{"start":{"line":363,"column":73},"end":{"line":363,"column":89}},"90":{"start":{"line":363,"column":90},"end":{"line":363,"column":103}},"91":{"start":{"line":365,"column":2},"end":{"line":369,"column":5}},"92":{"start":{"line":366,"column":4},"end":{"line":366,"column":29}},"93":{"start":{"line":367,"column":4},"end":{"line":367,"column":30}},"94":{"start":{"line":368,"column":4},"end":{"line":368,"column":25}},"95":{"start":{"line":371,"column":2},"end":{"line":371,"column":46}},"96":{"start":{"line":372,"column":2},"end":{"line":372,"column":43}},"97":{"start":{"line":373,"column":2},"end":{"line":375,"column":3}},"98":{"start":{"line":374,"column":4},"end":{"line":374,"column":61}},"99":{"start":{"line":377,"column":2},"end":{"line":391,"column":4}},"100":{"start":{"line":378,"column":4},"end":{"line":378,"column":38}},"101":{"start":{"line":379,"column":4},"end":{"line":384,"column":5}},"102":{"start":{"line":380,"column":6},"end":{"line":380,"column":58}},"103":{"start":{"line":381,"column":6},"end":{"line":383,"column":7}},"104":{"start":{"line":382,"column":8},"end":{"line":382,"column":63}},"105":{"start":{"line":386,"column":4},"end":{"line":388,"column":6}},"106":{"start":{"line":387,"column":6},"end":{"line":387,"column":84}},"107":{"start":{"line":390,"column":4},"end":{"line":390,"column":40}},"108":{"start":{"line":393,"column":2},"end":{"line":393,"column":75}},"109":{"start":{"line":427,"column":0},"end":{"line":464,"column":2}},"110":{"start":{"line":428,"column":2},"end":{"line":428,"column":18}},"111":{"start":{"line":429,"column":2},"end":{"line":429,"column":107}},"112":{"start":{"line":429,"column":73},"end":{"line":429,"column":89}},"113":{"start":{"line":429,"column":90},"end":{"line":429,"column":103}},"114":{"start":{"line":431,"column":2},"end":{"line":435,"column":5}},"115":{"start":{"line":432,"column":4},"end":{"line":432,"column":29}},"116":{"start":{"line":433,"column":4},"end":{"line":433,"column":30}},"117":{"start":{"line":434,"column":4},"end":{"line":434,"column":25}},"118":{"start":{"line":437,"column":2},"end":{"line":437,"column":46}},"119":{"start":{"line":438,"column":2},"end":{"line":438,"column":18}},"120":{"start":{"line":439,"column":2},"end":{"line":463,"column":5}},"121":{"start":{"line":440,"column":4},"end":{"line":440,"column":31}},"122":{"start":{"line":441,"column":4},"end":{"line":441,"column":27}},"123":{"start":{"line":442,"column":4},"end":{"line":442,"column":25}},"124":{"start":{"line":444,"column":4},"end":{"line":462,"column":5}},"125":{"start":{"line":445,"column":6},"end":{"line":445,"column":40}},"126":{"start":{"line":446,"column":11},"end":{"line":462,"column":5}},"127":{"start":{"line":447,"column":6},"end":{"line":447,"column":35}},"128":{"start":{"line":448,"column":6},"end":{"line":448,"column":40}},"129":{"start":{"line":450,"column":6},"end":{"line":461,"column":9}},"130":{"start":{"line":451,"column":8},"end":{"line":458,"column":9}},"131":{"start":{"line":452,"column":10},"end":{"line":452,"column":39}},"132":{"start":{"line":454,"column":13},"end":{"line":458,"column":9}},"133":{"start":{"line":455,"column":10},"end":{"line":455,"column":29}},"134":{"start":{"line":456,"column":10},"end":{"line":456,"column":40}},"135":{"start":{"line":457,"column":10},"end":{"line":457,"column":45}},"136":{"start":{"line":460,"column":8},"end":{"line":460,"column":61}},"137":{"start":{"line":485,"column":0},"end":{"line":506,"column":2}},"138":{"start":{"line":486,"column":2},"end":{"line":486,"column":18}},"139":{"start":{"line":487,"column":2},"end":{"line":487,"column":107}},"140":{"start":{"line":487,"column":73},"end":{"line":487,"column":89}},"141":{"start":{"line":487,"column":90},"end":{"line":487,"column":103}},"142":{"start":{"line":489,"column":2},"end":{"line":493,"column":5}},"143":{"start":{"line":490,"column":4},"end":{"line":490,"column":29}},"144":{"start":{"line":491,"column":4},"end":{"line":491,"column":30}},"145":{"start":{"line":492,"column":4},"end":{"line":492,"column":25}},"146":{"start":{"line":495,"column":2},"end":{"line":495,"column":46}},"147":{"start":{"line":496,"column":2},"end":{"line":496,"column":43}},"148":{"start":{"line":497,"column":2},"end":{"line":503,"column":4}},"149":{"start":{"line":498,"column":4},"end":{"line":500,"column":6}},"150":{"start":{"line":499,"column":6},"end":{"line":499,"column":58}},"151":{"start":{"line":502,"column":4},"end":{"line":502,"column":40}},"152":{"start":{"line":505,"column":2},"end":{"line":505,"column":75}},"153":{"start":{"line":529,"column":0},"end":{"line":562,"column":2}},"154":{"start":{"line":530,"column":2},"end":{"line":530,"column":18}},"155":{"start":{"line":531,"column":2},"end":{"line":531,"column":107}},"156":{"start":{"line":531,"column":73},"end":{"line":531,"column":89}},"157":{"start":{"line":531,"column":90},"end":{"line":531,"column":103}},"158":{"start":{"line":533,"column":2},"end":{"line":537,"column":5}},"159":{"start":{"line":534,"column":4},"end":{"line":534,"column":29}},"160":{"start":{"line":535,"column":4},"end":{"line":535,"column":30}},"161":{"start":{"line":536,"column":4},"end":{"line":536,"column":25}},"162":{"start":{"line":539,"column":2},"end":{"line":539,"column":46}},"163":{"start":{"line":540,"column":2},"end":{"line":540,"column":18}},"164":{"start":{"line":541,"column":2},"end":{"line":561,"column":5}},"165":{"start":{"line":542,"column":4},"end":{"line":560,"column":5}},"166":{"start":{"line":543,"column":6},"end":{"line":543,"column":53}},"167":{"start":{"line":544,"column":11},"end":{"line":560,"column":5}},"168":{"start":{"line":545,"column":6},"end":{"line":545,"column":35}},"169":{"start":{"line":546,"column":6},"end":{"line":546,"column":39}},"170":{"start":{"line":548,"column":6},"end":{"line":559,"column":9}},"171":{"start":{"line":549,"column":8},"end":{"line":549,"column":20}},"172":{"start":{"line":550,"column":8},"end":{"line":556,"column":9}},"173":{"start":{"line":551,"column":10},"end":{"line":551,"column":25}},"174":{"start":{"line":552,"column":15},"end":{"line":556,"column":9}},"175":{"start":{"line":553,"column":10},"end":{"line":553,"column":26}},"176":{"start":{"line":554,"column":10},"end":{"line":554,"column":29}},"177":{"start":{"line":555,"column":10},"end":{"line":555,"column":45}},"178":{"start":{"line":558,"column":8},"end":{"line":558,"column":55}},"179":{"start":{"line":586,"column":0},"end":{"line":619,"column":2}},"180":{"start":{"line":587,"column":2},"end":{"line":587,"column":18}},"181":{"start":{"line":588,"column":2},"end":{"line":588,"column":107}},"182":{"start":{"line":588,"column":73},"end":{"line":588,"column":89}},"183":{"start":{"line":588,"column":90},"end":{"line":588,"column":103}},"184":{"start":{"line":590,"column":2},"end":{"line":594,"column":5}},"185":{"start":{"line":591,"column":4},"end":{"line":591,"column":29}},"186":{"start":{"line":592,"column":4},"end":{"line":592,"column":30}},"187":{"start":{"line":593,"column":4},"end":{"line":593,"column":25}},"188":{"start":{"line":596,"column":2},"end":{"line":596,"column":46}},"189":{"start":{"line":597,"column":2},"end":{"line":598,"column":60}},"190":{"start":{"line":600,"column":2},"end":{"line":600,"column":83}},"191":{"start":{"line":602,"column":2},"end":{"line":602,"column":18}},"192":{"start":{"line":603,"column":2},"end":{"line":616,"column":4}},"193":{"start":{"line":604,"column":4},"end":{"line":604,"column":38}},"194":{"start":{"line":605,"column":4},"end":{"line":609,"column":5}},"195":{"start":{"line":606,"column":6},"end":{"line":606,"column":58}},"196":{"start":{"line":607,"column":6},"end":{"line":607,"column":103}},"197":{"start":{"line":608,"column":6},"end":{"line":608,"column":91}},"198":{"start":{"line":611,"column":4},"end":{"line":613,"column":6}},"199":{"start":{"line":612,"column":6},"end":{"line":612,"column":84}},"200":{"start":{"line":615,"column":4},"end":{"line":615,"column":40}},"201":{"start":{"line":618,"column":2},"end":{"line":618,"column":75}},"202":{"start":{"line":643,"column":0},"end":{"line":673,"column":2}},"203":{"start":{"line":644,"column":2},"end":{"line":644,"column":18}},"204":{"start":{"line":645,"column":2},"end":{"line":645,"column":107}},"205":{"start":{"line":645,"column":73},"end":{"line":645,"column":89}},"206":{"start":{"line":645,"column":90},"end":{"line":645,"column":103}},"207":{"start":{"line":647,"column":2},"end":{"line":651,"column":5}},"208":{"start":{"line":648,"column":4},"end":{"line":648,"column":29}},"209":{"start":{"line":649,"column":4},"end":{"line":649,"column":30}},"210":{"start":{"line":650,"column":4},"end":{"line":650,"column":25}},"211":{"start":{"line":653,"column":2},"end":{"line":653,"column":46}},"212":{"start":{"line":654,"column":2},"end":{"line":656,"column":42}},"213":{"start":{"line":658,"column":2},"end":{"line":670,"column":4}},"214":{"start":{"line":659,"column":4},"end":{"line":659,"column":38}},"215":{"start":{"line":660,"column":4},"end":{"line":663,"column":5}},"216":{"start":{"line":661,"column":6},"end":{"line":661,"column":68}},"217":{"start":{"line":662,"column":6},"end":{"line":662,"column":91}},"218":{"start":{"line":665,"column":4},"end":{"line":667,"column":6}},"219":{"start":{"line":666,"column":6},"end":{"line":666,"column":84}},"220":{"start":{"line":669,"column":4},"end":{"line":669,"column":40}},"221":{"start":{"line":672,"column":2},"end":{"line":672,"column":75}},"222":{"start":{"line":711,"column":0},"end":{"line":755,"column":2}},"223":{"start":{"line":712,"column":2},"end":{"line":712,"column":18}},"224":{"start":{"line":713,"column":2},"end":{"line":713,"column":107}},"225":{"start":{"line":713,"column":73},"end":{"line":713,"column":89}},"226":{"start":{"line":713,"column":90},"end":{"line":713,"column":103}},"227":{"start":{"line":715,"column":2},"end":{"line":719,"column":5}},"228":{"start":{"line":716,"column":4},"end":{"line":716,"column":29}},"229":{"start":{"line":717,"column":4},"end":{"line":717,"column":30}},"230":{"start":{"line":718,"column":4},"end":{"line":718,"column":25}},"231":{"start":{"line":721,"column":2},"end":{"line":721,"column":92}},"232":{"start":{"line":723,"column":2},"end":{"line":723,"column":46}},"233":{"start":{"line":724,"column":2},"end":{"line":729,"column":36}},"234":{"start":{"line":731,"column":2},"end":{"line":752,"column":4}},"235":{"start":{"line":732,"column":4},"end":{"line":732,"column":44}},"236":{"start":{"line":734,"column":4},"end":{"line":745,"column":5}},"237":{"start":{"line":735,"column":6},"end":{"line":735,"column":81}},"238":{"start":{"line":737,"column":6},"end":{"line":739,"column":7}},"239":{"start":{"line":738,"column":8},"end":{"line":738,"column":32}},"240":{"start":{"line":741,"column":6},"end":{"line":744,"column":9}},"241":{"start":{"line":742,"column":8},"end":{"line":742,"column":88}},"242":{"start":{"line":743,"column":8},"end":{"line":743,"column":68}},"243":{"start":{"line":747,"column":4},"end":{"line":749,"column":6}},"244":{"start":{"line":748,"column":6},"end":{"line":748,"column":97}},"245":{"start":{"line":751,"column":4},"end":{"line":751,"column":40}},"246":{"start":{"line":754,"column":2},"end":{"line":754,"column":87}},"247":{"start":{"line":796,"column":0},"end":{"line":810,"column":2}},"248":{"start":{"line":797,"column":2},"end":{"line":797,"column":18}},"249":{"start":{"line":798,"column":2},"end":{"line":798,"column":107}},"250":{"start":{"line":798,"column":73},"end":{"line":798,"column":89}},"251":{"start":{"line":798,"column":90},"end":{"line":798,"column":103}},"252":{"start":{"line":800,"column":2},"end":{"line":804,"column":5}},"253":{"start":{"line":801,"column":4},"end":{"line":801,"column":29}},"254":{"start":{"line":802,"column":4},"end":{"line":802,"column":30}},"255":{"start":{"line":803,"column":4},"end":{"line":803,"column":25}},"256":{"start":{"line":806,"column":2},"end":{"line":806,"column":46}},"257":{"start":{"line":807,"column":2},"end":{"line":807,"column":26}},"258":{"start":{"line":809,"column":2},"end":{"line":809,"column":52}},"259":{"start":{"line":850,"column":0},"end":{"line":873,"column":2}},"260":{"start":{"line":851,"column":2},"end":{"line":851,"column":18}},"261":{"start":{"line":852,"column":2},"end":{"line":852,"column":107}},"262":{"start":{"line":852,"column":73},"end":{"line":852,"column":89}},"263":{"start":{"line":852,"column":90},"end":{"line":852,"column":103}},"264":{"start":{"line":854,"column":2},"end":{"line":858,"column":5}},"265":{"start":{"line":855,"column":4},"end":{"line":855,"column":29}},"266":{"start":{"line":856,"column":4},"end":{"line":856,"column":30}},"267":{"start":{"line":857,"column":4},"end":{"line":857,"column":25}},"268":{"start":{"line":860,"column":2},"end":{"line":860,"column":46}},"269":{"start":{"line":861,"column":2},"end":{"line":861,"column":28}},"270":{"start":{"line":863,"column":2},"end":{"line":870,"column":4}},"271":{"start":{"line":864,"column":4},"end":{"line":864,"column":16}},"272":{"start":{"line":865,"column":4},"end":{"line":867,"column":5}},"273":{"start":{"line":866,"column":6},"end":{"line":866,"column":28}},"274":{"start":{"line":869,"column":4},"end":{"line":869,"column":39}},"275":{"start":{"line":872,"column":2},"end":{"line":872,"column":50}},"276":{"start":{"line":897,"column":0},"end":{"line":912,"column":2}},"277":{"start":{"line":898,"column":2},"end":{"line":898,"column":18}},"278":{"start":{"line":899,"column":2},"end":{"line":899,"column":107}},"279":{"start":{"line":899,"column":73},"end":{"line":899,"column":89}},"280":{"start":{"line":899,"column":90},"end":{"line":899,"column":103}},"281":{"start":{"line":901,"column":2},"end":{"line":905,"column":5}},"282":{"start":{"line":902,"column":4},"end":{"line":902,"column":29}},"283":{"start":{"line":903,"column":4},"end":{"line":903,"column":30}},"284":{"start":{"line":904,"column":4},"end":{"line":904,"column":25}},"285":{"start":{"line":907,"column":2},"end":{"line":907,"column":46}},"286":{"start":{"line":908,"column":2},"end":{"line":908,"column":26}},"287":{"start":{"line":909,"column":2},"end":{"line":909,"column":35}},"288":{"start":{"line":911,"column":2},"end":{"line":911,"column":52}},"289":{"start":{"line":935,"column":0},"end":{"line":958,"column":2}},"290":{"start":{"line":936,"column":2},"end":{"line":936,"column":18}},"291":{"start":{"line":937,"column":2},"end":{"line":937,"column":107}},"292":{"start":{"line":937,"column":73},"end":{"line":937,"column":89}},"293":{"start":{"line":937,"column":90},"end":{"line":937,"column":103}},"294":{"start":{"line":939,"column":2},"end":{"line":943,"column":5}},"295":{"start":{"line":940,"column":4},"end":{"line":940,"column":29}},"296":{"start":{"line":941,"column":4},"end":{"line":941,"column":30}},"297":{"start":{"line":942,"column":4},"end":{"line":942,"column":25}},"298":{"start":{"line":945,"column":2},"end":{"line":945,"column":46}},"299":{"start":{"line":946,"column":2},"end":{"line":946,"column":28}},"300":{"start":{"line":948,"column":2},"end":{"line":955,"column":4}},"301":{"start":{"line":949,"column":4},"end":{"line":949,"column":16}},"302":{"start":{"line":950,"column":4},"end":{"line":952,"column":5}},"303":{"start":{"line":951,"column":6},"end":{"line":951,"column":28}},"304":{"start":{"line":954,"column":4},"end":{"line":954,"column":39}},"305":{"start":{"line":957,"column":2},"end":{"line":957,"column":51}},"306":{"start":{"line":981,"column":0},"end":{"line":1012,"column":2}},"307":{"start":{"line":982,"column":2},"end":{"line":982,"column":18}},"308":{"start":{"line":983,"column":2},"end":{"line":983,"column":107}},"309":{"start":{"line":983,"column":73},"end":{"line":983,"column":89}},"310":{"start":{"line":983,"column":90},"end":{"line":983,"column":103}},"311":{"start":{"line":985,"column":2},"end":{"line":989,"column":5}},"312":{"start":{"line":986,"column":4},"end":{"line":986,"column":29}},"313":{"start":{"line":987,"column":4},"end":{"line":987,"column":30}},"314":{"start":{"line":988,"column":4},"end":{"line":988,"column":25}},"315":{"start":{"line":991,"column":2},"end":{"line":993,"column":3}},"316":{"start":{"line":992,"column":4},"end":{"line":992,"column":44}},"317":{"start":{"line":995,"column":2},"end":{"line":997,"column":3}},"318":{"start":{"line":996,"column":4},"end":{"line":996,"column":43}},"319":{"start":{"line":999,"column":2},"end":{"line":999,"column":46}},"320":{"start":{"line":1000,"column":2},"end":{"line":1001,"column":79}},"321":{"start":{"line":1003,"column":2},"end":{"line":1009,"column":4}},"322":{"start":{"line":1004,"column":4},"end":{"line":1006,"column":6}},"323":{"start":{"line":1005,"column":6},"end":{"line":1005,"column":58}},"324":{"start":{"line":1008,"column":4},"end":{"line":1008,"column":40}},"325":{"start":{"line":1011,"column":2},"end":{"line":1011,"column":75}},"326":{"start":{"line":1034,"column":0},"end":{"line":1056,"column":2}},"327":{"start":{"line":1035,"column":2},"end":{"line":1035,"column":18}},"328":{"start":{"line":1036,"column":2},"end":{"line":1036,"column":107}},"329":{"start":{"line":1036,"column":73},"end":{"line":1036,"column":89}},"330":{"start":{"line":1036,"column":90},"end":{"line":1036,"column":103}},"331":{"start":{"line":1038,"column":2},"end":{"line":1042,"column":5}},"332":{"start":{"line":1039,"column":4},"end":{"line":1039,"column":29}},"333":{"start":{"line":1040,"column":4},"end":{"line":1040,"column":30}},"334":{"start":{"line":1041,"column":4},"end":{"line":1041,"column":25}},"335":{"start":{"line":1044,"column":2},"end":{"line":1044,"column":46}},"336":{"start":{"line":1045,"column":2},"end":{"line":1045,"column":57}},"337":{"start":{"line":1047,"column":2},"end":{"line":1053,"column":4}},"338":{"start":{"line":1048,"column":4},"end":{"line":1050,"column":6}},"339":{"start":{"line":1049,"column":6},"end":{"line":1049,"column":58}},"340":{"start":{"line":1052,"column":4},"end":{"line":1052,"column":40}},"341":{"start":{"line":1055,"column":2},"end":{"line":1055,"column":75}},"342":{"start":{"line":1084,"column":0},"end":{"line":1132,"column":2}},"343":{"start":{"line":1085,"column":2},"end":{"line":1085,"column":18}},"344":{"start":{"line":1086,"column":2},"end":{"line":1086,"column":107}},"345":{"start":{"line":1086,"column":73},"end":{"line":1086,"column":89}},"346":{"start":{"line":1086,"column":90},"end":{"line":1086,"column":103}},"347":{"start":{"line":1088,"column":2},"end":{"line":1092,"column":5}},"348":{"start":{"line":1089,"column":4},"end":{"line":1089,"column":29}},"349":{"start":{"line":1090,"column":4},"end":{"line":1090,"column":30}},"350":{"start":{"line":1091,"column":4},"end":{"line":1091,"column":25}},"351":{"start":{"line":1094,"column":2},"end":{"line":1096,"column":3}},"352":{"start":{"line":1095,"column":4},"end":{"line":1095,"column":44}},"353":{"start":{"line":1098,"column":2},"end":{"line":1100,"column":3}},"354":{"start":{"line":1099,"column":4},"end":{"line":1099,"column":43}},"355":{"start":{"line":1102,"column":2},"end":{"line":1102,"column":46}},"356":{"start":{"line":1103,"column":2},"end":{"line":1103,"column":21}},"357":{"start":{"line":1104,"column":2},"end":{"line":1106,"column":3}},"358":{"start":{"line":1105,"column":4},"end":{"line":1105,"column":85}},"359":{"start":{"line":1108,"column":2},"end":{"line":1108,"column":71}},"360":{"start":{"line":1110,"column":2},"end":{"line":1115,"column":23}},"361":{"start":{"line":1117,"column":2},"end":{"line":1129,"column":4}},"362":{"start":{"line":1118,"column":4},"end":{"line":1118,"column":45}},"363":{"start":{"line":1119,"column":4},"end":{"line":1122,"column":5}},"364":{"start":{"line":1120,"column":6},"end":{"line":1120,"column":83}},"365":{"start":{"line":1121,"column":6},"end":{"line":1121,"column":98}},"366":{"start":{"line":1124,"column":4},"end":{"line":1126,"column":6}},"367":{"start":{"line":1125,"column":6},"end":{"line":1125,"column":91}},"368":{"start":{"line":1128,"column":4},"end":{"line":1128,"column":40}},"369":{"start":{"line":1131,"column":2},"end":{"line":1131,"column":87}},"370":{"start":{"line":1155,"column":0},"end":{"line":1187,"column":2}},"371":{"start":{"line":1156,"column":2},"end":{"line":1156,"column":18}},"372":{"start":{"line":1157,"column":2},"end":{"line":1157,"column":107}},"373":{"start":{"line":1157,"column":73},"end":{"line":1157,"column":89}},"374":{"start":{"line":1157,"column":90},"end":{"line":1157,"column":103}},"375":{"start":{"line":1159,"column":2},"end":{"line":1163,"column":5}},"376":{"start":{"line":1160,"column":4},"end":{"line":1160,"column":29}},"377":{"start":{"line":1161,"column":4},"end":{"line":1161,"column":30}},"378":{"start":{"line":1162,"column":4},"end":{"line":1162,"column":25}},"379":{"start":{"line":1165,"column":2},"end":{"line":1165,"column":46}},"380":{"start":{"line":1166,"column":2},"end":{"line":1167,"column":55}},"381":{"start":{"line":1169,"column":2},"end":{"line":1169,"column":83}},"382":{"start":{"line":1171,"column":2},"end":{"line":1184,"column":4}},"383":{"start":{"line":1172,"column":4},"end":{"line":1172,"column":38}},"384":{"start":{"line":1173,"column":4},"end":{"line":1177,"column":5}},"385":{"start":{"line":1174,"column":6},"end":{"line":1174,"column":58}},"386":{"start":{"line":1175,"column":6},"end":{"line":1175,"column":91}},"387":{"start":{"line":1176,"column":6},"end":{"line":1176,"column":99}},"388":{"start":{"line":1179,"column":4},"end":{"line":1181,"column":6}},"389":{"start":{"line":1180,"column":6},"end":{"line":1180,"column":84}},"390":{"start":{"line":1183,"column":4},"end":{"line":1183,"column":40}},"391":{"start":{"line":1186,"column":2},"end":{"line":1186,"column":75}},"392":{"start":{"line":1234,"column":0},"end":{"line":1277,"column":2}},"393":{"start":{"line":1235,"column":2},"end":{"line":1235,"column":18}},"394":{"start":{"line":1236,"column":2},"end":{"line":1236,"column":107}},"395":{"start":{"line":1236,"column":73},"end":{"line":1236,"column":89}},"396":{"start":{"line":1236,"column":90},"end":{"line":1236,"column":103}},"397":{"start":{"line":1238,"column":2},"end":{"line":1242,"column":5}},"398":{"start":{"line":1239,"column":4},"end":{"line":1239,"column":29}},"399":{"start":{"line":1240,"column":4},"end":{"line":1240,"column":30}},"400":{"start":{"line":1241,"column":4},"end":{"line":1241,"column":25}},"401":{"start":{"line":1244,"column":2},"end":{"line":1244,"column":46}},"402":{"start":{"line":1246,"column":2},"end":{"line":1246,"column":22}},"403":{"start":{"line":1247,"column":2},"end":{"line":1252,"column":3}},"404":{"start":{"line":1248,"column":4},"end":{"line":1250,"column":5}},"405":{"start":{"line":1249,"column":6},"end":{"line":1249,"column":57}},"406":{"start":{"line":1251,"column":4},"end":{"line":1251,"column":54}},"407":{"start":{"line":1254,"column":2},"end":{"line":1257,"column":24}},"408":{"start":{"line":1259,"column":2},"end":{"line":1274,"column":4}},"409":{"start":{"line":1260,"column":4},"end":{"line":1260,"column":42}},"410":{"start":{"line":1261,"column":4},"end":{"line":1267,"column":5}},"411":{"start":{"line":1262,"column":6},"end":{"line":1262,"column":58}},"412":{"start":{"line":1263,"column":6},"end":{"line":1263,"column":91}},"413":{"start":{"line":1264,"column":6},"end":{"line":1266,"column":7}},"414":{"start":{"line":1265,"column":8},"end":{"line":1265,"column":73}},"415":{"start":{"line":1269,"column":4},"end":{"line":1271,"column":6}},"416":{"start":{"line":1270,"column":6},"end":{"line":1270,"column":84}},"417":{"start":{"line":1273,"column":4},"end":{"line":1273,"column":40}},"418":{"start":{"line":1276,"column":2},"end":{"line":1276,"column":87}},"419":{"start":{"line":1294,"column":0},"end":{"line":1307,"column":2}},"420":{"start":{"line":1296,"column":2},"end":{"line":1298,"column":3}},"421":{"start":{"line":1297,"column":4},"end":{"line":1297,"column":62}},"422":{"start":{"line":1300,"column":2},"end":{"line":1304,"column":5}},"423":{"start":{"line":1301,"column":4},"end":{"line":1301,"column":29}},"424":{"start":{"line":1302,"column":4},"end":{"line":1302,"column":30}},"425":{"start":{"line":1303,"column":4},"end":{"line":1303,"column":55}},"426":{"start":{"line":1306,"column":2},"end":{"line":1306,"column":121}},"427":{"start":{"line":1333,"column":0},"end":{"line":1373,"column":2}},"428":{"start":{"line":1334,"column":2},"end":{"line":1334,"column":18}},"429":{"start":{"line":1335,"column":2},"end":{"line":1335,"column":107}},"430":{"start":{"line":1335,"column":73},"end":{"line":1335,"column":89}},"431":{"start":{"line":1335,"column":90},"end":{"line":1335,"column":103}},"432":{"start":{"line":1337,"column":2},"end":{"line":1341,"column":5}},"433":{"start":{"line":1338,"column":4},"end":{"line":1338,"column":29}},"434":{"start":{"line":1339,"column":4},"end":{"line":1339,"column":30}},"435":{"start":{"line":1340,"column":4},"end":{"line":1340,"column":25}},"436":{"start":{"line":1343,"column":2},"end":{"line":1343,"column":46}},"437":{"start":{"line":1344,"column":2},"end":{"line":1345,"column":60}},"438":{"start":{"line":1347,"column":2},"end":{"line":1349,"column":3}},"439":{"start":{"line":1348,"column":4},"end":{"line":1348,"column":75}},"440":{"start":{"line":1351,"column":2},"end":{"line":1370,"column":4}},"441":{"start":{"line":1352,"column":4},"end":{"line":1352,"column":56}},"442":{"start":{"line":1353,"column":4},"end":{"line":1353,"column":46}},"443":{"start":{"line":1355,"column":4},"end":{"line":1363,"column":5}},"444":{"start":{"line":1356,"column":6},"end":{"line":1356,"column":47}},"445":{"start":{"line":1357,"column":6},"end":{"line":1357,"column":91}},"446":{"start":{"line":1359,"column":11},"end":{"line":1363,"column":5}},"447":{"start":{"line":1360,"column":6},"end":{"line":1360,"column":34}},"448":{"start":{"line":1361,"column":6},"end":{"line":1361,"column":48}},"449":{"start":{"line":1362,"column":6},"end":{"line":1362,"column":50}},"450":{"start":{"line":1365,"column":4},"end":{"line":1367,"column":6}},"451":{"start":{"line":1366,"column":6},"end":{"line":1366,"column":84}},"452":{"start":{"line":1369,"column":4},"end":{"line":1369,"column":40}},"453":{"start":{"line":1372,"column":2},"end":{"line":1372,"column":75}},"454":{"start":{"line":1378,"column":0},"end":{"line":1434,"column":2}},"455":{"start":{"line":1379,"column":2},"end":{"line":1379,"column":18}},"456":{"start":{"line":1380,"column":2},"end":{"line":1380,"column":107}},"457":{"start":{"line":1380,"column":73},"end":{"line":1380,"column":89}},"458":{"start":{"line":1380,"column":90},"end":{"line":1380,"column":103}},"459":{"start":{"line":1382,"column":2},"end":{"line":1386,"column":5}},"460":{"start":{"line":1383,"column":4},"end":{"line":1383,"column":29}},"461":{"start":{"line":1384,"column":4},"end":{"line":1384,"column":30}},"462":{"start":{"line":1385,"column":4},"end":{"line":1385,"column":25}},"463":{"start":{"line":1388,"column":2},"end":{"line":1388,"column":46}},"464":{"start":{"line":1390,"column":2},"end":{"line":1392,"column":3}},"465":{"start":{"line":1391,"column":4},"end":{"line":1391,"column":30}},"466":{"start":{"line":1394,"column":2},"end":{"line":1397,"column":71}},"467":{"start":{"line":1399,"column":2},"end":{"line":1402,"column":3}},"468":{"start":{"line":1401,"column":4},"end":{"line":1401,"column":75}},"469":{"start":{"line":1405,"column":2},"end":{"line":1405,"column":43}},"470":{"start":{"line":1406,"column":2},"end":{"line":1431,"column":4}},"471":{"start":{"line":1407,"column":4},"end":{"line":1407,"column":46}},"472":{"start":{"line":1409,"column":4},"end":{"line":1424,"column":5}},"473":{"start":{"line":1410,"column":6},"end":{"line":1410,"column":46}},"474":{"start":{"line":1412,"column":6},"end":{"line":1423,"column":7}},"475":{"start":{"line":1413,"column":8},"end":{"line":1413,"column":83}},"476":{"start":{"line":1415,"column":8},"end":{"line":1417,"column":9}},"477":{"start":{"line":1416,"column":10},"end":{"line":1416,"column":34}},"478":{"start":{"line":1419,"column":8},"end":{"line":1422,"column":11}},"479":{"start":{"line":1420,"column":10},"end":{"line":1420,"column":85}},"480":{"start":{"line":1421,"column":10},"end":{"line":1421,"column":70}},"481":{"start":{"line":1426,"column":4},"end":{"line":1428,"column":6}},"482":{"start":{"line":1427,"column":6},"end":{"line":1427,"column":92}},"483":{"start":{"line":1430,"column":4},"end":{"line":1430,"column":40}},"484":{"start":{"line":1433,"column":2},"end":{"line":1433,"column":75}},"485":{"start":{"line":1457,"column":0},"end":{"line":1464,"column":2}},"486":{"start":{"line":1458,"column":2},"end":{"line":1461,"column":5}},"487":{"start":{"line":1459,"column":4},"end":{"line":1459,"column":29}},"488":{"start":{"line":1460,"column":4},"end":{"line":1460,"column":30}},"489":{"start":{"line":1463,"column":2},"end":{"line":1463,"column":48}},"490":{"start":{"line":1466,"column":0},"end":{"line":1466,"column":30}}},"branchMap":{"1":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]},"2":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":129,"column":4}},{"start":{"line":129,"column":4},"end":{"line":129,"column":4}}]},"3":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":2},"end":{"line":263,"column":2}},{"start":{"line":263,"column":2},"end":{"line":263,"column":2}}]},"4":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":4},"end":{"line":272,"column":4}},{"start":{"line":272,"column":4},"end":{"line":272,"column":4}}]},"5":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":6},"end":{"line":280,"column":6}},{"start":{"line":280,"column":6},"end":{"line":280,"column":6}}]},"6":{"line":280,"type":"binary-expr","locations":[{"start":{"line":280,"column":10},"end":{"line":280,"column":64}},{"start":{"line":280,"column":68},"end":{"line":280,"column":128}}]},"7":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":8},"end":{"line":283,"column":8}},{"start":{"line":283,"column":8},"end":{"line":283,"column":8}}]},"8":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":8},"end":{"line":292,"column":8}},{"start":{"line":292,"column":8},"end":{"line":292,"column":8}}]},"9":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":2},"end":{"line":373,"column":2}},{"start":{"line":373,"column":2},"end":{"line":373,"column":2}}]},"10":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":4},"end":{"line":379,"column":4}},{"start":{"line":379,"column":4},"end":{"line":379,"column":4}}]},"11":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":6},"end":{"line":381,"column":6}},{"start":{"line":381,"column":6},"end":{"line":381,"column":6}}]},"12":{"line":381,"type":"binary-expr","locations":[{"start":{"line":381,"column":10},"end":{"line":381,"column":17}},{"start":{"line":381,"column":21},"end":{"line":381,"column":37}}]},"13":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":4},"end":{"line":444,"column":4}},{"start":{"line":444,"column":4},"end":{"line":444,"column":4}}]},"14":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":11},"end":{"line":446,"column":11}},{"start":{"line":446,"column":11},"end":{"line":446,"column":11}}]},"15":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":8},"end":{"line":451,"column":8}},{"start":{"line":451,"column":8},"end":{"line":451,"column":8}}]},"16":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":13},"end":{"line":454,"column":13}},{"start":{"line":454,"column":13},"end":{"line":454,"column":13}}]},"17":{"line":454,"type":"binary-expr","locations":[{"start":{"line":454,"column":17},"end":{"line":454,"column":28}},{"start":{"line":454,"column":32},"end":{"line":454,"column":109}},{"start":{"line":454,"column":113},"end":{"line":454,"column":186}}]},"18":{"line":542,"type":"if","locations":[{"start":{"line":542,"column":4},"end":{"line":542,"column":4}},{"start":{"line":542,"column":4},"end":{"line":542,"column":4}}]},"19":{"line":544,"type":"if","locations":[{"start":{"line":544,"column":11},"end":{"line":544,"column":11}},{"start":{"line":544,"column":11},"end":{"line":544,"column":11}}]},"20":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":8},"end":{"line":550,"column":8}},{"start":{"line":550,"column":8},"end":{"line":550,"column":8}}]},"21":{"line":552,"type":"if","locations":[{"start":{"line":552,"column":15},"end":{"line":552,"column":15}},{"start":{"line":552,"column":15},"end":{"line":552,"column":15}}]},"22":{"line":552,"type":"binary-expr","locations":[{"start":{"line":552,"column":19},"end":{"line":552,"column":30}},{"start":{"line":552,"column":34},"end":{"line":552,"column":111}},{"start":{"line":552,"column":115},"end":{"line":552,"column":183}}]},"23":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":4},"end":{"line":605,"column":4}},{"start":{"line":605,"column":4},"end":{"line":605,"column":4}}]},"24":{"line":660,"type":"if","locations":[{"start":{"line":660,"column":4},"end":{"line":660,"column":4}},{"start":{"line":660,"column":4},"end":{"line":660,"column":4}}]},"25":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":4},"end":{"line":734,"column":4}},{"start":{"line":734,"column":4},"end":{"line":734,"column":4}}]},"26":{"line":734,"type":"binary-expr","locations":[{"start":{"line":734,"column":8},"end":{"line":734,"column":31}},{"start":{"line":734,"column":35},"end":{"line":734,"column":63}},{"start":{"line":734,"column":67},"end":{"line":734,"column":113}},{"start":{"line":734,"column":117},"end":{"line":734,"column":176}}]},"27":{"line":737,"type":"if","locations":[{"start":{"line":737,"column":6},"end":{"line":737,"column":6}},{"start":{"line":737,"column":6},"end":{"line":737,"column":6}}]},"28":{"line":865,"type":"if","locations":[{"start":{"line":865,"column":4},"end":{"line":865,"column":4}},{"start":{"line":865,"column":4},"end":{"line":865,"column":4}}]},"29":{"line":865,"type":"binary-expr","locations":[{"start":{"line":865,"column":7},"end":{"line":865,"column":15}},{"start":{"line":865,"column":19},"end":{"line":865,"column":38}}]},"30":{"line":950,"type":"if","locations":[{"start":{"line":950,"column":4},"end":{"line":950,"column":4}},{"start":{"line":950,"column":4},"end":{"line":950,"column":4}}]},"31":{"line":950,"type":"binary-expr","locations":[{"start":{"line":950,"column":7},"end":{"line":950,"column":15}},{"start":{"line":950,"column":19},"end":{"line":950,"column":38}}]},"32":{"line":991,"type":"if","locations":[{"start":{"line":991,"column":2},"end":{"line":991,"column":2}},{"start":{"line":991,"column":2},"end":{"line":991,"column":2}}]},"33":{"line":995,"type":"if","locations":[{"start":{"line":995,"column":2},"end":{"line":995,"column":2}},{"start":{"line":995,"column":2},"end":{"line":995,"column":2}}]},"34":{"line":1094,"type":"if","locations":[{"start":{"line":1094,"column":2},"end":{"line":1094,"column":2}},{"start":{"line":1094,"column":2},"end":{"line":1094,"column":2}}]},"35":{"line":1098,"type":"if","locations":[{"start":{"line":1098,"column":2},"end":{"line":1098,"column":2}},{"start":{"line":1098,"column":2},"end":{"line":1098,"column":2}}]},"36":{"line":1104,"type":"if","locations":[{"start":{"line":1104,"column":2},"end":{"line":1104,"column":2}},{"start":{"line":1104,"column":2},"end":{"line":1104,"column":2}}]},"37":{"line":1108,"type":"cond-expr","locations":[{"start":{"line":1108,"column":32},"end":{"line":1108,"column":66}},{"start":{"line":1108,"column":69},"end":{"line":1108,"column":70}}]},"38":{"line":1119,"type":"if","locations":[{"start":{"line":1119,"column":4},"end":{"line":1119,"column":4}},{"start":{"line":1119,"column":4},"end":{"line":1119,"column":4}}]},"39":{"line":1173,"type":"if","locations":[{"start":{"line":1173,"column":4},"end":{"line":1173,"column":4}},{"start":{"line":1173,"column":4},"end":{"line":1173,"column":4}}]},"40":{"line":1247,"type":"if","locations":[{"start":{"line":1247,"column":2},"end":{"line":1247,"column":2}},{"start":{"line":1247,"column":2},"end":{"line":1247,"column":2}}]},"41":{"line":1248,"type":"if","locations":[{"start":{"line":1248,"column":4},"end":{"line":1248,"column":4}},{"start":{"line":1248,"column":4},"end":{"line":1248,"column":4}}]},"42":{"line":1256,"type":"cond-expr","locations":[{"start":{"line":1256,"column":84},"end":{"line":1256,"column":111}},{"start":{"line":1256,"column":114},"end":{"line":1256,"column":115}}]},"43":{"line":1261,"type":"if","locations":[{"start":{"line":1261,"column":4},"end":{"line":1261,"column":4}},{"start":{"line":1261,"column":4},"end":{"line":1261,"column":4}}]},"44":{"line":1264,"type":"if","locations":[{"start":{"line":1264,"column":6},"end":{"line":1264,"column":6}},{"start":{"line":1264,"column":6},"end":{"line":1264,"column":6}}]},"45":{"line":1296,"type":"if","locations":[{"start":{"line":1296,"column":2},"end":{"line":1296,"column":2}},{"start":{"line":1296,"column":2},"end":{"line":1296,"column":2}}]},"46":{"line":1296,"type":"binary-expr","locations":[{"start":{"line":1296,"column":6},"end":{"line":1296,"column":30}},{"start":{"line":1296,"column":34},"end":{"line":1296,"column":84}}]},"47":{"line":1347,"type":"if","locations":[{"start":{"line":1347,"column":2},"end":{"line":1347,"column":2}},{"start":{"line":1347,"column":2},"end":{"line":1347,"column":2}}]},"48":{"line":1355,"type":"if","locations":[{"start":{"line":1355,"column":4},"end":{"line":1355,"column":4}},{"start":{"line":1355,"column":4},"end":{"line":1355,"column":4}}]},"49":{"line":1359,"type":"if","locations":[{"start":{"line":1359,"column":11},"end":{"line":1359,"column":11}},{"start":{"line":1359,"column":11},"end":{"line":1359,"column":11}}]},"50":{"line":1359,"type":"binary-expr","locations":[{"start":{"line":1359,"column":15},"end":{"line":1359,"column":35}},{"start":{"line":1359,"column":39},"end":{"line":1359,"column":125}}]},"51":{"line":1390,"type":"if","locations":[{"start":{"line":1390,"column":2},"end":{"line":1390,"column":2}},{"start":{"line":1390,"column":2},"end":{"line":1390,"column":2}}]},"52":{"line":1399,"type":"if","locations":[{"start":{"line":1399,"column":2},"end":{"line":1399,"column":2}},{"start":{"line":1399,"column":2},"end":{"line":1399,"column":2}}]},"53":{"line":1409,"type":"if","locations":[{"start":{"line":1409,"column":4},"end":{"line":1409,"column":4}},{"start":{"line":1409,"column":4},"end":{"line":1409,"column":4}}]},"54":{"line":1412,"type":"if","locations":[{"start":{"line":1412,"column":6},"end":{"line":1412,"column":6}},{"start":{"line":1412,"column":6},"end":{"line":1412,"column":6}}]},"55":{"line":1412,"type":"binary-expr","locations":[{"start":{"line":1412,"column":10},"end":{"line":1412,"column":56}},{"start":{"line":1412,"column":60},"end":{"line":1412,"column":119}}]},"56":{"line":1415,"type":"if","locations":[{"start":{"line":1415,"column":8},"end":{"line":1415,"column":8}},{"start":{"line":1415,"column":8},"end":{"line":1415,"column":8}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var util = require('util');","var _ = require('underscore');","var extend = require('extend');","","var azureCommon = require('./../../common/common');","var azureutil = azureCommon.util;","var SR = azureCommon.SR;","var validate = azureCommon.validate;","","var StorageServiceClient = azureCommon.StorageServiceClient;","var WebResource = azureCommon.WebResource;","var Constants = azureCommon.Constants;","var QueryStringConstants = Constants.QueryStringConstants;","var HeaderConstants = Constants.HeaderConstants;","var RequestLocationMode = Constants.RequestLocationMode;","","// Models requires","var QueueResult = require('./models/queueresult');","var AclResult = azureCommon.AclResult;","var QueueMessageResult = require('./models/queuemessageresult');","var QueueMessageEncoder = require('./queuemessageencoder');","var ServiceStatsParser = azureCommon.ServiceStatsParser;","","/**","* Creates a new QueueService object.","* If no connection string or storageaccount and storageaccesskey are provided,","* the AZURE_STORAGE_CONNECTION_STRING or AZURE_STORAGE_ACCOUNT and AZURE_STORAGE_ACCESS_KEY environment variables will be used.","* @class","* The QueueService class is used to perform operations on the Microsoft Azure Queue Service.","* ","* For more information on using the Queue Service, as well as task focused information on using it from a Node.js application, see","* [How to Use the Queue Service from Node.js](http://azure.microsoft.com/en-us/documentation/articles/storage-nodejs-how-to-use-queues/).","* The following defaults can be set on the Queue service.","* messageEncoder                                      The message encoder to specify how QueueService encodes and decodes the queue message. Default is `[TextXmlQueueMessageEncoder]{@link TextXmlQueueMessageEncoder}`.","* defaultTimeoutIntervalInMs                          The default timeout interval, in milliseconds, to use for request made via the Queue service.","* defaultClientRequestTimeoutInMs                     The default timeout of client requests, in milliseconds, to use for the request made via the Queue service.","* defaultMaximumExecutionTimeInMs                     The default maximum execution time across all potential retries, for requests made via the Queue service.","* defaultLocationMode                                 The default location mode for requests made via the Queue service.","* useNagleAlgorithm                                   Determines whether the Nagle algorithm is used for requests made via the Queue service; true to use the  ","*                                                     Nagle algorithm; otherwise, false. The default value is false.","* @constructor","* @augments {StorageServiceClient}","*","* @param {string} [storageAccountOrConnectionString]  The storage account or the connection string.","* @param {string} [storageAccessKey]                  The storage access key.","* @param {string|object} [host]                       The host address. To define primary only, pass a string. ","*                                                     Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.","* @param {string} [sasToken]                          The Shared Access Signature token.","* @param {string} [endpointSuffix]                    The endpoint suffix.","*/","function QueueService(storageAccountOrConnectionString, storageAccessKey, host, sasToken, endpointSuffix) {","  var storageServiceSettings = StorageServiceClient.getStorageSettings(storageAccountOrConnectionString, storageAccessKey, host, sasToken, endpointSuffix);","","  QueueService['super_'].call(this,","    storageServiceSettings._name,","    storageServiceSettings._key,","    storageServiceSettings._queueEndpoint,","    storageServiceSettings._usePathStyleUri,","    storageServiceSettings._sasToken);","","  if (this.anonymous) {","    throw new Error(SR.ANONYMOUS_ACCESS_BLOBSERVICE_ONLY);","  }","  ","  /**","   * @property {boolean} QueueService#messageEncoder","   * @defaultvalue      {QueueMessageEncoder}     `[TextXmlQueueMessageEncoder]{@link TextXmlQueueMessageEncoder}`.","   * The message encoder to specify how QueueService encodes and decodes the queue message. Default is `[TextXmlQueueMessageEncoder]{@link TextXmlQueueMessageEncoder}`.","   */","  this.messageEncoder = new QueueMessageEncoder.TextXmlQueueMessageEncoder();","}","","util.inherits(QueueService, StorageServiceClient);","","/**","* Gets the service stats for a storage account’s Queue service.","*","* @this {QueueService}","* @param {object}       [options]                                         The request options.","* @param {LocationMode} [options.locationMode]                            Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}          [options.timeoutIntervalInMs]                     The server timeout interval, in milliseconds, to use for the request.","* @param {int}          [options.clientRequestTimeoutInMs]                The timeout of client requests, in milliseconds, to use for the request.","* @param {int}          [options.maximumExecutionTimeInMs]                The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}       [options.clientRequestId]                         A string that represents the client request ID with a 1KB character limit.","* @param {bool}         [options.useNagleAlgorithm]                       Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}  callback                                        `error` will contain information","*                                                                         if an error occurs; otherwise, `[result]{@link ServiceStats}`","*                                                                         will contain the stats and `response`","*                                                                         will contain information related to this operation.","*/","QueueService.prototype.getServiceStats = function (optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getServiceStats', function (v) {","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.get()","    .withQueryOption(QueryStringConstants.COMP, 'stats')","    .withQueryOption(QueryStringConstants.RESTYPE, 'service');","","  options.requestLocationMode = RequestLocationMode.PRIMARY_OR_SECONDARY;","","  var processResponseCallback = function (responseObject, next) {","    responseObject.serviceStatsResult = null;","    if (!responseObject.error) {","      responseObject.serviceStatsResult = ServiceStatsParser.parse(responseObject.response.body.StorageServiceStats);","    }","","    // function to be called after all filters","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.serviceStatsResult, returnObject.response);","    };","","    // call the first filter","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Gets the properties of a storage account’s Queue service, including Microsoft Azure Storage Analytics.","*","* @this {QueueService}","* @param {object}             [options]                                 The request options.","* @param {LocationMode}       [options.locationMode]                    Specifies the location mode used to decide which location the request should be sent to. ","*                                                                       Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]             The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]        The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]        The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                       The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                       execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                 A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]               Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                       The default value is false.","* @param {errorOrResult}  callback                                      `error` will contain information","*                                                                       if an error occurs; otherwise, `[result]{@link ServiceProperties}`","*                                                                       will contain the properties and `response`","*                                                                       will contain information related to this operation.","*/","QueueService.prototype.getServiceProperties = function (optionsOrCallback, callback) {","  return this.getAccountServiceProperties(optionsOrCallback, callback);","};","","/**","* Sets the properties of a storage account’s Queue service, including Microsoft Azure Storage Analytics.","* You can also use this operation to set the default request version for all incoming requests that do not have a version specified.","*","* @this {QueueService}","* @param {object}             serviceProperties                        The service properties.","* @param {object}             [options]                                The request options.","* @param {LocationMode}       [options.locationMode]                   Specifies the location mode used to decide which location the request should be sent to. ","*                                                                      Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]            The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]       The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]       The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                      The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                      execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]              Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                      The default value is false.","* @param {errorOrResponse}  callback                                   `error` will contain information","*                                                                      if an error occurs; otherwise, `response`","*                                                                      will contain information related to this operation.","*/","QueueService.prototype.setServiceProperties = function (serviceProperties, optionsOrCallback, callback) {","  return this.setAccountServiceProperties(serviceProperties, optionsOrCallback, callback);","};","","/**","* Lists a segment containing a collection of queue items whose names begin with the specified prefix under the given account.","*","* @this {QueueService}","* @param {object}             currentToken                                A continuation token returned by a previous listing operation. Please use 'null' or 'undefined' if this is the first operation.","* @param {object}             [options]                                   The request options.","* @param {int}                [options.maxResults]                        Specifies the maximum number of queues to return per call to Azure storage. This does NOT affect list size returned by this function. (maximum: 5000)","* @param {string}             [options.include]                           Include this parameter to specify that the queue's metadata be returned as part of the response body. (allowed values: '', 'metadata')","*                                                                         **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}  callback                                        `error` will contain information","*                                                                         if an error occurs; otherwise `result` will contain `entries` and `continuationToken`. ","*                                                                         `entries`  gives a list of `[queues]{@link QueueResult}` and the `continuationToken` is used for the next listing operation.","*                                                                         `response` will contain information related to this operation.","*/","QueueService.prototype.listQueuesSegmented = function (currentToken, optionsOrCallback, callback) {","  this.listQueuesSegmentedWithPrefix(null /* prefix */, currentToken, optionsOrCallback, callback);","};","","/**","* Lists a segment containing a collection of queue items  under the given account.","*","* @this {QueueService}","* @param {string}             prefix                                      The prefix of the queue name.","* @param {object}             currentToken                                A continuation token returned by a previous listing operation. Please use 'null' or 'undefined' if this is the first operation.* @param {string}             [options.prefix]                  Filters the results to return only queues whose name begins with the specified prefix.","* @param {object}             [options]                                   The request options.","* @param {string}             [options.marker]                            String value that identifies the portion of the list to be returned with the next list operation.","* @param {int}                [options.maxResults]                        Specifies the maximum number of queues to return per call to Azure storage. This does NOT affect list size returned by this function. (maximum: 5000)","* @param {string}             [options.include]                           Include this parameter to specify that the queue's metadata be returned as part of the response body. (allowed values: '', 'metadata')","*                                                                         **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}  callback                                        `error` will contain information","*                                                                         if an error occurs; otherwise `result` will contain `entries` and `continuationToken`. ","*                                                                         `entries`  gives a list of `[queues]{@link QueueResult}` and the `continuationToken` is used for the next listing operation.","*                                                                         `response` will contain information related to this operation.","*/","QueueService.prototype.listQueuesSegmentedWithPrefix = function (prefix, currentToken, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('listQueuesSegmentedWithPrefix', function (v) {","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.get();","  webResource.withQueryOption(QueryStringConstants.COMP, 'list')","    .withQueryOption(QueryStringConstants.MAX_RESULTS, options.maxResults)","    .withQueryOption(QueryStringConstants.INCLUDE, options.include)","    .withQueryOption(QueryStringConstants.PREFIX, prefix);","","  if(!azureutil.objectIsNull(currentToken)) {","    webResource.withQueryOption(QueryStringConstants.MARKER, currentToken.nextMarker);","  }","","  options.requestLocationMode = azureutil.getNextListingLocationMode(currentToken);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.listQueuesResult = null;","","    if (!responseObject.error) {","      responseObject.listQueuesResult = {","        entries: null,","        continuationToken: null","      };","      responseObject.listQueuesResult.entries = [];","      var queues = [];","","      if (responseObject.response.body.EnumerationResults.Queues && responseObject.response.body.EnumerationResults.Queues.Queue) {","        queues = responseObject.response.body.EnumerationResults.Queues.Queue;","","        if (!_.isArray(queues)) {","          queues = [ queues ];","        }","","        queues.forEach(function (currentQueue) {","          var queueResult = QueueResult.parse(currentQueue);","          responseObject.listQueuesResult.entries.push(queueResult);","        });","","        if(responseObject.response.body.EnumerationResults.NextMarker) {","          responseObject.listQueuesResult.continuationToken = {","            nextMarker: null,","            targetLocation: null","          };","","          responseObject.listQueuesResult.continuationToken.nextMarker = responseObject.response.body.EnumerationResults.NextMarker;","          responseObject.listQueuesResult.continuationToken.targetLocation = responseObject.targetLocation;","        }","      }","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.listQueuesResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Checks to see if a queue exists.","*","* @this {QueueService}","* @param {string}             queue                                       The queue name.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {Function(error, result, response)}  callback                    `error` will contain information","*                                                                         if an error occurs; otherwise, `[result]{@link QueueResult}` will contain","*                                                                         the queue information including `exists` boolean member.","*                                                                         `response` will contain information related to this operation.","*/","QueueService.prototype.doesQueueExist = function (queue, optionsOrCallback, callback) {","  this._doesQueueExist(queue, false, optionsOrCallback, callback);","};","","/**","* Creates a new queue under the given account.","*","* @this {QueueService}","* @param {string}             queue                                       The queue name.","* @param {object}             [options]                                   The request options.","* @param {object}             [options.metadata]                          The metadata key/value pairs.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}  callback                                        `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link QueueResult}` will contain","*                                                                         the queue information.","*                                                                         `response` will contain information related to this operation.","*/","QueueService.prototype.createQueue = function (queue, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createQueue', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.put(queue);","  if (options) {","    webResource.addOptionalMetadataHeaders(options.metadata);","  }","","  var processResponseCallback = function (responseObject, next) {","    responseObject.queueResult = null;","    if (!responseObject.error) {","      responseObject.queueResult = new QueueResult(queue);","      if (options && options.metadata) {","        responseObject.queueResult.metadata = options.metadata;","      }","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.queueResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Creates a new queue under the given account if it doesn't exist.","*","* @this {QueueService}","* @param {string}             queue                                       The queue name.","* @param {object}             [options]                                   The request options.","* @param {object}             [options.metadata]                          The metadata key/value pairs.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}  callback                                       `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link QueueResult}` will contain ","*                                                                         the queue information including `created` boolean member and ","*                                                                         `response` will contain information related to this operation.","*","* @example","* var azure = require('azure-storage');","* var queueService = azure.createQueueService();","* queueService.createQueueIfNotExists('taskqueue', function(error) {","*   if(!error) {","*     // Queue created or exists","*   }","* }); ","*/","QueueService.prototype.createQueueIfNotExists = function (queue, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createQueueIfNotExists', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var self = this;","  self._doesQueueExist(queue, true, options, function(error, result, response) {","    var exists = result.exists;","    result.created = false;","    delete result.exists;","    ","    if (error) {","      callback(error, result, response);","    } else if (exists) {","      response.isSuccessful = true;","      callback(error, result, response);","    } else {","      self.createQueue(queue, options, function(createError, responseQueue, createResponse) {","        if (!createError) {","          responseQueue.created = true;","        }","        else if (createError && createError.statusCode === Constants.HttpConstants.HttpResponseCodes.Conflict && createError.code === Constants.QueueErrorCodeStrings.QUEUE_ALREADY_EXISTS) {","          createError = null;","          responseQueue.created = false;","          createResponse.isSuccessful = true;","        }","","        callback(createError, responseQueue, createResponse);","      });","    }","  });","};","","/**","* Permanently deletes the specified queue.","*","* @this {QueueService}","* @param {string}             queue                                       The queue name.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResponse}  callback                                      `error` will contain information if an error occurs; ","*                                                                         `response` will contain information related to this operation.","*/","QueueService.prototype.deleteQueue = function (queue, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('deleteQueue', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.del(queue);","  var processResponseCallback = function (responseObject, next) {","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Permanently deletes the specified queue if it exists.","*","* @this {QueueService}","* @param {string}             queue                                       The queue name.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}  callback                                        `error` will contain information","*                                                                         if an error occurs; otherwise `result` will contain","*                                                                         'true' if the queue was deleted and 'false' if the queue did not exist.","*                                                                         `response` will contain information related to this operation.","*/","QueueService.prototype.deleteQueueIfExists = function (queue, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('deleteQueueIfExists', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var self = this;","  self._doesQueueExist(queue, true, options, function existsCallback(error, existsResult, response) {","    if (error) {","      callback(error, existsResult.exists, response);","    } else if (!existsResult.exists) {","      response.isSuccessful = true;","      callback(error, false, response);","    } else {","      self.deleteQueue(queue, options, function(deleteError, deleteResponse) {","        var deleted;","        if (!deleteError) {","          deleted = true;","        } else if (deleteError && deleteError.statusCode === Constants.HttpConstants.HttpResponseCodes.NotFound && deleteError.code === Constants.QueueErrorCodeStrings.QUEUE_NOT_FOUND) {","          deleted = false;","          deleteError = null;","          deleteResponse.isSuccessful = true;","        }","","        callback(deleteError, deleted, deleteResponse);","      });","    }","  });","};","","/**","* Returns queue properties, including user-defined metadata.","* **Note** that all metadata names returned from the server will be converted to lower case by NodeJS itself as metadata is set via HTTP headers and HTTP header names are case insensitive.","*","* @this {QueueService}","* @param {string}             queue                                       The queue name.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}  callback                                        `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link QueueResult}` will contain","*                                                                         the queue information.","*                                                                         `response` will contain information related to this operation.","*/","QueueService.prototype.getQueueMetadata = function (queue, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getQueueMetadata', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.get(queue)","    .withQueryOption(QueryStringConstants.COMP, 'metadata');","","  options.requestLocationMode = Constants.RequestLocationMode.PRIMARY_OR_SECONDARY;","","  var self = this;","  var processResponseCallback = function (responseObject, next) {","    responseObject.queueResult = null;","    if (!responseObject.error) {","      responseObject.queueResult = new QueueResult(queue);","      responseObject.queueResult.metadata = self.parseMetadataHeaders(responseObject.response.headers);","      responseObject.queueResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.queueResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Sets user-defined metadata on the specified queue. Metadata is associated with the queue as name-value pairs.","*","* @this {QueueService}","* @param {string}             queue                                       The queue name.","* @param {object}             metadata                                    The metadata key/value pairs.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}  callback                                        `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link QueueResult}` will contain","*                                                                         the queue information.","*                                                                         `response` will contain information related to this operation.","*/","QueueService.prototype.setQueueMetadata = function (queue, metadata, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('setQueueMetadata', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.put(queue)","    .withQueryOption(QueryStringConstants.COMP, 'metadata')","    .addOptionalMetadataHeaders(metadata);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.queueResult = null;","    if (!responseObject.error) {","      responseObject.queueResult = new QueueResult(queue, metadata);","      responseObject.queueResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.queueResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Adds a new message to the back of the message queue. ","* The encoded message can be up to 64KB in size for versions 2011-08-18 and newer, or 8KB in size for previous versions. ","* Unencoded messages must be in a format that can be included in an XML request with UTF-8 encoding. ","* Queue messages are encoded using the `[TextXmlQueueMessageEncoder]{@link TextXmlQueueMessageEncoder}`. See queueService.messageEncoder to set encoder defaults. ","* ","* @this {QueueService}","* @param {string}             queue                                       The queue name.","* @param {string|Buffer}      messageText                                 The message text.","* @param {object}             [options]                                   The request options.","* @param {int}                [options.messageTimeToLive]                 The time-to-live interval for the message, in seconds. The maximum time-to-live allowed is 7 days. If this parameter is omitted, the default time-to-live is 7 days","* @param {int}                [options.visibilityTimeout]                 Specifies the new visibility timeout value, in seconds, relative to server time. The new value must be larger than or equal to 0, and cannot be larger than 7 days. The visibility timeout of a message cannot be set to a value later than the expiry time. visibilitytimeout should be set to a value smaller than the time-to-live value.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}      callback                                    `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link QueueMessageResult}` will contain","*                                                                         the message.","*                                                                         `response` will contain information related to this operation.","*","* @example","* var azure = require('azure-storage');","* var queueService = azure.createQueueService();","* queueService.createMessage('taskqueue', 'Hello world!', function(error) {","*   if(!error) {","*     // Message inserted","*   }","* });","*/","QueueService.prototype.createMessage = function (queue, messageText, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('createMessage', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","","  var xmlMessageDescriptor = QueueMessageResult.serialize(messageText, this.messageEncoder);","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.post(queue + '/messages')","    .withHeader(HeaderConstants.CONTENT_TYPE, 'application/atom+xml;charset=\"utf-8\"')","    .withHeader(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(xmlMessageDescriptor, 'utf8'))","    .withQueryOption(QueryStringConstants.MESSAGE_TTL, options.messageTimeToLive)","    .withQueryOption(QueryStringConstants.VISIBILITY_TIMEOUT, options.visibilityTimeout)","    .withBody(xmlMessageDescriptor);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.queueMessageResults = [];","","    if (responseObject.response && responseObject.response.body && responseObject.response.body.QueueMessagesList && responseObject.response.body.QueueMessagesList.QueueMessage) {","      var messages = responseObject.response.body.QueueMessagesList.QueueMessage;","","      if (!_.isArray(messages)) {","        messages = [ messages ];","      }","","      messages.forEach(function (message) {","        var queueMessageResult = QueueMessageResult.parse(message, this.messageEncoder);","        responseObject.queueMessageResults.push(queueMessageResult);","      });","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, responseObject.queueMessageResults[0], returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, webResource.body, options, processResponseCallback);","};","","/**","* Retrieve messages from the queue and makes them invisible to other consumers.","*","* @this {QueueService}","* @param {string}             queue                                       The queue name.","* @param {object}             [options]                                   The request options.","* @param {int}                [options.numOfMessages]                     A nonzero integer value that specifies the number of messages to retrieve from the queue, up to a maximum of 32. By default, a single message is retrieved from the queue with this operation.","* @param {int}                [options.visibilityTimeout]                 Required if not peek only. Specifies the new visibility timeout value, in seconds, relative to server time. The new value must be larger than or equal to 0, and cannot be larger than 7 days. The visibility timeout of a message can be set to a value later than the expiry time.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}  callback                                        `error` will contain information","*                                                                         if an error occurs; otherwise `result` will contain","*                                                                         a list of `[messages]{@link QueueMessageResult}`.","*                                                                         `response` will contain information related to this operation.","*","* @example","* var azure = require('azure-storage');","* var queueService = azure.createQueueService();","* var queueName = 'taskqueue';","* queueService.getMessages(queueName, function(error, serverMessages) {","*   if(!error) {","*     // Process the message in less than 30 seconds, the message","*     // text is available in serverMessages[0].messagetext","*     queueService.deleteMessage(queueName, serverMessages[0].messageId, serverMessages[0].popReceipt, function(error) {","*       if(!error){","*           // Message deleted","*       }","*     });","*   }","* });","*/","QueueService.prototype.getMessages = function (queue, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getMessages', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  delete options.peekOnly;","  ","  this._getOrPeekMessages(queue, options, callback);","};","","/**","* Retrieves a message from the queue and makes it invisible to other consumers.","*","* @this {QueueService}","* @param {string}             queue                                       The queue name.","* @param {object}             [options]                                   The request options.","* @param {int}                [options.visibilityTimeout]                 Required if not peek only. Specifies the new visibility timeout value, in seconds, relative to server time. The new value must be larger than or equal to 0, and cannot be larger than 7 days. The visibility timeout of a message can be set to a value later than the expiry time.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}  callback                                        `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link QueueMessageResult}` will contain","*                                                                         the message.","*                                                                         `response` will contain information related to this operation.","*","* @example","* var azure = require('azure-storage');","* var queueService = azure.createQueueService();","* var queueName = 'taskqueue';","* queueService.getMessage(queueName, function(error, serverMessage) {","*   if(!error) {","*     // Process the message in less than 30 seconds, the message","*     // text is available in serverMessage.messagetext","*     queueService.deleteMessage(queueName, serverMessage.messageId, serverMessage.popReceipt, function(error) {","*       if(!error){","*           // Message deleted","*       }","*     });","*   }","* });","*/","QueueService.prototype.getMessage = function (queue, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getMessage', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  options.numOfMessages = 1;","  ","  var finalCallback = function(error, messages, response){","    var message;","    if(messages && messages.length > 0){","      message = messages[0];","    }","    ","    callback(error, message, response);","  };","  ","  this.getMessages(queue, options, finalCallback);","};","","/**","* Retrieves messages from the front of the queue, without changing the messages visibility.","*","* @this {QueueService}","* @param {string}             queue                                       The queue name.","* @param {object}             [options]                                   The request options.","* @param {int}                [options.numOfMessages]                     A nonzero integer value that specifies the number of messages to retrieve from the queue, up to a maximum of 32. By default, a single message is retrieved from the queue with this operation.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}  callback                                        `error` will contain information","*                                                                         if an error occurs; otherwise `result` will contain","*                                                                         `[messages]{@link QueueMessageResult}`.","*                                                                         `response` will contain information related to this operation.","*/","QueueService.prototype.peekMessages = function (queue, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('peekMessages', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  options.peekOnly = true;","  delete options.visibilityTimeout;","  ","  this._getOrPeekMessages(queue, options, callback);","};","","/**","* Retrieves a message from the front of the queue, without changing the message visibility.","*","* @this {QueueService}","* @param {string}             queue                                       The queue name.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}  callback                                        `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link QueueMessageResult}` will contain","*                                                                         the message.","*                                                                         `response` will contain information related to this operation.","*/","QueueService.prototype.peekMessage = function (queue, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('peekMessage', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  options.numOfMessages = 1;","  ","  var finalCallback = function(error, messages, response){","    var message;","    if(messages && messages.length > 0){","      message = messages[0];","    }","    ","    callback(error, message, response);","  };","  ","  this.peekMessages(queue, options, finalCallback);","};","","/**","* Deletes a specified message from the queue.","*","* @this {QueueService}","* @param {string}             queue                                       The queue name.","* @param {string}             messageId                                   The message identifier of the message to delete.","* @param {string}             popReceipt                                  A valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResponse}  callback                                      `error` will contain information if an error occurs; ","*                                                                         `response` will contain information related to this operation.","*/","QueueService.prototype.deleteMessage = function (queue, messageId, popReceipt, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('deleteMessage', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","","  if (azureutil.objectIsNull(popReceipt)) {","    throw new Error(SR.INVALID_POP_RECEIPT);","  }","","  if (azureutil.objectIsNull(messageId)) {","    throw new Error(SR.INVALID_MESSAGE_ID);","  }","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.del(queue + '/messages/' + messageId)","    .withQueryOption(QueryStringConstants.POP_RECEIPT, popReceipt, null, true);","","  var processResponseCallback = function (responseObject, next) {","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Clears all messages from the queue.","*","* @this {QueueService}","* @param {string}             queue                                       The queue name.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResponse}  callback                                      `error` will contain information","*                                                                         if an error occurs; otherwise ","*                                                                         `response` will contain information related to this operation.","*/","QueueService.prototype.clearMessages = function (queue, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('clearMessages', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.del(queue + '/messages');","","  var processResponseCallback = function (responseObject, next) {","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Updates the visibility timeout of a message. You can also use this operation to update the contents of a message.","* A message must be in a format that can be included in an XML request with UTF-8 encoding, and the encoded message can be up to 64KB in size.","*","* @this {QueueService}","* @param {string}             queue                                       The queue name.","* @param {string}             messageId                                   The message identifier of the message to update.","* @param {string}             popReceipt                                  A valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation","* @param {int}                visibilityTimeout                           Specifies the new visibility timeout value, in seconds, relative to server time. The new value must be larger than or equal to 0, and cannot be larger than 7 days. The visibility timeout of a message can be set to a value later than the expiry time.","* @param {object}             [options]                                   The request options.","* @param {object}             [options.messageText]                       The new message text.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}  callback                                        `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link QueueMessageResult}` will contain","*                                                                         the message result information.","*                                                                         `response` will contain information related to this operation.","*/","QueueService.prototype.updateMessage = function (queue, messageId, popReceipt, visibilityTimeout, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('updateMessage', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","","  if (azureutil.objectIsNull(popReceipt)) {","    throw new Error(SR.INVALID_POP_RECEIPT);","  }","","  if (azureutil.objectIsNull(messageId)) {","    throw new Error(SR.INVALID_MESSAGE_ID);","  }","","  var options = extend(true, {}, userOptions);","  var content = null;","  if (options.messageText) {","    content = QueueMessageResult.serialize(options.messageText, this.messageEncoder);","  }","","  var contentLength = content ? Buffer.byteLength(content, 'utf8') : 0;","","  var webResource = WebResource.put(queue + '/messages/' + messageId)","    .withHeader(HeaderConstants.CONTENT_TYPE, 'application/atom+xml;charset=\"utf-8\"')","    .withHeader(HeaderConstants.CONTENT_LENGTH, contentLength)","    .withQueryOption(QueryStringConstants.POP_RECEIPT, popReceipt, null, true)","    .withQueryOption(QueryStringConstants.VISIBILITY_TIMEOUT, visibilityTimeout)","    .withBody(content);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.queueMessageResult = null;","    if (!responseObject.error) {","      responseObject.queueMessageResult = new QueueMessageResult(queue, messageId);","      responseObject.queueMessageResult.getPropertiesFromHeaders(responseObject.response.headers);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.queueMessageResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, webResource.body, options, processResponseCallback);","};","","/**","* Gets the queue's ACL.","*","* @this {QueueService}","* @param {string}             queue                                       The queue name.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {errorOrResult}  callback                                        `error` will contain information","*                                                                         if an error occurs; otherwise `[result]{@link QueueResult}` will contain","*                                                                         information for the queue.","*                                                                         `response` will contain information related to this operation.","*/","QueueService.prototype.getQueueAcl = function (queue, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('getQueueAcl', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.get(queue)","    .withQueryOption(QueryStringConstants.COMP, 'acl');","","  options.requestLocationMode = Constants.RequestLocationMode.PRIMARY_OR_SECONDARY;","","  var processResponseCallback = function (responseObject, next) {","    responseObject.queueResult = null;","    if (!responseObject.error) {","      responseObject.queueResult = new QueueResult(queue);","      responseObject.queueResult.getPropertiesFromHeaders(responseObject.response.headers);","      responseObject.queueResult.signedIdentifiers = AclResult.parse(responseObject.response.body);","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.queueResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Updates the queue's ACL.","*","* @this {QueueService}","* @param {string}                             queue                                       The queue name.","* @property   {Object.<string, AccessPolicy>}    signedIdentifiers                           The container ACL settings. See `[AccessPolicy]{@link AccessPolicy}` for detailed information.","* @param {object}                             [options]                                   The request options.","* @param {LocationMode}                       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}                             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}                               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                                         The default value is false.","* @param {errorOrResult}  callback                                                        `error` will contain information","*                                                                                         if an error occurs; otherwise `[result]{@link QueueResult}` will contain","*                                                                                         information for the queue.","*                                                                                         `response` will contain information related to this operation.","* @example","* var azure = require('azure-storage');","* var SharedAccessPermissions = azure.QueueUtilities.SharedAccessPermissions;","* var queueService = azure.createQueueService();","* var sharedAccessPolicies = [","* {AccessPolicy: {","*     Permissions: PROCESS,","*     Start: startDate,","*     Expiry: expiryDate","*   },","*   Id: processOnly,","* },","* {AccessPolicy: {","*     Permissions: SharedAccessPermissions.PROCESS + SharedAccessPermissions.DELETE,","*     Start: startDate,","*     Expiry: expiryDate","*   },","*   Id: processAndDelete,","* }];","* ","* queueService.setQueueAcl(queueName, sharedAccessPolicies, function(error, queueResult, response) {","*     // do whatever","* });","*/","QueueService.prototype.setQueueAcl = function (queue, signedIdentifiers, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('setQueueAcl', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","  ","  var options = extend(true, {}, userOptions);","","  var policies = null;","  if (signedIdentifiers) {","    if(_.isArray(signedIdentifiers)) {","      throw new TypeError(SR.INVALID_SIGNED_IDENTIFIERS);","    }","    policies = AclResult.serialize(signedIdentifiers);","  }","","  var webResource = WebResource.put(queue)","    .withQueryOption(QueryStringConstants.COMP, 'acl')","    .withHeader(HeaderConstants.CONTENT_LENGTH, !azureutil.objectIsNull(policies) ? Buffer.byteLength(policies) : 0)","    .withBody(policies);","","  var processResponseCallback = function (responseObject, next) {","    responseObject.containerResult = null;","    if (!responseObject.error) {","      responseObject.queueResult = new QueueResult(queue);","      responseObject.queueResult.getPropertiesFromHeaders(responseObject.response.headers);","      if (signedIdentifiers) {","        responseObject.queueResult.signedIdentifiers = signedIdentifiers;","      }","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.queueResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, webResource.body, options, processResponseCallback);","};","","/**","* Retrieves a shared access signature token.","*","* @this {QueueService}","* @param {string}                   queue                                               The queue name.","* @param {object}                   sharedAccessPolicy                                  The shared access policy.","* @param {string}                   [sharedAccessPolicy.Id]                             The signed identifier.","* @param {object}                   [sharedAccessPolicy.AccessPolicy.Permissions]       The permission type.","* @param {date|string}              [sharedAccessPolicy.AccessPolicy.Start]             The time at which the Shared Access Signature becomes valid (The UTC value will be used).","* @param {date|string}              [sharedAccessPolicy.AccessPolicy.Expiry]            The time at which the Shared Access Signature becomes expired (The UTC value will be used).","* @param {string}                   [sharedAccessPolicy.AccessPolicy.IPAddressOrRange]  An IP address or a range of IP addresses from which to accept requests. When specifying a range, note that the range is inclusive.","* @param {string}                   sharedAccessPolicy.AccessPolicy.Protocols           The protocols permitted for a request made with the account SAS. ","*                                                                                       Possible values are both HTTPS and HTTP (https,http) or HTTPS only (https). The default value is https,http.","* @return {string}                                                                      The shared access signature query string. Note this string does not contain the leading \"?\".","*/","QueueService.prototype.generateSharedAccessSignature = function (queue, sharedAccessPolicy) {","  // check if the QueueService is able to generate a shared access signature","  if (!this.storageCredentials || !this.storageCredentials.generateSignedQueryString) {","    throw new Error(SR.CANNOT_CREATE_SAS_WITHOUT_ACCOUNT_KEY);","  }","","  validate.validateArgs('generateSharedAccessSignature', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.object(sharedAccessPolicy, 'sharedAccessPolicy');","  });","","  return this.storageCredentials.generateSignedQueryString(Constants.ServiceType.Queue, queue, sharedAccessPolicy, null);","};","","/**","* Checks to see if a queue exists.","* @ignore","*","* @this {QueueService}","* @param {string}             queue                                       The queue name.","* @param {string}             primaryOnly                                 If true, the request will be executed against the primary storage location.","* @param {object}             [options]                                   The request options.","* @param {LocationMode}       [options.locationMode]                      Specifies the location mode used to decide which location the request should be sent to. ","*                                                                         Please see StorageUtilities.LocationMode for the possible values.","* @param {int}                [options.timeoutIntervalInMs]               The server timeout interval, in milliseconds, to use for the request.","* @param {int}                [options.clientRequestTimeoutInMs]          The timeout of client requests, in milliseconds, to use for the request.","* @param {int}                [options.maximumExecutionTimeInMs]          The maximum execution time, in milliseconds, across all potential retries, to use when making this request.","*                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum","*                                                                         execution time is checked intermittently while performing requests, and before executing retries.","* @param {string}             [options.clientRequestId]                   A string that represents the client request ID with a 1KB character limit.","* @param {bool}               [options.useNagleAlgorithm]                 Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.","*                                                                         The default value is false.","* @param {Function(error, result, response)}         callback             `error` will contain information","*                                                                         if an error occurs; otherwise, `result` will contain","*                                                                         the queue information including `exists` boolean member","*                                                                         and `response` will contain information related to this operation.","*","*/","QueueService.prototype._doesQueueExist = function (queue, primaryOnly, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('doesQueueExist', function(v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","  var webResource = WebResource.head(queue)","    .withQueryOption(QueryStringConstants.COMP, 'metadata');","","  if(primaryOnly === false) {","    options.requestLocationMode = RequestLocationMode.PRIMARY_OR_SECONDARY;","  }","","  var processResponseCallback = function(responseObject, next) {","    responseObject.queueResult = new QueueResult(queue);","    responseObject.queueResult.exists = false;","    ","    if (!responseObject.error) {","      responseObject.queueResult.exists = true;","      responseObject.queueResult.getPropertiesFromHeaders(responseObject.response.headers);","      ","    } else if (responseObject.error && responseObject.error.statusCode === Constants.HttpConstants.HttpResponseCodes.NotFound) {","      responseObject.error = null;","      responseObject.queueResult.exists = false;","      responseObject.response.isSuccessful = true;","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.queueResult, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**"," * @ignore"," */","QueueService.prototype._getOrPeekMessages = function (queue, optionsOrCallback, callback) {","  var userOptions;","  azureutil.normalizeArgs(optionsOrCallback, callback, function (o, c) { userOptions = o; callback = c; });","","  validate.validateArgs('_getOrPeekMessages', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","    v.callback(callback);","  });","","  var options = extend(true, {}, userOptions);","","  if (!options.numOfMessages) {","    options.numOfMessages = 1;","  }","","  var webResource = WebResource.get(queue + '/messages')","    .withQueryOption(QueryStringConstants.NUM_OF_MESSAGES, options.numOfMessages)","    .withQueryOption(QueryStringConstants.VISIBILITY_TIMEOUT, options.visibilityTimeout)","    .withQueryOption(QueryStringConstants.PEEK_ONLY, options.peekOnly);","","  if (options.peekOnly) {","    // For peek message, it's a read-only action and can be performed against secondary endpoint.","    options.requestLocationMode = RequestLocationMode.PRIMARY_OR_SECONDARY;","  }","","","  var messageEncoder = this.messageEncoder;","  var processResponseCallback = function (responseObject, next) {","    responseObject.queueMessageResults = null;","","    if (!responseObject.error) {","      responseObject.queueMessageResults = [];","","      if (responseObject.response.body.QueueMessagesList && responseObject.response.body.QueueMessagesList.QueueMessage) {","        var messages = responseObject.response.body.QueueMessagesList.QueueMessage;","","        if (!_.isArray(messages)) {","          messages = [ messages ];","        }","","        messages.forEach(function (message) {","          var queueMessageResult = QueueMessageResult.parse(message, messageEncoder);","          responseObject.queueMessageResults.push(queueMessageResult);","        });","      }","    }","","    var finalCallback = function (returnObject) {","      callback(returnObject.error, returnObject.queueMessageResults, returnObject.response);","    };","","    next(responseObject, finalCallback);","  };","","  this.performRequest(webResource, null, options, processResponseCallback);","};","","/**","* Retrieves a queue URL.","*","* @param {string}                   queue                    The queue name.","* @param {string}                   [sasToken]               The Shared Access Signature token.","* @param {boolean}                  [primary]                A boolean representing whether to use the primary or the secondary endpoint.","* @return {string}                                           The formatted URL string.","* @example","* var azure = require('azure-storage');","* var queueService = azure.createQueueService();","* var sharedAccessPolicy = {","*   AccessPolicy: {","*     Permissions: azure.QueueUtilities.SharedAccessPermissions.READ,","*     Start: startDate,","*     Expiry: expiryDate","*   },","* };","* ","* var sasToken = queueService.generateSharedAccessSignature(queue, sharedAccessPolicy);","* var sasUrl = queueService.getUrl(queue, sasToken);","*/","QueueService.prototype.getUrl = function (queue, sasToken, primary) {","  validate.validateArgs('getUrl', function (v) {","    v.string(queue, 'queue');","    v.queueNameIsValid(queue);","  });","","  return this._getUrl(queue, sasToken, primary);","};","","module.exports = QueueService;",""],"l":{"18":1,"19":1,"20":1,"22":1,"23":1,"24":1,"25":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"35":1,"36":1,"37":1,"38":1,"39":1,"68":1,"69":0,"71":0,"78":0,"79":0,"87":0,"90":1,"112":1,"113":0,"114":0,"116":0,"117":0,"120":0,"121":0,"125":0,"127":0,"128":0,"129":0,"130":0,"134":0,"135":0,"139":0,"142":0,"165":1,"166":0,"190":1,"191":0,"218":1,"219":0,"248":1,"249":0,"250":0,"252":0,"253":0,"256":0,"257":0,"258":0,"263":0,"264":0,"267":0,"269":0,"270":0,"272":0,"273":0,"277":0,"278":0,"280":0,"281":0,"283":0,"284":0,"287":0,"288":0,"289":0,"292":0,"293":0,"298":0,"299":0,"304":0,"305":0,"308":0,"311":0,"335":1,"336":0,"361":1,"362":0,"363":0,"365":0,"366":0,"367":0,"368":0,"371":0,"372":0,"373":0,"374":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"386":0,"387":0,"390":0,"393":0,"427":1,"428":0,"429":0,"431":0,"432":0,"433":0,"434":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"444":0,"445":0,"446":0,"447":0,"448":0,"450":0,"451":0,"452":0,"454":0,"455":0,"456":0,"457":0,"460":0,"485":1,"486":0,"487":0,"489":0,"490":0,"491":0,"492":0,"495":0,"496":0,"497":0,"498":0,"499":0,"502":0,"505":0,"529":1,"530":0,"531":0,"533":0,"534":0,"535":0,"536":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"558":0,"586":1,"587":0,"588":0,"590":0,"591":0,"592":0,"593":0,"596":0,"597":0,"600":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"611":0,"612":0,"615":0,"618":0,"643":1,"644":0,"645":0,"647":0,"648":0,"649":0,"650":0,"653":0,"654":0,"658":0,"659":0,"660":0,"661":0,"662":0,"665":0,"666":0,"669":0,"672":0,"711":1,"712":0,"713":0,"715":0,"716":0,"717":0,"718":0,"721":0,"723":0,"724":0,"731":0,"732":0,"734":0,"735":0,"737":0,"738":0,"741":0,"742":0,"743":0,"747":0,"748":0,"751":0,"754":0,"796":1,"797":0,"798":0,"800":0,"801":0,"802":0,"803":0,"806":0,"807":0,"809":0,"850":1,"851":0,"852":0,"854":0,"855":0,"856":0,"857":0,"860":0,"861":0,"863":0,"864":0,"865":0,"866":0,"869":0,"872":0,"897":1,"898":0,"899":0,"901":0,"902":0,"903":0,"904":0,"907":0,"908":0,"909":0,"911":0,"935":1,"936":0,"937":0,"939":0,"940":0,"941":0,"942":0,"945":0,"946":0,"948":0,"949":0,"950":0,"951":0,"954":0,"957":0,"981":1,"982":0,"983":0,"985":0,"986":0,"987":0,"988":0,"991":0,"992":0,"995":0,"996":0,"999":0,"1000":0,"1003":0,"1004":0,"1005":0,"1008":0,"1011":0,"1034":1,"1035":0,"1036":0,"1038":0,"1039":0,"1040":0,"1041":0,"1044":0,"1045":0,"1047":0,"1048":0,"1049":0,"1052":0,"1055":0,"1084":1,"1085":0,"1086":0,"1088":0,"1089":0,"1090":0,"1091":0,"1094":0,"1095":0,"1098":0,"1099":0,"1102":0,"1103":0,"1104":0,"1105":0,"1108":0,"1110":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":0,"1124":0,"1125":0,"1128":0,"1131":0,"1155":1,"1156":0,"1157":0,"1159":0,"1160":0,"1161":0,"1162":0,"1165":0,"1166":0,"1169":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1179":0,"1180":0,"1183":0,"1186":0,"1234":1,"1235":0,"1236":0,"1238":0,"1239":0,"1240":0,"1241":0,"1244":0,"1246":0,"1247":0,"1248":0,"1249":0,"1251":0,"1254":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1264":0,"1265":0,"1269":0,"1270":0,"1273":0,"1276":0,"1294":1,"1296":0,"1297":0,"1300":0,"1301":0,"1302":0,"1303":0,"1306":0,"1333":1,"1334":0,"1335":0,"1337":0,"1338":0,"1339":0,"1340":0,"1343":0,"1344":0,"1347":0,"1348":0,"1351":0,"1352":0,"1353":0,"1355":0,"1356":0,"1357":0,"1359":0,"1360":0,"1361":0,"1362":0,"1365":0,"1366":0,"1369":0,"1372":0,"1378":1,"1379":0,"1380":0,"1382":0,"1383":0,"1384":0,"1385":0,"1388":0,"1390":0,"1391":0,"1394":0,"1399":0,"1401":0,"1405":0,"1406":0,"1407":0,"1409":0,"1410":0,"1412":0,"1413":0,"1415":0,"1416":0,"1419":0,"1420":0,"1421":0,"1426":0,"1427":0,"1430":0,"1433":0,"1457":1,"1458":0,"1459":0,"1460":0,"1463":0,"1466":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/queue/models/queueresult.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/queue/models/queueresult.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"QueueResult","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":37}}},"2":{"name":"(anonymous_2)","line":45,"loc":{"start":{"line":45,"column":20},"end":{"line":45,"column":42}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":49},"end":{"line":56,"column":68}}},"4":{"name":"(anonymous_4)","line":59,"loc":{"start":{"line":59,"column":31},"end":{"line":59,"column":91}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":62}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":48}},"3":{"start":{"line":35,"column":0},"end":{"line":43,"column":1}},"4":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"5":{"start":{"line":37,"column":4},"end":{"line":37,"column":21}},"6":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"7":{"start":{"line":41,"column":4},"end":{"line":41,"column":29}},"8":{"start":{"line":45,"column":0},"end":{"line":54,"column":2}},"9":{"start":{"line":46,"column":2},"end":{"line":46,"column":38}},"10":{"start":{"line":47,"column":2},"end":{"line":51,"column":3}},"11":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"12":{"start":{"line":49,"column":6},"end":{"line":49,"column":65}},"13":{"start":{"line":53,"column":2},"end":{"line":53,"column":21}},"14":{"start":{"line":56,"column":0},"end":{"line":70,"column":2}},"15":{"start":{"line":57,"column":2},"end":{"line":57,"column":18}},"16":{"start":{"line":59,"column":2},"end":{"line":67,"column":4}},"17":{"start":{"line":60,"column":4},"end":{"line":66,"column":5}},"18":{"start":{"line":61,"column":6},"end":{"line":65,"column":7}},"19":{"start":{"line":62,"column":8},"end":{"line":62,"column":87}},"20":{"start":{"line":64,"column":8},"end":{"line":64,"column":68}},"21":{"start":{"line":69,"column":2},"end":{"line":69,"column":106}},"22":{"start":{"line":72,"column":0},"end":{"line":72,"column":29}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"4":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"5":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":28}},{"start":{"line":60,"column":32},"end":{"line":60,"column":69}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":6}},{"start":{"line":61,"column":6},"end":{"line":61,"column":6}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var Constants = require('./../../../common/common').Constants;","var HeaderConstants = Constants.HeaderConstants;","","/**","* Creates a new QueueResult object.","* @class","* The QueueResult class is used to store the queue information.","* ","* @property   {string}                      name                                  The queue name.","* @property   {object}                      metadata                              The metadata key/value pair.","* @property   {number}                      approximateMessageCount               The approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher.","* @property   {Object.<string, AccessPolicy>}  signedIdentifiers                     The container ACL settings. See `[AccessPolicy]{@link AccessPolicy}` for detailed information."," * ","* @constructor","* @param {string} [name]                    The queue name.","* @param {string} [metadata]                The metadata key/value pair.","*/","function QueueResult(name, metadata) {","  if (name) {","    this.name = name;","  }","","  if (metadata) {","    this.metadata = metadata;","  }","}","","QueueResult.parse = function (messageXml) {","  var queueResult = new QueueResult();","  for (var property in messageXml) {","    if (messageXml.hasOwnProperty(property)) {","      queueResult[property.toLowerCase()] = messageXml[property];","    }","  }","","  return queueResult;","};","","QueueResult.prototype.getPropertiesFromHeaders = function (headers) {","  var self = this;","","  var setPropertyFromHeaders = function (queueProperty, headerProperty, typeConverterFunc) {","    if (!self[queueProperty] && headers[headerProperty.toLowerCase()]) {","      if(typeConverterFunc) {","        self[queueProperty] = typeConverterFunc(headers[headerProperty.toLowerCase()]);","      } else{","        self[queueProperty] = headers[headerProperty.toLowerCase()];","      }","    }","  };","","  setPropertyFromHeaders('approximateMessageCount', HeaderConstants.APPROXIMATE_MESSAGES_COUNT, parseInt);","};","","module.exports = QueueResult;"],"l":{"18":1,"19":1,"35":1,"36":0,"37":0,"40":0,"41":0,"45":1,"46":0,"47":0,"48":0,"49":0,"53":0,"56":1,"57":0,"59":0,"60":0,"61":0,"62":0,"64":0,"69":0,"72":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/queue/models/queuemessageresult.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/queue/models/queuemessageresult.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"QueueMessageResult","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":58}}},"2":{"name":"(anonymous_2)","line":65,"loc":{"start":{"line":65,"column":31},"end":{"line":65,"column":61}}},"3":{"name":"(anonymous_3)","line":95,"loc":{"start":{"line":95,"column":27},"end":{"line":95,"column":58}}},"4":{"name":"(anonymous_4)","line":118,"loc":{"start":{"line":118,"column":56},"end":{"line":118,"column":75}}},"5":{"name":"(anonymous_5)","line":121,"loc":{"start":{"line":121,"column":38},"end":{"line":121,"column":81}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":54}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":40}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":38}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":48}},"6":{"start":{"line":44,"column":0},"end":{"line":56,"column":1}},"7":{"start":{"line":45,"column":2},"end":{"line":47,"column":3}},"8":{"start":{"line":46,"column":4},"end":{"line":46,"column":23}},"9":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"10":{"start":{"line":50,"column":4},"end":{"line":50,"column":31}},"11":{"start":{"line":53,"column":2},"end":{"line":55,"column":3}},"12":{"start":{"line":54,"column":4},"end":{"line":54,"column":33}},"13":{"start":{"line":65,"column":0},"end":{"line":85,"column":2}},"14":{"start":{"line":66,"column":2},"end":{"line":66,"column":32}},"15":{"start":{"line":67,"column":2},"end":{"line":67,"column":105}},"16":{"start":{"line":69,"column":2},"end":{"line":82,"column":3}},"17":{"start":{"line":70,"column":4},"end":{"line":70,"column":16}},"18":{"start":{"line":71,"column":4},"end":{"line":75,"column":5}},"19":{"start":{"line":72,"column":6},"end":{"line":72,"column":42}},"20":{"start":{"line":74,"column":6},"end":{"line":74,"column":26}},"21":{"start":{"line":77,"column":4},"end":{"line":79,"column":12}},"22":{"start":{"line":81,"column":4},"end":{"line":81,"column":64}},"23":{"start":{"line":84,"column":2},"end":{"line":84,"column":30}},"24":{"start":{"line":95,"column":0},"end":{"line":116,"column":2}},"25":{"start":{"line":96,"column":2},"end":{"line":96,"column":52}},"26":{"start":{"line":97,"column":2},"end":{"line":108,"column":3}},"27":{"start":{"line":98,"column":4},"end":{"line":107,"column":5}},"28":{"start":{"line":99,"column":6},"end":{"line":103,"column":7}},"29":{"start":{"line":100,"column":8},"end":{"line":100,"column":78}},"30":{"start":{"line":102,"column":8},"end":{"line":102,"column":62}},"31":{"start":{"line":105,"column":6},"end":{"line":105,"column":80}},"32":{"start":{"line":106,"column":6},"end":{"line":106,"column":68}},"33":{"start":{"line":111,"column":2},"end":{"line":113,"column":3}},"34":{"start":{"line":112,"column":4},"end":{"line":112,"column":80}},"35":{"start":{"line":115,"column":2},"end":{"line":115,"column":28}},"36":{"start":{"line":118,"column":0},"end":{"line":129,"column":2}},"37":{"start":{"line":119,"column":2},"end":{"line":119,"column":18}},"38":{"start":{"line":121,"column":2},"end":{"line":125,"column":4}},"39":{"start":{"line":122,"column":4},"end":{"line":124,"column":5}},"40":{"start":{"line":123,"column":6},"end":{"line":123,"column":68}},"41":{"start":{"line":127,"column":2},"end":{"line":127,"column":75}},"42":{"start":{"line":128,"column":2},"end":{"line":128,"column":86}},"43":{"start":{"line":131,"column":0},"end":{"line":131,"column":36}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"2":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"3":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"4":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"5":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"6":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":24}},{"start":{"line":71,"column":28},"end":{"line":71,"column":49}}]},"7":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"8":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":6},"end":{"line":99,"column":6}},{"start":{"line":99,"column":6},"end":{"line":99,"column":6}}]},"9":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":10},"end":{"line":99,"column":26}},{"start":{"line":99,"column":30},"end":{"line":99,"column":51}}]},"10":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"11":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"12":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":8},"end":{"line":122,"column":30}},{"start":{"line":122,"column":34},"end":{"line":122,"column":71}}]}},"code":["﻿// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","var azureCommon = require('./../../../common/common');","var azureutil = azureCommon.util;","var xmlbuilder = azureCommon.xmlbuilder;","var Constants = azureCommon.Constants;","","var HeaderConstants = Constants.HeaderConstants;","","/**","* Creates a new QueueMessageResult object.","* @class","* The QueueMessageResult class is used to store the queue message information.","* ","* @property   {string}                      queue                           The queue name.","* @property   {string}                      messageId                       The message id.","* @property   {string}                      popReceipt                      The pop receipt.","* @property   {string}                      messageText                     The message text.","* @property   {string}                      timeNextVisible                 The time next visible.","* @property   {string}                      insertionTime                   The insertion time.","* @property   {string}                      expirationTime                  The expiration time.","* @property   {number}                      dequeueCount                    The dequeue count."," * ","* @constructor","* @param {string} [queue]                   The queue name.","* @param {string} [messageId]               The message id.","* @param {string} [popReceipt]              The pop receipt.","*/","function QueueMessageResult(queue, messageId, popReceipt) {","  if (queue) {","    this.queue = queue;","  }","","  if (messageId) {","    this.messageId = messageId;","  }","","  if (popReceipt) {","    this.popReceipt = popReceipt;","  }","}","","/**","* Builds an XML representation for a queue message","*","* @param  {string}  messageJs    The queue message.","* @param  {QueueMessageEncoder}  The message encoder.","* @return {string} The XML queue message.","*/","QueueMessageResult.serialize = function (messageJs, encoder) {","  var doc = xmlbuilder.create();","  doc = doc.begin(Constants.QueueConstants.QUEUE_MESSAGE_ELEMENT, { version: '1.0', encoding: 'utf-8' });","","  if (messageJs) {","    var message;","    if (encoder !== null && encoder !== undefined) {","      message = encoder.encode(messageJs);","    } else {","      message = messageJs;","    }","    ","    doc.ele(Constants.QueueConstants.MESSAGE_TEXT_ELEMENT)","        .txt(message)","      .up();","  } else {","    doc.ele(Constants.QueueConstants.MESSAGE_TEXT_ELEMENT).up();","  }","","  return doc.doc().toString();","};","","","/**","* Pase the XML representation of a queue message to a QueueMessageResult object.","*","* @param  {Object}  messageXml   The XML representation of the queue message.","* @param  {QueueMessageEncoder}  The message encoder.","* @return {QueueMessageResult}   The QueueMessageResult object.","*/","QueueMessageResult.parse = function (messageXml, encoder) {","  var queueMessageResult = new QueueMessageResult();","  for (var property in messageXml) {","    if (property === Constants.QueueConstants.MESSAGE_TEXT_ELEMENT) {","      if (encoder !== null && encoder !== undefined) {","        queueMessageResult.messageText = encoder.decode(messageXml[property]);","      } else {","        queueMessageResult.messageText = messageXml[property];","      }","    } else {","      var resultPropertyName = azureutil.normalizePropertyNameFromXML(property);","      queueMessageResult[resultPropertyName] = messageXml[property];","    }","  }","","  // Convert dequeueCount to number","  if (queueMessageResult.dequeueCount) {","    queueMessageResult.dequeueCount = parseInt(queueMessageResult.dequeueCount);","  }","","  return queueMessageResult;","};","","QueueMessageResult.prototype.getPropertiesFromHeaders = function (headers) {","  var self = this;","","  var setmessagePropertyFromHeaders = function (messageProperty, headerProperty) {","    if (!self[messageProperty] && headers[headerProperty.toLowerCase()]) {","      self[messageProperty] = headers[headerProperty.toLowerCase()];","    }","  };","","  setmessagePropertyFromHeaders('popReceipt', HeaderConstants.POP_RECEIPT);","  setmessagePropertyFromHeaders('timeNextVisible', HeaderConstants.TIME_NEXT_VISIBLE);","};","","module.exports = QueueMessageResult;"],"l":{"18":1,"19":1,"20":1,"21":1,"23":1,"44":1,"45":0,"46":0,"49":0,"50":0,"53":0,"54":0,"65":1,"66":0,"67":0,"69":0,"70":0,"71":0,"72":0,"74":0,"77":0,"81":0,"84":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"102":0,"105":0,"106":0,"111":0,"112":0,"115":0,"118":1,"119":0,"121":0,"122":0,"123":0,"127":0,"128":0,"131":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/queue/queuemessageencoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/queue/queuemessageencoder.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":1,"8":1,"9":1,"10":0,"11":1,"12":0,"13":1,"14":1,"15":1,"16":0,"17":1,"18":0,"19":1,"20":1,"21":1,"22":0,"23":1,"24":0,"25":1,"26":1,"27":1,"28":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"QueueMessageEncoder","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":31}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":39},"end":{"line":39,"column":54}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":39},"end":{"line":49,"column":64}}},"4":{"name":"TextBase64QueueMessageEncoder","line":64,"loc":{"start":{"line":64,"column":0},"end":{"line":64,"column":40}}},"5":{"name":"(anonymous_5)","line":76,"loc":{"start":{"line":76,"column":49},"end":{"line":76,"column":64}}},"6":{"name":"(anonymous_6)","line":88,"loc":{"start":{"line":88,"column":49},"end":{"line":88,"column":71}}},"7":{"name":"BinaryBase64QueueMessageEncoder","line":103,"loc":{"start":{"line":103,"column":0},"end":{"line":103,"column":42}}},"8":{"name":"(anonymous_8)","line":115,"loc":{"start":{"line":115,"column":51},"end":{"line":115,"column":66}}},"9":{"name":"(anonymous_9)","line":128,"loc":{"start":{"line":128,"column":51},"end":{"line":128,"column":73}}},"10":{"name":"TextXmlQueueMessageEncoder","line":143,"loc":{"start":{"line":143,"column":0},"end":{"line":143,"column":37}}},"11":{"name":"(anonymous_11)","line":155,"loc":{"start":{"line":155,"column":46},"end":{"line":155,"column":61}}},"12":{"name":"(anonymous_12)","line":171,"loc":{"start":{"line":171,"column":46},"end":{"line":171,"column":68}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":19,"column":27}},"2":{"start":{"line":30,"column":0},"end":{"line":31,"column":1}},"3":{"start":{"line":39,"column":0},"end":{"line":41,"column":2}},"4":{"start":{"line":40,"column":2},"end":{"line":40,"column":15}},"5":{"start":{"line":49,"column":0},"end":{"line":51,"column":2}},"6":{"start":{"line":50,"column":2},"end":{"line":50,"column":25}},"7":{"start":{"line":64,"column":0},"end":{"line":65,"column":1}},"8":{"start":{"line":66,"column":0},"end":{"line":66,"column":66}},"9":{"start":{"line":76,"column":0},"end":{"line":78,"column":2}},"10":{"start":{"line":77,"column":2},"end":{"line":77,"column":54}},"11":{"start":{"line":88,"column":0},"end":{"line":90,"column":2}},"12":{"start":{"line":89,"column":2},"end":{"line":89,"column":61}},"13":{"start":{"line":103,"column":0},"end":{"line":104,"column":1}},"14":{"start":{"line":105,"column":0},"end":{"line":105,"column":68}},"15":{"start":{"line":115,"column":0},"end":{"line":117,"column":2}},"16":{"start":{"line":116,"column":2},"end":{"line":116,"column":34}},"17":{"start":{"line":128,"column":0},"end":{"line":130,"column":2}},"18":{"start":{"line":129,"column":2},"end":{"line":129,"column":44}},"19":{"start":{"line":143,"column":0},"end":{"line":144,"column":1}},"20":{"start":{"line":145,"column":0},"end":{"line":145,"column":63}},"21":{"start":{"line":155,"column":0},"end":{"line":161,"column":2}},"22":{"start":{"line":156,"column":2},"end":{"line":160,"column":30}},"23":{"start":{"line":171,"column":0},"end":{"line":177,"column":2}},"24":{"start":{"line":172,"column":2},"end":{"line":176,"column":31}},"25":{"start":{"line":179,"column":0},"end":{"line":179,"column":37}},"26":{"start":{"line":180,"column":0},"end":{"line":180,"column":77}},"27":{"start":{"line":181,"column":0},"end":{"line":181,"column":81}},"28":{"start":{"line":182,"column":0},"end":{"line":182,"column":71}}},"branchMap":{},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Module dependencies.","","var util = require('util');","","/**"," * The interface for classes that represent a encoder which can be used to specify how the queue service encodes and decodes queue messages."," * "," * To specify how the queue service encodes and decodes queue messages, set `queueService.messageEncoder` to object of built-in encoder types"," * `[TextBase64QueueMessageEncoder]{@link TextBase64QueueMessageEncoder}`, `[BinaryBase64QueueMessageEncoder]{@link BinaryBase64QueueMessageEncoder}`, `[TextXmlQueueMessageEncoder]{@link TextXmlQueueMessageEncoder}`,"," * or custom implementation of the QueueMessageEncoder."," * "," * @class"," */","function QueueMessageEncoder() {","}","","/**"," * Function to encode queue messages."," * "," * @param   {object}    [input]               The target to be encoded."," * @return  {string}"," */","QueueMessageEncoder.prototype.encode = function(input){","  return input;","};","","/**"," * Function to decode queue messages"," * "," * @param   {string}    [textToBeDecoded]     The base64 string to be decoded."," * @returns {any}"," */","QueueMessageEncoder.prototype.decode = function(textToBeDecoded){","  return textToBeDecoded;","};","","","/**"," * Create a new TextBase64QueueMessageEncoder object"," * @class"," * "," * Encode from utf-8 string to base64 string"," * Decode from base64 string to utf-8 string."," * "," * @constructor"," * @extends {QueueMessageEncoder}"," */","function TextBase64QueueMessageEncoder(){","}","util.inherits(TextBase64QueueMessageEncoder, QueueMessageEncoder);","","/**"," * Encode from utf-8 string to base64 string"," * @this TextBase64QueueMessageEncoder"," * "," * @param   {string}    [input]               The target to be encoded."," * "," * @return {string}"," */","TextBase64QueueMessageEncoder.prototype.encode = function(input){","  return new Buffer(input, 'utf8').toString('base64');","};","","/**"," * Decode from base64 string to utf-8 string."," * @this TextBase64QueueMessageEncoder"," * "," * @param   {string}    [textToBeDecoded]     The base64 string to be decoded."," * "," * @return {string}"," */","TextBase64QueueMessageEncoder.prototype.decode = function(textToDecode){","  return new Buffer(textToDecode, 'base64').toString('utf8');","};","","","/**"," * Create a new BinaryBase64QueueMessageEncoder object"," * @class"," * "," * Encode from binary buffer to base64 string"," * Decode from base64 string to binary buffer."," * "," * @constructor"," * @extends {QueueMessageEncoder}"," */","function BinaryBase64QueueMessageEncoder(){","}","util.inherits(BinaryBase64QueueMessageEncoder, QueueMessageEncoder);","","/**"," * Encode from binary buffer string to base64 string"," * @this BinaryBase64QueueMessageEncoder"," * "," * @param   {Buffer}    [input]               The target to be encoded."," * "," * @return {string}"," */","BinaryBase64QueueMessageEncoder.prototype.encode = function(input){","  return input.toString('base64');","};","","","/**"," * Decode from base64 string to binary buffer."," * @this BinaryBase64QueueMessageEncoder"," * "," * @param   {string}    [textToBeDecoded]     The base64 string to be decoded."," * "," * @return {Buffer}"," */","BinaryBase64QueueMessageEncoder.prototype.decode = function(textToDecode){","  return new Buffer(textToDecode, 'base64');","};","","","/**"," * Create a new TextXmlQueueMessageEncoder object"," * @class"," * "," * Encode utf-8 string by escaping the xml markup characters."," * Decode from utf-8 string by unescaping the xml markup characters."," * "," * @constructor"," * @extends {QueueMessageEncoder}"," */","function TextXmlQueueMessageEncoder(){","}","util.inherits(TextXmlQueueMessageEncoder, QueueMessageEncoder);","","/**"," * Encode utf-8 string by escaping the xml markup characters."," * @this TextXmlQueueMessageEncoder"," * "," * @param   {string}    [input]               The target to be encoded."," * "," * @return {string}"," */","TextXmlQueueMessageEncoder.prototype.encode = function(input){","  return input.replace(/&/gm, '&amp;')","    .replace(/</gm, '&lt;')","    .replace(/>/gm, '&gt;')","    .replace(/\"/gm, '&quot;')","    .replace(/'/gm, '&apos;');","};","","/**"," * Decode from utf-8 string by unescaping the xml markup characters."," * @this TextXmlQueueMessageEncoder"," * "," * @param   {string}    [textToBeDecoded]     The base64 string to be decoded."," * "," * @return {string}"," */","TextXmlQueueMessageEncoder.prototype.decode = function(textToDecode){","  return textToDecode.replace(/&amp;/gm, '&')","    .replace(/&lt;/gm, '<')","    .replace(/&gt;/gm, '>')","    .replace(/&quot;/gm, '\"')","    .replace(/&apos;/gm, '\\'');","};","","module.exports = QueueMessageEncoder;","module.exports.TextBase64QueueMessageEncoder = TextBase64QueueMessageEncoder;","module.exports.BinaryBase64QueueMessageEncoder = BinaryBase64QueueMessageEncoder;","module.exports.TextXmlQueueMessageEncoder = TextXmlQueueMessageEncoder;"],"l":{"19":1,"30":1,"39":1,"40":0,"49":1,"50":0,"64":1,"66":1,"76":1,"77":0,"88":1,"89":0,"103":1,"105":1,"115":1,"116":0,"128":1,"129":0,"143":1,"145":1,"155":1,"156":0,"171":1,"172":0,"179":1,"180":1,"181":1,"182":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/queue/queueutilities.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/lib/services/queue/queueutilities.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":25}},"2":{"start":{"line":24,"column":0},"end":{"line":37,"column":2}},"3":{"start":{"line":39,"column":0},"end":{"line":39,"column":32}}},"branchMap":{},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","// Expose 'QueueUtilities'.","exports = module.exports;","","/**","* Defines enums for use with the Queue service.","* @namespace QueueUtilities","*/","var QueueUtilities = {","\t/**","  * Permission types.","  *","  * @const","  * @enum {string}","  */","  SharedAccessPermissions: {","    READ: 'r',","    ADD: 'a',","    UPDATE: 'u',","    PROCESS: 'p'","  }","};","","module.exports = QueueUtilities;"],"l":{"18":1,"24":1,"39":1}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/gruntfile.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/gruntfile.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":33}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":102,"column":2}},"2":{"start":{"line":19,"column":2},"end":{"line":91,"column":5}},"3":{"start":{"line":93,"column":2},"end":{"line":93,"column":36}},"4":{"start":{"line":94,"column":2},"end":{"line":94,"column":41}},"5":{"start":{"line":95,"column":2},"end":{"line":95,"column":40}},"6":{"start":{"line":96,"column":2},"end":{"line":96,"column":34}},"7":{"start":{"line":97,"column":2},"end":{"line":97,"column":45}},"8":{"start":{"line":99,"column":2},"end":{"line":99,"column":52}},"9":{"start":{"line":100,"column":2},"end":{"line":100,"column":52}},"10":{"start":{"line":101,"column":2},"end":{"line":101,"column":59}}},"branchMap":{},"code":["//","// Copyright (c) Microsoft and contributors.  All rights reserved.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","//","// See the License for the specific language governing permissions and","// limitations under the License.","//","","module.exports = function(grunt) {","  //init stuff","  grunt.initConfig({","","    nsp: {","      package: grunt.file.readJSON('package.json')","    },","","    mochaTest: {","      test: {","        options: {","          reporter: 'spec',","          quiet: false,","          clearRequireCache: false,","          timeout: 100000","        },","        src: ['test/**/*.js']","      }","    },","","    //jsdoc config","    jsdoc: {","      dist: {","        src: [","          'README.md',","          'lib/azure-storage.js',","          'lib/common/filters/retrypolicyfilter.js',","          'lib/common/filters/linearretrypolicyfilter.js',","          'lib/common/filters/exponentialretrypolicyfilter.js',","          'lib/common/services/storageutilities.js',","          'lib/services/blob/blobservice.js',","          'lib/services/blob/models/blobresult.js',","          'lib/services/blob/models/containerresult.js',","          'lib/services/blob/models/leaseresult.js',","          'lib/services/blob/blobutilities.js',","          'lib/services/queue/queueservice.js',","          'lib/services/queue/queuemessageencoder.js',","          'lib/services/queue/queueutilities.js',","          'lib/services/queue/models/queueresult.js',","          'lib/services/queue/models/queuemessageresult.js',","          'lib/services/table/tableservice.js',","          'lib/services/table/tablebatch.js',","          'lib/services/table/tablequery.js',","          'lib/services/table/tableutilities.js',","          'lib/services/file/fileservice.js',","          'lib/services/file/fileutilities.js',","          'lib/services/file/models/shareresult.js',","          'lib/services/file/models/directoryresult.js',","          'lib/services/file/models/fileresult.js',","          'lib/common/services/storageserviceclient.js',","          'lib/common/diagnostics/logger.js'","        ],","        options: {","          destination: 'docs',","          template: 'node_modules/ink-docstrap/template',","          configure: 'jsdoc/jsdoc.json'","        }","      }","    },","","    // devserver config","    devserver: {","      server : {},","      options: {","        'base': 'docs'","      }","    },","","    jshint: {","      all: ['Gruntfile.js', 'lib/**/*.js'],","      options: {","        jshintrc: true","      }","    }","  });","","  grunt.loadNpmTasks('grunt-jsdoc');","  grunt.loadNpmTasks('grunt-mocha-test');","  grunt.loadNpmTasks('grunt-devserver');","  grunt.loadNpmTasks('grunt-nsp');","  grunt.loadNpmTasks('grunt-contrib-jshint');","","  grunt.registerTask('doc', ['jsdoc', 'devserver']);","  grunt.registerTask('validate', ['jshint', 'nsp']);","  grunt.registerTask('default', ['validate', 'mochaTest']);","};"],"l":{"17":1,"19":0,"93":0,"94":0,"95":0,"96":0,"97":0,"99":0,"100":0,"101":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/browser/azure-storage.blob.export.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/browser/azure-storage.blob.export.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"b":{"1":[2,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":53},"end":{"line":19,"column":73}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":33},"end":{"line":33,"column":101}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":40},"end":{"line":37,"column":66}}},"4":{"name":"(anonymous_4)","line":41,"loc":{"start":{"line":41,"column":42},"end":{"line":41,"column":58}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":52},"end":{"line":50,"column":0}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":45}},"2":{"start":{"line":19,"column":0},"end":{"line":26,"column":2}},"3":{"start":{"line":20,"column":2},"end":{"line":20,"column":47}},"4":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":57}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":18}},"7":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"8":{"start":{"line":30,"column":0},"end":{"line":30,"column":39}},"9":{"start":{"line":31,"column":0},"end":{"line":31,"column":75}},"10":{"start":{"line":33,"column":0},"end":{"line":35,"column":2}},"11":{"start":{"line":34,"column":2},"end":{"line":34,"column":89}},"12":{"start":{"line":37,"column":0},"end":{"line":39,"column":2}},"13":{"start":{"line":38,"column":2},"end":{"line":38,"column":53}},"14":{"start":{"line":41,"column":0},"end":{"line":43,"column":2}},"15":{"start":{"line":42,"column":2},"end":{"line":42,"column":49}},"16":{"start":{"line":45,"column":0},"end":{"line":45,"column":50}},"17":{"start":{"line":46,"column":0},"end":{"line":46,"column":60}},"18":{"start":{"line":47,"column":0},"end":{"line":47,"column":38}},"19":{"start":{"line":49,"column":0},"end":{"line":55,"column":2}},"20":{"start":{"line":51,"column":2},"end":{"line":51,"column":116}},"21":{"start":{"line":52,"column":2},"end":{"line":52,"column":77}},"22":{"start":{"line":54,"column":2},"end":{"line":54,"column":79}},"23":{"start":{"line":57,"column":0},"end":{"line":57,"column":47}},"24":{"start":{"line":58,"column":0},"end":{"line":58,"column":61}},"25":{"start":{"line":59,"column":0},"end":{"line":59,"column":59}},"26":{"start":{"line":61,"column":0},"end":{"line":61,"column":33}},"27":{"start":{"line":62,"column":0},"end":{"line":62,"column":57}},"28":{"start":{"line":63,"column":0},"end":{"line":63,"column":41}},"29":{"start":{"line":64,"column":0},"end":{"line":64,"column":51}},"30":{"start":{"line":65,"column":0},"end":{"line":65,"column":45}},"31":{"start":{"line":66,"column":0},"end":{"line":66,"column":37}},"32":{"start":{"line":69,"column":0},"end":{"line":69,"column":75}},"33":{"start":{"line":70,"column":0},"end":{"line":70,"column":85}},"34":{"start":{"line":71,"column":0},"end":{"line":71,"column":63}},"35":{"start":{"line":73,"column":0},"end":{"line":73,"column":35}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":19},"end":{"line":17,"column":38}},{"start":{"line":17,"column":42},"end":{"line":17,"column":44}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var AzureStorage = window.AzureStorage || {};","","AzureStorage.generateDevelopmentStorageCredentials = function (proxyUri) {","  var devStore = 'UseDevelopmentStorage=true;';","  if(proxyUri){","    devStore += 'DevelopmentStorageProxyUri=' + proxyUri;","  }","","  return devStore;","};","","var BlobService = require('../lib/services/blob/blobservice');","","AzureStorage.BlobService = BlobService;","AzureStorage.BlobUtilities = require('../lib/services/blob/blobutilities');","","AzureStorage.createBlobService = function (storageAccountOrConnectionString, storageAccessKey, host) {","  return new BlobService(storageAccountOrConnectionString, storageAccessKey, host, null);","};","","AzureStorage.createBlobServiceWithSas = function (host, sasToken) {","  return new BlobService(null, null, host, sasToken);","};","","AzureStorage.createBlobServiceAnonymous = function (host) {","  return new BlobService(null, null, host, null);","};","","var azureCommon = require('../lib/common/common');","var StorageServiceClient = azureCommon.StorageServiceClient;","var SharedKey = azureCommon.SharedKey;","","AzureStorage.generateAccountSharedAccessSignature = function(storageAccountOrConnectionString, storageAccessKey, sharedAccessAccountPolicy)","{","  var storageSettings = StorageServiceClient.getStorageSettings(storageAccountOrConnectionString, storageAccessKey);","  var sharedKey = new SharedKey(storageSettings._name, storageSettings._key);","  ","  return sharedKey.generateAccountSignedQueryString(sharedAccessAccountPolicy);","};","","AzureStorage.Constants = azureCommon.Constants;","AzureStorage.StorageUtilities = azureCommon.StorageUtilities;","AzureStorage.AccessCondition = azureCommon.AccessCondition;","","AzureStorage.SR = azureCommon.SR;","AzureStorage.StorageServiceClient = StorageServiceClient;","AzureStorage.Logger = azureCommon.Logger;","AzureStorage.WebResource = azureCommon.WebResource;","AzureStorage.Validate = azureCommon.validate;","AzureStorage.date = azureCommon.date;","","// Other filters","AzureStorage.LinearRetryPolicyFilter = azureCommon.LinearRetryPolicyFilter;","AzureStorage.ExponentialRetryPolicyFilter = azureCommon.ExponentialRetryPolicyFilter;","AzureStorage.RetryPolicyFilter = azureCommon.RetryPolicyFilter;","","window.AzureStorage = AzureStorage;"],"l":{"17":2,"19":0,"20":0,"21":0,"22":0,"25":0,"28":0,"30":0,"31":0,"33":0,"34":0,"37":0,"38":0,"41":0,"42":0,"45":0,"46":0,"47":0,"49":0,"51":0,"52":0,"54":0,"57":0,"58":0,"59":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"69":0,"70":0,"71":0,"73":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/browser/azure-storage.file.export.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/browser/azure-storage.file.export.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[2,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":53},"end":{"line":19,"column":73}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":33},"end":{"line":33,"column":101}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":40},"end":{"line":37,"column":69}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":52},"end":{"line":46,"column":0}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":45}},"2":{"start":{"line":19,"column":0},"end":{"line":26,"column":2}},"3":{"start":{"line":20,"column":2},"end":{"line":20,"column":47}},"4":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":57}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":18}},"7":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"8":{"start":{"line":30,"column":0},"end":{"line":30,"column":39}},"9":{"start":{"line":31,"column":0},"end":{"line":31,"column":75}},"10":{"start":{"line":33,"column":0},"end":{"line":35,"column":2}},"11":{"start":{"line":34,"column":2},"end":{"line":34,"column":83}},"12":{"start":{"line":37,"column":0},"end":{"line":39,"column":2}},"13":{"start":{"line":38,"column":2},"end":{"line":38,"column":56}},"14":{"start":{"line":41,"column":0},"end":{"line":41,"column":50}},"15":{"start":{"line":42,"column":0},"end":{"line":42,"column":60}},"16":{"start":{"line":43,"column":0},"end":{"line":43,"column":38}},"17":{"start":{"line":45,"column":0},"end":{"line":51,"column":2}},"18":{"start":{"line":47,"column":2},"end":{"line":47,"column":116}},"19":{"start":{"line":48,"column":2},"end":{"line":48,"column":77}},"20":{"start":{"line":50,"column":2},"end":{"line":50,"column":79}},"21":{"start":{"line":53,"column":0},"end":{"line":53,"column":47}},"22":{"start":{"line":54,"column":0},"end":{"line":54,"column":61}},"23":{"start":{"line":55,"column":0},"end":{"line":55,"column":59}},"24":{"start":{"line":57,"column":0},"end":{"line":57,"column":33}},"25":{"start":{"line":58,"column":0},"end":{"line":58,"column":57}},"26":{"start":{"line":59,"column":0},"end":{"line":59,"column":41}},"27":{"start":{"line":60,"column":0},"end":{"line":60,"column":51}},"28":{"start":{"line":61,"column":0},"end":{"line":61,"column":45}},"29":{"start":{"line":62,"column":0},"end":{"line":62,"column":37}},"30":{"start":{"line":65,"column":0},"end":{"line":65,"column":75}},"31":{"start":{"line":66,"column":0},"end":{"line":66,"column":85}},"32":{"start":{"line":67,"column":0},"end":{"line":67,"column":63}},"33":{"start":{"line":69,"column":0},"end":{"line":69,"column":35}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":19},"end":{"line":17,"column":38}},{"start":{"line":17,"column":42},"end":{"line":17,"column":44}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var AzureStorage = window.AzureStorage || {};","","AzureStorage.generateDevelopmentStorageCredentials = function (proxyUri) {","  var devStore = 'UseDevelopmentStorage=true;';","  if(proxyUri){","    devStore += 'DevelopmentStorageProxyUri=' + proxyUri;","  }","","  return devStore;","};","","var FileService = require('../lib/services/file/fileservice');","","AzureStorage.FileService = FileService;","AzureStorage.FileUtilities = require('../lib/services/file/fileutilities');","","AzureStorage.createFileService = function (storageAccountOrConnectionString, storageAccessKey, host) {","  return new FileService(storageAccountOrConnectionString, storageAccessKey, host);","};","","AzureStorage.createFileServiceWithSas = function (hostUri, sasToken) {","  return new FileService(null, null, hostUri, sasToken);","};","","var azureCommon = require('../lib/common/common');","var StorageServiceClient = azureCommon.StorageServiceClient;","var SharedKey = azureCommon.SharedKey;","","AzureStorage.generateAccountSharedAccessSignature = function(storageAccountOrConnectionString, storageAccessKey, sharedAccessAccountPolicy)","{","  var storageSettings = StorageServiceClient.getStorageSettings(storageAccountOrConnectionString, storageAccessKey);","  var sharedKey = new SharedKey(storageSettings._name, storageSettings._key);","  ","  return sharedKey.generateAccountSignedQueryString(sharedAccessAccountPolicy);","};","","AzureStorage.Constants = azureCommon.Constants;","AzureStorage.StorageUtilities = azureCommon.StorageUtilities;","AzureStorage.AccessCondition = azureCommon.AccessCondition;","","AzureStorage.SR = azureCommon.SR;","AzureStorage.StorageServiceClient = StorageServiceClient;","AzureStorage.Logger = azureCommon.Logger;","AzureStorage.WebResource = azureCommon.WebResource;","AzureStorage.Validate = azureCommon.validate;","AzureStorage.date = azureCommon.date;","","// Other filters","AzureStorage.LinearRetryPolicyFilter = azureCommon.LinearRetryPolicyFilter;","AzureStorage.ExponentialRetryPolicyFilter = azureCommon.ExponentialRetryPolicyFilter;","AzureStorage.RetryPolicyFilter = azureCommon.RetryPolicyFilter;","","window.AzureStorage = AzureStorage;"],"l":{"17":2,"19":0,"20":0,"21":0,"22":0,"25":0,"28":0,"30":0,"31":0,"33":0,"34":0,"37":0,"38":0,"41":0,"42":0,"43":0,"45":0,"47":0,"48":0,"50":0,"53":0,"54":0,"55":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"65":0,"66":0,"67":0,"69":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/browser/azure-storage.queue.export.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/browser/azure-storage.queue.export.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"b":{"1":[2,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":53},"end":{"line":19,"column":73}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":34},"end":{"line":34,"column":102}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":41},"end":{"line":38,"column":69}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":52},"end":{"line":47,"column":0}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":45}},"2":{"start":{"line":19,"column":0},"end":{"line":26,"column":2}},"3":{"start":{"line":20,"column":2},"end":{"line":20,"column":47}},"4":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":57}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":18}},"7":{"start":{"line":28,"column":0},"end":{"line":28,"column":65}},"8":{"start":{"line":30,"column":0},"end":{"line":30,"column":41}},"9":{"start":{"line":31,"column":0},"end":{"line":31,"column":78}},"10":{"start":{"line":32,"column":0},"end":{"line":32,"column":88}},"11":{"start":{"line":34,"column":0},"end":{"line":36,"column":2}},"12":{"start":{"line":35,"column":2},"end":{"line":35,"column":84}},"13":{"start":{"line":38,"column":0},"end":{"line":40,"column":2}},"14":{"start":{"line":39,"column":2},"end":{"line":39,"column":57}},"15":{"start":{"line":42,"column":0},"end":{"line":42,"column":50}},"16":{"start":{"line":43,"column":0},"end":{"line":43,"column":60}},"17":{"start":{"line":44,"column":0},"end":{"line":44,"column":38}},"18":{"start":{"line":46,"column":0},"end":{"line":52,"column":2}},"19":{"start":{"line":48,"column":2},"end":{"line":48,"column":116}},"20":{"start":{"line":49,"column":2},"end":{"line":49,"column":77}},"21":{"start":{"line":51,"column":2},"end":{"line":51,"column":79}},"22":{"start":{"line":54,"column":0},"end":{"line":54,"column":47}},"23":{"start":{"line":55,"column":0},"end":{"line":55,"column":61}},"24":{"start":{"line":56,"column":0},"end":{"line":56,"column":59}},"25":{"start":{"line":58,"column":0},"end":{"line":58,"column":33}},"26":{"start":{"line":59,"column":0},"end":{"line":59,"column":57}},"27":{"start":{"line":60,"column":0},"end":{"line":60,"column":41}},"28":{"start":{"line":61,"column":0},"end":{"line":61,"column":51}},"29":{"start":{"line":62,"column":0},"end":{"line":62,"column":45}},"30":{"start":{"line":63,"column":0},"end":{"line":63,"column":37}},"31":{"start":{"line":66,"column":0},"end":{"line":66,"column":75}},"32":{"start":{"line":67,"column":0},"end":{"line":67,"column":85}},"33":{"start":{"line":68,"column":0},"end":{"line":68,"column":63}},"34":{"start":{"line":70,"column":0},"end":{"line":70,"column":35}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":19},"end":{"line":17,"column":38}},{"start":{"line":17,"column":42},"end":{"line":17,"column":44}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var AzureStorage = window.AzureStorage || {};","","AzureStorage.generateDevelopmentStorageCredentials = function (proxyUri) {","  var devStore = 'UseDevelopmentStorage=true;';","  if(proxyUri){","    devStore += 'DevelopmentStorageProxyUri=' + proxyUri;","  }","","  return devStore;","};","","var QueueService = require('../lib/services/queue/queueservice');","","AzureStorage.QueueService = QueueService;","AzureStorage.QueueUtilities = require('../lib/services/queue/queueutilities');","AzureStorage.QueueMessageEncoder = require('../lib/services/queue/queuemessageencoder');","","AzureStorage.createQueueService = function (storageAccountOrConnectionString, storageAccessKey, host) {","  return new QueueService(storageAccountOrConnectionString, storageAccessKey, host);","};","","AzureStorage.createQueueServiceWithSas = function(hostUri, sasToken) {","  return new QueueService(null, null, hostUri, sasToken);","};","","var azureCommon = require('../lib/common/common');","var StorageServiceClient = azureCommon.StorageServiceClient;","var SharedKey = azureCommon.SharedKey;","","AzureStorage.generateAccountSharedAccessSignature = function(storageAccountOrConnectionString, storageAccessKey, sharedAccessAccountPolicy)","{","  var storageSettings = StorageServiceClient.getStorageSettings(storageAccountOrConnectionString, storageAccessKey);","  var sharedKey = new SharedKey(storageSettings._name, storageSettings._key);","  ","  return sharedKey.generateAccountSignedQueryString(sharedAccessAccountPolicy);","};","","AzureStorage.Constants = azureCommon.Constants;","AzureStorage.StorageUtilities = azureCommon.StorageUtilities;","AzureStorage.AccessCondition = azureCommon.AccessCondition;","","AzureStorage.SR = azureCommon.SR;","AzureStorage.StorageServiceClient = StorageServiceClient;","AzureStorage.Logger = azureCommon.Logger;","AzureStorage.WebResource = azureCommon.WebResource;","AzureStorage.Validate = azureCommon.validate;","AzureStorage.date = azureCommon.date;","","// Other filters","AzureStorage.LinearRetryPolicyFilter = azureCommon.LinearRetryPolicyFilter;","AzureStorage.ExponentialRetryPolicyFilter = azureCommon.ExponentialRetryPolicyFilter;","AzureStorage.RetryPolicyFilter = azureCommon.RetryPolicyFilter;","","window.AzureStorage = AzureStorage;"],"l":{"17":2,"19":0,"20":0,"21":0,"22":0,"25":0,"28":0,"30":0,"31":0,"32":0,"34":0,"35":0,"38":0,"39":0,"42":0,"43":0,"44":0,"46":0,"48":0,"49":0,"51":0,"54":0,"55":0,"56":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"66":0,"67":0,"68":0,"70":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/browser/azure-storage.table.export.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/browser/azure-storage.table.export.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"b":{"1":[2,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":53},"end":{"line":19,"column":73}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":34},"end":{"line":34,"column":102}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":41},"end":{"line":38,"column":70}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":52},"end":{"line":47,"column":0}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":45}},"2":{"start":{"line":19,"column":0},"end":{"line":26,"column":2}},"3":{"start":{"line":20,"column":2},"end":{"line":20,"column":47}},"4":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":57}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":18}},"7":{"start":{"line":28,"column":0},"end":{"line":28,"column":65}},"8":{"start":{"line":29,"column":0},"end":{"line":29,"column":41}},"9":{"start":{"line":30,"column":0},"end":{"line":30,"column":70}},"10":{"start":{"line":31,"column":0},"end":{"line":31,"column":70}},"11":{"start":{"line":32,"column":0},"end":{"line":32,"column":78}},"12":{"start":{"line":34,"column":0},"end":{"line":36,"column":2}},"13":{"start":{"line":35,"column":2},"end":{"line":35,"column":84}},"14":{"start":{"line":38,"column":0},"end":{"line":40,"column":2}},"15":{"start":{"line":39,"column":2},"end":{"line":39,"column":57}},"16":{"start":{"line":42,"column":0},"end":{"line":42,"column":50}},"17":{"start":{"line":43,"column":0},"end":{"line":43,"column":60}},"18":{"start":{"line":44,"column":0},"end":{"line":44,"column":38}},"19":{"start":{"line":46,"column":0},"end":{"line":52,"column":2}},"20":{"start":{"line":48,"column":2},"end":{"line":48,"column":116}},"21":{"start":{"line":49,"column":2},"end":{"line":49,"column":77}},"22":{"start":{"line":51,"column":2},"end":{"line":51,"column":79}},"23":{"start":{"line":54,"column":0},"end":{"line":54,"column":47}},"24":{"start":{"line":55,"column":0},"end":{"line":55,"column":61}},"25":{"start":{"line":56,"column":0},"end":{"line":56,"column":59}},"26":{"start":{"line":58,"column":0},"end":{"line":58,"column":33}},"27":{"start":{"line":59,"column":0},"end":{"line":59,"column":57}},"28":{"start":{"line":60,"column":0},"end":{"line":60,"column":41}},"29":{"start":{"line":61,"column":0},"end":{"line":61,"column":51}},"30":{"start":{"line":62,"column":0},"end":{"line":62,"column":45}},"31":{"start":{"line":63,"column":0},"end":{"line":63,"column":37}},"32":{"start":{"line":66,"column":0},"end":{"line":66,"column":75}},"33":{"start":{"line":67,"column":0},"end":{"line":67,"column":85}},"34":{"start":{"line":68,"column":0},"end":{"line":68,"column":63}},"35":{"start":{"line":70,"column":0},"end":{"line":70,"column":35}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":19},"end":{"line":17,"column":38}},{"start":{"line":17,"column":42},"end":{"line":17,"column":44}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var AzureStorage = window.AzureStorage || {};","","AzureStorage.generateDevelopmentStorageCredentials = function (proxyUri) {","  var devStore = 'UseDevelopmentStorage=true;';","  if(proxyUri){","    devStore += 'DevelopmentStorageProxyUri=' + proxyUri;","  }","","  return devStore;","};","","var TableService = require('../lib/services/table/tableservice');","AzureStorage.TableService = TableService;","AzureStorage.TableQuery = require('../lib/services/table/tablequery');","AzureStorage.TableBatch = require('../lib/services/table/tablebatch');","AzureStorage.TableUtilities = require('../lib/services/table/tableutilities');","","AzureStorage.createTableService = function (storageAccountOrConnectionString, storageAccessKey, host) {","  return new TableService(storageAccountOrConnectionString, storageAccessKey, host);","};","","AzureStorage.createTableServiceWithSas = function (hostUri, sasToken) {","  return new TableService(null, null, hostUri, sasToken);","};","","var azureCommon = require('../lib/common/common');","var StorageServiceClient = azureCommon.StorageServiceClient;","var SharedKey = azureCommon.SharedKey;","","AzureStorage.generateAccountSharedAccessSignature = function(storageAccountOrConnectionString, storageAccessKey, sharedAccessAccountPolicy)","{","  var storageSettings = StorageServiceClient.getStorageSettings(storageAccountOrConnectionString, storageAccessKey);","  var sharedKey = new SharedKey(storageSettings._name, storageSettings._key);","  ","  return sharedKey.generateAccountSignedQueryString(sharedAccessAccountPolicy);","};","","AzureStorage.Constants = azureCommon.Constants;","AzureStorage.StorageUtilities = azureCommon.StorageUtilities;","AzureStorage.AccessCondition = azureCommon.AccessCondition;","","AzureStorage.SR = azureCommon.SR;","AzureStorage.StorageServiceClient = StorageServiceClient;","AzureStorage.Logger = azureCommon.Logger;","AzureStorage.WebResource = azureCommon.WebResource;","AzureStorage.Validate = azureCommon.validate;","AzureStorage.date = azureCommon.date;","","// Other filters","AzureStorage.LinearRetryPolicyFilter = azureCommon.LinearRetryPolicyFilter;","AzureStorage.ExponentialRetryPolicyFilter = azureCommon.ExponentialRetryPolicyFilter;","AzureStorage.RetryPolicyFilter = azureCommon.RetryPolicyFilter;","","window.AzureStorage = AzureStorage;"],"l":{"17":2,"19":0,"20":0,"21":0,"22":0,"25":0,"28":0,"29":0,"30":0,"31":0,"32":0,"34":0,"35":0,"38":0,"39":0,"42":0,"43":0,"44":0,"46":0,"48":0,"49":0,"51":0,"54":0,"55":0,"56":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"66":0,"67":0,"68":0,"70":0}},"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/browser/bundle.js":{"path":"/home/travis/build/npmtest/node-npmtest-azure-storage/node_modules/azure-storage/browser/bundle.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":39}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":38}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":23}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":28}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":61}},"7":{"start":{"line":25,"column":0},"end":{"line":25,"column":100}},"8":{"start":{"line":27,"column":0},"end":{"line":29,"column":1}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":35}},"10":{"start":{"line":31,"column":0},"end":{"line":36,"column":44}},"11":{"start":{"line":38,"column":0},"end":{"line":45,"column":3}},"12":{"start":{"line":47,"column":0},"end":{"line":49,"column":2}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":0},"end":{"line":27,"column":0}},{"start":{"line":27,"column":0},"end":{"line":27,"column":0}}]}},"code":["// ","// Copyright (c) Microsoft and contributors.  All rights reserved.","// ","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//   http://www.apache.org/licenses/LICENSE-2.0","// ","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// ","// See the License for the specific language governing permissions and","// limitations under the License.","// ","","var browserify = require('browserify');","var factor = require('factor-bundle');","var fs = require('fs');","var path = require('path');","","var outputFolder = 'bundle';","var outputFolderPath = path.resolve(__dirname, outputFolder);","","console.log('Generating Azure Storage JavaScript Client Library to ' + outputFolderPath + ' ...\\n');","","if (!fs.existsSync(outputFolderPath)) {","    fs.mkdirSync(outputFolderPath);","}","","var b = browserify([","    path.resolve(__dirname, 'azure-storage.blob.export.js'),","    path.resolve(__dirname, 'azure-storage.file.export.js'),","    path.resolve(__dirname, 'azure-storage.queue.export.js'),","    path.resolve(__dirname, 'azure-storage.table.export.js')","], {require: ['stream', 'util', 'buffer']});","","b.plugin(factor, {","    outputs: [","        path.resolve(outputFolderPath, 'azure-storage.blob.js'),","        path.resolve(outputFolderPath, 'azure-storage.file.js'),","        path.resolve(outputFolderPath, 'azure-storage.queue.js'),","        path.resolve(outputFolderPath, 'azure-storage.table.js')","    ] ","});","","b.bundle().pipe(","    fs.createWriteStream(path.resolve(outputFolderPath, 'azure-storage.common.js'))",");",""],"l":{"17":2,"18":0,"19":0,"20":0,"22":0,"23":0,"25":0,"27":0,"28":0,"31":0,"38":0,"47":0}}}